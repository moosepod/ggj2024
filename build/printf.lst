ARM GAS  /tmp/ccFy9xbE.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1	@ Tag_ABI_HardFP_use
   3              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"printf.c"
  14              	@ GNU C17 (15:10.3-2021.07-4) version 10.3.1 20210621 (release) (arm-none-eabi)
  15              	@	compiled by GNU C version 11.2.0, GMP version 6.2.1, MPFR version 4.1.0, MPC version 1.2.1, isl v
  16              	
  17              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  18              	@ options passed:  -I . -I .
  19              	@ -I /home/mchristensen/src/PlaydateSDK-2.2.0/C_API
  20              	@ -imultilib thumb/v7e-m+fp/hard -MD build/src/pdantler/printf.d
  21              	@ -MF build/dep/printf.o.d -MP -MQ build/src/pdantler/printf.o
  22              	@ -D__USES_INITFINI__ -D __FPU_USED=1 -D TARGET_PLAYDATE=1
  23              	@ -D TARGET_EXTENSION=1 src/pdantler/printf.c -mthumb -mcpu=cortex-m7
  24              	@ -mfloat-abi=hard -mfpu=fpv5-sp-d16 -mword-relocations
  25              	@ -mlibarch=armv7e-m+fpv5 -march=armv7e-m+fpv5
  26              	@ -auxbase-strip build/src/pdantler/printf.o -g3 -gdwarf-2 -O2 -Wall
  27              	@ -Wno-unused -Wstrict-prototypes -Wno-unknown-pragmas -Wdouble-promotion
  28              	@ -falign-functions=16 -fomit-frame-pointer -fverbose-asm -fno-common
  29              	@ -ffunction-sections -fdata-sections
  30              	@ options enabled:  -faggressive-loop-optimizations -falign-functions
  31              	@ -falign-jumps -falign-labels -falign-loops -fallocation-dce
  32              	@ -fauto-inc-dec -fbranch-count-reg -fcaller-saves
  33              	@ -fcombine-stack-adjustments -fcompare-elim -fcprop-registers
  34              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdefer-pop
  35              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  36              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-symbols
  37              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  38              	@ -fforward-propagate -ffp-int-builtin-inexact -ffunction-cse
  39              	@ -ffunction-sections -fgcse -fgcse-lm -fgnu-unique
  40              	@ -fguess-branch-probability -fhoist-adjacent-loads -fident -fif-conversion
  41              	@ -fif-conversion2 -findirect-inlining -finline -finline-atomics
  42              	@ -finline-functions -finline-functions-called-once
  43              	@ -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-icf
  44              	@ -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  45              	@ -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  46              	@ -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  47              	@ -fira-share-save-slots -fira-share-spill-slots
  48              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  49              	@ -fleading-underscore -flifetime-dse -flra-remat -fmath-errno
  50              	@ -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  51              	@ -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  52              	@ -fpartial-inlining -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays
  53              	@ -freg-struct-return -freorder-blocks -freorder-functions
  54              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  55              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  56              	@ -fsched-last-insn-heuristic -fsched-pressure -fsched-rank-heuristic
  57              	@ -fsched-spec -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
ARM GAS  /tmp/ccFy9xbE.s 			page 2


  58              	@ -fschedule-insns -fschedule-insns2 -fsection-anchors
  59              	@ -fsemantic-interposition -fshow-column -fshrink-wrap
  60              	@ -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
  61              	@ -fsplit-wide-types -fssa-backprop -fssa-phiopt -fstdarg-opt
  62              	@ -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  63              	@ -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrapping-math
  64              	@ -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
  65              	@ -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim -ftree-dce
  66              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  67              	@ -ftree-loop-distribute-patterns -ftree-loop-if-convert -ftree-loop-im
  68              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  69              	@ -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc -ftree-scev-cprop
  70              	@ -ftree-sink -ftree-slsr -ftree-sra -ftree-switch-conversion
  71              	@ -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time -fvar-tracking
  72              	@ -fvar-tracking-assignments -fverbose-asm -fzero-initialized-in-bss
  73              	@ -masm-syntax-unified -mbe32 -mlittle-endian -mpic-data-is-text-relative
  74              	@ -msched-prolog -mthumb -munaligned-access -mvectorize-with-neon-quad
  75              	@ -mword-relocations
  76              	
  77              		.text
  78              	.Ltext0:
  79              		.cfi_sections	.debug_frame
  80              		.section	.text._out_buffer,"ax",%progbits
  81              		.align	1
  82              		.p2align 4,,15
  83              		.arch armv7e-m
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv5-sp-d16
  88              		.type	_out_buffer, %function
  89              	_out_buffer:
  90              	.LVL0:
  91              	.LFB0:
  92              		.file 1 "src/pdantler/printf.c"
   1:src/pdantler/printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:src/pdantler/printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:src/pdantler/printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:src/pdantler/printf.c **** //
   5:src/pdantler/printf.c **** // \license The MIT License (MIT)
   6:src/pdantler/printf.c **** //
   7:src/pdantler/printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:src/pdantler/printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:src/pdantler/printf.c **** // in the Software without restriction, including without limitation the rights
  10:src/pdantler/printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:src/pdantler/printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:src/pdantler/printf.c **** // furnished to do so, subject to the following conditions:
  13:src/pdantler/printf.c **** //
  14:src/pdantler/printf.c **** // The above copyright notice and this permission notice shall be included in
  15:src/pdantler/printf.c **** // all copies or substantial portions of the Software.
  16:src/pdantler/printf.c **** //
  17:src/pdantler/printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:src/pdantler/printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:src/pdantler/printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:src/pdantler/printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:src/pdantler/printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:src/pdantler/printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
ARM GAS  /tmp/ccFy9xbE.s 			page 3


  23:src/pdantler/printf.c **** // THE SOFTWARE.
  24:src/pdantler/printf.c **** //
  25:src/pdantler/printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for
  26:src/pdantler/printf.c **** // speed on
  27:src/pdantler/printf.c **** //        embedded systems with a very limited resources. These routines are
  28:src/pdantler/printf.c **** //        thread safe and reentrant! Use this instead of the bloated
  29:src/pdantler/printf.c **** //        standard/newlib printf cause these use malloc for printf (and may not
  30:src/pdantler/printf.c **** //        be thread safe).
  31:src/pdantler/printf.c **** //
  32:src/pdantler/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  33:src/pdantler/printf.c **** 
  34:src/pdantler/printf.c **** #include <stdbool.h>
  35:src/pdantler/printf.c **** #include <stdint.h>
  36:src/pdantler/printf.c **** 
  37:src/pdantler/printf.c **** #include "printf.h"
  38:src/pdantler/printf.c **** 
  39:src/pdantler/printf.c **** // define this globally (e.g. gcc -DPRINTF_INCLUDE_CONFIG_H ...) to include the
  40:src/pdantler/printf.c **** // printf_config.h header file
  41:src/pdantler/printf.c **** // default: undefined
  42:src/pdantler/printf.c **** #ifdef PRINTF_INCLUDE_CONFIG_H
  43:src/pdantler/printf.c **** #include "printf_config.h"
  44:src/pdantler/printf.c **** #endif
  45:src/pdantler/printf.c **** 
  46:src/pdantler/printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  47:src/pdantler/printf.c **** // numeric number including padded zeros (dynamically created on stack)
  48:src/pdantler/printf.c **** // default: 32 byte
  49:src/pdantler/printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  50:src/pdantler/printf.c **** #define PRINTF_NTOA_BUFFER_SIZE 32U
  51:src/pdantler/printf.c **** #endif
  52:src/pdantler/printf.c **** 
  53:src/pdantler/printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  54:src/pdantler/printf.c **** // float number including padded zeros (dynamically created on stack)
  55:src/pdantler/printf.c **** // default: 32 byte
  56:src/pdantler/printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  57:src/pdantler/printf.c **** #define PRINTF_FTOA_BUFFER_SIZE 32U
  58:src/pdantler/printf.c **** #endif
  59:src/pdantler/printf.c **** 
  60:src/pdantler/printf.c **** // support for the floating point type (%f)
  61:src/pdantler/printf.c **** // default: activated
  62:src/pdantler/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_FLOAT
  63:src/pdantler/printf.c **** #define PRINTF_SUPPORT_FLOAT
  64:src/pdantler/printf.c **** #endif
  65:src/pdantler/printf.c **** 
  66:src/pdantler/printf.c **** // support for exponential floating point notation (%e/%g)
  67:src/pdantler/printf.c **** // default: activated
  68:src/pdantler/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  69:src/pdantler/printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL
  70:src/pdantler/printf.c **** #endif
  71:src/pdantler/printf.c **** 
  72:src/pdantler/printf.c **** // define the default floating point precision
  73:src/pdantler/printf.c **** // default: 6 digits
  74:src/pdantler/printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  75:src/pdantler/printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION 6U
  76:src/pdantler/printf.c **** #endif
  77:src/pdantler/printf.c **** 
  78:src/pdantler/printf.c **** // define the largest float suitable to print with %f
  79:src/pdantler/printf.c **** // default: 1e9
ARM GAS  /tmp/ccFy9xbE.s 			page 4


  80:src/pdantler/printf.c **** #ifndef PRINTF_MAX_FLOAT
  81:src/pdantler/printf.c **** #define PRINTF_MAX_FLOAT 1e9
  82:src/pdantler/printf.c **** #endif
  83:src/pdantler/printf.c **** 
  84:src/pdantler/printf.c **** // support for the long long types (%llu or %p)
  85:src/pdantler/printf.c **** // default: activated
  86:src/pdantler/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
  87:src/pdantler/printf.c **** #define PRINTF_SUPPORT_LONG_LONG
  88:src/pdantler/printf.c **** #endif
  89:src/pdantler/printf.c **** 
  90:src/pdantler/printf.c **** // support for the ptrdiff_t type (%t)
  91:src/pdantler/printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  92:src/pdantler/printf.c **** // default: activated
  93:src/pdantler/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  94:src/pdantler/printf.c **** #define PRINTF_SUPPORT_PTRDIFF_T
  95:src/pdantler/printf.c **** #endif
  96:src/pdantler/printf.c **** 
  97:src/pdantler/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  98:src/pdantler/printf.c **** 
  99:src/pdantler/printf.c **** // internal flag definitions
 100:src/pdantler/printf.c **** #define FLAGS_ZEROPAD (1U << 0U)
 101:src/pdantler/printf.c **** #define FLAGS_LEFT (1U << 1U)
 102:src/pdantler/printf.c **** #define FLAGS_PLUS (1U << 2U)
 103:src/pdantler/printf.c **** #define FLAGS_SPACE (1U << 3U)
 104:src/pdantler/printf.c **** #define FLAGS_HASH (1U << 4U)
 105:src/pdantler/printf.c **** #define FLAGS_UPPERCASE (1U << 5U)
 106:src/pdantler/printf.c **** #define FLAGS_CHAR (1U << 6U)
 107:src/pdantler/printf.c **** #define FLAGS_SHORT (1U << 7U)
 108:src/pdantler/printf.c **** #define FLAGS_LONG (1U << 8U)
 109:src/pdantler/printf.c **** #define FLAGS_LONG_LONG (1U << 9U)
 110:src/pdantler/printf.c **** #define FLAGS_PRECISION (1U << 10U)
 111:src/pdantler/printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 112:src/pdantler/printf.c **** 
 113:src/pdantler/printf.c **** // import float.h for DBL_MAX
 114:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 115:src/pdantler/printf.c **** #include <float.h>
 116:src/pdantler/printf.c **** #endif
 117:src/pdantler/printf.c **** 
 118:src/pdantler/printf.c **** // output function type
 119:src/pdantler/printf.c **** typedef void (*out_fct_type)(char character, void *buffer, size_t idx,
 120:src/pdantler/printf.c ****                              size_t maxlen);
 121:src/pdantler/printf.c **** 
 122:src/pdantler/printf.c **** // wrapper (used as buffer) for output function type
 123:src/pdantler/printf.c **** typedef struct {
 124:src/pdantler/printf.c ****   void (*fct)(char character, void *arg);
 125:src/pdantler/printf.c ****   void *arg;
 126:src/pdantler/printf.c **** } out_fct_wrap_type;
 127:src/pdantler/printf.c **** 
 128:src/pdantler/printf.c **** // internal buffer output
 129:src/pdantler/printf.c **** static inline void _out_buffer(char character, void *buffer, size_t idx,
 130:src/pdantler/printf.c ****                                size_t maxlen) {
  93              		.loc 1 130 47 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 131:src/pdantler/printf.c ****   if (idx < maxlen) {
ARM GAS  /tmp/ccFy9xbE.s 			page 5


  98              		.loc 1 131 3 view .LVU1
  99              	@ src/pdantler/printf.c:131:   if (idx < maxlen) {
 100              		.loc 1 131 6 is_stmt 0 view .LVU2
 101 0000 9A42     		cmp	r2, r3	@ idx, tmp123
 132:src/pdantler/printf.c ****     ((char *)buffer)[idx] = character;
 102              		.loc 1 132 5 is_stmt 1 view .LVU3
 103              	@ src/pdantler/printf.c:132:     ((char *)buffer)[idx] = character;
 104              		.loc 1 132 27 is_stmt 0 view .LVU4
 105 0002 38BF     		it	cc
 106 0004 8854     		strbcc	r0, [r1, r2]	@ character, *_1
 107              	@ src/pdantler/printf.c:134: }
 133:src/pdantler/printf.c ****   }
 134:src/pdantler/printf.c **** }
 108              		.loc 1 134 1 view .LVU5
 109 0006 7047     		bx	lr	@
 110              		.cfi_endproc
 111              	.LFE0:
 112              		.size	_out_buffer, .-_out_buffer
 113              		.section	.text._out_null,"ax",%progbits
 114              		.align	1
 115              		.p2align 4,,15
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv5-sp-d16
 120              		.type	_out_null, %function
 121              	_out_null:
 122              	.LVL1:
 123              	.LFB1:
 135:src/pdantler/printf.c **** 
 136:src/pdantler/printf.c **** // internal null output
 137:src/pdantler/printf.c **** static inline void _out_null(char character, void *buffer, size_t idx,
 138:src/pdantler/printf.c ****                              size_t maxlen) {
 124              		.loc 1 138 45 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 139:src/pdantler/printf.c ****   (void)character;
 129              		.loc 1 139 3 view .LVU7
 140:src/pdantler/printf.c ****   (void)buffer;
 130              		.loc 1 140 3 view .LVU8
 141:src/pdantler/printf.c ****   (void)idx;
 131              		.loc 1 141 3 view .LVU9
 142:src/pdantler/printf.c ****   (void)maxlen;
 132              		.loc 1 142 3 view .LVU10
 133              	@ src/pdantler/printf.c:143: }
 143:src/pdantler/printf.c **** }
 134              		.loc 1 143 1 is_stmt 0 view .LVU11
 135 0000 7047     		bx	lr	@
 136              		.cfi_endproc
 137              	.LFE1:
 138              		.size	_out_null, .-_out_null
 139 0002 00BF     		.section	.text._out_rev,"ax",%progbits
 140              		.align	1
 141              		.p2align 4,,15
 142              		.syntax unified
ARM GAS  /tmp/ccFy9xbE.s 			page 6


 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-sp-d16
 146              		.type	_out_rev, %function
 147              	_out_rev:
 148              	.LVL2:
 149              	.LFB7:
 144:src/pdantler/printf.c **** 
 145:src/pdantler/printf.c **** // internal _putchar wrapper
 146:src/pdantler/printf.c **** static inline void _out_char(char character, void *buffer, size_t idx,
 147:src/pdantler/printf.c ****                              size_t maxlen) {
 148:src/pdantler/printf.c ****   (void)buffer;
 149:src/pdantler/printf.c ****   (void)idx;
 150:src/pdantler/printf.c ****   (void)maxlen;
 151:src/pdantler/printf.c ****   if (character) {
 152:src/pdantler/printf.c ****     _putchar(character);
 153:src/pdantler/printf.c ****   }
 154:src/pdantler/printf.c **** }
 155:src/pdantler/printf.c **** 
 156:src/pdantler/printf.c **** // internal output function wrapper
 157:src/pdantler/printf.c **** static inline void _out_fct(char character, void *buffer, size_t idx,
 158:src/pdantler/printf.c ****                             size_t maxlen) {
 159:src/pdantler/printf.c ****   (void)idx;
 160:src/pdantler/printf.c ****   (void)maxlen;
 161:src/pdantler/printf.c ****   if (character) {
 162:src/pdantler/printf.c ****     // buffer is the output fct pointer
 163:src/pdantler/printf.c ****     ((out_fct_wrap_type *)buffer)
 164:src/pdantler/printf.c ****         ->fct(character, ((out_fct_wrap_type *)buffer)->arg);
 165:src/pdantler/printf.c ****   }
 166:src/pdantler/printf.c **** }
 167:src/pdantler/printf.c **** 
 168:src/pdantler/printf.c **** // internal secure strlen
 169:src/pdantler/printf.c **** // \return The length of the string (excluding the terminating 0) limited by
 170:src/pdantler/printf.c **** // 'maxsize'
 171:src/pdantler/printf.c **** static inline unsigned int _strnlen_s(const char *str, size_t maxsize) {
 172:src/pdantler/printf.c ****   const char *s;
 173:src/pdantler/printf.c ****   for (s = str; *s && maxsize--; ++s)
 174:src/pdantler/printf.c ****     ;
 175:src/pdantler/printf.c ****   return (unsigned int)(s - str);
 176:src/pdantler/printf.c **** }
 177:src/pdantler/printf.c **** 
 178:src/pdantler/printf.c **** // internal test if char is a digit (0-9)
 179:src/pdantler/printf.c **** // \return true if char is a digit
 180:src/pdantler/printf.c **** static inline bool _is_digit(char ch) { return (ch >= '0') && (ch <= '9'); }
 181:src/pdantler/printf.c **** 
 182:src/pdantler/printf.c **** // internal ASCII string to unsigned int conversion
 183:src/pdantler/printf.c **** static unsigned int _atoi(const char **str) {
 184:src/pdantler/printf.c ****   unsigned int i = 0U;
 185:src/pdantler/printf.c ****   while (_is_digit(**str)) {
 186:src/pdantler/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 187:src/pdantler/printf.c ****   }
 188:src/pdantler/printf.c ****   return i;
 189:src/pdantler/printf.c **** }
 190:src/pdantler/printf.c **** 
 191:src/pdantler/printf.c **** // output the specified string in reverse, taking care of any zero-padding
 192:src/pdantler/printf.c **** static size_t _out_rev(out_fct_type out, char *buffer, size_t idx,
 193:src/pdantler/printf.c ****                        size_t maxlen, const char *buf, size_t len,
ARM GAS  /tmp/ccFy9xbE.s 			page 7


 194:src/pdantler/printf.c ****                        unsigned int width, unsigned int flags) {
 150              		.loc 1 194 64 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 16, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 194 64 is_stmt 0 view .LVU13
 155 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 156              	.LCFI0:
 157              		.cfi_def_cfa_offset 40
 158              		.cfi_offset 3, -40
 159              		.cfi_offset 4, -36
 160              		.cfi_offset 5, -32
 161              		.cfi_offset 6, -28
 162              		.cfi_offset 7, -24
 163              		.cfi_offset 8, -20
 164              		.cfi_offset 9, -16
 165              		.cfi_offset 10, -12
 166              		.cfi_offset 11, -8
 167              		.cfi_offset 14, -4
 168              	@ src/pdantler/printf.c:194:                        unsigned int width, unsigned int flags) {
 169              		.loc 1 194 64 view .LVU14
 170 0004 9A46     		mov	r10, r3	@ maxlen, tmp149
 195:src/pdantler/printf.c ****   const size_t start_idx = idx;
 171              		.loc 1 195 3 is_stmt 1 view .LVU15
 172              	@ src/pdantler/printf.c:198:   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 196:src/pdantler/printf.c **** 
 197:src/pdantler/printf.c ****   // pad spaces up to given width
 198:src/pdantler/printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 173              		.loc 1 198 6 is_stmt 0 view .LVU16
 174 0006 0D9B     		ldr	r3, [sp, #52]	@ tmp172, flags
 175              	.LVL3:
 176              	@ src/pdantler/printf.c:194:                        unsigned int width, unsigned int flags) {
 194:src/pdantler/printf.c ****   const size_t start_idx = idx;
 177              		.loc 1 194 64 view .LVU17
 178 0008 1746     		mov	r7, r2	@ idx, tmp148
 179              	.LVL4:
 180              		.loc 1 198 3 is_stmt 1 view .LVU18
 181              	@ src/pdantler/printf.c:194:                        unsigned int width, unsigned int flags) {
 194:src/pdantler/printf.c ****   const size_t start_idx = idx;
 182              		.loc 1 194 64 is_stmt 0 view .LVU19
 183 000a 0646     		mov	r6, r0	@ out, tmp146
 184              	@ src/pdantler/printf.c:198:   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 185              		.loc 1 198 6 view .LVU20
 186 000c 9A07     		lsls	r2, r3, #30	@, tmp172,
 187              	.LVL5:
 188              	@ src/pdantler/printf.c:194:                        unsigned int width, unsigned int flags) {
 194:src/pdantler/printf.c ****   const size_t start_idx = idx;
 189              		.loc 1 194 64 view .LVU21
 190 000e 8B46     		mov	fp, r1	@ buffer, tmp147
 191 0010 DDF82880 		ldr	r8, [sp, #40]	@ buf, buf
 192              	@ src/pdantler/printf.c:198:   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 193              		.loc 1 198 6 view .LVU22
 194 0014 11D1     		bne	.L13		@,
 195              	.LVL6:
 196              	.LBB20:
 199:src/pdantler/printf.c ****     for (size_t i = len; i < width; i++) {
 197              		.loc 1 199 26 is_stmt 1 view .LVU23
ARM GAS  /tmp/ccFy9xbE.s 			page 8


 198              	@ src/pdantler/printf.c:199:     for (size_t i = len; i < width; i++) {
 199              		.loc 1 199 5 is_stmt 0 view .LVU24
 200 0016 DDE90B32 		ldrd	r3, r2, [sp, #44]	@ tmp173, tmp174,,
 201 001a 9342     		cmp	r3, r2	@ tmp173, tmp174
 202 001c 0DD2     		bcs	.L13		@,
 203 001e 1346     		mov	r3, r2	@ tmp175, tmp174
 204 0020 0B9A     		ldr	r2, [sp, #44]	@ tmp176, len
 205 0022 3C46     		mov	r4, r7	@ idx, idx
 206 0024 9D1A     		subs	r5, r3, r2	@ tmp138, tmp175, tmp176
 207 0026 3D44     		add	r5, r5, r7	@ <retval>, idx
 208              	.LVL7:
 209              	.L7:
 200:src/pdantler/printf.c ****       out(' ', buffer, idx++, maxlen);
 210              		.loc 1 200 7 is_stmt 1 discriminator 3 view .LVU25
 211 0028 2246     		mov	r2, r4	@ idx, idx
 212 002a 0134     		adds	r4, r4, #1	@ idx, idx,
 213              	.LVL8:
 214              		.loc 1 200 7 is_stmt 0 discriminator 3 view .LVU26
 215 002c 5346     		mov	r3, r10	@, maxlen
 216 002e 5946     		mov	r1, fp	@, buffer
 217 0030 2020     		movs	r0, #32	@,
 218 0032 B047     		blx	r6		@ out
 219              	.LVL9:
 199:src/pdantler/printf.c ****     for (size_t i = len; i < width; i++) {
 220              		.loc 1 199 37 is_stmt 1 discriminator 3 view .LVU27
 199:src/pdantler/printf.c ****     for (size_t i = len; i < width; i++) {
 221              		.loc 1 199 26 discriminator 3 view .LVU28
 222              	@ src/pdantler/printf.c:199:     for (size_t i = len; i < width; i++) {
 199:src/pdantler/printf.c ****     for (size_t i = len; i < width; i++) {
 223              		.loc 1 199 5 is_stmt 0 discriminator 3 view .LVU29
 224 0034 AC42     		cmp	r4, r5	@ idx, <retval>
 225 0036 F7D1     		bne	.L7		@,
 226 0038 00E0     		b	.L6		@
 227              	.LVL10:
 228              	.L13:
 229              	@ src/pdantler/printf.c:199:     for (size_t i = len; i < width; i++) {
 199:src/pdantler/printf.c ****     for (size_t i = len; i < width; i++) {
 230              		.loc 1 199 5 view .LVU30
 231 003a 3D46     		mov	r5, r7	@ <retval>, idx
 232              	.LVL11:
 233              	.L6:
 199:src/pdantler/printf.c ****     for (size_t i = len; i < width; i++) {
 234              		.loc 1 199 5 view .LVU31
 235              	.LBE20:
 201:src/pdantler/printf.c ****     }
 202:src/pdantler/printf.c ****   }
 203:src/pdantler/printf.c **** 
 204:src/pdantler/printf.c ****   // reverse string
 205:src/pdantler/printf.c ****   while (len) {
 236              		.loc 1 205 9 is_stmt 1 view .LVU32
 237 003c 0B9B     		ldr	r3, [sp, #44]	@ tmp177, len
 238 003e 73B1     		cbz	r3, .L8	@ tmp177,
 239 0040 08EB0304 		add	r4, r8, r3	@ ivtmp.159, buf, tmp178
 240 0044 04EB0509 		add	r9, r4, r5	@ tmp143, ivtmp.159, <retval>
 241              	.LVL12:
 242              	.L9:
 243              		.loc 1 205 9 is_stmt 0 view .LVU33
ARM GAS  /tmp/ccFy9xbE.s 			page 9


 244 0048 A9EB0402 		sub	r2, r9, r4	@ _43, tmp143, ivtmp.159
 245              	.LVL13:
 206:src/pdantler/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 246              		.loc 1 206 5 is_stmt 1 view .LVU34
 247              		.loc 1 206 5 is_stmt 0 view .LVU35
 248 004c 14F8010D 		ldrb	r0, [r4, #-1]!	@ zero_extendqisi2	@, MEM[base: _7, offset: 0B]
 249              	.LVL14:
 250              		.loc 1 206 5 view .LVU36
 251 0050 5346     		mov	r3, r10	@, maxlen
 252 0052 5946     		mov	r1, fp	@, buffer
 253 0054 B047     		blx	r6		@ out
 254              	.LVL15:
 205:src/pdantler/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 255              		.loc 1 205 9 is_stmt 1 view .LVU37
 256 0056 4445     		cmp	r4, r8	@ ivtmp.159, buf
 257 0058 F6D1     		bne	.L9		@,
 258              	@ src/pdantler/printf.c:206:     out(buf[--len], buffer, idx++, maxlen);
 259              		.loc 1 206 5 is_stmt 0 view .LVU38
 260 005a 0B9B     		ldr	r3, [sp, #44]	@ tmp179, len
 261 005c 1D44     		add	r5, r5, r3	@ <retval>, tmp179
 262              	.LVL16:
 263              	.L8:
 207:src/pdantler/printf.c ****   }
 208:src/pdantler/printf.c **** 
 209:src/pdantler/printf.c ****   // append pad spaces up to given width
 210:src/pdantler/printf.c ****   if (flags & FLAGS_LEFT) {
 264              		.loc 1 210 3 is_stmt 1 view .LVU39
 265              	@ src/pdantler/printf.c:210:   if (flags & FLAGS_LEFT) {
 266              		.loc 1 210 6 is_stmt 0 view .LVU40
 267 005e 0D9B     		ldr	r3, [sp, #52]	@ tmp180, flags
 268 0060 9B07     		lsls	r3, r3, #30	@, tmp180,
 269 0062 0DD5     		bpl	.L5		@,
 270              	.LVL17:
 211:src/pdantler/printf.c ****     while (idx - start_idx < width) {
 271              		.loc 1 211 11 is_stmt 1 view .LVU41
 272              	@ src/pdantler/printf.c:211:     while (idx - start_idx < width) {
 273              		.loc 1 211 16 is_stmt 0 view .LVU42
 274 0064 EF1B     		subs	r7, r5, r7	@ ivtmp.149, <retval>, idx
 275              	.LVL18:
 276              	@ src/pdantler/printf.c:211:     while (idx - start_idx < width) {
 277              		.loc 1 211 11 view .LVU43
 278 0066 0C9B     		ldr	r3, [sp, #48]	@ tmp181, width
 279 0068 BB42     		cmp	r3, r7	@ tmp181, ivtmp.149
 280 006a 09D9     		bls	.L5		@,
 281 006c 1C46     		mov	r4, r3	@ width, tmp181
 282              	.L11:
 212:src/pdantler/printf.c ****       out(' ', buffer, idx++, maxlen);
 283              		.loc 1 212 7 is_stmt 1 view .LVU44
 284              	@ src/pdantler/printf.c:211:     while (idx - start_idx < width) {
 211:src/pdantler/printf.c ****     while (idx - start_idx < width) {
 285              		.loc 1 211 11 is_stmt 0 view .LVU45
 286 006e 0137     		adds	r7, r7, #1	@ ivtmp.149, ivtmp.149,
 287 0070 2A46     		mov	r2, r5	@ idx, <retval>
 288              	@ src/pdantler/printf.c:212:       out(' ', buffer, idx++, maxlen);
 289              		.loc 1 212 7 view .LVU46
 290 0072 5346     		mov	r3, r10	@, maxlen
 291 0074 5946     		mov	r1, fp	@, buffer
ARM GAS  /tmp/ccFy9xbE.s 			page 10


 292 0076 2020     		movs	r0, #32	@,
 293 0078 0135     		adds	r5, r5, #1	@ <retval>, <retval>,
 294              	.LVL19:
 295              		.loc 1 212 7 view .LVU47
 296 007a B047     		blx	r6		@ out
 297              	.LVL20:
 211:src/pdantler/printf.c ****     while (idx - start_idx < width) {
 298              		.loc 1 211 11 is_stmt 1 view .LVU48
 299 007c A742     		cmp	r7, r4	@ ivtmp.149, width
 300 007e F6D3     		bcc	.L11		@,
 301              	.LVL21:
 302              	.L5:
 303              	@ src/pdantler/printf.c:217: }
 213:src/pdantler/printf.c ****     }
 214:src/pdantler/printf.c ****   }
 215:src/pdantler/printf.c **** 
 216:src/pdantler/printf.c ****   return idx;
 217:src/pdantler/printf.c **** }
 304              		.loc 1 217 1 is_stmt 0 view .LVU49
 305 0080 2846     		mov	r0, r5	@, <retval>
 306 0082 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 307              		.loc 1 217 1 view .LVU50
 308              		.cfi_endproc
 309              	.LFE7:
 310              		.size	_out_rev, .-_out_rev
 311 0086 00BF     		.section	.text._ntoa_format,"ax",%progbits
 312              		.align	1
 313              		.p2align 4,,15
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu fpv5-sp-d16
 318              		.type	_ntoa_format, %function
 319              	_ntoa_format:
 320              	.LVL22:
 321              	.LFB8:
 218:src/pdantler/printf.c **** 
 219:src/pdantler/printf.c **** // internal itoa format
 220:src/pdantler/printf.c **** static size_t _ntoa_format(out_fct_type out, char *buffer, size_t idx,
 221:src/pdantler/printf.c ****                            size_t maxlen, char *buf, size_t len, bool negative,
 222:src/pdantler/printf.c ****                            unsigned int base, unsigned int prec,
 223:src/pdantler/printf.c ****                            unsigned int width, unsigned int flags) {
 322              		.loc 1 223 68 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 28, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 224:src/pdantler/printf.c ****   // pad leading zeros
 225:src/pdantler/printf.c ****   if (!(flags & FLAGS_LEFT)) {
 326              		.loc 1 225 3 view .LVU52
 327              	@ src/pdantler/printf.c:223:                            unsigned int width, unsigned int flags) {
 223:src/pdantler/printf.c ****   // pad leading zeros
 328              		.loc 1 223 68 is_stmt 0 view .LVU53
 329 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 330              	.LCFI1:
 331              		.cfi_def_cfa_offset 36
 332              		.cfi_offset 4, -36
 333              		.cfi_offset 5, -32
ARM GAS  /tmp/ccFy9xbE.s 			page 11


 334              		.cfi_offset 6, -28
 335              		.cfi_offset 7, -24
 336              		.cfi_offset 8, -20
 337              		.cfi_offset 9, -16
 338              		.cfi_offset 10, -12
 339              		.cfi_offset 11, -8
 340              		.cfi_offset 14, -4
 341              	@ src/pdantler/printf.c:223:                            unsigned int width, unsigned int flags) {
 223:src/pdantler/printf.c ****   // pad leading zeros
 342              		.loc 1 223 68 view .LVU54
 343 0004 0F9E     		ldr	r6, [sp, #60]	@ flags, flags
 344 0006 DDF824E0 		ldr	lr, [sp, #36]	@ buf, buf
 345              	@ src/pdantler/printf.c:225:   if (!(flags & FLAGS_LEFT)) {
 346              		.loc 1 225 6 view .LVU55
 347 000a 16F0020F 		tst	r6, #2	@ flags,
 348              	@ src/pdantler/printf.c:223:                            unsigned int width, unsigned int flags) {
 223:src/pdantler/printf.c ****   // pad leading zeros
 349              		.loc 1 223 68 view .LVU56
 350 000e 0A9C     		ldr	r4, [sp, #40]	@ len, len
 351 0010 9DF82C90 		ldrb	r9, [sp, #44]	@ zero_extendqisi2	@ negative, negative
 352 0014 0E9D     		ldr	r5, [sp, #56]	@ width, width
 353 0016 DDE90C87 		ldrd	r8, r7, [sp, #48]	@ base, prec,,
 354              	@ src/pdantler/printf.c:225:   if (!(flags & FLAGS_LEFT)) {
 355              		.loc 1 225 6 view .LVU57
 356 001a 2ED1     		bne	.L25		@,
 226:src/pdantler/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) &&
 357              		.loc 1 226 5 is_stmt 1 view .LVU58
 358              	@ src/pdantler/printf.c:226:     if (width && (flags & FLAGS_ZEROPAD) &&
 359              		.loc 1 226 8 is_stmt 0 view .LVU59
 360 001c 002D     		cmp	r5, #0	@ width
 361 001e 6FD1     		bne	.L122	@
 362              	.LVL23:
 227:src/pdantler/printf.c ****         (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 228:src/pdantler/printf.c ****       width--;
 229:src/pdantler/printf.c ****     }
 230:src/pdantler/printf.c ****     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 363              		.loc 1 230 11 is_stmt 1 view .LVU60
 364 0020 1F2C     		cmp	r4, #31	@ len,
 365              	@ src/pdantler/printf.c:226:     if (width && (flags & FLAGS_ZEROPAD) &&
 226:src/pdantler/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) &&
 366              		.loc 1 226 25 is_stmt 0 view .LVU61
 367 0022 06F0010A 		and	r10, r6, #1	@ prephitmp_117, flags,
 368              	@ src/pdantler/printf.c:230:     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 369              		.loc 1 230 11 view .LVU62
 370 0026 0DD8     		bhi	.L32		@,
 371 0028 BC42     		cmp	r4, r7	@ len, prec
 372 002a 0BD2     		bcs	.L32		@,
 373              	.LVL24:
 374              	.L51:
 375              		.loc 1 230 11 view .LVU63
 376 002c 04F1FF3C 		add	ip, r4, #-1	@ tmp186, len,
 377              	@ src/pdantler/printf.c:231:       buf[len++] = '0';
 231:src/pdantler/printf.c ****       buf[len++] = '0';
 378              		.loc 1 231 18 view .LVU64
 379 0030 4FF0300B 		mov	fp, #48	@ tmp187,
 380 0034 F444     		add	ip, ip, lr	@ ivtmp.181, buf
 381              	.L30:
ARM GAS  /tmp/ccFy9xbE.s 			page 12


 382              		.loc 1 231 7 is_stmt 1 view .LVU65
 383              	@ src/pdantler/printf.c:231:       buf[len++] = '0';
 384              		.loc 1 231 14 is_stmt 0 view .LVU66
 385 0036 0134     		adds	r4, r4, #1	@ len, len,
 386              	.LVL25:
 387              	@ src/pdantler/printf.c:231:       buf[len++] = '0';
 388              		.loc 1 231 18 view .LVU67
 389 0038 0CF801BF 		strb	fp, [ip, #1]!	@ tmp187, MEM[base: _122, offset: 0B]
 230:src/pdantler/printf.c ****       buf[len++] = '0';
 390              		.loc 1 230 11 is_stmt 1 view .LVU68
 391 003c A742     		cmp	r7, r4	@ prec, len
 392 003e 01D9     		bls	.L32		@,
 393 0040 1F2C     		cmp	r4, #31	@ len,
 394 0042 F8D9     		bls	.L30		@,
 395              	.L32:
 232:src/pdantler/printf.c ****     }
 233:src/pdantler/printf.c ****     while ((flags & FLAGS_ZEROPAD) && (len < width) &&
 396              		.loc 1 233 11 view .LVU69
 397 0044 BAF1000F 		cmp	r10, #0	@ prephitmp_117
 398 0048 17D0     		beq	.L25	@
 399              	@ src/pdantler/printf.c:234:            (len < PRINTF_NTOA_BUFFER_SIZE)) {
 234:src/pdantler/printf.c ****            (len < PRINTF_NTOA_BUFFER_SIZE)) {
 400              		.loc 1 234 17 is_stmt 0 view .LVU70
 401 004a 1F2C     		cmp	r4, #31	@ len,
 402 004c 8CBF     		ite	hi
 403 004e 4FF0000C 		movhi	ip, #0	@ prephitmp_111,
 404 0052 4FF0010C 		movls	ip, #1	@ prephitmp_111,
 405              	.L54:
 406              	@ src/pdantler/printf.c:233:     while ((flags & FLAGS_ZEROPAD) && (len < width) &&
 233:src/pdantler/printf.c ****            (len < PRINTF_NTOA_BUFFER_SIZE)) {
 407              		.loc 1 233 53 view .LVU71
 408 0056 A542     		cmp	r5, r4	@ width, len
 409 0058 0FD9     		bls	.L25		@,
 233:src/pdantler/printf.c ****            (len < PRINTF_NTOA_BUFFER_SIZE)) {
 410              		.loc 1 233 53 view .LVU72
 411 005a BCF1000F 		cmp	ip, #0	@ prephitmp_111
 412 005e 0CD0     		beq	.L25	@
 413 0060 04F1FF3C 		add	ip, r4, #-1	@ tmp206, len,
 414              	@ src/pdantler/printf.c:235:       buf[len++] = '0';
 235:src/pdantler/printf.c ****       buf[len++] = '0';
 415              		.loc 1 235 18 view .LVU73
 416 0064 4FF0300A 		mov	r10, #48	@ tmp207,
 417 0068 F444     		add	ip, ip, lr	@ ivtmp.175, buf
 418 006a 01E0     		b	.L35		@
 419              	.L123:
 420              	@ src/pdantler/printf.c:233:     while ((flags & FLAGS_ZEROPAD) && (len < width) &&
 233:src/pdantler/printf.c ****            (len < PRINTF_NTOA_BUFFER_SIZE)) {
 421              		.loc 1 233 53 view .LVU74
 422 006c 1F2C     		cmp	r4, #31	@ len,
 423 006e 04D8     		bhi	.L25		@,
 424              	.L35:
 425              		.loc 1 235 7 is_stmt 1 view .LVU75
 426              	@ src/pdantler/printf.c:235:       buf[len++] = '0';
 427              		.loc 1 235 14 is_stmt 0 view .LVU76
 428 0070 0134     		adds	r4, r4, #1	@ len, len,
 429              	.LVL26:
 430              	@ src/pdantler/printf.c:235:       buf[len++] = '0';
ARM GAS  /tmp/ccFy9xbE.s 			page 13


 431              		.loc 1 235 18 view .LVU77
 432 0072 0CF801AF 		strb	r10, [ip, #1]!	@ tmp207, MEM[base: _141, offset: 0B]
 233:src/pdantler/printf.c ****            (len < PRINTF_NTOA_BUFFER_SIZE)) {
 433              		.loc 1 233 11 is_stmt 1 view .LVU78
 434              	@ src/pdantler/printf.c:233:     while ((flags & FLAGS_ZEROPAD) && (len < width) &&
 233:src/pdantler/printf.c ****            (len < PRINTF_NTOA_BUFFER_SIZE)) {
 435              		.loc 1 233 53 is_stmt 0 view .LVU79
 436 0076 AC42     		cmp	r4, r5	@ len, width
 437 0078 F8D3     		bcc	.L123		@,
 438              	.LVL27:
 439              	.L25:
 236:src/pdantler/printf.c ****     }
 237:src/pdantler/printf.c ****   }
 238:src/pdantler/printf.c **** 
 239:src/pdantler/printf.c ****   // handle hash
 240:src/pdantler/printf.c ****   if (flags & FLAGS_HASH) {
 440              		.loc 1 240 3 is_stmt 1 view .LVU80
 441              	@ src/pdantler/printf.c:240:   if (flags & FLAGS_HASH) {
 442              		.loc 1 240 6 is_stmt 0 view .LVU81
 443 007a 16F0100F 		tst	r6, #16	@ flags,
 444 007e 2ED0     		beq	.L37		@,
 241:src/pdantler/printf.c ****     if (!(flags & FLAGS_PRECISION) && len &&
 445              		.loc 1 241 5 is_stmt 1 view .LVU82
 446              	@ src/pdantler/printf.c:241:     if (!(flags & FLAGS_PRECISION) && len &&
 447              		.loc 1 241 8 is_stmt 0 view .LVU83
 448 0080 16F4806F 		tst	r6, #1024	@ flags,
 449 0084 18D0     		beq	.L124		@,
 450              	.L38:
 242:src/pdantler/printf.c ****         ((len == prec) || (len == width))) {
 243:src/pdantler/printf.c ****       len--;
 244:src/pdantler/printf.c ****       if (len && (base == 16U)) {
 245:src/pdantler/printf.c ****         len--;
 246:src/pdantler/printf.c ****       }
 247:src/pdantler/printf.c ****     }
 248:src/pdantler/printf.c ****     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
 451              		.loc 1 248 5 is_stmt 1 view .LVU84
 452              	@ src/pdantler/printf.c:248:     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
 453              		.loc 1 248 8 is_stmt 0 view .LVU85
 454 0086 B8F1100F 		cmp	r8, #16	@ base,
 455 008a 7DD0     		beq	.L125		@,
 249:src/pdantler/printf.c ****         (len < PRINTF_NTOA_BUFFER_SIZE)) {
 250:src/pdantler/printf.c ****       buf[len++] = 'x';
 251:src/pdantler/printf.c ****     } else if ((base == 16U) && (flags & FLAGS_UPPERCASE) &&
 456              		.loc 1 251 12 is_stmt 1 view .LVU86
 252:src/pdantler/printf.c ****                (len < PRINTF_NTOA_BUFFER_SIZE)) {
 253:src/pdantler/printf.c ****       buf[len++] = 'X';
 254:src/pdantler/printf.c ****     } else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 457              		.loc 1 254 12 view .LVU87
 458              	@ src/pdantler/printf.c:254:     } else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 459              		.loc 1 254 15 is_stmt 0 view .LVU88
 460 008c B8F1020F 		cmp	r8, #2	@ base,
 461 0090 08D1     		bne	.L47		@,
 462 0092 1F2C     		cmp	r4, #31	@ len,
 463 0094 06D8     		bhi	.L47		@,
 255:src/pdantler/printf.c ****       buf[len++] = 'b';
 464              		.loc 1 255 7 is_stmt 1 view .LVU89
 465              	.LVL28:
ARM GAS  /tmp/ccFy9xbE.s 			page 14


 466              	@ src/pdantler/printf.c:255:       buf[len++] = 'b';
 467              		.loc 1 255 10 is_stmt 0 view .LVU90
 468 0096 0EEB0407 		add	r7, lr, r4	@ _114, buf, len
 469              	@ src/pdantler/printf.c:255:       buf[len++] = 'b';
 470              		.loc 1 255 18 view .LVU91
 471 009a 4FF0620C 		mov	ip, #98	@ tmp250,
 472 009e 0134     		adds	r4, r4, #1	@ len, len,
 473 00a0 87F800C0 		strb	ip, [r7]	@ tmp250, *_114
 474              	.LVL29:
 475              	.L47:
 256:src/pdantler/printf.c ****     }
 257:src/pdantler/printf.c ****     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 476              		.loc 1 257 5 is_stmt 1 view .LVU92
 477              	@ src/pdantler/printf.c:257:     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 478              		.loc 1 257 8 is_stmt 0 view .LVU93
 479 00a4 202C     		cmp	r4, #32	@ len,
 480 00a6 13D1     		bne	.L44		@,
 481              	.LVL30:
 482              	.L48:
 258:src/pdantler/printf.c ****       buf[len++] = '0';
 259:src/pdantler/printf.c ****     }
 260:src/pdantler/printf.c ****   }
 261:src/pdantler/printf.c **** 
 262:src/pdantler/printf.c ****   if (len < PRINTF_NTOA_BUFFER_SIZE) {
 263:src/pdantler/printf.c ****     if (negative) {
 264:src/pdantler/printf.c ****       buf[len++] = '-';
 265:src/pdantler/printf.c ****     } else if (flags & FLAGS_PLUS) {
 266:src/pdantler/printf.c ****       buf[len++] = '+'; // ignore the space if the '+' exists
 267:src/pdantler/printf.c ****     } else if (flags & FLAGS_SPACE) {
 268:src/pdantler/printf.c ****       buf[len++] = ' ';
 269:src/pdantler/printf.c ****     }
 270:src/pdantler/printf.c ****   }
 271:src/pdantler/printf.c **** 
 272:src/pdantler/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 483              		.loc 1 272 3 is_stmt 1 view .LVU94
 484              	@ src/pdantler/printf.c:272:   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 485              		.loc 1 272 10 is_stmt 0 view .LVU95
 486 00a8 CDE90B56 		strd	r5, r6, [sp, #44]	@ width, flags,,
 487 00ac CDE909E4 		strd	lr, r4, [sp, #36]	@ buf, len,,
 488              	@ src/pdantler/printf.c:273: }
 273:src/pdantler/printf.c **** }
 489              		.loc 1 273 1 view .LVU96
 490 00b0 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 491              	.LCFI2:
 492              		.cfi_remember_state
 493              		.cfi_restore 14
 494              		.cfi_restore 11
 495              		.cfi_restore 10
 496              		.cfi_restore 9
 497              		.cfi_restore 8
 498              		.cfi_restore 7
 499              		.cfi_restore 6
 500              		.cfi_restore 5
 501              		.cfi_restore 4
 502              		.cfi_def_cfa_offset 0
 503              	.LVL31:
 504              	@ src/pdantler/printf.c:272:   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
ARM GAS  /tmp/ccFy9xbE.s 			page 15


 272:src/pdantler/printf.c **** }
 505              		.loc 1 272 10 view .LVU97
 506 00b4 FFF7FEBF 		b	_out_rev		@
 507              	.LVL32:
 508              	.L124:
 509              	.LCFI3:
 510              		.cfi_restore_state
 511              	@ src/pdantler/printf.c:241:     if (!(flags & FLAGS_PRECISION) && len &&
 241:src/pdantler/printf.c ****         ((len == prec) || (len == width))) {
 512              		.loc 1 241 36 discriminator 1 view .LVU98
 513 00b8 002C     		cmp	r4, #0	@ len
 514 00ba 51D1     		bne	.L126	@
 515              	.LVL33:
 248:src/pdantler/printf.c ****         (len < PRINTF_NTOA_BUFFER_SIZE)) {
 516              		.loc 1 248 5 is_stmt 1 view .LVU99
 517              	@ src/pdantler/printf.c:248:     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
 248:src/pdantler/printf.c ****         (len < PRINTF_NTOA_BUFFER_SIZE)) {
 518              		.loc 1 248 8 is_stmt 0 view .LVU100
 519 00bc B8F1100F 		cmp	r8, #16	@ base,
 520 00c0 7BD0     		beq	.L56		@,
 251:src/pdantler/printf.c ****                (len < PRINTF_NTOA_BUFFER_SIZE)) {
 521              		.loc 1 251 12 is_stmt 1 view .LVU101
 254:src/pdantler/printf.c ****       buf[len++] = 'b';
 522              		.loc 1 254 12 view .LVU102
 523              	@ src/pdantler/printf.c:254:     } else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 254:src/pdantler/printf.c ****       buf[len++] = 'b';
 524              		.loc 1 254 15 is_stmt 0 view .LVU103
 525 00c2 B8F1020F 		cmp	r8, #2	@ base,
 526 00c6 7AD1     		bne	.L127		@,
 255:src/pdantler/printf.c ****     }
 527              		.loc 1 255 7 is_stmt 1 view .LVU104
 528              	.LVL34:
 529              	@ src/pdantler/printf.c:255:       buf[len++] = 'b';
 255:src/pdantler/printf.c ****     }
 530              		.loc 1 255 18 is_stmt 0 view .LVU105
 531 00c8 6224     		movs	r4, #98	@ tmp230,
 532 00ca 8EF80040 		strb	r4, [lr]	@ tmp230, *buf_57(D)
 533              	.LVL35:
 257:src/pdantler/printf.c ****       buf[len++] = '0';
 534              		.loc 1 257 5 is_stmt 1 view .LVU106
 535              	@ src/pdantler/printf.c:255:       buf[len++] = 'b';
 255:src/pdantler/printf.c ****     }
 536              		.loc 1 255 18 is_stmt 0 view .LVU107
 537 00ce 0124     		movs	r4, #1	@ len,
 538              	.LVL36:
 539              	.L44:
 258:src/pdantler/printf.c ****     }
 540              		.loc 1 258 7 is_stmt 1 view .LVU108
 541              	@ src/pdantler/printf.c:258:       buf[len++] = '0';
 258:src/pdantler/printf.c ****     }
 542              		.loc 1 258 10 is_stmt 0 view .LVU109
 543 00d0 0EEB0407 		add	r7, lr, r4	@ _110, buf, len
 544              	@ src/pdantler/printf.c:258:       buf[len++] = '0';
 258:src/pdantler/printf.c ****     }
 545              		.loc 1 258 18 view .LVU110
 546 00d4 4FF0300C 		mov	ip, #48	@ tmp252,
 547 00d8 0134     		adds	r4, r4, #1	@ len, len,
ARM GAS  /tmp/ccFy9xbE.s 			page 16


 548 00da 87F800C0 		strb	ip, [r7]	@ tmp252, *_110
 549              	.L37:
 550              	.LVL37:
 262:src/pdantler/printf.c ****     if (negative) {
 551              		.loc 1 262 3 is_stmt 1 view .LVU111
 552              	@ src/pdantler/printf.c:262:   if (len < PRINTF_NTOA_BUFFER_SIZE) {
 262:src/pdantler/printf.c ****     if (negative) {
 553              		.loc 1 262 6 is_stmt 0 view .LVU112
 554 00de 202C     		cmp	r4, #32	@ len,
 555 00e0 E2D0     		beq	.L48		@,
 263:src/pdantler/printf.c ****       buf[len++] = '-';
 556              		.loc 1 263 5 is_stmt 1 view .LVU113
 557              	@ src/pdantler/printf.c:263:     if (negative) {
 263:src/pdantler/printf.c ****       buf[len++] = '-';
 558              		.loc 1 263 8 is_stmt 0 view .LVU114
 559 00e2 B9F1000F 		cmp	r9, #0	@ negative
 560 00e6 20D0     		beq	.L49	@
 561              	.LVL38:
 562              	.L130:
 264:src/pdantler/printf.c ****     } else if (flags & FLAGS_PLUS) {
 563              		.loc 1 264 7 is_stmt 1 view .LVU115
 564              	@ src/pdantler/printf.c:264:       buf[len++] = '-';
 264:src/pdantler/printf.c ****     } else if (flags & FLAGS_PLUS) {
 565              		.loc 1 264 18 is_stmt 0 view .LVU116
 566 00e8 2D27     		movs	r7, #45	@ tmp254,
 567 00ea 0EF80470 		strb	r7, [lr, r4]	@ tmp254,* len
 568              	@ src/pdantler/printf.c:264:       buf[len++] = '-';
 264:src/pdantler/printf.c ****     } else if (flags & FLAGS_PLUS) {
 569              		.loc 1 264 14 view .LVU117
 570 00ee 0134     		adds	r4, r4, #1	@ len, len,
 571              	.LVL39:
 272:src/pdantler/printf.c **** }
 572              		.loc 1 272 3 is_stmt 1 view .LVU118
 573              	@ src/pdantler/printf.c:272:   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 272:src/pdantler/printf.c **** }
 574              		.loc 1 272 10 is_stmt 0 view .LVU119
 575 00f0 CDE90B56 		strd	r5, r6, [sp, #44]	@ width, flags,,
 576 00f4 CDE909E4 		strd	lr, r4, [sp, #36]	@ buf, len,,
 577              	@ src/pdantler/printf.c:273: }
 578              		.loc 1 273 1 view .LVU120
 579 00f8 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 580              	.LCFI4:
 581              		.cfi_remember_state
 582              		.cfi_restore 14
 583              		.cfi_restore 11
 584              		.cfi_restore 10
 585              		.cfi_restore 9
 586              		.cfi_restore 8
 587              		.cfi_restore 7
 588              		.cfi_restore 6
 589              		.cfi_restore 5
 590              		.cfi_restore 4
 591              		.cfi_def_cfa_offset 0
 592              	.LVL40:
 593              	@ src/pdantler/printf.c:272:   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 272:src/pdantler/printf.c **** }
 594              		.loc 1 272 10 view .LVU121
ARM GAS  /tmp/ccFy9xbE.s 			page 17


 595 00fc FFF7FEBF 		b	_out_rev		@
 596              	.LVL41:
 597              	.L122:
 598              	.LCFI5:
 599              		.cfi_restore_state
 600              	@ src/pdantler/printf.c:226:     if (width && (flags & FLAGS_ZEROPAD) &&
 226:src/pdantler/printf.c ****         (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 601              		.loc 1 226 15 discriminator 1 view .LVU122
 602 0100 16F0010A 		ands	r10, r6, #1	@ prephitmp_117, flags,
 603 0104 26D0     		beq	.L27		@,
 604              	@ src/pdantler/printf.c:226:     if (width && (flags & FLAGS_ZEROPAD) &&
 226:src/pdantler/printf.c ****         (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 605              		.loc 1 226 42 discriminator 2 view .LVU123
 606 0106 B9F1000F 		cmp	r9, #0	@ negative
 607 010a 3BD1     		bne	.L28	@
 608              	@ src/pdantler/printf.c:227:         (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 227:src/pdantler/printf.c ****       width--;
 609              		.loc 1 227 19 view .LVU124
 610 010c 16F00C0F 		tst	r6, #12	@ flags,
 611 0110 38D1     		bne	.L28		@,
 612              	.LVL42:
 613              	.L29:
 230:src/pdantler/printf.c ****       buf[len++] = '0';
 614              		.loc 1 230 11 is_stmt 1 view .LVU125
 615              	@ src/pdantler/printf.c:230:     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 230:src/pdantler/printf.c ****       buf[len++] = '0';
 616              		.loc 1 230 33 is_stmt 0 view .LVU126
 617 0112 1F2C     		cmp	r4, #31	@ len,
 618 0114 8CBF     		ite	hi
 619 0116 4FF0000C 		movhi	ip, #0	@ prephitmp_111,
 620 011a 4FF0010C 		movls	ip, #1	@ prephitmp_111,
 621              	@ src/pdantler/printf.c:230:     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 230:src/pdantler/printf.c ****       buf[len++] = '0';
 622              		.loc 1 230 11 view .LVU127
 623 011e BC42     		cmp	r4, r7	@ len, prec
 624 0120 99D2     		bcs	.L54		@,
 625 0122 BCF1000F 		cmp	ip, #0	@ prephitmp_111
 626 0126 81D1     		bne	.L51	@
 627 0128 95E7     		b	.L54		@
 628              	.LVL43:
 629              	.L49:
 265:src/pdantler/printf.c ****       buf[len++] = '+'; // ignore the space if the '+' exists
 630              		.loc 1 265 12 is_stmt 1 view .LVU128
 631              	@ src/pdantler/printf.c:265:     } else if (flags & FLAGS_PLUS) {
 265:src/pdantler/printf.c ****       buf[len++] = '+'; // ignore the space if the '+' exists
 632              		.loc 1 265 15 is_stmt 0 view .LVU129
 633 012a 7707     		lsls	r7, r6, #29	@, flags,
 634 012c 06D4     		bmi	.L128		@,
 267:src/pdantler/printf.c ****       buf[len++] = ' ';
 635              		.loc 1 267 12 is_stmt 1 view .LVU130
 636              	@ src/pdantler/printf.c:267:     } else if (flags & FLAGS_SPACE) {
 267:src/pdantler/printf.c ****       buf[len++] = ' ';
 637              		.loc 1 267 15 is_stmt 0 view .LVU131
 638 012e 3707     		lsls	r7, r6, #28	@, flags,
 639 0130 BAD5     		bpl	.L48		@,
 268:src/pdantler/printf.c ****     }
 640              		.loc 1 268 7 is_stmt 1 view .LVU132
ARM GAS  /tmp/ccFy9xbE.s 			page 18


 641              	.LVL44:
 642              	@ src/pdantler/printf.c:268:       buf[len++] = ' ';
 268:src/pdantler/printf.c ****     }
 643              		.loc 1 268 18 is_stmt 0 view .LVU133
 644 0132 2027     		movs	r7, #32	@ tmp260,
 645 0134 0EF80470 		strb	r7, [lr, r4]	@ tmp260,* len
 646              	@ src/pdantler/printf.c:268:       buf[len++] = ' ';
 268:src/pdantler/printf.c ****     }
 647              		.loc 1 268 14 view .LVU134
 648 0138 0134     		adds	r4, r4, #1	@ len, len,
 649              	.LVL45:
 268:src/pdantler/printf.c ****     }
 650              		.loc 1 268 14 view .LVU135
 651 013a B5E7     		b	.L48		@
 652              	.LVL46:
 653              	.L128:
 266:src/pdantler/printf.c ****     } else if (flags & FLAGS_SPACE) {
 654              		.loc 1 266 7 is_stmt 1 view .LVU136
 655              	@ src/pdantler/printf.c:266:       buf[len++] = '+'; // ignore the space if the '+' exists
 266:src/pdantler/printf.c ****     } else if (flags & FLAGS_SPACE) {
 656              		.loc 1 266 18 is_stmt 0 view .LVU137
 657 013c 2B27     		movs	r7, #43	@ tmp257,
 658 013e 0EF80470 		strb	r7, [lr, r4]	@ tmp257,* len
 659              	@ src/pdantler/printf.c:266:       buf[len++] = '+'; // ignore the space if the '+' exists
 266:src/pdantler/printf.c ****     } else if (flags & FLAGS_SPACE) {
 660              		.loc 1 266 14 view .LVU138
 661 0142 0134     		adds	r4, r4, #1	@ len, len,
 662              	.LVL47:
 272:src/pdantler/printf.c **** }
 663              		.loc 1 272 3 is_stmt 1 view .LVU139
 664              	@ src/pdantler/printf.c:272:   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 272:src/pdantler/printf.c **** }
 665              		.loc 1 272 10 is_stmt 0 view .LVU140
 666 0144 CDE90B56 		strd	r5, r6, [sp, #44]	@ width, flags,,
 667 0148 CDE909E4 		strd	lr, r4, [sp, #36]	@ buf, len,,
 668              	@ src/pdantler/printf.c:273: }
 669              		.loc 1 273 1 view .LVU141
 670 014c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 671              	.LCFI6:
 672              		.cfi_remember_state
 673              		.cfi_restore 14
 674              		.cfi_restore 11
 675              		.cfi_restore 10
 676              		.cfi_restore 9
 677              		.cfi_restore 8
 678              		.cfi_restore 7
 679              		.cfi_restore 6
 680              		.cfi_restore 5
 681              		.cfi_restore 4
 682              		.cfi_def_cfa_offset 0
 683              	.LVL48:
 684              	@ src/pdantler/printf.c:272:   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 272:src/pdantler/printf.c **** }
 685              		.loc 1 272 10 view .LVU142
 686 0150 FFF7FEBF 		b	_out_rev		@
 687              	.LVL49:
 688              	.L27:
ARM GAS  /tmp/ccFy9xbE.s 			page 19


 689              	.LCFI7:
 690              		.cfi_restore_state
 230:src/pdantler/printf.c ****       buf[len++] = '0';
 691              		.loc 1 230 11 is_stmt 1 view .LVU143
 692 0154 BC42     		cmp	r4, r7	@ len, prec
 693 0156 90D2     		bcs	.L25		@,
 694 0158 1F2C     		cmp	r4, #31	@ len,
 695 015a 7FF667AF 		bls	.L51		@,
 696 015e 8CE7     		b	.L25		@
 697              	.L126:
 698              	@ src/pdantler/printf.c:241:     if (!(flags & FLAGS_PRECISION) && len &&
 241:src/pdantler/printf.c ****         ((len == prec) || (len == width))) {
 699              		.loc 1 241 43 is_stmt 0 discriminator 2 view .LVU144
 700 0160 BC42     		cmp	r4, r7	@ len, prec
 701 0162 01D0     		beq	.L58		@,
 702 0164 AC42     		cmp	r4, r5	@ len, width
 703 0166 8ED1     		bne	.L38		@,
 704              	.L58:
 243:src/pdantler/printf.c ****       if (len && (base == 16U)) {
 705              		.loc 1 243 7 is_stmt 1 view .LVU145
 706              	.LVL50:
 244:src/pdantler/printf.c ****         len--;
 707              		.loc 1 244 7 view .LVU146
 708              	@ src/pdantler/printf.c:244:       if (len && (base == 16U)) {
 244:src/pdantler/printf.c ****         len--;
 709              		.loc 1 244 11 is_stmt 0 view .LVU147
 710 0168 B4F1010C 		subs	ip, r4, #1	@ len, len,
 711              	.LVL51:
 244:src/pdantler/printf.c ****         len--;
 712              		.loc 1 244 11 view .LVU148
 713 016c 14BF     		ite	ne
 714 016e 0127     		movne	r7, #1	@ tmp224,
 715 0170 0027     		moveq	r7, #0	@ tmp224,
 716              	@ src/pdantler/printf.c:244:       if (len && (base == 16U)) {
 244:src/pdantler/printf.c ****         len--;
 717              		.loc 1 244 15 view .LVU149
 718 0172 B8F1100F 		cmp	r8, #16	@ base,
 719 0176 14BF     		ite	ne		@
 720 0178 0027     		movne	r7, #0	@, _86
 721 017a 07F00107 		andeq	r7, r7, #1	@,, _86, tmp224
 722              	@ src/pdantler/printf.c:244:       if (len && (base == 16U)) {
 244:src/pdantler/printf.c ****         len--;
 723              		.loc 1 244 10 view .LVU150
 724 017e D7B1     		cbz	r7, .L55	@ _86,
 245:src/pdantler/printf.c ****       }
 725              		.loc 1 245 9 is_stmt 1 view .LVU151
 726              	@ src/pdantler/printf.c:245:         len--;
 245:src/pdantler/printf.c ****       }
 727              		.loc 1 245 12 is_stmt 0 view .LVU152
 728 0180 023C     		subs	r4, r4, #2	@ len, len,
 729              	.LVL52:
 248:src/pdantler/printf.c ****         (len < PRINTF_NTOA_BUFFER_SIZE)) {
 730              		.loc 1 248 5 is_stmt 1 view .LVU153
 731 0182 05E0     		b	.L41		@
 732              	.LVL53:
 733              	.L28:
 228:src/pdantler/printf.c ****     }
ARM GAS  /tmp/ccFy9xbE.s 			page 20


 734              		.loc 1 228 7 view .LVU154
 735              	@ src/pdantler/printf.c:228:       width--;
 228:src/pdantler/printf.c ****     }
 736              		.loc 1 228 12 is_stmt 0 view .LVU155
 737 0184 013D     		subs	r5, r5, #1	@ width, width,
 738              	.LVL54:
 228:src/pdantler/printf.c ****     }
 739              		.loc 1 228 12 view .LVU156
 740 0186 C4E7     		b	.L29		@
 741              	.LVL55:
 742              	.L125:
 743              	@ src/pdantler/printf.c:248:     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
 248:src/pdantler/printf.c ****         (len < PRINTF_NTOA_BUFFER_SIZE)) {
 744              		.loc 1 248 53 view .LVU157
 745 0188 1F2C     		cmp	r4, #31	@ len,
 746 018a 8CBF     		ite	hi
 747 018c 0027     		movhi	r7, #0	@ _86,
 748 018e 0127     		movls	r7, #1	@ _86,
 749              	.LVL56:
 750              	.L41:
 751              	@ src/pdantler/printf.c:248:     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
 248:src/pdantler/printf.c ****         (len < PRINTF_NTOA_BUFFER_SIZE)) {
 752              		.loc 1 248 23 discriminator 1 view .LVU158
 753 0190 16F0200C 		ands	ip, r6, #32	@ _21, flags,
 754              	@ src/pdantler/printf.c:248:     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
 248:src/pdantler/printf.c ****         (len < PRINTF_NTOA_BUFFER_SIZE)) {
 755              		.loc 1 248 53 discriminator 1 view .LVU159
 756 0194 00D1     		bne	.L46		@,
 757 0196 4FB9     		cbnz	r7, .L129	@ _86,
 758              	.L46:
 251:src/pdantler/printf.c ****                (len < PRINTF_NTOA_BUFFER_SIZE)) {
 759              		.loc 1 251 12 is_stmt 1 discriminator 1 view .LVU160
 760              	@ src/pdantler/printf.c:251:     } else if ((base == 16U) && (flags & FLAGS_UPPERCASE) &&
 251:src/pdantler/printf.c ****                (len < PRINTF_NTOA_BUFFER_SIZE)) {
 761              		.loc 1 251 59 is_stmt 0 discriminator 1 view .LVU161
 762 0198 BCF1000F 		cmp	ip, #0	@ _21
 763 019c 82D0     		beq	.L47	@
 764 019e 002F     		cmp	r7, #0	@ _86
 765 01a0 80D0     		beq	.L47	@
 253:src/pdantler/printf.c ****     } else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 766              		.loc 1 253 7 is_stmt 1 view .LVU162
 767              	.LVL57:
 768              	@ src/pdantler/printf.c:253:       buf[len++] = 'X';
 253:src/pdantler/printf.c ****     } else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 769              		.loc 1 253 18 is_stmt 0 view .LVU163
 770 01a2 5827     		movs	r7, #88	@ tmp242,
 771 01a4 0EF80470 		strb	r7, [lr, r4]	@ tmp242,* len
 772              	.LVL58:
 773              	@ src/pdantler/printf.c:253:       buf[len++] = 'X';
 253:src/pdantler/printf.c ****     } else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 774              		.loc 1 253 14 view .LVU164
 775 01a8 0134     		adds	r4, r4, #1	@ len, len,
 776              	.LVL59:
 777              	@ src/pdantler/printf.c:253:       buf[len++] = 'X';
 253:src/pdantler/printf.c ****     } else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 778              		.loc 1 253 18 view .LVU165
 779 01aa 7BE7     		b	.L47		@
ARM GAS  /tmp/ccFy9xbE.s 			page 21


 780              	.LVL60:
 781              	.L129:
 250:src/pdantler/printf.c ****     } else if ((base == 16U) && (flags & FLAGS_UPPERCASE) &&
 782              		.loc 1 250 7 is_stmt 1 view .LVU166
 783              	@ src/pdantler/printf.c:250:       buf[len++] = 'x';
 250:src/pdantler/printf.c ****     } else if ((base == 16U) && (flags & FLAGS_UPPERCASE) &&
 784              		.loc 1 250 18 is_stmt 0 view .LVU167
 785 01ac 7827     		movs	r7, #120	@ tmp237,
 786 01ae 0EF80470 		strb	r7, [lr, r4]	@ tmp237,* len
 787              	.LVL61:
 788              	@ src/pdantler/printf.c:250:       buf[len++] = 'x';
 250:src/pdantler/printf.c ****     } else if ((base == 16U) && (flags & FLAGS_UPPERCASE) &&
 789              		.loc 1 250 14 view .LVU168
 790 01b2 0134     		adds	r4, r4, #1	@ len, len,
 791              	.LVL62:
 792              	@ src/pdantler/printf.c:250:       buf[len++] = 'x';
 250:src/pdantler/printf.c ****     } else if ((base == 16U) && (flags & FLAGS_UPPERCASE) &&
 793              		.loc 1 250 18 view .LVU169
 794 01b4 76E7     		b	.L47		@
 795              	.LVL63:
 796              	.L55:
 797              	@ src/pdantler/printf.c:243:       len--;
 243:src/pdantler/printf.c ****       if (len && (base == 16U)) {
 798              		.loc 1 243 10 view .LVU170
 799 01b6 6446     		mov	r4, ip	@ len, len
 800 01b8 65E7     		b	.L38		@
 801              	.LVL64:
 802              	.L56:
 803              	@ src/pdantler/printf.c:248:     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
 248:src/pdantler/printf.c ****         (len < PRINTF_NTOA_BUFFER_SIZE)) {
 804              		.loc 1 248 8 view .LVU171
 805 01ba 0127     		movs	r7, #1	@ _86,
 806 01bc E8E7     		b	.L41		@
 807              	.L127:
 808              	.LVL65:
 258:src/pdantler/printf.c ****     }
 809              		.loc 1 258 7 is_stmt 1 view .LVU172
 810              	@ src/pdantler/printf.c:258:       buf[len++] = '0';
 258:src/pdantler/printf.c ****     }
 811              		.loc 1 258 18 is_stmt 0 view .LVU173
 812 01be 3024     		movs	r4, #48	@ tmp228,
 813 01c0 8EF80040 		strb	r4, [lr]	@ tmp228, *buf_57(D)
 814              	.LVL66:
 262:src/pdantler/printf.c ****     if (negative) {
 815              		.loc 1 262 3 is_stmt 1 view .LVU174
 816              	@ src/pdantler/printf.c:258:       buf[len++] = '0';
 258:src/pdantler/printf.c ****     }
 817              		.loc 1 258 18 is_stmt 0 view .LVU175
 818 01c4 0124     		movs	r4, #1	@ len,
 263:src/pdantler/printf.c ****       buf[len++] = '-';
 819              		.loc 1 263 5 is_stmt 1 view .LVU176
 820              	@ src/pdantler/printf.c:263:     if (negative) {
 263:src/pdantler/printf.c ****       buf[len++] = '-';
 821              		.loc 1 263 8 is_stmt 0 view .LVU177
 822 01c6 B9F1000F 		cmp	r9, #0	@ negative
 823 01ca AED0     		beq	.L49	@
 824 01cc 8CE7     		b	.L130		@
ARM GAS  /tmp/ccFy9xbE.s 			page 22


 825              		.cfi_endproc
 826              	.LFE8:
 827              		.size	_ntoa_format, .-_ntoa_format
 828 01ce 00BF     		.section	.text._ntoa_long,"ax",%progbits
 829              		.align	1
 830              		.p2align 4,,15
 831              		.syntax unified
 832              		.thumb
 833              		.thumb_func
 834              		.fpu fpv5-sp-d16
 835              		.type	_ntoa_long, %function
 836              	_ntoa_long:
 837              	.LVL67:
 838              	.LFB9:
 274:src/pdantler/printf.c **** 
 275:src/pdantler/printf.c **** // internal itoa for 'long' type
 276:src/pdantler/printf.c **** static size_t _ntoa_long(out_fct_type out, char *buffer, size_t idx,
 277:src/pdantler/printf.c ****                          size_t maxlen, unsigned long value, bool negative,
 278:src/pdantler/printf.c ****                          unsigned long base, unsigned int prec,
 279:src/pdantler/printf.c ****                          unsigned int width, unsigned int flags) {
 839              		.loc 1 279 66 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ args = 24, pretend = 0, frame = 40
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 280:src/pdantler/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 843              		.loc 1 280 3 view .LVU179
 281:src/pdantler/printf.c ****   size_t len = 0U;
 844              		.loc 1 281 3 view .LVU180
 282:src/pdantler/printf.c **** 
 283:src/pdantler/printf.c ****   // no hash for 0 values
 284:src/pdantler/printf.c ****   if (!value) {
 845              		.loc 1 284 3 view .LVU181
 846              	@ src/pdantler/printf.c:279:                          unsigned int width, unsigned int flags) {
 279:src/pdantler/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 847              		.loc 1 279 66 is_stmt 0 view .LVU182
 848 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 849              	.LCFI8:
 850              		.cfi_def_cfa_offset 36
 851              		.cfi_offset 4, -36
 852              		.cfi_offset 5, -32
 853              		.cfi_offset 6, -28
 854              		.cfi_offset 7, -24
 855              		.cfi_offset 8, -20
 856              		.cfi_offset 9, -16
 857              		.cfi_offset 10, -12
 858              		.cfi_offset 11, -8
 859              		.cfi_offset 14, -4
 860 0004 93B0     		sub	sp, sp, #76	@,,
 861              	.LCFI9:
 862              		.cfi_def_cfa_offset 112
 863              	@ src/pdantler/printf.c:279:                          unsigned int width, unsigned int flags) {
 279:src/pdantler/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 864              		.loc 1 279 66 view .LVU183
 865 0006 9DF87450 		ldrb	r5, [sp, #116]	@ zero_extendqisi2	@ negative, negative
 866 000a 1C9C     		ldr	r4, [sp, #112]	@ value, value
 867 000c 0995     		str	r5, [sp, #36]	@ negative, %sfp
 868 000e DDF884A0 		ldr	r10, [sp, #132]	@ flags, flags
ARM GAS  /tmp/ccFy9xbE.s 			page 23


 869 0012 1E9D     		ldr	r5, [sp, #120]	@ base, base
 870              	@ src/pdantler/printf.c:284:   if (!value) {
 871              		.loc 1 284 6 view .LVU184
 872 0014 CCB9     		cbnz	r4, .L132	@ value,
 285:src/pdantler/printf.c ****     flags &= ~FLAGS_HASH;
 873              		.loc 1 285 5 is_stmt 1 view .LVU185
 874              	@ src/pdantler/printf.c:285:     flags &= ~FLAGS_HASH;
 875              		.loc 1 285 11 is_stmt 0 view .LVU186
 876 0016 2AF01006 		bic	r6, r10, #16	@ flags, flags,
 877              	.LVL68:
 286:src/pdantler/printf.c ****   }
 287:src/pdantler/printf.c **** 
 288:src/pdantler/printf.c ****   // write if precision != 0 and value is != 0
 289:src/pdantler/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 878              		.loc 1 289 3 is_stmt 1 view .LVU187
 879              	@ src/pdantler/printf.c:289:   if (!(flags & FLAGS_PRECISION) || value) {
 880              		.loc 1 289 6 is_stmt 0 view .LVU188
 881 001a 1AF4806F 		tst	r10, #1024	@ flags,
 882              	@ src/pdantler/printf.c:285:     flags &= ~FLAGS_HASH;
 285:src/pdantler/printf.c ****     flags &= ~FLAGS_HASH;
 883              		.loc 1 285 11 view .LVU189
 884 001e B246     		mov	r10, r6	@ flags, flags
 885              	@ src/pdantler/printf.c:289:   if (!(flags & FLAGS_PRECISION) || value) {
 886              		.loc 1 289 6 view .LVU190
 887 0020 13D0     		beq	.L132		@,
 888              	@ src/pdantler/printf.c:281:   size_t len = 0U;
 281:src/pdantler/printf.c **** 
 889              		.loc 1 281 10 view .LVU191
 890 0022 2646     		mov	r6, r4	@ len, value
 891              	.LVL69:
 281:src/pdantler/printf.c **** 
 892              		.loc 1 281 10 view .LVU192
 893 0024 0DF1280B 		add	fp, sp, #40	@ tmp160,,
 894              	.LVL70:
 895              	.L133:
 290:src/pdantler/printf.c ****     do {
 291:src/pdantler/printf.c ****       const char digit = (char)(value % base);
 292:src/pdantler/printf.c ****       buf[len++] = digit < 10
 293:src/pdantler/printf.c ****                        ? '0' + digit
 294:src/pdantler/printf.c ****                        : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 295:src/pdantler/printf.c ****       value /= base;
 296:src/pdantler/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 297:src/pdantler/printf.c ****   }
 298:src/pdantler/printf.c **** 
 299:src/pdantler/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative,
 896              		.loc 1 299 3 is_stmt 1 view .LVU193
 897              	@ src/pdantler/printf.c:299:   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative,
 898              		.loc 1 299 10 is_stmt 0 view .LVU194
 899 0028 209C     		ldr	r4, [sp, #128]	@ tmp180, width
 900 002a CDF818A0 		str	r10, [sp, #24]	@ flags,
 901 002e 0594     		str	r4, [sp, #20]	@ tmp180,
 902 0030 1F9C     		ldr	r4, [sp, #124]	@ tmp181, prec
 903 0032 CDF800B0 		str	fp, [sp]	@ tmp160,
 904 0036 CDE90354 		strd	r5, r4, [sp, #12]	@ base, tmp181,,
 905 003a 099C     		ldr	r4, [sp, #36]	@ negative, %sfp
 906 003c CDE90164 		strd	r6, r4, [sp, #4]	@ len, negative,,
 907 0040 FFF7FEFF 		bl	_ntoa_format		@
ARM GAS  /tmp/ccFy9xbE.s 			page 24


 908              	.LVL71:
 909              	@ src/pdantler/printf.c:301: }
 300:src/pdantler/printf.c ****                       (unsigned int)base, prec, width, flags);
 301:src/pdantler/printf.c **** }
 910              		.loc 1 301 1 view .LVU195
 911 0044 13B0     		add	sp, sp, #76	@,,
 912              	.LCFI10:
 913              		.cfi_remember_state
 914              		.cfi_def_cfa_offset 36
 915              		@ sp needed	@
 916 0046 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 917              	.LVL72:
 918              	.L132:
 919              	.LCFI11:
 920              		.cfi_restore_state
 921              		.loc 1 301 1 view .LVU196
 922 004a 1AF0200F 		tst	r10, #32	@ flags,
 923 004e 0DF1280B 		add	fp, sp, #40	@ tmp160,,
 924              	.LBB21:
 925              	@ src/pdantler/printf.c:294:                        : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit
 294:src/pdantler/printf.c ****       value /= base;
 926              		.loc 1 294 33 view .LVU197
 927 0052 4FF00006 		mov	r6, #0	@ len,
 928 0056 14BF     		ite	ne
 929 0058 4FF04109 		movne	r9, #65	@ iftmp.111_13,
 930 005c 4FF06109 		moveq	r9, #97	@ iftmp.111_13,
 931 0060 D846     		mov	r8, fp	@ ivtmp.190, tmp160
 932              	@ src/pdantler/printf.c:292:       buf[len++] = digit < 10
 292:src/pdantler/printf.c ****                        ? '0' + digit
 933              		.loc 1 292 18 view .LVU198
 934 0062 A9F10A09 		sub	r9, r9, #10	@ tmp161, iftmp.111_13,
 935              	.LVL73:
 936              	.L136:
 292:src/pdantler/printf.c ****                        ? '0' + digit
 937              		.loc 1 292 18 view .LVU199
 938              	.LBE21:
 290:src/pdantler/printf.c ****       const char digit = (char)(value % base);
 939              		.loc 1 290 5 is_stmt 1 view .LVU200
 940              	.LBB22:
 291:src/pdantler/printf.c ****       buf[len++] = digit < 10
 941              		.loc 1 291 7 view .LVU201
 942              	@ src/pdantler/printf.c:292:       buf[len++] = digit < 10
 292:src/pdantler/printf.c ****                        ? '0' + digit
 943              		.loc 1 292 14 is_stmt 0 view .LVU202
 944 0066 0136     		adds	r6, r6, #1	@ len, len,
 945              	.LVL74:
 946              	@ src/pdantler/printf.c:291:       const char digit = (char)(value % base);
 291:src/pdantler/printf.c ****       buf[len++] = digit < 10
 947              		.loc 1 291 39 view .LVU203
 948 0068 B4FBF5FE 		udiv	lr, r4, r5	@ value, value, base
 949 006c 05FB1E4C 		mls	ip, r5, lr, r4	@ _2, base, value, value
 950              	@ src/pdantler/printf.c:291:       const char digit = (char)(value % base);
 291:src/pdantler/printf.c ****       buf[len++] = digit < 10
 951              		.loc 1 291 18 view .LVU204
 952 0070 5FFA8CF7 		uxtb	r7, ip	@ digit, _2
 953              	.LVL75:
 292:src/pdantler/printf.c ****                        ? '0' + digit
ARM GAS  /tmp/ccFy9xbE.s 			page 25


 954              		.loc 1 292 7 is_stmt 1 view .LVU205
 955              	@ src/pdantler/printf.c:292:       buf[len++] = digit < 10
 292:src/pdantler/printf.c ****                        ? '0' + digit
 956              		.loc 1 292 18 is_stmt 0 view .LVU206
 957 0074 BCF1090F 		cmp	ip, #9	@ _2,
 958 0078 07EB090C 		add	ip, r7, r9	@ tmp149, digit, tmp161
 959 007c 07F13007 		add	r7, r7, #48	@ tmp146, digit,
 960              	.LVL76:
 292:src/pdantler/printf.c ****                        ? '0' + digit
 961              		.loc 1 292 18 view .LVU207
 962 0080 8CBF     		ite	hi
 963 0082 5FFA8CF7 		uxtbhi	r7, ip	@ iftmp.110_12, tmp149
 964              	.LVL77:
 292:src/pdantler/printf.c ****                        ? '0' + digit
 965              		.loc 1 292 18 view .LVU208
 966 0086 FFB2     		uxtbls	r7, r7	@ iftmp.110_12, tmp146
 967              	.LBE22:
 968              	@ src/pdantler/printf.c:296:     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 296:src/pdantler/printf.c ****   }
 969              		.loc 1 296 5 view .LVU209
 970 0088 AC42     		cmp	r4, r5	@ value, base
 971              	.LBB23:
 972              	@ src/pdantler/printf.c:295:       value /= base;
 295:src/pdantler/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 973              		.loc 1 295 13 view .LVU210
 974 008a 7446     		mov	r4, lr	@ value, value
 975              	.LVL78:
 976              	@ src/pdantler/printf.c:292:       buf[len++] = digit < 10
 292:src/pdantler/printf.c ****                        ? '0' + digit
 977              		.loc 1 292 18 view .LVU211
 978 008c 08F8017B 		strb	r7, [r8], #1	@ iftmp.110_12, MEM[base: _37, offset: 0B]
 295:src/pdantler/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 979              		.loc 1 295 7 is_stmt 1 view .LVU212
 980              	.LVL79:
 295:src/pdantler/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 981              		.loc 1 295 7 is_stmt 0 view .LVU213
 982              	.LBE23:
 296:src/pdantler/printf.c ****   }
 983              		.loc 1 296 13 is_stmt 1 view .LVU214
 984              	@ src/pdantler/printf.c:296:     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 296:src/pdantler/printf.c ****   }
 985              		.loc 1 296 5 is_stmt 0 view .LVU215
 986 0090 CAD3     		bcc	.L133		@,
 987              	@ src/pdantler/printf.c:296:     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 296:src/pdantler/printf.c ****   }
 988              		.loc 1 296 5 discriminator 3 view .LVU216
 989 0092 1F2E     		cmp	r6, #31	@ len,
 990 0094 E7D9     		bls	.L136		@,
 991 0096 C7E7     		b	.L133		@
 992              		.cfi_endproc
 993              	.LFE9:
 994              		.size	_ntoa_long, .-_ntoa_long
 995              		.global	__aeabi_uldivmod
 996              		.section	.text._ntoa_long_long,"ax",%progbits
 997              		.align	1
 998              		.p2align 4,,15
 999              		.syntax unified
ARM GAS  /tmp/ccFy9xbE.s 			page 26


 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu fpv5-sp-d16
 1003              		.type	_ntoa_long_long, %function
 1004              	_ntoa_long_long:
 1005              	.LVL80:
 1006              	.LFB10:
 302:src/pdantler/printf.c **** 
 303:src/pdantler/printf.c **** // internal itoa for 'long long' type
 304:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 305:src/pdantler/printf.c **** static size_t _ntoa_long_long(out_fct_type out, char *buffer, size_t idx,
 306:src/pdantler/printf.c ****                               size_t maxlen, unsigned long long value,
 307:src/pdantler/printf.c ****                               bool negative, unsigned long long base,
 308:src/pdantler/printf.c ****                               unsigned int prec, unsigned int width,
 309:src/pdantler/printf.c ****                               unsigned int flags) {
 1007              		.loc 1 309 51 is_stmt 1 view -0
 1008              		.cfi_startproc
 1009              		@ args = 36, pretend = 0, frame = 40
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 310:src/pdantler/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 1011              		.loc 1 310 3 view .LVU218
 311:src/pdantler/printf.c ****   size_t len = 0U;
 1012              		.loc 1 311 3 view .LVU219
 312:src/pdantler/printf.c **** 
 313:src/pdantler/printf.c ****   // no hash for 0 values
 314:src/pdantler/printf.c ****   if (!value) {
 1013              		.loc 1 314 3 view .LVU220
 1014              	@ src/pdantler/printf.c:309:                               unsigned int flags) {
 309:src/pdantler/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 1015              		.loc 1 309 51 is_stmt 0 view .LVU221
 1016 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 1017              	.LCFI12:
 1018              		.cfi_def_cfa_offset 36
 1019              		.cfi_offset 4, -36
 1020              		.cfi_offset 5, -32
 1021              		.cfi_offset 6, -28
 1022              		.cfi_offset 7, -24
 1023              		.cfi_offset 8, -20
 1024              		.cfi_offset 9, -16
 1025              		.cfi_offset 10, -12
 1026              		.cfi_offset 11, -8
 1027              		.cfi_offset 14, -4
 1028 0004 2DED048B 		vpush.64	{d8, d9}	@
 1029              	.LCFI13:
 1030              		.cfi_def_cfa_offset 52
 1031              		.cfi_offset 80, -52
 1032              		.cfi_offset 81, -48
 1033              		.cfi_offset 82, -44
 1034              		.cfi_offset 83, -40
 1035 0008 93B0     		sub	sp, sp, #76	@,,
 1036              	.LCFI14:
 1037              		.cfi_def_cfa_offset 128
 1038              	@ src/pdantler/printf.c:309:                               unsigned int flags) {
 309:src/pdantler/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 1039              		.loc 1 309 51 view .LVU222
 1040 000a 9B46     		mov	fp, r3	@ maxlen, tmp172
 1041 000c 08EE100A 		vmov	s16, r0	@ int	@ out, tmp169
ARM GAS  /tmp/ccFy9xbE.s 			page 27


 1042 0010 08EE901A 		vmov	s17, r1	@ int	@ buffer, tmp170
 1043 0014 9DF88830 		ldrb	r3, [sp, #136]	@ zero_extendqisi2	@ negative, negative
 1044              	.LVL81:
 309:src/pdantler/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 1045              		.loc 1 309 51 view .LVU223
 1046 0018 09EE102A 		vmov	s18, r2	@ int	@ idx, tmp171
 1047 001c 209C     		ldr	r4, [sp, #128]	@ value, value
 1048 001e 219D     		ldr	r5, [sp, #132]	@ value, value
 1049 0020 0893     		str	r3, [sp, #32]	@ negative, %sfp
 1050              	@ src/pdantler/printf.c:314:   if (!value) {
 1051              		.loc 1 314 6 view .LVU224
 1052 0022 54EA0503 		orrs	r3, r4, r5	@ tmp188, value, value
 1053              	@ src/pdantler/printf.c:309:                               unsigned int flags) {
 309:src/pdantler/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 1054              		.loc 1 309 51 view .LVU225
 1055 0026 DDE92478 		ldrd	r7, r8, [sp, #144]	@ base, base,,
 1056              	@ src/pdantler/printf.c:314:   if (!value) {
 1057              		.loc 1 314 6 view .LVU226
 1058 002a 23D1     		bne	.L146		@,
 315:src/pdantler/printf.c ****     flags &= ~FLAGS_HASH;
 1059              		.loc 1 315 5 is_stmt 1 view .LVU227
 1060              	@ src/pdantler/printf.c:315:     flags &= ~FLAGS_HASH;
 1061              		.loc 1 315 11 is_stmt 0 view .LVU228
 1062 002c 289B     		ldr	r3, [sp, #160]	@ tmp192, flags
 1063              	@ src/pdantler/printf.c:319:   if (!(flags & FLAGS_PRECISION) || value) {
 316:src/pdantler/printf.c ****   }
 317:src/pdantler/printf.c **** 
 318:src/pdantler/printf.c ****   // write if precision != 0 and value is != 0
 319:src/pdantler/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 1064              		.loc 1 319 6 view .LVU229
 1065 002e 289A     		ldr	r2, [sp, #160]	@ tmp193, flags
 1066              	.LVL82:
 1067              	@ src/pdantler/printf.c:315:     flags &= ~FLAGS_HASH;
 315:src/pdantler/printf.c ****     flags &= ~FLAGS_HASH;
 1068              		.loc 1 315 11 view .LVU230
 1069 0030 23F01003 		bic	r3, r3, #16	@ flags, tmp192,
 1070              	.LVL83:
 1071              		.loc 1 319 3 is_stmt 1 view .LVU231
 1072              	@ src/pdantler/printf.c:315:     flags &= ~FLAGS_HASH;
 315:src/pdantler/printf.c ****     flags &= ~FLAGS_HASH;
 1073              		.loc 1 315 11 is_stmt 0 view .LVU232
 1074 0034 2893     		str	r3, [sp, #160]	@ flags, flags
 1075              	@ src/pdantler/printf.c:319:   if (!(flags & FLAGS_PRECISION) || value) {
 1076              		.loc 1 319 6 view .LVU233
 1077 0036 5305     		lsls	r3, r2, #21	@, tmp193,
 1078              	.LVL84:
 1079              		.loc 1 319 6 view .LVU234
 1080 0038 1CD5     		bpl	.L146		@,
 1081 003a 0AAB     		add	r3, sp, #40	@ tmp167,,
 1082              	@ src/pdantler/printf.c:311:   size_t len = 0U;
 311:src/pdantler/printf.c **** 
 1083              		.loc 1 311 10 view .LVU235
 1084 003c 0026     		movs	r6, #0	@ len,
 1085 003e 0993     		str	r3, [sp, #36]	@ tmp167, %sfp
 1086              	.LVL85:
 1087              	.L147:
 320:src/pdantler/printf.c ****     do {
ARM GAS  /tmp/ccFy9xbE.s 			page 28


 321:src/pdantler/printf.c ****       const char digit = (char)(value % base);
 322:src/pdantler/printf.c ****       buf[len++] = digit < 10
 323:src/pdantler/printf.c ****                        ? '0' + digit
 324:src/pdantler/printf.c ****                        : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 325:src/pdantler/printf.c ****       value /= base;
 326:src/pdantler/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 327:src/pdantler/printf.c ****   }
 328:src/pdantler/printf.c **** 
 329:src/pdantler/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative,
 1088              		.loc 1 329 3 is_stmt 1 view .LVU236
 1089              	@ src/pdantler/printf.c:329:   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative,
 1090              		.loc 1 329 10 is_stmt 0 view .LVU237
 1091 0040 289B     		ldr	r3, [sp, #160]	@ tmp199, flags
 1092 0042 19EE102A 		vmov	r2, s18	@ int	@, idx
 1093 0046 099C     		ldr	r4, [sp, #36]	@ tmp167, %sfp
 1094 0048 18EE901A 		vmov	r1, s17	@ int	@, buffer
 1095 004c 0693     		str	r3, [sp, #24]	@ tmp199,
 1096 004e 18EE100A 		vmov	r0, s16	@ int	@, out
 1097 0052 279B     		ldr	r3, [sp, #156]	@ tmp200, width
 1098 0054 0094     		str	r4, [sp]	@ tmp167,
 1099 0056 0593     		str	r3, [sp, #20]	@ tmp200,
 1100 0058 269B     		ldr	r3, [sp, #152]	@ tmp201, prec
 1101 005a CDE90373 		strd	r7, r3, [sp, #12]	@ base, tmp201,,
 1102 005e 089B     		ldr	r3, [sp, #32]	@ negative, %sfp
 1103 0060 CDE90163 		strd	r6, r3, [sp, #4]	@ len, negative,,
 1104 0064 5B46     		mov	r3, fp	@, maxlen
 1105 0066 FFF7FEFF 		bl	_ntoa_format		@
 1106              	.LVL86:
 1107              	@ src/pdantler/printf.c:331: }
 330:src/pdantler/printf.c ****                       (unsigned int)base, prec, width, flags);
 331:src/pdantler/printf.c **** }
 1108              		.loc 1 331 1 view .LVU238
 1109 006a 13B0     		add	sp, sp, #76	@,,
 1110              	.LCFI15:
 1111              		.cfi_remember_state
 1112              		.cfi_def_cfa_offset 52
 1113              		@ sp needed	@
 1114 006c BDEC048B 		vldm	sp!, {d8-d9}	@,
 1115              	.LCFI16:
 1116              		.cfi_restore 82
 1117              		.cfi_restore 83
 1118              		.cfi_restore 80
 1119              		.cfi_restore 81
 1120              		.cfi_def_cfa_offset 36
 1121              	.LVL87:
 1122              		.loc 1 331 1 view .LVU239
 1123 0070 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 1124              	.LVL88:
 1125              	.L146:
 1126              	.LCFI17:
 1127              		.cfi_restore_state
 1128              		.loc 1 331 1 view .LVU240
 1129 0074 289B     		ldr	r3, [sp, #160]	@ tmp194, flags
 1130              	.LBB24:
 1131              	@ src/pdantler/printf.c:324:                        : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit
 324:src/pdantler/printf.c ****       value /= base;
 1132              		.loc 1 324 33 view .LVU241
ARM GAS  /tmp/ccFy9xbE.s 			page 29


 1133 0076 0026     		movs	r6, #0	@ len,
 1134 0078 13F0200F 		tst	r3, #32	@ tmp194,
 1135 007c 0AAB     		add	r3, sp, #40	@ tmp167,,
 1136 007e 14BF     		ite	ne
 1137 0080 4FF0410A 		movne	r10, #65	@ iftmp.75_14,
 1138 0084 4FF0610A 		moveq	r10, #97	@ iftmp.75_14,
 1139 0088 9946     		mov	r9, r3	@ ivtmp.198, tmp167
 1140 008a 0993     		str	r3, [sp, #36]	@ tmp167, %sfp
 1141              	@ src/pdantler/printf.c:322:       buf[len++] = digit < 10
 322:src/pdantler/printf.c ****                        ? '0' + digit
 1142              		.loc 1 322 18 view .LVU242
 1143 008c AAF10A0A 		sub	r10, r10, #10	@ tmp168, iftmp.75_14,
 1144              	.LVL89:
 1145              	.L150:
 322:src/pdantler/printf.c ****                        ? '0' + digit
 1146              		.loc 1 322 18 view .LVU243
 1147              	.LBE24:
 320:src/pdantler/printf.c ****       const char digit = (char)(value % base);
 1148              		.loc 1 320 5 is_stmt 1 view .LVU244
 1149              	.LBB25:
 321:src/pdantler/printf.c ****       buf[len++] = digit < 10
 1150              		.loc 1 321 7 view .LVU245
 1151 0090 2046     		mov	r0, r4	@, value
 1152 0092 2946     		mov	r1, r5	@, value
 1153 0094 3A46     		mov	r2, r7	@, base
 1154 0096 4346     		mov	r3, r8	@, base
 1155 0098 FFF7FEFF 		bl	__aeabi_uldivmod		@
 1156              	.LVL90:
 1157              	@ src/pdantler/printf.c:322:       buf[len++] = digit < 10
 322:src/pdantler/printf.c ****                        ? '0' + digit
 1158              		.loc 1 322 14 is_stmt 0 view .LVU246
 1159 009c 0136     		adds	r6, r6, #1	@ len, len,
 1160              	.LVL91:
 1161              	@ src/pdantler/printf.c:321:       const char digit = (char)(value % base);
 321:src/pdantler/printf.c ****       buf[len++] = digit < 10
 1162              		.loc 1 321 18 view .LVU247
 1163 009e D2B2     		uxtb	r2, r2	@ digit, tmp174
 1164              	.LVL92:
 322:src/pdantler/printf.c ****                        ? '0' + digit
 1165              		.loc 1 322 7 is_stmt 1 view .LVU248
 1166              	@ src/pdantler/printf.c:322:       buf[len++] = digit < 10
 322:src/pdantler/printf.c ****                        ? '0' + digit
 1167              		.loc 1 322 18 is_stmt 0 view .LVU249
 1168 00a0 092A     		cmp	r2, #9	@ digit,
 1169 00a2 02EB0A03 		add	r3, r2, r10	@ tmp150, digit, tmp168
 1170 00a6 02F13002 		add	r2, r2, #48	@ tmp147, digit,
 1171              	.LVL93:
 322:src/pdantler/printf.c ****                        ? '0' + digit
 1172              		.loc 1 322 18 view .LVU250
 1173 00aa DBB2     		uxtb	r3, r3	@ iftmp.74_13, tmp150
 1174 00ac 98BF     		it	ls
 1175 00ae D3B2     		uxtbls	r3, r2	@ iftmp.74_13, tmp147
 1176              	.LBE25:
 1177              	@ src/pdantler/printf.c:326:     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 326:src/pdantler/printf.c ****   }
 1178              		.loc 1 326 14 view .LVU251
 1179 00b0 BC42     		cmp	r4, r7	@ value, base
ARM GAS  /tmp/ccFy9xbE.s 			page 30


 1180              	.LBB26:
 1181              	@ src/pdantler/printf.c:325:       value /= base;
 325:src/pdantler/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 1182              		.loc 1 325 13 view .LVU252
 1183 00b2 0446     		mov	r4, r0	@ value, divmod_tmp_43
 1184              	.LVL94:
 1185              	@ src/pdantler/printf.c:322:       buf[len++] = digit < 10
 322:src/pdantler/printf.c ****                        ? '0' + digit
 1186              		.loc 1 322 18 view .LVU253
 1187 00b4 09F8013B 		strb	r3, [r9], #1	@ iftmp.74_13, MEM[base: _38, offset: 0B]
 325:src/pdantler/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 1188              		.loc 1 325 7 is_stmt 1 view .LVU254
 1189              	.LVL95:
 325:src/pdantler/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 1190              		.loc 1 325 7 is_stmt 0 view .LVU255
 1191              	.LBE26:
 326:src/pdantler/printf.c ****   }
 1192              		.loc 1 326 13 is_stmt 1 view .LVU256
 1193              	@ src/pdantler/printf.c:326:     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 326:src/pdantler/printf.c ****   }
 1194              		.loc 1 326 5 is_stmt 0 view .LVU257
 1195 00b8 75EB0803 		sbcs	r3, r5, r8	@ tmp189, value, base
 1196              	.LBB27:
 1197              	@ src/pdantler/printf.c:325:       value /= base;
 325:src/pdantler/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 1198              		.loc 1 325 13 view .LVU258
 1199 00bc 0D46     		mov	r5, r1	@ value, divmod_tmp_43
 1200              	.LBE27:
 1201              	@ src/pdantler/printf.c:326:     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 326:src/pdantler/printf.c ****   }
 1202              		.loc 1 326 5 view .LVU259
 1203 00be BFD3     		bcc	.L147		@,
 1204              	@ src/pdantler/printf.c:326:     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 326:src/pdantler/printf.c ****   }
 1205              		.loc 1 326 5 discriminator 3 view .LVU260
 1206 00c0 1F2E     		cmp	r6, #31	@ len,
 1207 00c2 E5D9     		bls	.L150		@,
 1208 00c4 BCE7     		b	.L147		@
 1209              		.cfi_endproc
 1210              	.LFE10:
 1211              		.size	_ntoa_long_long, .-_ntoa_long_long
 1212              		.global	__aeabi_dcmpeq
 1213              		.global	__aeabi_dcmpgt
 1214              		.global	__aeabi_dcmplt
 1215              		.global	__aeabi_i2d
 1216              		.global	__aeabi_dmul
 1217              		.global	__aeabi_dadd
 1218              		.global	__aeabi_dsub
 1219              		.global	__aeabi_d2iz
 1220              		.global	__aeabi_ddiv
 1221              		.global	__aeabi_dcmpge
 1222 00c6 00BF     		.section	.text._etoa,"ax",%progbits
 1223              		.align	1
 1224              		.p2align 4,,15
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
ARM GAS  /tmp/ccFy9xbE.s 			page 31


 1228              		.fpu fpv5-sp-d16
 1229              		.type	_etoa, %function
 1230              	_etoa:
 1231              	.LVL96:
 1232              	.LFB12:
 332:src/pdantler/printf.c **** #endif // PRINTF_SUPPORT_LONG_LONG
 333:src/pdantler/printf.c **** 
 334:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 335:src/pdantler/printf.c **** 
 336:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 337:src/pdantler/printf.c **** // forward declaration so that _ftoa can switch to exp notation for values >
 338:src/pdantler/printf.c **** // PRINTF_MAX_FLOAT
 339:src/pdantler/printf.c **** static size_t _etoa(out_fct_type out, char *buffer, size_t idx, size_t maxlen,
 340:src/pdantler/printf.c ****                     double value, unsigned int prec, unsigned int width,
 341:src/pdantler/printf.c ****                     unsigned int flags);
 342:src/pdantler/printf.c **** #endif
 343:src/pdantler/printf.c **** 
 344:src/pdantler/printf.c **** // internal ftoa for fixed decimal floating point
 345:src/pdantler/printf.c **** static size_t _ftoa(out_fct_type out, char *buffer, size_t idx, size_t maxlen,
 346:src/pdantler/printf.c ****                     double value, unsigned int prec, unsigned int width,
 347:src/pdantler/printf.c ****                     unsigned int flags) {
 348:src/pdantler/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 349:src/pdantler/printf.c ****   size_t len = 0U;
 350:src/pdantler/printf.c ****   double diff = 0.0;
 351:src/pdantler/printf.c **** 
 352:src/pdantler/printf.c ****   // powers of 10
 353:src/pdantler/printf.c ****   static const double pow10[] = {1,         10,        100,     1000,
 354:src/pdantler/printf.c ****                                  10000,     100000,    1000000, 10000000,
 355:src/pdantler/printf.c ****                                  100000000, 1000000000};
 356:src/pdantler/printf.c **** 
 357:src/pdantler/printf.c ****   // test for special values
 358:src/pdantler/printf.c ****   if (value != value)
 359:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 360:src/pdantler/printf.c ****   if (value < -DBL_MAX)
 361:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 362:src/pdantler/printf.c ****   if (value > DBL_MAX)
 363:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen,
 364:src/pdantler/printf.c ****                     (flags & FLAGS_PLUS) ? "fni+" : "fni",
 365:src/pdantler/printf.c ****                     (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
 366:src/pdantler/printf.c **** 
 367:src/pdantler/printf.c ****   // test for very large values
 368:src/pdantler/printf.c ****   // standard printf behavior is to print EVERY whole number digit -- which
 369:src/pdantler/printf.c ****   // could be 100s of characters overflowing your buffers == bad
 370:src/pdantler/printf.c ****   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 371:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 372:src/pdantler/printf.c ****     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 373:src/pdantler/printf.c **** #else
 374:src/pdantler/printf.c ****     return 0U;
 375:src/pdantler/printf.c **** #endif
 376:src/pdantler/printf.c ****   }
 377:src/pdantler/printf.c **** 
 378:src/pdantler/printf.c ****   // test for negative
 379:src/pdantler/printf.c ****   bool negative = false;
 380:src/pdantler/printf.c ****   if (value < 0) {
 381:src/pdantler/printf.c ****     negative = true;
 382:src/pdantler/printf.c ****     value = 0 - value;
 383:src/pdantler/printf.c ****   }
ARM GAS  /tmp/ccFy9xbE.s 			page 32


 384:src/pdantler/printf.c **** 
 385:src/pdantler/printf.c ****   // set default precision, if not set explicitly
 386:src/pdantler/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 387:src/pdantler/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 388:src/pdantler/printf.c ****   }
 389:src/pdantler/printf.c ****   // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 390:src/pdantler/printf.c ****   while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 391:src/pdantler/printf.c ****     buf[len++] = '0';
 392:src/pdantler/printf.c ****     prec--;
 393:src/pdantler/printf.c ****   }
 394:src/pdantler/printf.c **** 
 395:src/pdantler/printf.c ****   int whole = (int)value;
 396:src/pdantler/printf.c ****   double tmp = (value - whole) * pow10[prec];
 397:src/pdantler/printf.c ****   unsigned long frac = (unsigned long)tmp;
 398:src/pdantler/printf.c ****   diff = tmp - frac;
 399:src/pdantler/printf.c **** 
 400:src/pdantler/printf.c ****   if (diff > 0.5) {
 401:src/pdantler/printf.c ****     ++frac;
 402:src/pdantler/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 403:src/pdantler/printf.c ****     if (frac >= pow10[prec]) {
 404:src/pdantler/printf.c ****       frac = 0;
 405:src/pdantler/printf.c ****       ++whole;
 406:src/pdantler/printf.c ****     }
 407:src/pdantler/printf.c ****   } else if (diff < 0.5) {
 408:src/pdantler/printf.c ****   } else if ((frac == 0U) || (frac & 1U)) {
 409:src/pdantler/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 410:src/pdantler/printf.c ****     ++frac;
 411:src/pdantler/printf.c ****   }
 412:src/pdantler/printf.c **** 
 413:src/pdantler/printf.c ****   if (prec == 0U) {
 414:src/pdantler/printf.c ****     diff = value - (double)whole;
 415:src/pdantler/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 416:src/pdantler/printf.c ****       // exactly 0.5 and ODD, then round up
 417:src/pdantler/printf.c ****       // 1.5 -> 2, but 2.5 -> 2
 418:src/pdantler/printf.c ****       ++whole;
 419:src/pdantler/printf.c ****     }
 420:src/pdantler/printf.c ****   } else {
 421:src/pdantler/printf.c ****     unsigned int count = prec;
 422:src/pdantler/printf.c ****     // now do fractional part, as an unsigned number
 423:src/pdantler/printf.c ****     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 424:src/pdantler/printf.c ****       --count;
 425:src/pdantler/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 426:src/pdantler/printf.c ****       if (!(frac /= 10U)) {
 427:src/pdantler/printf.c ****         break;
 428:src/pdantler/printf.c ****       }
 429:src/pdantler/printf.c ****     }
 430:src/pdantler/printf.c ****     // add extra 0s
 431:src/pdantler/printf.c ****     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 432:src/pdantler/printf.c ****       buf[len++] = '0';
 433:src/pdantler/printf.c ****     }
 434:src/pdantler/printf.c ****     if (len < PRINTF_FTOA_BUFFER_SIZE) {
 435:src/pdantler/printf.c ****       // add decimal
 436:src/pdantler/printf.c ****       buf[len++] = '.';
 437:src/pdantler/printf.c ****     }
 438:src/pdantler/printf.c ****   }
 439:src/pdantler/printf.c **** 
 440:src/pdantler/printf.c ****   // do whole part, number is reversed
ARM GAS  /tmp/ccFy9xbE.s 			page 33


 441:src/pdantler/printf.c ****   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 442:src/pdantler/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 443:src/pdantler/printf.c ****     if (!(whole /= 10)) {
 444:src/pdantler/printf.c ****       break;
 445:src/pdantler/printf.c ****     }
 446:src/pdantler/printf.c ****   }
 447:src/pdantler/printf.c **** 
 448:src/pdantler/printf.c ****   // pad leading zeros
 449:src/pdantler/printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 450:src/pdantler/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 451:src/pdantler/printf.c ****       width--;
 452:src/pdantler/printf.c ****     }
 453:src/pdantler/printf.c ****     while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 454:src/pdantler/printf.c ****       buf[len++] = '0';
 455:src/pdantler/printf.c ****     }
 456:src/pdantler/printf.c ****   }
 457:src/pdantler/printf.c **** 
 458:src/pdantler/printf.c ****   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 459:src/pdantler/printf.c ****     if (negative) {
 460:src/pdantler/printf.c ****       buf[len++] = '-';
 461:src/pdantler/printf.c ****     } else if (flags & FLAGS_PLUS) {
 462:src/pdantler/printf.c ****       buf[len++] = '+'; // ignore the space if the '+' exists
 463:src/pdantler/printf.c ****     } else if (flags & FLAGS_SPACE) {
 464:src/pdantler/printf.c ****       buf[len++] = ' ';
 465:src/pdantler/printf.c ****     }
 466:src/pdantler/printf.c ****   }
 467:src/pdantler/printf.c **** 
 468:src/pdantler/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 469:src/pdantler/printf.c **** }
 470:src/pdantler/printf.c **** 
 471:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 472:src/pdantler/printf.c **** // internal ftoa variant for exponential floating-point type, contributed by
 473:src/pdantler/printf.c **** // Martijn Jasperse <m.jasperse@gmail.com>
 474:src/pdantler/printf.c **** static size_t _etoa(out_fct_type out, char *buffer, size_t idx, size_t maxlen,
 475:src/pdantler/printf.c ****                     double value, unsigned int prec, unsigned int width,
 476:src/pdantler/printf.c ****                     unsigned int flags) {
 1233              		.loc 1 476 41 is_stmt 1 view -0
 1234              		.cfi_startproc
 1235              		@ args = 20, pretend = 0, frame = 48
 1236              		@ frame_needed = 0, uses_anonymous_args = 0
 477:src/pdantler/printf.c ****   // check for NaN and special values
 478:src/pdantler/printf.c ****   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 1237              		.loc 1 478 3 view .LVU262
 1238              	@ src/pdantler/printf.c:476:                     unsigned int flags) {
 476:src/pdantler/printf.c ****   // check for NaN and special values
 1239              		.loc 1 476 41 is_stmt 0 view .LVU263
 1240 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 1241              	.LCFI18:
 1242              		.cfi_def_cfa_offset 36
 1243              		.cfi_offset 4, -36
 1244              		.cfi_offset 5, -32
 1245              		.cfi_offset 6, -28
 1246              		.cfi_offset 7, -24
 1247              		.cfi_offset 8, -20
 1248              		.cfi_offset 9, -16
 1249              		.cfi_offset 10, -12
 1250              		.cfi_offset 11, -8
ARM GAS  /tmp/ccFy9xbE.s 			page 34


 1251              		.cfi_offset 14, -4
 1252 0004 2DED048B 		vpush.64	{d8, d9}	@
 1253              	.LCFI19:
 1254              		.cfi_def_cfa_offset 52
 1255              		.cfi_offset 80, -52
 1256              		.cfi_offset 81, -48
 1257              		.cfi_offset 82, -44
 1258              		.cfi_offset 83, -40
 1259 0008 93B0     		sub	sp, sp, #76	@,,
 1260              	.LCFI20:
 1261              		.cfi_def_cfa_offset 128
 1262              	@ src/pdantler/printf.c:476:                     unsigned int flags) {
 476:src/pdantler/printf.c ****   // check for NaN and special values
 1263              		.loc 1 476 41 view .LVU264
 1264 000a 1D46     		mov	r5, r3	@ maxlen, tmp285
 1265 000c 0746     		mov	r7, r0	@ out, tmp282
 1266 000e 0C46     		mov	r4, r1	@ buffer, tmp283
 1267 0010 229B     		ldr	r3, [sp, #136]	@ prec, prec
 1268              	.LVL97:
 476:src/pdantler/printf.c ****   // check for NaN and special values
 1269              		.loc 1 476 41 view .LVU265
 1270 0012 0C92     		str	r2, [sp, #48]	@ tmp284, %sfp
 1271 0014 0A93     		str	r3, [sp, #40]	@ prec, %sfp
 1272 0016 239B     		ldr	r3, [sp, #140]	@ width, width
 1273 0018 DDE920AB 		ldrd	r10, [sp, #128]	@ value,,
 1274 001c 0B93     		str	r3, [sp, #44]	@ width, %sfp
 1275 001e 249B     		ldr	r3, [sp, #144]	@ flags, flags
 1276              	@ src/pdantler/printf.c:478:   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 1277              		.loc 1 478 6 view .LVU266
 1278 0020 5246     		mov	r2, r10	@, value
 1279              	.LVL98:
 1280              		.loc 1 478 6 view .LVU267
 1281 0022 5046     		mov	r0, r10	@, value
 1282              	.LVL99:
 1283              		.loc 1 478 6 view .LVU268
 1284 0024 5946     		mov	r1, fp	@, value
 1285              	.LVL100:
 1286              	@ src/pdantler/printf.c:476:                     unsigned int flags) {
 476:src/pdantler/printf.c ****   // check for NaN and special values
 1287              		.loc 1 476 41 view .LVU269
 1288 0026 0793     		str	r3, [sp, #28]	@ flags, %sfp
 1289              	@ src/pdantler/printf.c:478:   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 1290              		.loc 1 478 6 view .LVU270
 1291 0028 5B46     		mov	r3, fp	@, value
 1292 002a FFF7FEFF 		bl	__aeabi_dcmpeq		@
 1293              	.LVL101:
 1294 002e 0028     		cmp	r0, #0	@ tmp286
 1295 0030 00F01B81 		beq	.L160	@
 1296              	@ src/pdantler/printf.c:478:   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 1297              		.loc 1 478 24 discriminator 1 view .LVU271
 1298 0034 4FF0FF32 		mov	r2, #-1	@,
 1299 0038 AB4B     		ldr	r3, .L224+64	@,
 1300 003a 5046     		mov	r0, r10	@, value
 1301 003c 5946     		mov	r1, fp	@, value
 1302 003e FFF7FEFF 		bl	__aeabi_dcmpgt		@
 1303              	.LVL102:
 1304 0042 0028     		cmp	r0, #0	@ tmp287
ARM GAS  /tmp/ccFy9xbE.s 			page 35


 1305 0044 40F01181 		bne	.L160	@
 1306              	@ src/pdantler/printf.c:478:   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 1307              		.loc 1 478 45 discriminator 2 view .LVU272
 1308 0048 4FF0FF32 		mov	r2, #-1	@,
 1309 004c 6FF48013 		mvn	r3, #1048576	@,
 1310 0050 5046     		mov	r0, r10	@, value
 1311 0052 5946     		mov	r1, fp	@, value
 1312 0054 FFF7FEFF 		bl	__aeabi_dcmplt		@
 1313              	.LVL103:
 1314 0058 0028     		cmp	r0, #0	@ tmp288
 1315 005a 40F00681 		bne	.L160	@
 479:src/pdantler/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 480:src/pdantler/printf.c ****   }
 481:src/pdantler/printf.c **** 
 482:src/pdantler/printf.c ****   // determine the sign
 483:src/pdantler/printf.c ****   const bool negative = value < 0;
 1316              		.loc 1 483 3 is_stmt 1 view .LVU273
 1317              	.LVL104:
 484:src/pdantler/printf.c ****   if (negative) {
 1318              		.loc 1 484 3 view .LVU274
 1319              	@ src/pdantler/printf.c:484:   if (negative) {
 1320              		.loc 1 484 6 is_stmt 0 view .LVU275
 1321 005e 0022     		movs	r2, #0	@,
 1322 0060 0023     		movs	r3, #0	@,
 1323 0062 5046     		mov	r0, r10	@, value
 1324 0064 5946     		mov	r1, fp	@, value
 1325 0066 FFF7FEFF 		bl	__aeabi_dcmplt		@
 1326              	.LVL105:
 1327 006a 0028     		cmp	r0, #0	@ tmp289
 1328 006c 40F0D681 		bne	.L220	@
 1329 0070 CDE908AB 		strd	r10, [sp, #32]	@ value,,
 1330              	.LVL106:
 1331              	.L163:
 485:src/pdantler/printf.c ****     value = -value;
 486:src/pdantler/printf.c ****   }
 487:src/pdantler/printf.c **** 
 488:src/pdantler/printf.c ****   // default precision
 489:src/pdantler/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 1332              		.loc 1 489 3 is_stmt 1 view .LVU276
 1333              	@ src/pdantler/printf.c:490:     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 490:src/pdantler/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1334              		.loc 1 490 10 is_stmt 0 view .LVU277
 1335 0074 079B     		ldr	r3, [sp, #28]	@ flags, %sfp
 1336              	@ src/pdantler/printf.c:500:   conv.F = value;
 491:src/pdantler/printf.c ****   }
 492:src/pdantler/printf.c **** 
 493:src/pdantler/printf.c ****   // determine the decimal exponent
 494:src/pdantler/printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 495:src/pdantler/printf.c ****   union {
 496:src/pdantler/printf.c ****     uint64_t U;
 497:src/pdantler/printf.c ****     double F;
 498:src/pdantler/printf.c ****   } conv;
 499:src/pdantler/printf.c **** 
 500:src/pdantler/printf.c ****   conv.F = value;
 1337              		.loc 1 500 10 view .LVU278
 1338 0076 DDE90812 		ldrd	r1, [sp, #32]	@ value,,
 1339              	@ src/pdantler/printf.c:490:     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
ARM GAS  /tmp/ccFy9xbE.s 			page 36


 490:src/pdantler/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1340              		.loc 1 490 10 view .LVU279
 1341 007a 13F48063 		ands	r3, r3, #1024	@ _1, flags,
 1342              	@ src/pdantler/printf.c:501:   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023; // effectively l
 501:src/pdantler/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023; // effectively log2
 1343              		.loc 1 501 14 view .LVU280
 1344 007e C2F30A50 		ubfx	r0, r2, #20, #11	@ tmp201, _83,,
 1345              	@ src/pdantler/printf.c:500:   conv.F = value;
 500:src/pdantler/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023; // effectively log2
 1346              		.loc 1 500 10 view .LVU281
 1347 0082 9146     		mov	r9, r2	@ _83, value
 1348              	@ src/pdantler/printf.c:490:     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 490:src/pdantler/printf.c ****   }
 1349              		.loc 1 490 10 view .LVU282
 1350 0084 1193     		str	r3, [sp, #68]	@ _1, %sfp
 1351              	@ src/pdantler/printf.c:500:   conv.F = value;
 500:src/pdantler/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023; // effectively log2
 1352              		.loc 1 500 10 view .LVU283
 1353 0086 0E46     		mov	r6, r1	@ _83, value
 1354              	@ src/pdantler/printf.c:490:     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 490:src/pdantler/printf.c ****   }
 1355              		.loc 1 490 10 view .LVU284
 1356 0088 0A9B     		ldr	r3, [sp, #40]	@ prec, %sfp
 1357 008a 08BF     		it	eq
 1358 008c 0623     		moveq	r3, #6	@ prec,
 1359              	@ src/pdantler/printf.c:506:   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 +
 502:src/pdantler/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) |
 503:src/pdantler/printf.c ****            (1023ULL << 52U); // drop the exponent so conv.F is now in [1,2)
 504:src/pdantler/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln
 505:src/pdantler/printf.c ****   // around 1.5
 506:src/pdantler/printf.c ****   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 +
 1360              		.loc 1 506 45 view .LVU285
 1361 008e A0F2FF30 		subw	r0, r0, #1023	@, tmp201,
 1362              	@ src/pdantler/printf.c:490:     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 490:src/pdantler/printf.c ****   }
 1363              		.loc 1 490 10 view .LVU286
 1364 0092 0A93     		str	r3, [sp, #40]	@ prec, %sfp
 1365              	.LVL107:
 495:src/pdantler/printf.c ****     uint64_t U;
 1366              		.loc 1 495 3 is_stmt 1 view .LVU287
 500:src/pdantler/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023; // effectively log2
 1367              		.loc 1 500 3 view .LVU288
 501:src/pdantler/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) |
 1368              		.loc 1 501 3 view .LVU289
 502:src/pdantler/printf.c ****            (1023ULL << 52U); // drop the exponent so conv.F is now in [1,2)
 1369              		.loc 1 502 3 view .LVU290
 1370              		.loc 1 506 3 view .LVU291
 1371              	@ src/pdantler/printf.c:506:   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 +
 1372              		.loc 1 506 45 is_stmt 0 view .LVU292
 1373 0094 FFF7FEFF 		bl	__aeabi_i2d		@
 1374              	.LVL108:
 1375              		.loc 1 506 45 view .LVU293
 1376 0098 83A3     		adr	r3, .L224	@,
 1377 009a D3E90023 		ldrd	r2, [r3]	@,
 1378 009e FFF7FEFF 		bl	__aeabi_dmul		@
 1379              	.LVL109:
 1380              	@ src/pdantler/printf.c:506:   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 +
ARM GAS  /tmp/ccFy9xbE.s 			page 37


 1381              		.loc 1 506 38 view .LVU294
 1382 00a2 83A3     		adr	r3, .L224+8	@,
 1383 00a4 D3E90023 		ldrd	r2, [r3]	@,
 1384 00a8 FFF7FEFF 		bl	__aeabi_dadd		@
 1385              	.LVL110:
 1386              	@ src/pdantler/printf.c:502:   conv.U = (conv.U & ((1ULL << 52U) - 1U)) |
 502:src/pdantler/printf.c ****            (1023ULL << 52U); // drop the exponent so conv.F is now in [1,2)
 1387              		.loc 1 502 20 view .LVU295
 1388 00ac C9F31303 		ubfx	r3, r9, #0, #20	@ tmp278, _83,,
 1389              	@ src/pdantler/printf.c:506:   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 +
 1390              		.loc 1 506 38 view .LVU296
 1391 00b0 8946     		mov	r9, r1	@,
 1392 00b2 8046     		mov	r8, r0	@ tmp206, tmp290
 1393              	@ src/pdantler/printf.c:502:   conv.U = (conv.U & ((1ULL << 52U) - 1U)) |
 502:src/pdantler/printf.c ****            (1023ULL << 52U); // drop the exponent so conv.F is now in [1,2)
 1394              		.loc 1 502 44 view .LVU297
 1395 00b4 43F07F51 		orr	r1, r3, #1069547520	@ _83, tmp278,
 1396 00b8 3046     		mov	r0, r6	@ _83, _83
 1397              	@ src/pdantler/printf.c:507:                      (conv.F - 1.5) * 0.289529654602168);
 507:src/pdantler/printf.c ****                      (conv.F - 1.5) * 0.289529654602168);
 1398              		.loc 1 507 30 view .LVU298
 1399 00ba 0022     		movs	r2, #0	@,
 1400 00bc 8B4B     		ldr	r3, .L224+68	@,
 1401              	@ src/pdantler/printf.c:502:   conv.U = (conv.U & ((1ULL << 52U) - 1U)) |
 502:src/pdantler/printf.c ****            (1023ULL << 52U); // drop the exponent so conv.F is now in [1,2)
 1402              		.loc 1 502 44 view .LVU299
 1403 00be 41F44011 		orr	r1, r1, #3145728	@ _83, _83,
 1404              	@ src/pdantler/printf.c:507:                      (conv.F - 1.5) * 0.289529654602168);
 1405              		.loc 1 507 30 view .LVU300
 1406 00c2 FFF7FEFF 		bl	__aeabi_dsub		@
 1407              	.LVL111:
 1408              	@ src/pdantler/printf.c:507:                      (conv.F - 1.5) * 0.289529654602168);
 1409              		.loc 1 507 37 view .LVU301
 1410 00c6 7CA3     		adr	r3, .L224+16	@,
 1411 00c8 D3E90023 		ldrd	r2, [r3]	@,
 1412 00cc FFF7FEFF 		bl	__aeabi_dmul		@
 1413              	.LVL112:
 1414 00d0 0246     		mov	r2, r0	@ tmp291,
 1415 00d2 0B46     		mov	r3, r1	@,
 1416              	@ src/pdantler/printf.c:506:   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 +
 506:src/pdantler/printf.c ****                      (conv.F - 1.5) * 0.289529654602168);
 1417              		.loc 1 506 65 view .LVU302
 1418 00d4 4046     		mov	r0, r8	@, tmp206
 1419 00d6 4946     		mov	r1, r9	@,
 1420 00d8 FFF7FEFF 		bl	__aeabi_dadd		@
 1421              	.LVL113:
 1422              	@ src/pdantler/printf.c:506:   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 +
 506:src/pdantler/printf.c ****                      (conv.F - 1.5) * 0.289529654602168);
 1423              		.loc 1 506 7 view .LVU303
 1424 00dc FFF7FEFF 		bl	__aeabi_d2iz		@
 1425              	.LVL114:
 1426 00e0 0D90     		str	r0, [sp, #52]	@ tmp292, %sfp
 1427              	.LVL115:
 508:src/pdantler/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 509:src/pdantler/printf.c ****   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 1428              		.loc 1 509 3 is_stmt 1 view .LVU304
 1429              	@ src/pdantler/printf.c:509:   exp2 = (int)(expval * 3.321928094887362 + 0.5);
ARM GAS  /tmp/ccFy9xbE.s 			page 38


 1430              		.loc 1 509 23 is_stmt 0 view .LVU305
 1431 00e2 FFF7FEFF 		bl	__aeabi_i2d		@
 1432              	.LVL116:
 1433              		.loc 1 509 23 view .LVU306
 1434 00e6 8046     		mov	r8, r0	@ tmp293,
 1435 00e8 8946     		mov	r9, r1	@,
 1436 00ea 75A3     		adr	r3, .L224+24	@,
 1437 00ec D3E90023 		ldrd	r2, [r3]	@,
 1438 00f0 FFF7FEFF 		bl	__aeabi_dmul		@
 1439              	.LVL117:
 1440              	@ src/pdantler/printf.c:509:   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 1441              		.loc 1 509 43 view .LVU307
 1442 00f4 0022     		movs	r2, #0	@,
 1443 00f6 7E4B     		ldr	r3, .L224+72	@,
 1444 00f8 FFF7FEFF 		bl	__aeabi_dadd		@
 1445              	.LVL118:
 1446              	@ src/pdantler/printf.c:509:   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 1447              		.loc 1 509 8 view .LVU308
 1448 00fc FFF7FEFF 		bl	__aeabi_d2iz		@
 1449              	.LVL119:
 1450 0100 0646     		mov	r6, r0	@ tmp294,
 1451              	@ src/pdantler/printf.c:510:   const double z = expval * 2.302585092994046 - exp2 * 0.6931471805599
 510:src/pdantler/printf.c ****   const double z = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1452              		.loc 1 510 27 view .LVU309
 1453 0102 4946     		mov	r1, r9	@, _14
 1454              	.LVL120:
 1455              		.loc 1 510 3 is_stmt 1 view .LVU310
 1456              	@ src/pdantler/printf.c:510:   const double z = expval * 2.302585092994046 - exp2 * 0.6931471805599
 1457              		.loc 1 510 27 is_stmt 0 view .LVU311
 1458 0104 4046     		mov	r0, r8	@, _14
 1459              	.LVL121:
 1460              		.loc 1 510 27 view .LVU312
 1461 0106 70A3     		adr	r3, .L224+32	@,
 1462 0108 D3E90023 		ldrd	r2, [r3]	@,
 1463 010c FFF7FEFF 		bl	__aeabi_dmul		@
 1464              	.LVL122:
 1465 0110 8046     		mov	r8, r0	@ tmp216, tmp295
 1466 0112 8946     		mov	r9, r1	@,
 1467              	@ src/pdantler/printf.c:510:   const double z = expval * 2.302585092994046 - exp2 * 0.6931471805599
 1468              		.loc 1 510 54 view .LVU313
 1469 0114 3046     		mov	r0, r6	@, tmp215
 1470 0116 FFF7FEFF 		bl	__aeabi_i2d		@
 1471              	.LVL123:
 1472              	@ src/pdantler/printf.c:512:   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 511:src/pdantler/printf.c ****   const double z2 = z * z;
 512:src/pdantler/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1473              		.loc 1 512 28 view .LVU314
 1474 011a 06F2FF36 		addw	r6, r6, #1023	@ tmp231, tmp215,
 1475              	.LVL124:
 1476              	@ src/pdantler/printf.c:510:   const double z = expval * 2.302585092994046 - exp2 * 0.6931471805599
 510:src/pdantler/printf.c ****   const double z = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1477              		.loc 1 510 54 view .LVU315
 1478 011e 6CA3     		adr	r3, .L224+40	@,
 1479 0120 D3E90023 		ldrd	r2, [r3]	@,
 1480 0124 FFF7FEFF 		bl	__aeabi_dmul		@
 1481              	.LVL125:
 1482 0128 0246     		mov	r2, r0	@ tmp296,
ARM GAS  /tmp/ccFy9xbE.s 			page 39


 1483 012a 0B46     		mov	r3, r1	@,
 1484              	@ src/pdantler/printf.c:510:   const double z = expval * 2.302585092994046 - exp2 * 0.6931471805599
 510:src/pdantler/printf.c ****   const double z = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1485              		.loc 1 510 16 view .LVU316
 1486 012c 4046     		mov	r0, r8	@, tmp216
 1487 012e 4946     		mov	r1, r9	@,
 1488 0130 FFF7FEFF 		bl	__aeabi_dsub		@
 1489              	.LVL126:
 1490 0134 0246     		mov	r2, r0	@ tmp297,
 1491 0136 0B46     		mov	r3, r1	@,
 1492 0138 43EC182B 		vmov	d8, r2, r3	@ tmp219, tmp297
 1493              	.LVL127:
 511:src/pdantler/printf.c ****   const double z2 = z * z;
 1494              		.loc 1 511 3 is_stmt 1 view .LVU317
 1495              	@ src/pdantler/printf.c:511:   const double z2 = z * z;
 511:src/pdantler/printf.c ****   const double z2 = z * z;
 1496              		.loc 1 511 16 is_stmt 0 view .LVU318
 1497 013c FFF7FEFF 		bl	__aeabi_dmul		@
 1498              	.LVL128:
 511:src/pdantler/printf.c ****   const double z2 = z * z;
 1499              		.loc 1 511 16 view .LVU319
 1500 0140 8046     		mov	r8, r0	@ tmp220, tmp298
 1501 0142 8946     		mov	r9, r1	@,
 1502              	.LVL129:
 1503              		.loc 1 512 3 is_stmt 1 view .LVU320
 513:src/pdantler/printf.c ****   // compute exp(z) using continued fractions, see
 514:src/pdantler/printf.c ****   // https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
 515:src/pdantler/printf.c ****   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1504              		.loc 1 515 3 view .LVU321
 1505              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1506              		.loc 1 515 19 is_stmt 0 view .LVU322
 1507 0144 53EC182B 		vmov	r2, r3, d8	@, tmp219
 1508 0148 51EC180B 		vmov	r0, r1, d8	@, tmp219
 1509 014c FFF7FEFF 		bl	__aeabi_dadd		@
 1510              	.LVL130:
 1511              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1512              		.loc 1 515 60 view .LVU323
 1513 0150 0022     		movs	r2, #0	@,
 1514 0152 684B     		ldr	r3, .L224+76	@,
 1515              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1516              		.loc 1 515 19 view .LVU324
 1517 0154 41EC190B 		vmov	d9, r0, r1	@ tmp221, tmp299
 1518              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1519              		.loc 1 515 60 view .LVU325
 1520 0158 4046     		mov	r0, r8	@, tmp220
 1521 015a 4946     		mov	r1, r9	@,
 1522 015c FFF7FEFF 		bl	__aeabi_ddiv		@
 1523              	.LVL131:
 1524              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1525              		.loc 1 515 55 view .LVU326
 1526 0160 0022     		movs	r2, #0	@,
 1527 0162 654B     		ldr	r3, .L224+80	@,
 1528 0164 FFF7FEFF 		bl	__aeabi_dadd		@
 1529              	.LVL132:
 1530 0168 0246     		mov	r2, r0	@ tmp300,
 1531 016a 0B46     		mov	r3, r1	@,
 1532              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
ARM GAS  /tmp/ccFy9xbE.s 			page 40


 1533              		.loc 1 515 49 view .LVU327
 1534 016c 4046     		mov	r0, r8	@, tmp220
 1535 016e 4946     		mov	r1, r9	@,
 1536 0170 FFF7FEFF 		bl	__aeabi_ddiv		@
 1537              	.LVL133:
 1538              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1539              		.loc 1 515 43 view .LVU328
 1540 0174 0022     		movs	r2, #0	@,
 1541 0176 614B     		ldr	r3, .L224+84	@,
 1542 0178 FFF7FEFF 		bl	__aeabi_dadd		@
 1543              	.LVL134:
 1544 017c 0246     		mov	r2, r0	@ tmp301,
 1545 017e 0B46     		mov	r3, r1	@,
 1546              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1547              		.loc 1 515 38 view .LVU329
 1548 0180 4046     		mov	r0, r8	@, tmp220
 1549 0182 4946     		mov	r1, r9	@,
 1550 0184 FFF7FEFF 		bl	__aeabi_ddiv		@
 1551              	.LVL135:
 1552 0188 8046     		mov	r8, r0	@ tmp226, tmp302
 1553              	.LVL136:
 1554              		.loc 1 515 38 view .LVU330
 1555 018a 8946     		mov	r9, r1	@,
 1556              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1557              		.loc 1 515 28 view .LVU331
 1558 018c 0020     		movs	r0, #0	@,
 1559 018e 4FF08041 		mov	r1, #1073741824	@,
 1560 0192 53EC182B 		vmov	r2, r3, d8	@, tmp219
 1561 0196 FFF7FEFF 		bl	__aeabi_dsub		@
 1562              	.LVL137:
 1563 019a 0246     		mov	r2, r0	@ tmp303,
 1564 019c 0B46     		mov	r3, r1	@,
 1565              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1566              		.loc 1 515 32 view .LVU332
 1567 019e 4046     		mov	r0, r8	@, tmp226
 1568 01a0 4946     		mov	r1, r9	@,
 1569 01a2 FFF7FEFF 		bl	__aeabi_dadd		@
 1570              	.LVL138:
 1571 01a6 0246     		mov	r2, r0	@ tmp304,
 1572 01a8 0B46     		mov	r3, r1	@,
 1573              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1574              		.loc 1 515 23 view .LVU333
 1575 01aa 51EC190B 		vmov	r0, r1, d9	@, tmp221
 1576 01ae FFF7FEFF 		bl	__aeabi_ddiv		@
 1577              	.LVL139:
 1578              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1579              		.loc 1 515 15 view .LVU334
 1580 01b2 0022     		movs	r2, #0	@,
 1581 01b4 524B     		ldr	r3, .L224+88	@,
 1582 01b6 FFF7FEFF 		bl	__aeabi_dadd		@
 1583              	.LVL140:
 1584              	@ src/pdantler/printf.c:512:   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 512:src/pdantler/printf.c ****   // compute exp(z) using continued fractions, see
 1585              		.loc 1 512 36 view .LVU335
 1586 01ba 0022     		movs	r2, #0	@ tmp234,
 1587 01bc 3305     		lsls	r3, r6, #20	@, tmp231,
 1588              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
ARM GAS  /tmp/ccFy9xbE.s 			page 41


 1589              		.loc 1 515 10 view .LVU336
 1590 01be FFF7FEFF 		bl	__aeabi_dmul		@
 1591              	.LVL141:
 1592 01c2 8046     		mov	r8, r0	@ tmp305,
 1593 01c4 8946     		mov	r9, r1	@,
 1594              	.LVL142:
 516:src/pdantler/printf.c ****   // correct for rounding errors
 517:src/pdantler/printf.c ****   if (value < conv.F) {
 1595              		.loc 1 517 3 is_stmt 1 view .LVU337
 1596              	@ src/pdantler/printf.c:517:   if (value < conv.F) {
 1597              		.loc 1 517 6 is_stmt 0 view .LVU338
 1598 01c6 DDE90823 		ldrd	r2, [sp, #32]	@,,
 1599 01ca FFF7FEFF 		bl	__aeabi_dcmpgt		@
 1600              	.LVL143:
 1601 01ce 0028     		cmp	r0, #0	@ tmp306
 1602 01d0 5ED1     		bne	.L166	@
 1603              	@ src/pdantler/printf.c:515:   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 515:src/pdantler/printf.c ****   // correct for rounding errors
 1604              		.loc 1 515 10 view .LVU339
 1605 01d2 CDE90E89 		strd	r8, [sp, #56]	@ tmp237,,
 1606              	.LVL144:
 1607              	.L167:
 518:src/pdantler/printf.c ****     expval--;
 519:src/pdantler/printf.c ****     conv.F /= 10;
 520:src/pdantler/printf.c ****   }
 521:src/pdantler/printf.c **** 
 522:src/pdantler/printf.c ****   // the exponent format is "%+03d" and largest value is "307", so set aside 4-5
 523:src/pdantler/printf.c ****   // characters
 524:src/pdantler/printf.c ****   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 1608              		.loc 1 524 3 is_stmt 1 view .LVU340
 1609              	@ src/pdantler/printf.c:524:   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5
 1610              		.loc 1 524 43 is_stmt 0 view .LVU341
 1611 01d6 0D9E     		ldr	r6, [sp, #52]	@ expval, %sfp
 1612              	.LVL145:
 1613              		.loc 1 524 43 view .LVU342
 1614 01d8 06F16303 		add	r3, r6, #99	@ tmp240, expval,
 1615              	@ src/pdantler/printf.c:524:   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5
 1616              		.loc 1 524 68 view .LVU343
 1617 01dc C72B     		cmp	r3, #199	@ tmp240,
 1618 01de 34BF     		ite	cc
 1619 01e0 0423     		movcc	r3, #4	@ minwidth,
 1620 01e2 0523     		movcs	r3, #5	@ minwidth,
 1621 01e4 1093     		str	r3, [sp, #64]	@ minwidth, %sfp
 1622              	.LVL146:
 525:src/pdantler/printf.c **** 
 526:src/pdantler/printf.c ****   // in "%g" mode, "prec" is the number of *significant figures* not decimals
 527:src/pdantler/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 1623              		.loc 1 527 3 is_stmt 1 view .LVU344
 1624              	@ src/pdantler/printf.c:527:   if (flags & FLAGS_ADAPT_EXP) {
 1625              		.loc 1 527 6 is_stmt 0 view .LVU345
 1626 01e6 079B     		ldr	r3, [sp, #28]	@ flags, %sfp
 1627              	.LVL147:
 1628              		.loc 1 527 6 view .LVU346
 1629 01e8 1B05     		lsls	r3, r3, #20	@, flags,
 1630 01ea 40F19180 		bpl	.L169		@,
 528:src/pdantler/printf.c ****     // do we want to fall-back to "%f" mode?
 529:src/pdantler/printf.c ****     if ((value >= 1e-4) && (value < 1e6)) {
ARM GAS  /tmp/ccFy9xbE.s 			page 42


 1631              		.loc 1 529 5 is_stmt 1 view .LVU347
 1632              	@ src/pdantler/printf.c:529:     if ((value >= 1e-4) && (value < 1e6)) {
 1633              		.loc 1 529 8 is_stmt 0 view .LVU348
 1634 01ee DDE90889 		ldrd	r8, [sp, #32]	@ value,,
 1635 01f2 39A3     		adr	r3, .L224+48	@,
 1636 01f4 D3E90023 		ldrd	r2, [r3]	@,
 1637 01f8 4046     		mov	r0, r8	@, value
 1638 01fa 4946     		mov	r1, r9	@, value
 1639 01fc FFF7FEFF 		bl	__aeabi_dcmpge		@
 1640              	.LVL148:
 1641 0200 0028     		cmp	r0, #0	@ tmp308
 1642 0202 7FD0     		beq	.L170	@
 1643              	@ src/pdantler/printf.c:529:     if ((value >= 1e-4) && (value < 1e6)) {
 1644              		.loc 1 529 25 discriminator 1 view .LVU349
 1645 0204 4046     		mov	r0, r8	@, value
 1646 0206 4946     		mov	r1, r9	@, value
 1647 0208 35A3     		adr	r3, .L224+56	@,
 1648 020a D3E90023 		ldrd	r2, [r3]	@,
 1649 020e FFF7FEFF 		bl	__aeabi_dcmplt		@
 1650              	.LVL149:
 1651 0212 0028     		cmp	r0, #0	@ tmp309
 1652 0214 76D0     		beq	.L170	@
 530:src/pdantler/printf.c ****       if ((int)prec > expval) {
 1653              		.loc 1 530 7 is_stmt 1 view .LVU350
 1654              	@ src/pdantler/printf.c:530:       if ((int)prec > expval) {
 1655              		.loc 1 530 10 is_stmt 0 view .LVU351
 1656 0216 0A9B     		ldr	r3, [sp, #40]	@ prec, %sfp
 1657 0218 B342     		cmp	r3, r6	@ prec, expval
 1658 021a 40F31F81 		ble	.L187		@,
 531:src/pdantler/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 1659              		.loc 1 531 9 is_stmt 1 view .LVU352
 1660              	@ src/pdantler/printf.c:531:         prec = (unsigned)((int)prec - expval - 1);
 1661              		.loc 1 531 37 is_stmt 0 view .LVU353
 1662 021e 981B     		subs	r0, r3, r6	@ tmp246, prec, expval
 1663              	@ src/pdantler/printf.c:531:         prec = (unsigned)((int)prec - expval - 1);
 1664              		.loc 1 531 46 view .LVU354
 1665 0220 431E     		subs	r3, r0, #1	@ prec, tmp246,
 1666 0222 0A93     		str	r3, [sp, #40]	@ prec, %sfp
 1667              	.LVL150:
 1668              	.L173:
 532:src/pdantler/printf.c ****       } else {
 533:src/pdantler/printf.c ****         prec = 0;
 534:src/pdantler/printf.c ****       }
 535:src/pdantler/printf.c ****       flags |= FLAGS_PRECISION; // make sure _ftoa respects precision
 1669              		.loc 1 535 7 is_stmt 1 view .LVU355
 1670              	@ src/pdantler/printf.c:535:       flags |= FLAGS_PRECISION; // make sure _ftoa respects precision
 1671              		.loc 1 535 13 is_stmt 0 view .LVU356
 1672 0224 079B     		ldr	r3, [sp, #28]	@ flags, %sfp
 1673 0226 43F48066 		orr	r6, r3, #1024	@ flags, flags,
 1674              	.LVL151:
 536:src/pdantler/printf.c ****       // no characters in exponent
 537:src/pdantler/printf.c ****       minwidth = 0U;
 1675              		.loc 1 537 7 is_stmt 1 view .LVU357
 538:src/pdantler/printf.c ****       expval = 0;
 1676              		.loc 1 538 7 view .LVU358
 539:src/pdantler/printf.c ****     } else {
 540:src/pdantler/printf.c ****       // we use one sigfig for the whole part
ARM GAS  /tmp/ccFy9xbE.s 			page 43


 541:src/pdantler/printf.c ****       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 542:src/pdantler/printf.c ****         --prec;
 543:src/pdantler/printf.c ****       }
 544:src/pdantler/printf.c ****     }
 545:src/pdantler/printf.c ****   }
 546:src/pdantler/printf.c **** 
 547:src/pdantler/printf.c ****   // will everything fit?
 548:src/pdantler/printf.c ****   unsigned int fwidth = width;
 1677              		.loc 1 548 3 view .LVU359
 549:src/pdantler/printf.c ****   if (width > minwidth) {
 1678              		.loc 1 549 3 view .LVU360
 1679              	@ src/pdantler/printf.c:549:   if (width > minwidth) {
 1680              		.loc 1 549 6 is_stmt 0 view .LVU361
 1681 022a 0B9B     		ldr	r3, [sp, #44]	@ width, %sfp
 1682 022c 002B     		cmp	r3, #0	@ width
 1683 022e 40F00D81 		bne	.L188	@
 1684              	.LVL152:
 550:src/pdantler/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 551:src/pdantler/printf.c ****     fwidth -= minwidth;
 552:src/pdantler/printf.c ****   } else {
 553:src/pdantler/printf.c ****     // not enough characters, so go back to default sizing
 554:src/pdantler/printf.c ****     fwidth = 0U;
 555:src/pdantler/printf.c ****   }
 556:src/pdantler/printf.c ****   if ((flags & FLAGS_LEFT) && minwidth) {
 557:src/pdantler/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 558:src/pdantler/printf.c ****     fwidth = 0U;
 559:src/pdantler/printf.c ****   }
 560:src/pdantler/printf.c **** 
 561:src/pdantler/printf.c ****   // rescale the float value
 562:src/pdantler/printf.c ****   if (expval) {
 1685              		.loc 1 562 3 is_stmt 1 view .LVU362
 563:src/pdantler/printf.c ****     value /= conv.F;
 564:src/pdantler/printf.c ****   }
 565:src/pdantler/printf.c **** 
 566:src/pdantler/printf.c ****   // output the floating part
 567:src/pdantler/printf.c ****   const size_t start_idx = idx;
 1686              		.loc 1 567 3 view .LVU363
 568:src/pdantler/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth,
 1687              		.loc 1 568 3 view .LVU364
 1688              	@ src/pdantler/printf.c:568:   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, pre
 1689              		.loc 1 568 9 is_stmt 0 view .LVU365
 1690 0232 5046     		mov	r0, r10	@, value
 1691 0234 5946     		mov	r1, fp	@, value
 1692 0236 0022     		movs	r2, #0	@,
 1693 0238 0023     		movs	r3, #0	@,
 1694 023a FFF7FEFF 		bl	__aeabi_dcmplt		@
 1695              	.LVL153:
 1696 023e 0028     		cmp	r0, #0	@ tmp310
 1697 0240 40F0F280 		bne	.L221	@
 1698 0244 0B9B     		ldr	r3, [sp, #44]	@ width, %sfp
 1699 0246 3846     		mov	r0, r7	@, out
 1700 0248 0C9A     		ldr	r2, [sp, #48]	@, %sfp
 1701 024a 2393     		str	r3, [sp, #140]	@ width,
 1702              	.LVL154:
 1703              		.loc 1 568 9 view .LVU366
 1704 024c 0A9B     		ldr	r3, [sp, #40]	@ prec, %sfp
 1705 024e 2293     		str	r3, [sp, #136]	@ prec,
ARM GAS  /tmp/ccFy9xbE.s 			page 44


 1706 0250 079B     		ldr	r3, [sp, #28]	@ flags, %sfp
 1707 0252 23F40061 		bic	r1, r3, #2048	@ tmp270, flags,
 1708 0256 2B46     		mov	r3, r5	@, maxlen
 1709 0258 9DED087B 		vldr.64	d7, [sp, #32]	@ value, %sfp
 1710 025c 41F48061 		orr	r1, r1, #1024	@ tmp271, tmp270,
 1711 0260 8DED207B 		vstr.64	d7, [sp, #128]	@ value,
 1712 0264 2491     		str	r1, [sp, #144]	@ tmp271,
 1713 0266 2146     		mov	r1, r4	@, buffer
 1714 0268 0BE0     		b	.L219		@
 1715              	.LVL155:
 1716              	.L160:
 479:src/pdantler/printf.c ****   }
 1717              		.loc 1 479 5 is_stmt 1 view .LVU367
 1718              	@ src/pdantler/printf.c:479:     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 479:src/pdantler/printf.c ****   }
 1719              		.loc 1 479 12 is_stmt 0 view .LVU368
 1720 026a 079B     		ldr	r3, [sp, #28]	@ flags, %sfp
 1721 026c 2146     		mov	r1, r4	@, buffer
 1722 026e 0C9A     		ldr	r2, [sp, #48]	@, %sfp
 1723 0270 3846     		mov	r0, r7	@, out
 1724 0272 2493     		str	r3, [sp, #144]	@ flags,
 1725              	.LVL156:
 479:src/pdantler/printf.c ****   }
 1726              		.loc 1 479 12 view .LVU369
 1727 0274 0B9B     		ldr	r3, [sp, #44]	@ width, %sfp
 1728 0276 0A9C     		ldr	r4, [sp, #40]	@ prec, %sfp
 1729              	.LVL157:
 479:src/pdantler/printf.c ****   }
 1730              		.loc 1 479 12 view .LVU370
 1731 0278 2393     		str	r3, [sp, #140]	@ width,
 1732              	.LVL158:
 479:src/pdantler/printf.c ****   }
 1733              		.loc 1 479 12 view .LVU371
 1734 027a 2B46     		mov	r3, r5	@, maxlen
 1735 027c 2294     		str	r4, [sp, #136]	@ prec,
 1736              	.LVL159:
 479:src/pdantler/printf.c ****   }
 1737              		.loc 1 479 12 view .LVU372
 1738 027e CDE920AB 		strd	r10, [sp, #128]	@ value,,
 1739              	.LVL160:
 1740              	.L219:
 1741              	@ src/pdantler/printf.c:586: }
 569:src/pdantler/printf.c ****               flags & ~FLAGS_ADAPT_EXP);
 570:src/pdantler/printf.c **** 
 571:src/pdantler/printf.c ****   // output the exponent part
 572:src/pdantler/printf.c ****   if (minwidth) {
 573:src/pdantler/printf.c ****     // output the exponential symbol
 574:src/pdantler/printf.c ****     out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 575:src/pdantler/printf.c ****     // output the exponent value
 576:src/pdantler/printf.c ****     idx =
 577:src/pdantler/printf.c ****         _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval,
 578:src/pdantler/printf.c ****                    expval < 0, 10, 0, minwidth - 1, FLAGS_ZEROPAD | FLAGS_PLUS);
 579:src/pdantler/printf.c ****     // might need to right-pad spaces
 580:src/pdantler/printf.c ****     if (flags & FLAGS_LEFT) {
 581:src/pdantler/printf.c ****       while (idx - start_idx < width)
 582:src/pdantler/printf.c ****         out(' ', buffer, idx++, maxlen);
 583:src/pdantler/printf.c ****     }
ARM GAS  /tmp/ccFy9xbE.s 			page 45


 584:src/pdantler/printf.c ****   }
 585:src/pdantler/printf.c ****   return idx;
 586:src/pdantler/printf.c **** }
 1742              		.loc 1 586 1 view .LVU373
 1743 0282 13B0     		add	sp, sp, #76	@,,
 1744              	.LCFI21:
 1745              		.cfi_remember_state
 1746              		.cfi_def_cfa_offset 52
 1747              		@ sp needed	@
 1748 0284 BDEC048B 		vldm	sp!, {d8-d9}	@,
 1749              	.LCFI22:
 1750              		.cfi_restore 82
 1751              		.cfi_restore 83
 1752              		.cfi_restore 80
 1753              		.cfi_restore 81
 1754              		.cfi_def_cfa_offset 36
 1755 0288 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 1756              	.LCFI23:
 1757              		.cfi_restore 14
 1758              		.cfi_restore 11
 1759              		.cfi_restore 10
 1760              		.cfi_restore 9
 1761              		.cfi_restore 8
 1762              		.cfi_restore 7
 1763              		.cfi_restore 6
 1764              		.cfi_restore 5
 1765              		.cfi_restore 4
 1766              		.cfi_def_cfa_offset 0
 1767              	.LVL161:
 1768              	@ src/pdantler/printf.c:568:   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, pre
 568:src/pdantler/printf.c ****               flags & ~FLAGS_ADAPT_EXP);
 1769              		.loc 1 568 9 view .LVU374
 1770 028c FFF7FEBF 		b	_ftoa		@
 1771              	.LVL162:
 1772              	.L166:
 1773              	.LCFI24:
 1774              		.cfi_restore_state
 518:src/pdantler/printf.c ****     conv.F /= 10;
 1775              		.loc 1 518 5 is_stmt 1 view .LVU375
 1776              	@ src/pdantler/printf.c:518:     expval--;
 518:src/pdantler/printf.c ****     conv.F /= 10;
 1777              		.loc 1 518 11 is_stmt 0 view .LVU376
 1778 0290 0D9B     		ldr	r3, [sp, #52]	@ expval, %sfp
 1779              	@ src/pdantler/printf.c:519:     conv.F /= 10;
 519:src/pdantler/printf.c ****   }
 1780              		.loc 1 519 12 view .LVU377
 1781 0292 4046     		mov	r0, r8	@, tmp237
 1782 0294 4946     		mov	r1, r9	@,
 1783 0296 0022     		movs	r2, #0	@,
 1784              	@ src/pdantler/printf.c:518:     expval--;
 518:src/pdantler/printf.c ****     conv.F /= 10;
 1785              		.loc 1 518 11 view .LVU378
 1786 0298 013B     		subs	r3, r3, #1	@ expval, expval,
 1787 029a 0D93     		str	r3, [sp, #52]	@ expval, %sfp
 1788              	.LVL163:
 519:src/pdantler/printf.c ****   }
 1789              		.loc 1 519 5 is_stmt 1 view .LVU379
ARM GAS  /tmp/ccFy9xbE.s 			page 46


 1790              	@ src/pdantler/printf.c:519:     conv.F /= 10;
 519:src/pdantler/printf.c ****   }
 1791              		.loc 1 519 12 is_stmt 0 view .LVU380
 1792 029c 164B     		ldr	r3, .L224+80	@,
 1793              	.LVL164:
 519:src/pdantler/printf.c ****   }
 1794              		.loc 1 519 12 view .LVU381
 1795 029e FFF7FEFF 		bl	__aeabi_ddiv		@
 1796              	.LVL165:
 1797 02a2 CDE90E01 		strd	r0, [sp, #56]	@ tmp307,,
 1798              	.LVL166:
 519:src/pdantler/printf.c ****   }
 1799              		.loc 1 519 12 view .LVU382
 1800 02a6 96E7     		b	.L167		@
 1801              	.L225:
 1802              		.align	3
 1803              	.L224:
 1804 02a8 FB799F50 		.word	1352628731
 1805 02ac 1344D33F 		.word	1070810131
 1806 02b0 B3C8608B 		.word	-1956591437
 1807 02b4 288AC63F 		.word	1069976104
 1808 02b8 61436F63 		.word	1668236129
 1809 02bc A787D23F 		.word	1070761895
 1810 02c0 71A37909 		.word	158966641
 1811 02c4 4F930A40 		.word	1074434895
 1812 02c8 1655B5BB 		.word	-1145744106
 1813 02cc B16B0240 		.word	1073900465
 1814 02d0 EF39FAFE 		.word	-17155601
 1815 02d4 422EE63F 		.word	1072049730
 1816 02d8 2D431CEB 		.word	-350469331
 1817 02dc E2361A3F 		.word	1058682594
 1818 02e0 00000000 		.word	0
 1819 02e4 80842E41 		.word	1093567616
 1820 02e8 FFFFEF7F 		.word	2146435071
 1821 02ec 0000F83F 		.word	1073217536
 1822 02f0 0000E03F 		.word	1071644672
 1823 02f4 00002C40 		.word	1076625408
 1824 02f8 00002440 		.word	1076101120
 1825 02fc 00001840 		.word	1075314688
 1826 0300 0000F03F 		.word	1072693248
 1827              	.LVL167:
 1828              	.L170:
 541:src/pdantler/printf.c ****         --prec;
 1829              		.loc 1 541 7 is_stmt 1 view .LVU383
 1830              	@ src/pdantler/printf.c:541:       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 541:src/pdantler/printf.c ****         --prec;
 1831              		.loc 1 541 10 is_stmt 0 view .LVU384
 1832 0304 0A9B     		ldr	r3, [sp, #40]	@ prec, %sfp
 1833 0306 1BB1     		cbz	r3, .L169	@ prec,
 1834              	@ src/pdantler/printf.c:541:       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 541:src/pdantler/printf.c ****         --prec;
 1835              		.loc 1 541 22 discriminator 1 view .LVU385
 1836 0308 119A     		ldr	r2, [sp, #68]	@ _1, %sfp
 1837 030a 002A     		cmp	r2, #0	@ _1
 1838 030c 40F09B80 		bne	.L222	@
 1839              	.L169:
 1840              	.LVL168:
ARM GAS  /tmp/ccFy9xbE.s 			page 47


 548:src/pdantler/printf.c ****   if (width > minwidth) {
 1841              		.loc 1 548 3 is_stmt 1 view .LVU386
 549:src/pdantler/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1842              		.loc 1 549 3 view .LVU387
 1843              	@ src/pdantler/printf.c:549:   if (width > minwidth) {
 549:src/pdantler/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1844              		.loc 1 549 6 is_stmt 0 view .LVU388
 1845 0310 109B     		ldr	r3, [sp, #64]	@ minwidth, %sfp
 1846 0312 0B9A     		ldr	r2, [sp, #44]	@ width, %sfp
 1847 0314 9342     		cmp	r3, r2	@ minwidth, width
 1848 0316 71D3     		bcc	.L177		@,
 1849              	@ src/pdantler/printf.c:556:   if ((flags & FLAGS_LEFT) && minwidth) {
 556:src/pdantler/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1850              		.loc 1 556 6 view .LVU389
 1851 0318 079B     		ldr	r3, [sp, #28]	@ flags, %sfp
 1852              	@ src/pdantler/printf.c:554:     fwidth = 0U;
 554:src/pdantler/printf.c ****   }
 1853              		.loc 1 554 12 view .LVU390
 1854 031a 0026     		movs	r6, #0	@ fwidth,
 1855              	.LVL169:
 556:src/pdantler/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1856              		.loc 1 556 3 is_stmt 1 view .LVU391
 1857              	@ src/pdantler/printf.c:556:   if ((flags & FLAGS_LEFT) && minwidth) {
 556:src/pdantler/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1858              		.loc 1 556 6 is_stmt 0 view .LVU392
 1859 031c C3F34008 		ubfx	r8, r3, #1, #1	@ _106, flags,,
 1860              	@ src/pdantler/printf.c:562:   if (expval) {
 562:src/pdantler/printf.c ****     value /= conv.F;
 1861              		.loc 1 562 6 view .LVU393
 1862 0320 0D9B     		ldr	r3, [sp, #52]	@ expval, %sfp
 1863              	@ src/pdantler/printf.c:558:     fwidth = 0U;
 558:src/pdantler/printf.c ****   }
 1864              		.loc 1 558 12 view .LVU394
 1865 0322 B8F1000F 		cmp	r8, #0	@ _106,
 1866 0326 18BF     		it	ne
 1867 0328 0026     		movne	r6, #0	@ fwidth,
 1868              	.LVL170:
 562:src/pdantler/printf.c ****     value /= conv.F;
 1869              		.loc 1 562 3 is_stmt 1 view .LVU395
 1870              	@ src/pdantler/printf.c:562:   if (expval) {
 562:src/pdantler/printf.c ****     value /= conv.F;
 1871              		.loc 1 562 6 is_stmt 0 view .LVU396
 1872 032a 002B     		cmp	r3, #0	@ expval
 1873 032c 73D0     		beq	.L191	@
 1874              	.L223:
 563:src/pdantler/printf.c ****   }
 1875              		.loc 1 563 5 is_stmt 1 view .LVU397
 1876              	@ src/pdantler/printf.c:563:     value /= conv.F;
 563:src/pdantler/printf.c ****   }
 1877              		.loc 1 563 11 is_stmt 0 view .LVU398
 1878 032e 4FF00109 		mov	r9, #1	@ _172,
 1879 0332 DDE90801 		ldrd	r0, [sp, #32]	@,,
 1880 0336 DDE90E23 		ldrd	r2, [sp, #56]	@,,
 1881 033a FFF7FEFF 		bl	__aeabi_ddiv		@
 1882              	.LVL171:
 1883 033e CDE90801 		strd	r0, [sp, #32]	@ tmp311,,
 1884              	.LVL172:
ARM GAS  /tmp/ccFy9xbE.s 			page 48


 1885              	.L174:
 567:src/pdantler/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth,
 1886              		.loc 1 567 3 is_stmt 1 view .LVU399
 568:src/pdantler/printf.c ****               flags & ~FLAGS_ADAPT_EXP);
 1887              		.loc 1 568 3 view .LVU400
 1888              	@ src/pdantler/printf.c:568:   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, pre
 568:src/pdantler/printf.c ****               flags & ~FLAGS_ADAPT_EXP);
 1889              		.loc 1 568 9 is_stmt 0 view .LVU401
 1890 0342 5046     		mov	r0, r10	@, value
 1891 0344 5946     		mov	r1, fp	@, value
 1892 0346 0022     		movs	r2, #0	@,
 1893 0348 0023     		movs	r3, #0	@,
 1894 034a FFF7FEFF 		bl	__aeabi_dcmplt		@
 1895              	.LVL173:
 1896 034e 0028     		cmp	r0, #0	@ tmp312
 1897 0350 71D1     		bne	.L175	@
 1898              	.LVL174:
 1899              	.L180:
 1900              	@ src/pdantler/printf.c:568:   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, pre
 568:src/pdantler/printf.c ****               flags & ~FLAGS_ADAPT_EXP);
 1901              		.loc 1 568 9 discriminator 4 view .LVU402
 1902 0352 0A9B     		ldr	r3, [sp, #40]	@ prec, %sfp
 1903 0354 2146     		mov	r1, r4	@, buffer
 1904 0356 DDF830A0 		ldr	r10, [sp, #48]	@ idx, %sfp
 1905              	.LVL175:
 568:src/pdantler/printf.c ****               flags & ~FLAGS_ADAPT_EXP);
 1906              		.loc 1 568 9 discriminator 4 view .LVU403
 1907 035a 3846     		mov	r0, r7	@, out
 1908 035c 0293     		str	r3, [sp, #8]	@ prec,
 1909 035e 079B     		ldr	r3, [sp, #28]	@ flags, %sfp
 1910 0360 5246     		mov	r2, r10	@, idx
 1911 0362 0396     		str	r6, [sp, #12]	@ fwidth,
 1912 0364 23F40063 		bic	r3, r3, #2048	@ tmp259, flags,
 1913 0368 9DED087B 		vldr.64	d7, [sp, #32]	@ value, %sfp
 1914 036c 0493     		str	r3, [sp, #16]	@ tmp259,
 1915 036e 2B46     		mov	r3, r5	@, maxlen
 1916 0370 8DED007B 		vstr.64	d7, [sp]	@ value,
 1917 0374 FFF7FEFF 		bl	_ftoa		@
 1918              	.LVL176:
 1919 0378 0646     		mov	r6, r0	@ <retval>, tmp313
 1920              	.LVL177:
 572:src/pdantler/printf.c ****     // output the exponential symbol
 1921              		.loc 1 572 3 is_stmt 1 discriminator 4 view .LVU404
 1922              	@ src/pdantler/printf.c:572:   if (minwidth) {
 572:src/pdantler/printf.c ****     // output the exponential symbol
 1923              		.loc 1 572 6 is_stmt 0 discriminator 4 view .LVU405
 1924 037a B9F1000F 		cmp	r9, #0	@ _172
 1925 037e 37D0     		beq	.L159	@
 574:src/pdantler/printf.c ****     // output the exponent value
 1926              		.loc 1 574 5 is_stmt 1 view .LVU406
 1927 0380 079B     		ldr	r3, [sp, #28]	@ flags, %sfp
 1928 0382 0246     		mov	r2, r0	@, <retval>
 1929 0384 2146     		mov	r1, r4	@, buffer
 1930 0386 0136     		adds	r6, r6, #1	@ idx, <retval>,
 1931              	.LVL178:
 574:src/pdantler/printf.c ****     // output the exponent value
 1932              		.loc 1 574 5 is_stmt 0 view .LVU407
ARM GAS  /tmp/ccFy9xbE.s 			page 49


 1933 0388 13F0200F 		tst	r3, #32	@ flags,
 1934 038c 2B46     		mov	r3, r5	@, maxlen
 1935 038e 14BF     		ite	ne
 1936 0390 4520     		movne	r0, #69	@,
 1937 0392 6520     		moveq	r0, #101	@,
 1938 0394 B847     		blx	r7		@ out
 1939              	.LVL179:
 576:src/pdantler/printf.c ****         _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval,
 1940              		.loc 1 576 5 is_stmt 1 view .LVU408
 1941              	@ src/pdantler/printf.c:577:         _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : 
 577:src/pdantler/printf.c ****                    expval < 0, 10, 0, minwidth - 1, FLAGS_ZEROPAD | FLAGS_PLUS);
 1942              		.loc 1 577 9 is_stmt 0 view .LVU409
 1943 0396 109B     		ldr	r3, [sp, #64]	@ minwidth, %sfp
 1944 0398 0D99     		ldr	r1, [sp, #52]	@ expval, %sfp
 1945 039a 0020     		movs	r0, #0	@,
 1946 039c 013B     		subs	r3, r3, #1	@ tmp262, minwidth,
 1947 039e 3246     		mov	r2, r6	@, idx
 1948              	@ src/pdantler/printf.c:577:         _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : 
 577:src/pdantler/printf.c ****                    expval < 0, 10, 0, minwidth - 1, FLAGS_ZEROPAD | FLAGS_PLUS);
 1949              		.loc 1 577 69 view .LVU410
 1950 03a0 0029     		cmp	r1, #0	@ expval,
 1951              	@ src/pdantler/printf.c:577:         _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : 
 577:src/pdantler/printf.c ****                    expval < 0, 10, 0, minwidth - 1, FLAGS_ZEROPAD | FLAGS_PLUS);
 1952              		.loc 1 577 9 view .LVU411
 1953 03a2 0493     		str	r3, [sp, #16]	@ tmp262,
 1954 03a4 4FF00503 		mov	r3, #5	@ tmp261,
 1955 03a8 0593     		str	r3, [sp, #20]	@ tmp261,
 1956 03aa 4FF00A03 		mov	r3, #10	@ tmp264,
 1957 03ae CDE90230 		strd	r3, r0, [sp, #8]	@ tmp264,,,
 1958 03b2 4FEAD173 		lsr	r3, r1, #31	@ tmp267, expval,
 1959              	@ src/pdantler/printf.c:577:         _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : 
 577:src/pdantler/printf.c ****                    expval < 0, 10, 0, minwidth - 1, FLAGS_ZEROPAD | FLAGS_PLUS);
 1960              		.loc 1 577 69 view .LVU412
 1961 03b6 B8BF     		it	lt
 1962 03b8 4942     		rsblt	r1, r1, #0	@ expval, expval,
 1963              	@ src/pdantler/printf.c:577:         _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : 
 577:src/pdantler/printf.c ****                    expval < 0, 10, 0, minwidth - 1, FLAGS_ZEROPAD | FLAGS_PLUS);
 1964              		.loc 1 577 9 view .LVU413
 1965 03ba 3846     		mov	r0, r7	@, out
 1966 03bc 0193     		str	r3, [sp, #4]	@ tmp267,
 1967 03be 2B46     		mov	r3, r5	@, maxlen
 1968 03c0 0091     		str	r1, [sp]	@ tmp268,
 1969 03c2 2146     		mov	r1, r4	@, buffer
 1970 03c4 FFF7FEFF 		bl	_ntoa_long		@
 1971              	.LVL180:
 1972 03c8 0646     		mov	r6, r0	@ <retval>, tmp314
 1973              	.LVL181:
 580:src/pdantler/printf.c ****       while (idx - start_idx < width)
 1974              		.loc 1 580 5 is_stmt 1 view .LVU414
 1975              	@ src/pdantler/printf.c:580:     if (flags & FLAGS_LEFT) {
 580:src/pdantler/printf.c ****       while (idx - start_idx < width)
 1976              		.loc 1 580 8 is_stmt 0 view .LVU415
 1977 03ca B8F1000F 		cmp	r8, #0	@ _106
 1978 03ce 0FD0     		beq	.L159	@
 581:src/pdantler/printf.c ****         out(' ', buffer, idx++, maxlen);
 1979              		.loc 1 581 13 is_stmt 1 view .LVU416
 1980              	@ src/pdantler/printf.c:581:       while (idx - start_idx < width)
ARM GAS  /tmp/ccFy9xbE.s 			page 50


 581:src/pdantler/printf.c ****         out(' ', buffer, idx++, maxlen);
 1981              		.loc 1 581 18 is_stmt 0 view .LVU417
 1982 03d0 A0EB0A08 		sub	r8, r0, r10	@ ivtmp.207, <retval>, idx
 1983              	@ src/pdantler/printf.c:581:       while (idx - start_idx < width)
 581:src/pdantler/printf.c ****         out(' ', buffer, idx++, maxlen);
 1984              		.loc 1 581 13 view .LVU418
 1985 03d4 0B9B     		ldr	r3, [sp, #44]	@ width, %sfp
 1986 03d6 4345     		cmp	r3, r8	@ width, ivtmp.207
 1987 03d8 0AD9     		bls	.L159		@,
 1988 03da 9946     		mov	r9, r3	@ width, width
 1989              	.LVL182:
 1990              	.L184:
 582:src/pdantler/printf.c ****     }
 1991              		.loc 1 582 9 is_stmt 1 view .LVU419
 1992              	@ src/pdantler/printf.c:581:       while (idx - start_idx < width)
 581:src/pdantler/printf.c ****         out(' ', buffer, idx++, maxlen);
 1993              		.loc 1 581 13 is_stmt 0 view .LVU420
 1994 03dc 08F10108 		add	r8, r8, #1	@ ivtmp.207, ivtmp.207,
 1995 03e0 3246     		mov	r2, r6	@ idx, <retval>
 1996              	@ src/pdantler/printf.c:582:         out(' ', buffer, idx++, maxlen);
 582:src/pdantler/printf.c ****     }
 1997              		.loc 1 582 9 view .LVU421
 1998 03e2 2B46     		mov	r3, r5	@, maxlen
 1999 03e4 2146     		mov	r1, r4	@, buffer
 2000 03e6 2020     		movs	r0, #32	@,
 2001 03e8 0136     		adds	r6, r6, #1	@ <retval>, <retval>,
 2002              	.LVL183:
 582:src/pdantler/printf.c ****     }
 2003              		.loc 1 582 9 view .LVU422
 2004 03ea B847     		blx	r7		@ out
 2005              	.LVL184:
 581:src/pdantler/printf.c ****         out(' ', buffer, idx++, maxlen);
 2006              		.loc 1 581 13 is_stmt 1 view .LVU423
 2007 03ec C145     		cmp	r9, r8	@ width, ivtmp.207
 2008 03ee F5D8     		bhi	.L184		@,
 2009              	.L159:
 2010              	@ src/pdantler/printf.c:586: }
 2011              		.loc 1 586 1 is_stmt 0 view .LVU424
 2012 03f0 3046     		mov	r0, r6	@, <retval>
 2013 03f2 13B0     		add	sp, sp, #76	@,,
 2014              	.LCFI25:
 2015              		.cfi_remember_state
 2016              		.cfi_def_cfa_offset 52
 2017              		@ sp needed	@
 2018 03f4 BDEC048B 		vldm	sp!, {d8-d9}	@,
 2019              	.LCFI26:
 2020              		.cfi_restore 82
 2021              		.cfi_restore 83
 2022              		.cfi_restore 80
 2023              		.cfi_restore 81
 2024              		.cfi_def_cfa_offset 36
 2025              	.LVL185:
 2026              		.loc 1 586 1 view .LVU425
 2027 03f8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 2028              	.LVL186:
 2029              	.L177:
 2030              	.LCFI27:
ARM GAS  /tmp/ccFy9xbE.s 			page 51


 2031              		.cfi_restore_state
 2032              	@ src/pdantler/printf.c:551:     fwidth -= minwidth;
 551:src/pdantler/printf.c ****   } else {
 2033              		.loc 1 551 12 view .LVU426
 2034 03fc 0B9B     		ldr	r3, [sp, #44]	@ width, %sfp
 2035              	.LVL187:
 551:src/pdantler/printf.c ****   } else {
 2036              		.loc 1 551 12 view .LVU427
 2037 03fe 109A     		ldr	r2, [sp, #64]	@ minwidth, %sfp
 2038              	.LVL188:
 551:src/pdantler/printf.c ****   } else {
 2039              		.loc 1 551 12 view .LVU428
 2040 0400 9E1A     		subs	r6, r3, r2	@ fwidth, width, minwidth
 2041              	@ src/pdantler/printf.c:556:   if ((flags & FLAGS_LEFT) && minwidth) {
 556:src/pdantler/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 2042              		.loc 1 556 6 view .LVU429
 2043 0402 079B     		ldr	r3, [sp, #28]	@ flags, %sfp
 2044 0404 C3F34008 		ubfx	r8, r3, #1, #1	@ _106, flags,,
 551:src/pdantler/printf.c ****   } else {
 2045              		.loc 1 551 5 is_stmt 1 view .LVU430
 2046              	.LVL189:
 556:src/pdantler/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 2047              		.loc 1 556 3 view .LVU431
 2048              	@ src/pdantler/printf.c:562:   if (expval) {
 562:src/pdantler/printf.c ****     value /= conv.F;
 2049              		.loc 1 562 6 is_stmt 0 view .LVU432
 2050 0408 0D9B     		ldr	r3, [sp, #52]	@ expval, %sfp
 2051              	@ src/pdantler/printf.c:558:     fwidth = 0U;
 558:src/pdantler/printf.c ****   }
 2052              		.loc 1 558 12 view .LVU433
 2053 040a B8F1000F 		cmp	r8, #0	@ _106,
 2054 040e 18BF     		it	ne
 2055 0410 0026     		movne	r6, #0	@ fwidth,
 2056              	.LVL190:
 562:src/pdantler/printf.c ****     value /= conv.F;
 2057              		.loc 1 562 3 is_stmt 1 view .LVU434
 2058              	@ src/pdantler/printf.c:562:   if (expval) {
 562:src/pdantler/printf.c ****     value /= conv.F;
 2059              		.loc 1 562 6 is_stmt 0 view .LVU435
 2060 0412 002B     		cmp	r3, #0	@ expval
 2061 0414 8BD1     		bne	.L223	@
 2062              	.L191:
 562:src/pdantler/printf.c ****     value /= conv.F;
 2063              		.loc 1 562 6 view .LVU436
 2064 0416 4FF00109 		mov	r9, #1	@ _172,
 2065 041a 92E7     		b	.L174		@
 2066              	.LVL191:
 2067              	.L220:
 485:src/pdantler/printf.c ****   }
 2068              		.loc 1 485 5 is_stmt 1 view .LVU437
 2069              	@ src/pdantler/printf.c:485:     value = -value;
 485:src/pdantler/printf.c ****   }
 2070              		.loc 1 485 11 is_stmt 0 view .LVU438
 2071 041c 0BF10043 		add	r3, fp, #-2147483648	@ tmp332, value,
 2072 0420 CDF820A0 		str	r10, [sp, #32]	@ value, %sfp
 2073 0424 0993     		str	r3, [sp, #36]	@ tmp332, %sfp
 2074              	.LVL192:
ARM GAS  /tmp/ccFy9xbE.s 			page 52


 485:src/pdantler/printf.c ****   }
 2075              		.loc 1 485 11 view .LVU439
 2076 0426 25E6     		b	.L163		@
 2077              	.LVL193:
 2078              	.L221:
 2079              	@ src/pdantler/printf.c:554:     fwidth = 0U;
 554:src/pdantler/printf.c ****   }
 2080              		.loc 1 554 12 view .LVU440
 2081 0428 0B9B     		ldr	r3, [sp, #44]	@ width, %sfp
 2082              	@ src/pdantler/printf.c:535:       flags |= FLAGS_PRECISION; // make sure _ftoa respects precision
 535:src/pdantler/printf.c ****       // no characters in exponent
 2083              		.loc 1 535 13 view .LVU441
 2084 042a 0796     		str	r6, [sp, #28]	@ flags, %sfp
 2085              	@ src/pdantler/printf.c:556:   if ((flags & FLAGS_LEFT) && minwidth) {
 556:src/pdantler/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 2086              		.loc 1 556 28 view .LVU442
 2087 042c 9846     		mov	r8, r3	@ _106, width
 2088              	@ src/pdantler/printf.c:554:     fwidth = 0U;
 554:src/pdantler/printf.c ****   }
 2089              		.loc 1 554 12 view .LVU443
 2090 042e 1E46     		mov	r6, r3	@ fwidth, width
 2091              	.LVL194:
 2092              	@ src/pdantler/printf.c:556:   if ((flags & FLAGS_LEFT) && minwidth) {
 556:src/pdantler/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 2093              		.loc 1 556 28 view .LVU444
 2094 0430 9946     		mov	r9, r3	@ _172, width
 2095              	@ src/pdantler/printf.c:537:       minwidth = 0U;
 537:src/pdantler/printf.c ****       expval = 0;
 2096              		.loc 1 537 16 view .LVU445
 2097 0432 1093     		str	r3, [sp, #64]	@ width, %sfp
 2098              	@ src/pdantler/printf.c:538:       expval = 0;
 538:src/pdantler/printf.c ****     } else {
 2099              		.loc 1 538 14 view .LVU446
 2100 0434 0D93     		str	r3, [sp, #52]	@ width, %sfp
 2101              	.LVL195:
 2102              	.L175:
 2103              	@ src/pdantler/printf.c:568:   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, pre
 568:src/pdantler/printf.c ****               flags & ~FLAGS_ADAPT_EXP);
 2104              		.loc 1 568 9 discriminator 1 view .LVU447
 2105 0436 DDE90801 		ldrd	r0, [sp, #32]	@ value,,
 2106 043a 0246     		mov	r2, r0	@ value, value
 2107 043c 01F10043 		add	r3, r1, #-2147483648	@ value, tmp372,
 2108 0440 CDE90823 		strd	r2, [sp, #32]	@ value,,
 2109              	.LVL196:
 568:src/pdantler/printf.c ****               flags & ~FLAGS_ADAPT_EXP);
 2110              		.loc 1 568 9 discriminator 1 view .LVU448
 2111 0444 85E7     		b	.L180		@
 2112              	.LVL197:
 2113              	.L222:
 542:src/pdantler/printf.c ****       }
 2114              		.loc 1 542 9 is_stmt 1 view .LVU449
 2115 0446 013B     		subs	r3, r3, #1	@ prec, prec,
 2116 0448 0A93     		str	r3, [sp, #40]	@ prec, %sfp
 2117              	.LVL198:
 542:src/pdantler/printf.c ****       }
 2118              		.loc 1 542 9 is_stmt 0 view .LVU450
 2119 044a 61E7     		b	.L169		@
ARM GAS  /tmp/ccFy9xbE.s 			page 53


 2120              	.LVL199:
 2121              	.L188:
 2122              	@ src/pdantler/printf.c:549:   if (width > minwidth) {
 549:src/pdantler/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 2123              		.loc 1 549 6 view .LVU451
 2124 044c 0023     		movs	r3, #0	@ expval,
 2125              	.LVL200:
 2126              	@ src/pdantler/printf.c:535:       flags |= FLAGS_PRECISION; // make sure _ftoa respects precision
 535:src/pdantler/printf.c ****       // no characters in exponent
 2127              		.loc 1 535 13 view .LVU452
 2128 044e 0796     		str	r6, [sp, #28]	@ flags, %sfp
 2129              	@ src/pdantler/printf.c:549:   if (width > minwidth) {
 549:src/pdantler/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 2130              		.loc 1 549 6 view .LVU453
 2131 0450 0B9E     		ldr	r6, [sp, #44]	@ fwidth, %sfp
 2132              	.LVL201:
 549:src/pdantler/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 2133              		.loc 1 549 6 view .LVU454
 2134 0452 9946     		mov	r9, r3	@ _172, expval
 2135 0454 9846     		mov	r8, r3	@ _106, expval
 2136 0456 0D93     		str	r3, [sp, #52]	@ expval, %sfp
 2137              	@ src/pdantler/printf.c:537:       minwidth = 0U;
 537:src/pdantler/printf.c ****       expval = 0;
 2138              		.loc 1 537 16 view .LVU455
 2139 0458 1093     		str	r3, [sp, #64]	@ expval, %sfp
 2140 045a 72E7     		b	.L174		@
 2141              	.LVL202:
 2142              	.L187:
 2143              	@ src/pdantler/printf.c:533:         prec = 0;
 533:src/pdantler/printf.c ****       }
 2144              		.loc 1 533 14 view .LVU456
 2145 045c 0023     		movs	r3, #0	@ prec,
 2146 045e 0A93     		str	r3, [sp, #40]	@ prec, %sfp
 2147              	.LVL203:
 533:src/pdantler/printf.c ****       }
 2148              		.loc 1 533 14 view .LVU457
 2149 0460 E0E6     		b	.L173		@
 2150              		.cfi_endproc
 2151              	.LFE12:
 2152              		.size	_etoa, .-_etoa
 2153 0462 00BF     		.section	.rodata._ftoa.str1.4,"aMS",%progbits,1
 2154              		.align	2
 2155              	.LC0:
 2156 0000 666E692B 		.ascii	"fni+\000"
 2156      00
 2157 0005 000000   		.align	2
 2158              	.LC1:
 2159 0008 666E6900 		.ascii	"fni\000"
 2160              		.align	2
 2161              	.LC2:
 2162 000c 6E616E00 		.ascii	"nan\000"
 2163              		.align	2
 2164              	.LC3:
 2165 0010 666E692D 		.ascii	"fni-\000"
 2165      00
 2166              		.global	__aeabi_d2uiz
 2167              		.global	__aeabi_ui2d
ARM GAS  /tmp/ccFy9xbE.s 			page 54


 2168              		.section	.text._ftoa,"ax",%progbits
 2169              		.align	1
 2170              		.p2align 4,,15
 2171              		.syntax unified
 2172              		.thumb
 2173              		.thumb_func
 2174              		.fpu fpv5-sp-d16
 2175              		.type	_ftoa, %function
 2176              	_ftoa:
 2177              	.LVL204:
 2178              	.LFB11:
 347:src/pdantler/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 2179              		.loc 1 347 41 is_stmt 1 view -0
 2180              		.cfi_startproc
 2181              		@ args = 20, pretend = 0, frame = 64
 2182              		@ frame_needed = 0, uses_anonymous_args = 0
 348:src/pdantler/printf.c ****   size_t len = 0U;
 2183              		.loc 1 348 3 view .LVU459
 349:src/pdantler/printf.c ****   double diff = 0.0;
 2184              		.loc 1 349 3 view .LVU460
 350:src/pdantler/printf.c **** 
 2185              		.loc 1 350 3 view .LVU461
 353:src/pdantler/printf.c ****                                  10000,     100000,    1000000, 10000000,
 2186              		.loc 1 353 3 view .LVU462
 358:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 2187              		.loc 1 358 3 view .LVU463
 2188              	@ src/pdantler/printf.c:347:                     unsigned int flags) {
 347:src/pdantler/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 2189              		.loc 1 347 41 is_stmt 0 view .LVU464
 2190 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2191              	.LCFI28:
 2192              		.cfi_def_cfa_offset 36
 2193              		.cfi_offset 4, -36
 2194              		.cfi_offset 5, -32
 2195              		.cfi_offset 6, -28
 2196              		.cfi_offset 7, -24
 2197              		.cfi_offset 8, -20
 2198              		.cfi_offset 9, -16
 2199              		.cfi_offset 10, -12
 2200              		.cfi_offset 11, -8
 2201              		.cfi_offset 14, -4
 2202 0004 2DED048B 		vpush.64	{d8, d9}	@
 2203              	.LCFI29:
 2204              		.cfi_def_cfa_offset 52
 2205              		.cfi_offset 80, -52
 2206              		.cfi_offset 81, -48
 2207              		.cfi_offset 82, -44
 2208              		.cfi_offset 83, -40
 2209 0008 95B0     		sub	sp, sp, #84	@,,
 2210              	.LCFI30:
 2211              		.cfi_def_cfa_offset 136
 2212              	@ src/pdantler/printf.c:347:                     unsigned int flags) {
 347:src/pdantler/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 2213              		.loc 1 347 41 view .LVU465
 2214 000a 9B46     		mov	fp, r3	@ maxlen, tmp323
 2215 000c 9246     		mov	r10, r2	@ idx, tmp322
 2216 000e DDE92463 		ldrd	r6, r3, [sp, #144]	@ prec, width,,
ARM GAS  /tmp/ccFy9xbE.s 			page 55


 2217              	.LVL205:
 347:src/pdantler/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 2218              		.loc 1 347 41 view .LVU466
 2219 0012 DDE92289 		ldrd	r8, [sp, #136]	@ value,,
 2220 0016 0593     		str	r3, [sp, #20]	@ width, %sfp
 2221 0018 269B     		ldr	r3, [sp, #152]	@ flags, flags
 2222              	@ src/pdantler/printf.c:358:   if (value != value)
 358:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 2223              		.loc 1 358 6 view .LVU467
 2224 001a 4246     		mov	r2, r8	@, value
 2225              	.LVL206:
 2226              	@ src/pdantler/printf.c:347:                     unsigned int flags) {
 347:src/pdantler/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 2227              		.loc 1 347 41 view .LVU468
 2228 001c CDE90601 		strd	r0, r1, [sp, #24]	@ tmp320, tmp321,,
 2229 0020 0493     		str	r3, [sp, #16]	@ flags, %sfp
 2230              	@ src/pdantler/printf.c:358:   if (value != value)
 358:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 2231              		.loc 1 358 6 view .LVU469
 2232 0022 4046     		mov	r0, r8	@, value
 2233              	.LVL207:
 358:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 2234              		.loc 1 358 6 view .LVU470
 2235 0024 4B46     		mov	r3, r9	@, value
 2236 0026 4946     		mov	r1, r9	@, value
 2237              	.LVL208:
 358:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 2238              		.loc 1 358 6 view .LVU471
 2239 0028 FFF7FEFF 		bl	__aeabi_dcmpeq		@
 2240              	.LVL209:
 2241 002c 0028     		cmp	r0, #0	@ tmp324
 2242 002e 00F0F980 		beq	.L339	@
 360:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 2243              		.loc 1 360 3 is_stmt 1 view .LVU472
 2244              	@ src/pdantler/printf.c:360:   if (value < -DBL_MAX)
 360:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 2245              		.loc 1 360 6 is_stmt 0 view .LVU473
 2246 0032 4FF0FF32 		mov	r2, #-1	@,
 2247 0036 6FF48013 		mvn	r3, #1048576	@,
 2248 003a 4046     		mov	r0, r8	@, value
 2249 003c 4946     		mov	r1, r9	@, value
 2250 003e FFF7FEFF 		bl	__aeabi_dcmplt		@
 2251              	.LVL210:
 2252 0042 0028     		cmp	r0, #0	@ tmp325
 2253 0044 40F02281 		bne	.L340	@
 362:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen,
 2254              		.loc 1 362 3 is_stmt 1 view .LVU474
 2255              	@ src/pdantler/printf.c:362:   if (value > DBL_MAX)
 362:src/pdantler/printf.c ****     return _out_rev(out, buffer, idx, maxlen,
 2256              		.loc 1 362 6 is_stmt 0 view .LVU475
 2257 0048 4FF0FF32 		mov	r2, #-1	@,
 2258 004c BC4B     		ldr	r3, .L348+16	@,
 2259 004e 4046     		mov	r0, r8	@, value
 2260 0050 4946     		mov	r1, r9	@, value
 2261 0052 FFF7FEFF 		bl	__aeabi_dcmpgt		@
 2262              	.LVL211:
 2263 0056 0028     		cmp	r0, #0	@ tmp326
ARM GAS  /tmp/ccFy9xbE.s 			page 56


 2264 0058 40F0C980 		bne	.L341	@
 370:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 2265              		.loc 1 370 3 is_stmt 1 view .LVU476
 2266              	@ src/pdantler/printf.c:370:   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 370:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 2267              		.loc 1 370 6 is_stmt 0 view .LVU477
 2268 005c 4046     		mov	r0, r8	@, value
 2269 005e 4946     		mov	r1, r9	@, value
 2270 0060 B3A3     		adr	r3, .L348	@,
 2271 0062 D3E90023 		ldrd	r2, [r3]	@,
 2272 0066 FFF7FEFF 		bl	__aeabi_dcmpgt		@
 2273              	.LVL212:
 2274 006a 0028     		cmp	r0, #0	@ tmp327
 2275 006c 40F0FC80 		bne	.L234	@
 2276              	@ src/pdantler/printf.c:370:   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 370:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 2277              		.loc 1 370 34 discriminator 1 view .LVU478
 2278 0070 4046     		mov	r0, r8	@, value
 2279 0072 4946     		mov	r1, r9	@, value
 2280 0074 B0A3     		adr	r3, .L348+8	@,
 2281 0076 D3E90023 		ldrd	r2, [r3]	@,
 2282 007a FFF7FEFF 		bl	__aeabi_dcmplt		@
 2283              	.LVL213:
 2284 007e 0028     		cmp	r0, #0	@ tmp328
 2285 0080 40F0F280 		bne	.L234	@
 379:src/pdantler/printf.c ****   if (value < 0) {
 2286              		.loc 1 379 3 is_stmt 1 view .LVU479
 2287              	.LVL214:
 380:src/pdantler/printf.c ****     negative = true;
 2288              		.loc 1 380 3 view .LVU480
 2289              	@ src/pdantler/printf.c:380:   if (value < 0) {
 380:src/pdantler/printf.c ****     negative = true;
 2290              		.loc 1 380 6 is_stmt 0 view .LVU481
 2291 0084 0022     		movs	r2, #0	@,
 2292 0086 0023     		movs	r3, #0	@,
 2293 0088 4046     		mov	r0, r8	@, value
 2294 008a 4946     		mov	r1, r9	@, value
 2295 008c FFF7FEFF 		bl	__aeabi_dcmplt		@
 2296              	.LVL215:
 2297 0090 0028     		cmp	r0, #0	@ tmp202
 2298 0092 40F0DA80 		bne	.L342	@
 2299              	@ src/pdantler/printf.c:379:   bool negative = false;
 379:src/pdantler/printf.c ****   if (value < 0) {
 2300              		.loc 1 379 8 view .LVU482
 2301 0096 0990     		str	r0, [sp, #36]	@ tmp202, %sfp
 2302              	.LVL216:
 2303              	.L237:
 386:src/pdantler/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 2304              		.loc 1 386 3 is_stmt 1 view .LVU483
 2305              	@ src/pdantler/printf.c:386:   if (!(flags & FLAGS_PRECISION)) {
 386:src/pdantler/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 2306              		.loc 1 386 6 is_stmt 0 view .LVU484
 2307 0098 049B     		ldr	r3, [sp, #16]	@ flags, %sfp
 2308 009a 13F48064 		ands	r4, r3, #1024	@ len, flags,
 2309 009e 00F06C81 		beq	.L275		@,
 2310              	.LVL217:
 390:src/pdantler/printf.c ****     buf[len++] = '0';
ARM GAS  /tmp/ccFy9xbE.s 			page 57


 2311              		.loc 1 390 9 is_stmt 1 view .LVU485
 2312 00a2 092E     		cmp	r6, #9	@ prec,
 2313 00a4 40F2A381 		bls	.L343		@,
 2314 00a8 0CAB     		add	r3, sp, #48	@ tmp312,,
 2315 00aa 0024     		movs	r4, #0	@ len,
 2316              	@ src/pdantler/printf.c:391:     buf[len++] = '0';
 391:src/pdantler/printf.c ****     prec--;
 2317              		.loc 1 391 16 is_stmt 0 view .LVU486
 2318 00ac 3022     		movs	r2, #48	@ tmp207,
 2319 00ae 0893     		str	r3, [sp, #32]	@ tmp312, %sfp
 2320              	.LVL218:
 2321              	.L241:
 391:src/pdantler/printf.c ****     prec--;
 2322              		.loc 1 391 5 is_stmt 1 view .LVU487
 2323              	@ src/pdantler/printf.c:391:     buf[len++] = '0';
 391:src/pdantler/printf.c ****     prec--;
 2324              		.loc 1 391 12 is_stmt 0 view .LVU488
 2325 00b0 0134     		adds	r4, r4, #1	@ len, len,
 2326              	.LVL219:
 2327              	@ src/pdantler/printf.c:392:     prec--;
 392:src/pdantler/printf.c ****   }
 2328              		.loc 1 392 9 view .LVU489
 2329 00b2 013E     		subs	r6, r6, #1	@ prec, prec,
 2330              	.LVL220:
 2331              	@ src/pdantler/printf.c:391:     buf[len++] = '0';
 391:src/pdantler/printf.c ****     prec--;
 2332              		.loc 1 391 16 view .LVU490
 2333 00b4 03F8012B 		strb	r2, [r3], #1	@ tmp207, MEM[base: _49, offset: 0B]
 392:src/pdantler/printf.c ****   }
 2334              		.loc 1 392 5 is_stmt 1 view .LVU491
 2335              	.LVL221:
 390:src/pdantler/printf.c ****     buf[len++] = '0';
 2336              		.loc 1 390 9 view .LVU492
 2337 00b8 1F2C     		cmp	r4, #31	@ len,
 2338 00ba 01D8     		bhi	.L282		@,
 2339 00bc 092E     		cmp	r6, #9	@ prec,
 2340 00be F7D8     		bhi	.L241		@,
 2341              	.L282:
 2342 00c0 9FED9B7B 		vldr.64	d7, .L348	@ prephitmp_123,
 2343 00c4 B0EE478A 		vmov.f32	s16, s14	@ prephitmp_123, prephitmp_123
 2344 00c8 F0EE678A 		vmov.f32	s17, s15	@ prephitmp_123, prephitmp_123
 2345              	.LVL222:
 2346              	.L239:
 395:src/pdantler/printf.c ****   double tmp = (value - whole) * pow10[prec];
 2347              		.loc 1 395 3 view .LVU493
 2348              	@ src/pdantler/printf.c:395:   int whole = (int)value;
 395:src/pdantler/printf.c ****   double tmp = (value - whole) * pow10[prec];
 2349              		.loc 1 395 7 is_stmt 0 view .LVU494
 2350 00cc 4946     		mov	r1, r9	@, value
 2351 00ce 4046     		mov	r0, r8	@, value
 2352 00d0 FFF7FEFF 		bl	__aeabi_d2iz		@
 2353              	.LVL223:
 2354 00d4 0546     		mov	r5, r0	@ whole, tmp331
 2355              	.LVL224:
 396:src/pdantler/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2356              		.loc 1 396 3 is_stmt 1 view .LVU495
 2357              	@ src/pdantler/printf.c:396:   double tmp = (value - whole) * pow10[prec];
ARM GAS  /tmp/ccFy9xbE.s 			page 58


 396:src/pdantler/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2358              		.loc 1 396 23 is_stmt 0 view .LVU496
 2359 00d6 FFF7FEFF 		bl	__aeabi_i2d		@
 2360              	.LVL225:
 396:src/pdantler/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2361              		.loc 1 396 23 view .LVU497
 2362 00da 0246     		mov	r2, r0	@ tmp332,
 2363 00dc 0B46     		mov	r3, r1	@,
 2364 00de 4046     		mov	r0, r8	@, value
 2365 00e0 4946     		mov	r1, r9	@, value
 2366 00e2 FFF7FEFF 		bl	__aeabi_dsub		@
 2367              	.LVL226:
 2368              	@ src/pdantler/printf.c:396:   double tmp = (value - whole) * pow10[prec];
 396:src/pdantler/printf.c ****   unsigned long frac = (unsigned long)tmp;
 2369              		.loc 1 396 10 view .LVU498
 2370 00e6 53EC182B 		vmov	r2, r3, d8	@, prephitmp_123
 2371 00ea FFF7FEFF 		bl	__aeabi_dmul		@
 2372              	.LVL227:
 2373 00ee 0246     		mov	r2, r0	@ tmp333,
 2374 00f0 0B46     		mov	r3, r1	@,
 2375 00f2 43EC192B 		vmov	d9, r2, r3	@ tmp218, tmp333
 2376              	.LVL228:
 397:src/pdantler/printf.c ****   diff = tmp - frac;
 2377              		.loc 1 397 3 is_stmt 1 view .LVU499
 2378              	@ src/pdantler/printf.c:397:   unsigned long frac = (unsigned long)tmp;
 397:src/pdantler/printf.c ****   diff = tmp - frac;
 2379              		.loc 1 397 17 is_stmt 0 view .LVU500
 2380 00f6 FFF7FEFF 		bl	__aeabi_d2uiz		@
 2381              	.LVL229:
 397:src/pdantler/printf.c ****   diff = tmp - frac;
 2382              		.loc 1 397 17 view .LVU501
 2383 00fa 0746     		mov	r7, r0	@ frac, tmp334
 2384              	.LVL230:
 398:src/pdantler/printf.c **** 
 2385              		.loc 1 398 3 is_stmt 1 view .LVU502
 2386              	@ src/pdantler/printf.c:398:   diff = tmp - frac;
 398:src/pdantler/printf.c **** 
 2387              		.loc 1 398 14 is_stmt 0 view .LVU503
 2388 00fc FFF7FEFF 		bl	__aeabi_ui2d		@
 2389              	.LVL231:
 398:src/pdantler/printf.c **** 
 2390              		.loc 1 398 14 view .LVU504
 2391 0100 0246     		mov	r2, r0	@ tmp335,
 2392 0102 0B46     		mov	r3, r1	@,
 2393              	@ src/pdantler/printf.c:398:   diff = tmp - frac;
 398:src/pdantler/printf.c **** 
 2394              		.loc 1 398 8 view .LVU505
 2395 0104 51EC190B 		vmov	r0, r1, d9	@, tmp218
 2396 0108 FFF7FEFF 		bl	__aeabi_dsub		@
 2397              	.LVL232:
 2398 010c 0246     		mov	r2, r0	@ tmp336,
 2399 010e 0B46     		mov	r3, r1	@,
 2400 0110 CDE90A23 		strd	r2, [sp, #40]	@ tmp336,,
 2401              	.LVL233:
 400:src/pdantler/printf.c ****     ++frac;
 2402              		.loc 1 400 3 is_stmt 1 view .LVU506
 2403              	@ src/pdantler/printf.c:400:   if (diff > 0.5) {
ARM GAS  /tmp/ccFy9xbE.s 			page 59


 400:src/pdantler/printf.c ****     ++frac;
 2404              		.loc 1 400 6 is_stmt 0 view .LVU507
 2405 0114 0022     		movs	r2, #0	@,
 2406              	.LVL234:
 400:src/pdantler/printf.c ****     ++frac;
 2407              		.loc 1 400 6 view .LVU508
 2408 0116 8B4B     		ldr	r3, .L348+20	@,
 2409 0118 FFF7FEFF 		bl	__aeabi_dcmpgt		@
 2410              	.LVL235:
 2411 011c 0028     		cmp	r0, #0	@ tmp337
 2412 011e 00F01F81 		beq	.L331	@
 401:src/pdantler/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 2413              		.loc 1 401 5 is_stmt 1 view .LVU509
 2414 0122 0137     		adds	r7, r7, #1	@ frac, frac,
 2415              	.LVL236:
 403:src/pdantler/printf.c ****       frac = 0;
 2416              		.loc 1 403 5 view .LVU510
 2417              	@ src/pdantler/printf.c:403:     if (frac >= pow10[prec]) {
 403:src/pdantler/printf.c ****       frac = 0;
 2418              		.loc 1 403 14 is_stmt 0 view .LVU511
 2419 0124 3846     		mov	r0, r7	@, frac
 2420 0126 FFF7FEFF 		bl	__aeabi_ui2d		@
 2421              	.LVL237:
 2422              	@ src/pdantler/printf.c:403:     if (frac >= pow10[prec]) {
 403:src/pdantler/printf.c ****       frac = 0;
 2423              		.loc 1 403 8 view .LVU512
 2424 012a 53EC182B 		vmov	r2, r3, d8	@, prephitmp_123
 2425 012e FFF7FEFF 		bl	__aeabi_dcmpge		@
 2426              	.LVL238:
 2427 0132 08B1     		cbz	r0, .L245	@ tmp338,
 404:src/pdantler/printf.c ****       ++whole;
 2428              		.loc 1 404 7 is_stmt 1 view .LVU513
 2429              	.LVL239:
 405:src/pdantler/printf.c ****     }
 2430              		.loc 1 405 7 view .LVU514
 2431 0134 0135     		adds	r5, r5, #1	@ whole, whole,
 2432              	.LVL240:
 2433              	@ src/pdantler/printf.c:404:       frac = 0;
 404:src/pdantler/printf.c ****       ++whole;
 2434              		.loc 1 404 12 is_stmt 0 view .LVU515
 2435 0136 0027     		movs	r7, #0	@ frac,
 2436              	.LVL241:
 2437              	.L245:
 413:src/pdantler/printf.c ****     diff = value - (double)whole;
 2438              		.loc 1 413 3 is_stmt 1 view .LVU516
 2439              	@ src/pdantler/printf.c:413:   if (prec == 0U) {
 413:src/pdantler/printf.c ****     diff = value - (double)whole;
 2440              		.loc 1 413 6 is_stmt 0 view .LVU517
 2441 0138 002E     		cmp	r6, #0	@ prec
 2442 013a 40F0B380 		bne	.L248	@
 414:src/pdantler/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2443              		.loc 1 414 5 is_stmt 1 view .LVU518
 2444              	@ src/pdantler/printf.c:414:     diff = value - (double)whole;
 414:src/pdantler/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2445              		.loc 1 414 20 is_stmt 0 view .LVU519
 2446 013e 2846     		mov	r0, r5	@, whole
 2447 0140 FFF7FEFF 		bl	__aeabi_i2d		@
ARM GAS  /tmp/ccFy9xbE.s 			page 60


 2448              	.LVL242:
 2449 0144 0246     		mov	r2, r0	@ tmp340,
 2450 0146 0B46     		mov	r3, r1	@,
 2451              	@ src/pdantler/printf.c:414:     diff = value - (double)whole;
 414:src/pdantler/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2452              		.loc 1 414 10 view .LVU520
 2453 0148 4046     		mov	r0, r8	@, value
 2454 014a 4946     		mov	r1, r9	@, value
 2455 014c FFF7FEFF 		bl	__aeabi_dsub		@
 2456              	.LVL243:
 2457              	@ src/pdantler/printf.c:415:     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 415:src/pdantler/printf.c ****       // exactly 0.5 and ODD, then round up
 2458              		.loc 1 415 8 view .LVU521
 2459 0150 0022     		movs	r2, #0	@,
 2460 0152 7C4B     		ldr	r3, .L348+20	@,
 2461              	@ src/pdantler/printf.c:414:     diff = value - (double)whole;
 414:src/pdantler/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2462              		.loc 1 414 10 view .LVU522
 2463 0154 0646     		mov	r6, r0	@ tmp341,
 2464 0156 0F46     		mov	r7, r1	@,
 2465              	.LVL244:
 415:src/pdantler/printf.c ****       // exactly 0.5 and ODD, then round up
 2466              		.loc 1 415 5 is_stmt 1 view .LVU523
 2467              	@ src/pdantler/printf.c:415:     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 415:src/pdantler/printf.c ****       // exactly 0.5 and ODD, then round up
 2468              		.loc 1 415 8 is_stmt 0 view .LVU524
 2469 0158 FFF7FEFF 		bl	__aeabi_dcmplt		@
 2470              	.LVL245:
 2471 015c 0028     		cmp	r0, #0	@ tmp342
 2472 015e 7FD0     		beq	.L249	@
 2473              	@ src/pdantler/printf.c:415:     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 415:src/pdantler/printf.c ****       // exactly 0.5 and ODD, then round up
 2474              		.loc 1 415 24 discriminator 2 view .LVU525
 2475 0160 3046     		mov	r0, r6	@, tmp230
 2476 0162 3946     		mov	r1, r7	@,
 2477 0164 0022     		movs	r2, #0	@,
 2478 0166 774B     		ldr	r3, .L348+20	@,
 2479 0168 FFF7FEFF 		bl	__aeabi_dcmpgt		@
 2480              	.LVL246:
 2481 016c 0028     		cmp	r0, #0	@ tmp343
 2482 016e 77D1     		bne	.L249	@
 2483              	.LVL247:
 2484              	.L251:
 415:src/pdantler/printf.c ****       // exactly 0.5 and ODD, then round up
 2485              		.loc 1 415 24 discriminator 2 view .LVU526
 2486 0170 621E     		subs	r2, r4, #1	@ tmp276, len,
 2487 0172 089B     		ldr	r3, [sp, #32]	@ tmp312, %sfp
 2488              	@ src/pdantler/printf.c:442:     buf[len++] = (char)(48 + (whole % 10));
 442:src/pdantler/printf.c ****     if (!(whole /= 10)) {
 2489              		.loc 1 442 37 view .LVU527
 2490 0174 7449     		ldr	r1, .L348+24	@ tmp315,
 2491 0176 1A44     		add	r2, r2, r3	@ ivtmp.224, tmp312
 2492              	.L260:
 442:src/pdantler/printf.c ****     if (!(whole /= 10)) {
 2493              		.loc 1 442 5 is_stmt 1 view .LVU528
 2494              	.LVL248:
 441:src/pdantler/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
ARM GAS  /tmp/ccFy9xbE.s 			page 61


 2495              		.loc 1 441 9 view .LVU529
 2496              	@ src/pdantler/printf.c:442:     buf[len++] = (char)(48 + (whole % 10));
 442:src/pdantler/printf.c ****     if (!(whole /= 10)) {
 2497              		.loc 1 442 37 is_stmt 0 view .LVU530
 2498 0178 81FB0530 		smull	r3, r0, r1, r5	@ tmp383, tmp258, tmp315, whole
 2499              	@ src/pdantler/printf.c:441:   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 441:src/pdantler/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 2500              		.loc 1 441 9 view .LVU531
 2501 017c 202C     		cmp	r4, #32	@ len,
 2502              	@ src/pdantler/printf.c:442:     buf[len++] = (char)(48 + (whole % 10));
 442:src/pdantler/printf.c ****     if (!(whole /= 10)) {
 2503              		.loc 1 442 37 view .LVU532
 2504 017e 4FEAE573 		asr	r3, r5, #31	@ tmp261, whole,
 2505              	@ src/pdantler/printf.c:442:     buf[len++] = (char)(48 + (whole % 10));
 442:src/pdantler/printf.c ****     if (!(whole /= 10)) {
 2506              		.loc 1 442 12 view .LVU533
 2507 0182 04F10104 		add	r4, r4, #1	@ len, len,
 2508              	.LVL249:
 2509              	@ src/pdantler/printf.c:442:     buf[len++] = (char)(48 + (whole % 10));
 442:src/pdantler/printf.c ****     if (!(whole /= 10)) {
 2510              		.loc 1 442 37 view .LVU534
 2511 0186 C3EBA003 		rsb	r3, r3, r0, asr #2	@ tmp257, tmp261, tmp258,
 2512              	@ src/pdantler/printf.c:441:   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 441:src/pdantler/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 2513              		.loc 1 441 9 view .LVU535
 2514 018a 00F0A880 		beq	.L254		@,
 2515              	@ src/pdantler/printf.c:442:     buf[len++] = (char)(48 + (whole % 10));
 442:src/pdantler/printf.c ****     if (!(whole /= 10)) {
 2516              		.loc 1 442 37 view .LVU536
 2517 018e 03EB8300 		add	r0, r3, r3, lsl #2	@ tmp264, tmp257, tmp257,
 2518 0192 A5EB4000 		sub	r0, r5, r0, lsl #1	@ tmp266, whole, tmp264,
 2519              	@ src/pdantler/printf.c:443:     if (!(whole /= 10)) {
 443:src/pdantler/printf.c ****       break;
 2520              		.loc 1 443 8 view .LVU537
 2521 0196 1D46     		mov	r5, r3	@ whole, tmp257
 2522              	.LVL250:
 2523              	@ src/pdantler/printf.c:442:     buf[len++] = (char)(48 + (whole % 10));
 442:src/pdantler/printf.c ****     if (!(whole /= 10)) {
 2524              		.loc 1 442 18 view .LVU538
 2525 0198 00F13003 		add	r3, r0, #48	@ tmp268, tmp266,
 2526              	@ src/pdantler/printf.c:442:     buf[len++] = (char)(48 + (whole % 10));
 442:src/pdantler/printf.c ****     if (!(whole /= 10)) {
 2527              		.loc 1 442 16 view .LVU539
 2528 019c 02F8013F 		strb	r3, [r2, #1]!	@ tmp268, MEM[base: _179, offset: 0B]
 443:src/pdantler/printf.c ****       break;
 2529              		.loc 1 443 5 is_stmt 1 view .LVU540
 2530              	.LVL251:
 2531              	@ src/pdantler/printf.c:443:     if (!(whole /= 10)) {
 443:src/pdantler/printf.c ****       break;
 2532              		.loc 1 443 8 is_stmt 0 view .LVU541
 2533 01a0 002D     		cmp	r5, #0	@ whole
 2534 01a2 E9D1     		bne	.L260	@
 449:src/pdantler/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2535              		.loc 1 449 3 is_stmt 1 view .LVU542
 2536              	@ src/pdantler/printf.c:449:   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 449:src/pdantler/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2537              		.loc 1 449 29 is_stmt 0 view .LVU543
ARM GAS  /tmp/ccFy9xbE.s 			page 62


 2538 01a4 049B     		ldr	r3, [sp, #16]	@ flags, %sfp
 2539 01a6 03F00303 		and	r3, r3, #3	@ tmp278, flags,
 2540              	@ src/pdantler/printf.c:449:   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 449:src/pdantler/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2541              		.loc 1 449 6 view .LVU544
 2542 01aa 012B     		cmp	r3, #1	@ tmp278,
 2543 01ac 00F09E80 		beq	.L262		@,
 2544              	.LVL252:
 2545              	.L264:
 458:src/pdantler/printf.c ****     if (negative) {
 2546              		.loc 1 458 3 is_stmt 1 view .LVU545
 2547              	@ src/pdantler/printf.c:458:   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 458:src/pdantler/printf.c ****     if (negative) {
 2548              		.loc 1 458 6 is_stmt 0 view .LVU546
 2549 01b0 202C     		cmp	r4, #32	@ len,
 2550 01b2 0AD0     		beq	.L263		@,
 459:src/pdantler/printf.c ****       buf[len++] = '-';
 2551              		.loc 1 459 5 is_stmt 1 view .LVU547
 2552              	@ src/pdantler/printf.c:459:     if (negative) {
 459:src/pdantler/printf.c ****       buf[len++] = '-';
 2553              		.loc 1 459 8 is_stmt 0 view .LVU548
 2554 01b4 099B     		ldr	r3, [sp, #36]	@ negative, %sfp
 2555 01b6 002B     		cmp	r3, #0	@ negative
 2556 01b8 00F0E980 		beq	.L271	@
 460:src/pdantler/printf.c ****     } else if (flags & FLAGS_PLUS) {
 2557              		.loc 1 460 7 is_stmt 1 view .LVU549
 2558              	.LVL253:
 2559              	@ src/pdantler/printf.c:460:       buf[len++] = '-';
 460:src/pdantler/printf.c ****     } else if (flags & FLAGS_PLUS) {
 2560              		.loc 1 460 18 is_stmt 0 view .LVU550
 2561 01bc 2D22     		movs	r2, #45	@ tmp297,
 2562              	.LVL254:
 2563              	.L336:
 2564              	@ src/pdantler/printf.c:462:       buf[len++] = '+'; // ignore the space if the '+' exists
 462:src/pdantler/printf.c ****     } else if (flags & FLAGS_SPACE) {
 2565              		.loc 1 462 18 view .LVU551
 2566 01be 04F15003 		add	r3, r4, #80	@ tmp436, len,
 2567 01c2 0134     		adds	r4, r4, #1	@ len, len,
 2568 01c4 6B44     		add	r3, sp, r3	@ tmp300,, tmp436
 2569 01c6 03F8202C 		strb	r2, [r3, #-32]	@ tmp301, buf[len_39]
 2570              	.LVL255:
 2571              	.L263:
 468:src/pdantler/printf.c **** }
 2572              		.loc 1 468 3 is_stmt 1 view .LVU552
 2573              	@ src/pdantler/printf.c:468:   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 468:src/pdantler/printf.c **** }
 2574              		.loc 1 468 10 is_stmt 0 view .LVU553
 2575 01ca 049B     		ldr	r3, [sp, #16]	@ flags, %sfp
 2576 01cc 5246     		mov	r2, r10	@, idx
 2577 01ce 0393     		str	r3, [sp, #12]	@ flags,
 2578 01d0 059B     		ldr	r3, [sp, #20]	@ width, %sfp
 2579 01d2 CDE90143 		strd	r4, r3, [sp, #4]	@ len, width,,
 2580 01d6 089C     		ldr	r4, [sp, #32]	@ tmp312, %sfp
 2581              	.LVL256:
 468:src/pdantler/printf.c **** }
 2582              		.loc 1 468 10 view .LVU554
 2583 01d8 5B46     		mov	r3, fp	@, maxlen
ARM GAS  /tmp/ccFy9xbE.s 			page 63


 2584 01da DDE90601 		ldrd	r0, r1, [sp, #24]	@,,,
 2585 01de 0094     		str	r4, [sp]	@ tmp312,
 2586 01e0 FFF7FEFF 		bl	_out_rev		@
 2587              	.LVL257:
 2588              	@ src/pdantler/printf.c:469: }
 469:src/pdantler/printf.c **** 
 2589              		.loc 1 469 1 view .LVU555
 2590 01e4 15B0     		add	sp, sp, #84	@,,
 2591              	.LCFI31:
 2592              		.cfi_remember_state
 2593              		.cfi_def_cfa_offset 52
 2594              		@ sp needed	@
 2595 01e6 BDEC048B 		vldm	sp!, {d8-d9}	@,
 2596              	.LCFI32:
 2597              		.cfi_restore 82
 2598              		.cfi_restore 83
 2599              		.cfi_restore 80
 2600              		.cfi_restore 81
 2601              		.cfi_def_cfa_offset 36
 2602              	.LVL258:
 469:src/pdantler/printf.c **** 
 2603              		.loc 1 469 1 view .LVU556
 2604 01ea BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 2605              	.LVL259:
 2606              	.L341:
 2607              	.LCFI33:
 2608              		.cfi_restore_state
 363:src/pdantler/printf.c ****                     (flags & FLAGS_PLUS) ? "fni+" : "fni",
 2609              		.loc 1 363 5 is_stmt 1 view .LVU557
 2610              	@ src/pdantler/printf.c:363:     return _out_rev(out, buffer, idx, maxlen,
 363:src/pdantler/printf.c ****                     (flags & FLAGS_PLUS) ? "fni+" : "fni",
 2611              		.loc 1 363 12 is_stmt 0 view .LVU558
 2612 01ee 049C     		ldr	r4, [sp, #16]	@ flags, %sfp
 2613 01f0 5246     		mov	r2, r10	@, idx
 2614 01f2 564D     		ldr	r5, .L348+28	@ tmp314,
 2615 01f4 2594     		str	r4, [sp, #148]	@ flags,
 2616              	.LVL260:
 2617              	@ src/pdantler/printf.c:364:                     (flags & FLAGS_PLUS) ? "fni+" : "fni",
 364:src/pdantler/printf.c ****                     (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
 2618              		.loc 1 364 28 view .LVU559
 2619 01f6 04F00404 		and	r4, r4, #4	@ tmp196, flags,
 2620              	@ src/pdantler/printf.c:363:     return _out_rev(out, buffer, idx, maxlen,
 363:src/pdantler/printf.c ****                     (flags & FLAGS_PLUS) ? "fni+" : "fni",
 2621              		.loc 1 363 12 view .LVU560
 2622 01fa 059B     		ldr	r3, [sp, #20]	@ width, %sfp
 2623 01fc 002C     		cmp	r4, #0	@ tmp196,
 2624 01fe 544C     		ldr	r4, .L348+32	@ tmp313,
 2625 0200 2493     		str	r3, [sp, #144]	@ width,
 2626              	.LVL261:
 363:src/pdantler/printf.c ****                     (flags & FLAGS_PLUS) ? "fni+" : "fni",
 2627              		.loc 1 363 12 view .LVU561
 2628 0202 5B46     		mov	r3, fp	@, maxlen
 2629 0204 08BF     		it	eq
 2630 0206 2C46     		moveq	r4, r5	@ iftmp.89_216, tmp314
 2631 0208 DDE90601 		ldrd	r0, r1, [sp, #24]	@,,,
 2632 020c 2294     		str	r4, [sp, #136]	@ iftmp.89_216,
 2633              	.LVL262:
ARM GAS  /tmp/ccFy9xbE.s 			page 64


 363:src/pdantler/printf.c ****                     (flags & FLAGS_PLUS) ? "fni+" : "fni",
 2634              		.loc 1 363 12 view .LVU562
 2635 020e 14BF     		ite	ne
 2636 0210 0424     		movne	r4, #4	@ iftmp.90_50,
 2637 0212 0324     		moveq	r4, #3	@ iftmp.90_50,
 2638 0214 2394     		str	r4, [sp, #140]	@ iftmp.90_50,
 2639              	@ src/pdantler/printf.c:469: }
 469:src/pdantler/printf.c **** 
 2640              		.loc 1 469 1 view .LVU563
 2641 0216 15B0     		add	sp, sp, #84	@,,
 2642              	.LCFI34:
 2643              		.cfi_remember_state
 2644              		.cfi_def_cfa_offset 52
 2645              		@ sp needed	@
 2646 0218 BDEC048B 		vldm	sp!, {d8-d9}	@,
 2647              	.LCFI35:
 2648              		.cfi_restore 82
 2649              		.cfi_restore 83
 2650              		.cfi_restore 80
 2651              		.cfi_restore 81
 2652              		.cfi_def_cfa_offset 36
 2653 021c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2654              	.LCFI36:
 2655              		.cfi_restore 14
 2656              		.cfi_restore 11
 2657              		.cfi_restore 10
 2658              		.cfi_restore 9
 2659              		.cfi_restore 8
 2660              		.cfi_restore 7
 2661              		.cfi_restore 6
 2662              		.cfi_restore 5
 2663              		.cfi_restore 4
 2664              		.cfi_def_cfa_offset 0
 2665              	.LVL263:
 2666              	@ src/pdantler/printf.c:361:     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags)
 361:src/pdantler/printf.c ****   if (value > DBL_MAX)
 2667              		.loc 1 361 12 view .LVU564
 2668 0220 FFF7FEBF 		b	_out_rev		@
 2669              	.LVL264:
 2670              	.L339:
 2671              	.LCFI37:
 2672              		.cfi_restore_state
 359:src/pdantler/printf.c ****   if (value < -DBL_MAX)
 2673              		.loc 1 359 5 is_stmt 1 view .LVU565
 2674              	@ src/pdantler/printf.c:359:     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 359:src/pdantler/printf.c ****   if (value < -DBL_MAX)
 2675              		.loc 1 359 12 is_stmt 0 view .LVU566
 2676 0224 059C     		ldr	r4, [sp, #20]	@ width, %sfp
 2677 0226 5246     		mov	r2, r10	@, idx
 2678 0228 049B     		ldr	r3, [sp, #16]	@ flags, %sfp
 2679 022a 2494     		str	r4, [sp, #144]	@ width,
 2680              	.LVL265:
 359:src/pdantler/printf.c ****   if (value < -DBL_MAX)
 2681              		.loc 1 359 12 view .LVU567
 2682 022c 0324     		movs	r4, #3	@ tmp188,
 2683 022e 2593     		str	r3, [sp, #148]	@ flags,
 2684              	.LVL266:
ARM GAS  /tmp/ccFy9xbE.s 			page 65


 359:src/pdantler/printf.c ****   if (value < -DBL_MAX)
 2685              		.loc 1 359 12 view .LVU568
 2686 0230 5B46     		mov	r3, fp	@, maxlen
 2687 0232 2394     		str	r4, [sp, #140]	@ tmp188,
 2688              	.LVL267:
 359:src/pdantler/printf.c ****   if (value < -DBL_MAX)
 2689              		.loc 1 359 12 view .LVU569
 2690 0234 474C     		ldr	r4, .L348+36	@ tmp189,
 2691 0236 DDE90601 		ldrd	r0, r1, [sp, #24]	@,,,
 2692              	.LVL268:
 2693              	.L337:
 2694              	@ src/pdantler/printf.c:361:     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags)
 361:src/pdantler/printf.c ****   if (value > DBL_MAX)
 2695              		.loc 1 361 12 view .LVU570
 2696 023a 2294     		str	r4, [sp, #136]	@ tmp193,
 2697              	@ src/pdantler/printf.c:469: }
 469:src/pdantler/printf.c **** 
 2698              		.loc 1 469 1 view .LVU571
 2699 023c 15B0     		add	sp, sp, #84	@,,
 2700              	.LCFI38:
 2701              		.cfi_remember_state
 2702              		.cfi_def_cfa_offset 52
 2703              		@ sp needed	@
 2704 023e BDEC048B 		vldm	sp!, {d8-d9}	@,
 2705              	.LCFI39:
 2706              		.cfi_restore 82
 2707              		.cfi_restore 83
 2708              		.cfi_restore 80
 2709              		.cfi_restore 81
 2710              		.cfi_def_cfa_offset 36
 2711 0242 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2712              	.LCFI40:
 2713              		.cfi_restore 14
 2714              		.cfi_restore 11
 2715              		.cfi_restore 10
 2716              		.cfi_restore 9
 2717              		.cfi_restore 8
 2718              		.cfi_restore 7
 2719              		.cfi_restore 6
 2720              		.cfi_restore 5
 2721              		.cfi_restore 4
 2722              		.cfi_def_cfa_offset 0
 2723              	.LVL269:
 2724              	@ src/pdantler/printf.c:361:     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags)
 361:src/pdantler/printf.c ****   if (value > DBL_MAX)
 2725              		.loc 1 361 12 view .LVU572
 2726 0246 FFF7FEBF 		b	_out_rev		@
 2727              	.LVL270:
 2728              	.L342:
 2729              	.LCFI41:
 2730              		.cfi_restore_state
 381:src/pdantler/printf.c ****     value = 0 - value;
 2731              		.loc 1 381 5 is_stmt 1 view .LVU573
 382:src/pdantler/printf.c ****   }
 2732              		.loc 1 382 5 view .LVU574
 2733              	@ src/pdantler/printf.c:381:     negative = true;
 381:src/pdantler/printf.c ****     value = 0 - value;
ARM GAS  /tmp/ccFy9xbE.s 			page 66


 2734              		.loc 1 381 14 is_stmt 0 view .LVU575
 2735 024a 0121     		movs	r1, #1	@ negative,
 2736              	@ src/pdantler/printf.c:382:     value = 0 - value;
 382:src/pdantler/printf.c ****   }
 2737              		.loc 1 382 11 view .LVU576
 2738 024c 4246     		mov	r2, r8	@, value
 2739 024e 4B46     		mov	r3, r9	@, value
 2740 0250 0020     		movs	r0, #0	@,
 2741              	@ src/pdantler/printf.c:381:     negative = true;
 381:src/pdantler/printf.c ****     value = 0 - value;
 2742              		.loc 1 381 14 view .LVU577
 2743 0252 0991     		str	r1, [sp, #36]	@ negative, %sfp
 2744              	@ src/pdantler/printf.c:382:     value = 0 - value;
 382:src/pdantler/printf.c ****   }
 2745              		.loc 1 382 11 view .LVU578
 2746 0254 0021     		movs	r1, #0	@,
 2747 0256 FFF7FEFF 		bl	__aeabi_dsub		@
 2748              	.LVL271:
 2749 025a 8046     		mov	r8, r0	@ value, tmp330
 2750 025c 8946     		mov	r9, r1	@ value,
 2751              	.LVL272:
 382:src/pdantler/printf.c ****   }
 2752              		.loc 1 382 11 view .LVU579
 2753 025e 1BE7     		b	.L237		@
 2754              	.LVL273:
 2755              	.L249:
 2756              	@ src/pdantler/printf.c:415:     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 415:src/pdantler/printf.c ****       // exactly 0.5 and ODD, then round up
 2757              		.loc 1 415 41 discriminator 3 view .LVU580
 2758 0260 E907     		lsls	r1, r5, #31	@, whole,
 2759 0262 85D5     		bpl	.L251		@,
 418:src/pdantler/printf.c ****     }
 2760              		.loc 1 418 7 is_stmt 1 view .LVU581
 2761 0264 0135     		adds	r5, r5, #1	@ whole, whole,
 2762              	.LVL274:
 418:src/pdantler/printf.c ****     }
 2763              		.loc 1 418 7 is_stmt 0 view .LVU582
 2764 0266 83E7     		b	.L251		@
 2765              	.LVL275:
 2766              	.L234:
 372:src/pdantler/printf.c **** #else
 2767              		.loc 1 372 5 is_stmt 1 view .LVU583
 2768              	@ src/pdantler/printf.c:372:     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 372:src/pdantler/printf.c **** #else
 2769              		.loc 1 372 12 is_stmt 0 view .LVU584
 2770 0268 049B     		ldr	r3, [sp, #16]	@ flags, %sfp
 2771 026a 5246     		mov	r2, r10	@, idx
 2772 026c 2496     		str	r6, [sp, #144]	@ prec,
 2773              	.LVL276:
 372:src/pdantler/printf.c **** #else
 2774              		.loc 1 372 12 view .LVU585
 2775 026e 2693     		str	r3, [sp, #152]	@ flags,
 2776              	.LVL277:
 372:src/pdantler/printf.c **** #else
 2777              		.loc 1 372 12 view .LVU586
 2778 0270 059B     		ldr	r3, [sp, #20]	@ width, %sfp
 2779 0272 DDE90601 		ldrd	r0, r1, [sp, #24]	@,,,
ARM GAS  /tmp/ccFy9xbE.s 			page 67


 2780 0276 2593     		str	r3, [sp, #148]	@ width,
 2781              	.LVL278:
 372:src/pdantler/printf.c **** #else
 2782              		.loc 1 372 12 view .LVU587
 2783 0278 5B46     		mov	r3, fp	@, maxlen
 2784 027a CDE92289 		strd	r8, [sp, #136]	@ value,,
 2785              	.LVL279:
 2786              	@ src/pdantler/printf.c:469: }
 469:src/pdantler/printf.c **** 
 2787              		.loc 1 469 1 view .LVU588
 2788 027e 15B0     		add	sp, sp, #84	@,,
 2789              	.LCFI42:
 2790              		.cfi_remember_state
 2791              		.cfi_def_cfa_offset 52
 2792              		@ sp needed	@
 2793 0280 BDEC048B 		vldm	sp!, {d8-d9}	@,
 2794              	.LCFI43:
 2795              		.cfi_restore 82
 2796              		.cfi_restore 83
 2797              		.cfi_restore 80
 2798              		.cfi_restore 81
 2799              		.cfi_def_cfa_offset 36
 2800 0284 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2801              	.LCFI44:
 2802              		.cfi_restore 14
 2803              		.cfi_restore 11
 2804              		.cfi_restore 10
 2805              		.cfi_restore 9
 2806              		.cfi_restore 8
 2807              		.cfi_restore 7
 2808              		.cfi_restore 6
 2809              		.cfi_restore 5
 2810              		.cfi_restore 4
 2811              		.cfi_def_cfa_offset 0
 2812              	.LVL280:
 2813              	@ src/pdantler/printf.c:372:     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 372:src/pdantler/printf.c **** #else
 2814              		.loc 1 372 12 view .LVU589
 2815 0288 FFF7FEBF 		b	_etoa		@
 2816              	.LVL281:
 2817              	.L340:
 2818              	.LCFI45:
 2819              		.cfi_restore_state
 361:src/pdantler/printf.c ****   if (value > DBL_MAX)
 2820              		.loc 1 361 5 is_stmt 1 view .LVU590
 2821              	@ src/pdantler/printf.c:361:     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags)
 361:src/pdantler/printf.c ****   if (value > DBL_MAX)
 2822              		.loc 1 361 12 is_stmt 0 view .LVU591
 2823 028c 059C     		ldr	r4, [sp, #20]	@ width, %sfp
 2824 028e 5246     		mov	r2, r10	@, idx
 2825 0290 049B     		ldr	r3, [sp, #16]	@ flags, %sfp
 2826 0292 2494     		str	r4, [sp, #144]	@ width,
 2827              	.LVL282:
 361:src/pdantler/printf.c ****   if (value > DBL_MAX)
 2828              		.loc 1 361 12 view .LVU592
 2829 0294 0424     		movs	r4, #4	@ tmp192,
 2830 0296 2593     		str	r3, [sp, #148]	@ flags,
ARM GAS  /tmp/ccFy9xbE.s 			page 68


 2831              	.LVL283:
 361:src/pdantler/printf.c ****   if (value > DBL_MAX)
 2832              		.loc 1 361 12 view .LVU593
 2833 0298 5B46     		mov	r3, fp	@, maxlen
 2834 029a 2394     		str	r4, [sp, #140]	@ tmp192,
 2835              	.LVL284:
 361:src/pdantler/printf.c ****   if (value > DBL_MAX)
 2836              		.loc 1 361 12 view .LVU594
 2837 029c 2E4C     		ldr	r4, .L348+40	@ tmp193,
 2838 029e DDE90601 		ldrd	r0, r1, [sp, #24]	@,,,
 2839 02a2 CAE7     		b	.L337		@
 2840              	.LVL285:
 2841              	.L248:
 361:src/pdantler/printf.c ****   if (value > DBL_MAX)
 2842              		.loc 1 361 12 view .LVU595
 2843 02a4 601E     		subs	r0, r4, #1	@ tmp250, len,
 2844 02a6 089B     		ldr	r3, [sp, #32]	@ tmp312, %sfp
 2845              	.LBB28:
 2846              	@ src/pdantler/printf.c:425:       buf[len++] = (char)(48U + (frac % 10U));
 425:src/pdantler/printf.c ****       if (!(frac /= 10U)) {
 2847              		.loc 1 425 39 view .LVU596
 2848 02a8 DFF8B0E0 		ldr	lr, .L348+44	@ tmp316,
 2849 02ac 1844     		add	r0, r0, r3	@ ivtmp.243, tmp312
 2850 02ae 10E0     		b	.L253		@
 2851              	.LVL286:
 2852              	.L257:
 425:src/pdantler/printf.c ****       if (!(frac /= 10U)) {
 2853              		.loc 1 425 39 view .LVU597
 2854 02b0 AEFB0723 		umull	r2, r3, lr, r7	@ tmp382, tmp237, tmp316, frac
 2855              	@ src/pdantler/printf.c:426:       if (!(frac /= 10U)) {
 426:src/pdantler/printf.c ****         break;
 2856              		.loc 1 426 10 view .LVU598
 2857 02b4 092F     		cmp	r7, #9	@ frac,
 2858              	@ src/pdantler/printf.c:425:       buf[len++] = (char)(48U + (frac % 10U));
 425:src/pdantler/printf.c ****       if (!(frac /= 10U)) {
 2859              		.loc 1 425 39 view .LVU599
 2860 02b6 4FEAD303 		lsr	r3, r3, #3	@ tmp236, tmp237,
 2861 02ba 03EB8302 		add	r2, r3, r3, lsl #2	@ tmp241, tmp236, tmp236,
 2862 02be A7EB4202 		sub	r2, r7, r2, lsl #1	@ tmp243, frac, tmp241,
 2863              	@ src/pdantler/printf.c:426:       if (!(frac /= 10U)) {
 426:src/pdantler/printf.c ****         break;
 2864              		.loc 1 426 18 view .LVU600
 2865 02c2 1F46     		mov	r7, r3	@ frac, tmp236
 2866              	.LVL287:
 2867              	@ src/pdantler/printf.c:425:       buf[len++] = (char)(48U + (frac % 10U));
 425:src/pdantler/printf.c ****       if (!(frac /= 10U)) {
 2868              		.loc 1 425 20 view .LVU601
 2869 02c4 02F13002 		add	r2, r2, #48	@ tmp245, tmp243,
 2870              	@ src/pdantler/printf.c:425:       buf[len++] = (char)(48U + (frac % 10U));
 425:src/pdantler/printf.c ****       if (!(frac /= 10U)) {
 2871              		.loc 1 425 18 view .LVU602
 2872 02c8 00F8012F 		strb	r2, [r0, #1]!	@ tmp245, MEM[base: _30, offset: 0B]
 426:src/pdantler/printf.c ****         break;
 2873              		.loc 1 426 7 is_stmt 1 view .LVU603
 2874              	.LVL288:
 2875              	@ src/pdantler/printf.c:426:       if (!(frac /= 10U)) {
 426:src/pdantler/printf.c ****         break;
ARM GAS  /tmp/ccFy9xbE.s 			page 69


 2876              		.loc 1 426 10 is_stmt 0 view .LVU604
 2877 02cc 6FD9     		bls	.L344		@,
 2878              	@ src/pdantler/printf.c:424:       --count;
 424:src/pdantler/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 2879              		.loc 1 424 7 view .LVU605
 2880 02ce 6646     		mov	r6, ip	@ prec, count
 2881              	@ src/pdantler/printf.c:425:       buf[len++] = (char)(48U + (frac % 10U));
 425:src/pdantler/printf.c ****       if (!(frac /= 10U)) {
 2882              		.loc 1 425 14 view .LVU606
 2883 02d0 0C46     		mov	r4, r1	@ len, len
 2884              	.LVL289:
 2885              	.L253:
 424:src/pdantler/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 2886              		.loc 1 424 7 is_stmt 1 view .LVU607
 423:src/pdantler/printf.c ****       --count;
 2887              		.loc 1 423 11 view .LVU608
 2888 02d2 202C     		cmp	r4, #32	@ len,
 2889              	@ src/pdantler/printf.c:424:       --count;
 424:src/pdantler/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 2890              		.loc 1 424 7 is_stmt 0 view .LVU609
 2891 02d4 06F1FF3C 		add	ip, r6, #-1	@ count, prec,
 2892              	.LVL290:
 425:src/pdantler/printf.c ****       if (!(frac /= 10U)) {
 2893              		.loc 1 425 7 is_stmt 1 view .LVU610
 2894              	@ src/pdantler/printf.c:425:       buf[len++] = (char)(48U + (frac % 10U));
 425:src/pdantler/printf.c ****       if (!(frac /= 10U)) {
 2895              		.loc 1 425 14 is_stmt 0 view .LVU611
 2896 02d8 04F10101 		add	r1, r4, #1	@ len, len,
 2897              	.LVL291:
 2898              	@ src/pdantler/printf.c:423:     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 423:src/pdantler/printf.c ****       --count;
 2899              		.loc 1 423 11 view .LVU612
 2900 02dc E8D1     		bne	.L257		@,
 2901              	.LVL292:
 2902              	.L254:
 423:src/pdantler/printf.c ****       --count;
 2903              		.loc 1 423 11 view .LVU613
 2904              	.LBE28:
 449:src/pdantler/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2905              		.loc 1 449 3 is_stmt 1 view .LVU614
 2906              	@ src/pdantler/printf.c:449:   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 449:src/pdantler/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2907              		.loc 1 449 29 is_stmt 0 view .LVU615
 2908 02de 049B     		ldr	r3, [sp, #16]	@ flags, %sfp
 2909              	@ src/pdantler/printf.c:449:   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 449:src/pdantler/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2910              		.loc 1 449 6 view .LVU616
 2911 02e0 2024     		movs	r4, #32	@ len,
 2912              	@ src/pdantler/printf.c:449:   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 449:src/pdantler/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2913              		.loc 1 449 29 view .LVU617
 2914 02e2 03F00303 		and	r3, r3, #3	@ tmp277, flags,
 2915              	@ src/pdantler/printf.c:449:   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 449:src/pdantler/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2916              		.loc 1 449 6 view .LVU618
 2917 02e6 012B     		cmp	r3, #1	@ tmp277,
 2918 02e8 7FF46FAF 		bne	.L263		@,
ARM GAS  /tmp/ccFy9xbE.s 			page 70


 2919              	.LVL293:
 2920              	.L262:
 450:src/pdantler/printf.c ****       width--;
 2921              		.loc 1 450 5 is_stmt 1 view .LVU619
 2922              	@ src/pdantler/printf.c:450:     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 450:src/pdantler/printf.c ****       width--;
 2923              		.loc 1 450 8 is_stmt 0 view .LVU620
 2924 02ec 059B     		ldr	r3, [sp, #20]	@ width, %sfp
 2925 02ee 002B     		cmp	r3, #0	@ width
 2926 02f0 3FF45EAF 		beq	.L264	@
 2927              	@ src/pdantler/printf.c:450:     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 450:src/pdantler/printf.c ****       width--;
 2928              		.loc 1 450 15 discriminator 1 view .LVU621
 2929 02f4 099B     		ldr	r3, [sp, #36]	@ negative, %sfp
 2930 02f6 1BB9     		cbnz	r3, .L265	@ negative,
 2931              	@ src/pdantler/printf.c:450:     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 450:src/pdantler/printf.c ****       width--;
 2932              		.loc 1 450 28 discriminator 2 view .LVU622
 2933 02f8 049B     		ldr	r3, [sp, #16]	@ flags, %sfp
 2934 02fa 13F00C0F 		tst	r3, #12	@ flags,
 2935 02fe 02D0     		beq	.L266		@,
 2936              	.L265:
 451:src/pdantler/printf.c ****     }
 2937              		.loc 1 451 7 is_stmt 1 view .LVU623
 2938              	@ src/pdantler/printf.c:451:       width--;
 451:src/pdantler/printf.c ****     }
 2939              		.loc 1 451 12 is_stmt 0 view .LVU624
 2940 0300 059B     		ldr	r3, [sp, #20]	@ width, %sfp
 2941 0302 013B     		subs	r3, r3, #1	@ width, width,
 2942 0304 0593     		str	r3, [sp, #20]	@ width, %sfp
 2943              	.LVL294:
 2944              	.L266:
 453:src/pdantler/printf.c ****       buf[len++] = '0';
 2945              		.loc 1 453 11 is_stmt 1 view .LVU625
 2946 0306 1F2C     		cmp	r4, #31	@ len,
 2947 0308 3FF652AF 		bhi	.L264		@,
 2948 030c 059B     		ldr	r3, [sp, #20]	@ width, %sfp
 2949 030e A342     		cmp	r3, r4	@ width, len
 2950 0310 7FF64EAF 		bls	.L264		@,
 2951 0314 089A     		ldr	r2, [sp, #32]	@ tmp312, %sfp
 2952 0316 631E     		subs	r3, r4, #1	@ tmp281, len,
 2953              	@ src/pdantler/printf.c:454:       buf[len++] = '0';
 454:src/pdantler/printf.c ****     }
 2954              		.loc 1 454 18 is_stmt 0 view .LVU626
 2955 0318 0599     		ldr	r1, [sp, #20]	@ width, %sfp
 2956 031a 1344     		add	r3, r3, r2	@ ivtmp.218, tmp312
 2957 031c 3022     		movs	r2, #48	@ tmp282,
 2958              	.L267:
 454:src/pdantler/printf.c ****     }
 2959              		.loc 1 454 7 is_stmt 1 view .LVU627
 2960              	@ src/pdantler/printf.c:454:       buf[len++] = '0';
 454:src/pdantler/printf.c ****     }
 2961              		.loc 1 454 14 is_stmt 0 view .LVU628
 2962 031e 0134     		adds	r4, r4, #1	@ len, len,
 2963              	.LVL295:
 2964              	@ src/pdantler/printf.c:454:       buf[len++] = '0';
 454:src/pdantler/printf.c ****     }
ARM GAS  /tmp/ccFy9xbE.s 			page 71


 2965              		.loc 1 454 18 view .LVU629
 2966 0320 03F8012F 		strb	r2, [r3, #1]!	@ tmp282, MEM[base: _189, offset: 0B]
 453:src/pdantler/printf.c ****       buf[len++] = '0';
 2967              		.loc 1 453 11 is_stmt 1 view .LVU630
 2968 0324 8C42     		cmp	r4, r1	@ len, width
 2969 0326 BFF443AF 		bcs	.L264		@,
 2970 032a 1F2C     		cmp	r4, #31	@ len,
 2971 032c F7D9     		bls	.L267		@,
 2972 032e 3FE7     		b	.L264		@
 2973              	.L349:
 2974              		.align	3
 2975              	.L348:
 2976 0330 00000000 		.word	0
 2977 0334 65CDCD41 		.word	1104006501
 2978 0338 00000000 		.word	0
 2979 033c 65CDCDC1 		.word	-1043477147
 2980 0340 FFFFEF7F 		.word	2146435071
 2981 0344 0000E03F 		.word	1071644672
 2982 0348 67666666 		.word	1717986919
 2983 034c 08000000 		.word	.LC1
 2984 0350 00000000 		.word	.LC0
 2985 0354 0C000000 		.word	.LC2
 2986 0358 10000000 		.word	.LC3
 2987 035c CDCCCCCC 		.word	-858993459
 2988              	.LVL296:
 2989              	.L331:
 407:src/pdantler/printf.c ****   } else if ((frac == 0U) || (frac & 1U)) {
 2990              		.loc 1 407 10 view .LVU631
 2991              	@ src/pdantler/printf.c:407:   } else if (diff < 0.5) {
 407:src/pdantler/printf.c ****   } else if ((frac == 0U) || (frac & 1U)) {
 2992              		.loc 1 407 13 is_stmt 0 view .LVU632
 2993 0360 DDE90A01 		ldrd	r0, [sp, #40]	@,,
 2994 0364 0022     		movs	r2, #0	@,
 2995 0366 2C4B     		ldr	r3, .L350+8	@,
 2996 0368 FFF7FEFF 		bl	__aeabi_dcmplt		@
 2997              	.LVL297:
 2998 036c 0028     		cmp	r0, #0	@ tmp339
 2999 036e 7FF4E3AE 		bne	.L245	@
 408:src/pdantler/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 3000              		.loc 1 408 10 is_stmt 1 view .LVU633
 3001              	@ src/pdantler/printf.c:408:   } else if ((frac == 0U) || (frac & 1U)) {
 408:src/pdantler/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 3002              		.loc 1 408 13 is_stmt 0 view .LVU634
 3003 0372 002F     		cmp	r7, #0	@ frac
 3004 0374 37D1     		bne	.L345	@
 3005              	.L247:
 410:src/pdantler/printf.c ****   }
 3006              		.loc 1 410 5 is_stmt 1 view .LVU635
 3007 0376 0137     		adds	r7, r7, #1	@ frac, frac,
 3008              	.LVL298:
 410:src/pdantler/printf.c ****   }
 3009              		.loc 1 410 5 is_stmt 0 view .LVU636
 3010 0378 DEE6     		b	.L245		@
 3011              	.LVL299:
 3012              	.L275:
 410:src/pdantler/printf.c ****   }
 3013              		.loc 1 410 5 view .LVU637
ARM GAS  /tmp/ccFy9xbE.s 			page 72


 3014 037a 9FED257B 		vldr.64	d7, .L350	@ prephitmp_123,
 3015 037e 0CAB     		add	r3, sp, #48	@ tmp312,,
 3016              	@ src/pdantler/printf.c:387:     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 387:src/pdantler/printf.c ****   }
 3017              		.loc 1 387 10 view .LVU638
 3018 0380 0626     		movs	r6, #6	@ prec,
 3019 0382 B0EE478A 		vmov.f32	s16, s14	@ prephitmp_123, prephitmp_123
 3020 0386 F0EE678A 		vmov.f32	s17, s15	@ prephitmp_123, prephitmp_123
 3021 038a 0893     		str	r3, [sp, #32]	@ tmp312, %sfp
 3022 038c 9EE6     		b	.L239		@
 3023              	.LVL300:
 3024              	.L271:
 461:src/pdantler/printf.c ****       buf[len++] = '+'; // ignore the space if the '+' exists
 3025              		.loc 1 461 12 is_stmt 1 view .LVU639
 3026              	@ src/pdantler/printf.c:461:     } else if (flags & FLAGS_PLUS) {
 461:src/pdantler/printf.c ****       buf[len++] = '+'; // ignore the space if the '+' exists
 3027              		.loc 1 461 15 is_stmt 0 view .LVU640
 3028 038e 049B     		ldr	r3, [sp, #16]	@ flags, %sfp
 3029 0390 5A07     		lsls	r2, r3, #29	@, flags,
 3030 0392 26D4     		bmi	.L346		@,
 463:src/pdantler/printf.c ****       buf[len++] = ' ';
 3031              		.loc 1 463 12 is_stmt 1 view .LVU641
 3032              	@ src/pdantler/printf.c:463:     } else if (flags & FLAGS_SPACE) {
 463:src/pdantler/printf.c ****       buf[len++] = ' ';
 3033              		.loc 1 463 15 is_stmt 0 view .LVU642
 3034 0394 049B     		ldr	r3, [sp, #16]	@ flags, %sfp
 3035 0396 1B07     		lsls	r3, r3, #28	@, flags,
 3036 0398 7FF517AF 		bpl	.L263		@,
 464:src/pdantler/printf.c ****     }
 3037              		.loc 1 464 7 is_stmt 1 view .LVU643
 3038              	.LVL301:
 3039              	@ src/pdantler/printf.c:464:       buf[len++] = ' ';
 464:src/pdantler/printf.c ****     }
 3040              		.loc 1 464 18 is_stmt 0 view .LVU644
 3041 039c 2022     		movs	r2, #32	@ tmp305,
 3042 039e 04F13003 		add	r3, r4, #48	@ tmp426, len,
 3043 03a2 0134     		adds	r4, r4, #1	@ len, len,
 3044              	.LVL302:
 464:src/pdantler/printf.c ****     }
 3045              		.loc 1 464 18 view .LVU645
 3046 03a4 1344     		add	r3, r3, r2	@ tmp435,
 3047 03a6 6B44     		add	r3, sp, r3	@ tmp304,, tmp435
 3048 03a8 03F8202C 		strb	r2, [r3, #-32]	@ tmp305, buf[len_39]
 3049 03ac 0DE7     		b	.L263		@
 3050              	.LVL303:
 3051              	.L344:
 3052              	.LBB29:
 431:src/pdantler/printf.c ****       buf[len++] = '0';
 3053              		.loc 1 431 11 is_stmt 1 view .LVU646
 3054 03ae 2029     		cmp	r1, #32	@ len,
 3055 03b0 95D0     		beq	.L254		@,
 3056              	.LVL304:
 3057              	@ src/pdantler/printf.c:431:     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 431:src/pdantler/printf.c ****       buf[len++] = '0';
 3058              		.loc 1 431 44 is_stmt 0 view .LVU647
 3059 03b2 BCF1000F 		cmp	ip, #0	@ count
 3060 03b6 27D0     		beq	.L347	@
ARM GAS  /tmp/ccFy9xbE.s 			page 73


 3061 03b8 089B     		ldr	r3, [sp, #32]	@ tmp312, %sfp
 3062              	.LVL305:
 3063              	@ src/pdantler/printf.c:432:       buf[len++] = '0';
 432:src/pdantler/printf.c ****     }
 3064              		.loc 1 432 18 view .LVU648
 3065 03ba 3020     		movs	r0, #48	@ tmp252,
 3066 03bc 1A19     		adds	r2, r3, r4	@ ivtmp.233, tmp312, len
 3067              	@ src/pdantler/printf.c:431:     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 431:src/pdantler/printf.c ****       buf[len++] = '0';
 3068              		.loc 1 431 44 view .LVU649
 3069 03be 0C46     		mov	r4, r1	@ len, len
 3070              	.LVL306:
 3071              	.L258:
 432:src/pdantler/printf.c ****     }
 3072              		.loc 1 432 7 is_stmt 1 view .LVU650
 3073              	@ src/pdantler/printf.c:432:       buf[len++] = '0';
 432:src/pdantler/printf.c ****     }
 3074              		.loc 1 432 14 is_stmt 0 view .LVU651
 3075 03c0 0134     		adds	r4, r4, #1	@ len, len,
 3076              	.LVL307:
 3077              	@ src/pdantler/printf.c:432:       buf[len++] = '0';
 432:src/pdantler/printf.c ****     }
 3078              		.loc 1 432 18 view .LVU652
 3079 03c2 02F8010F 		strb	r0, [r2, #1]!	@ tmp252, MEM[base: _56, offset: 0B]
 3080              	.LVL308:
 431:src/pdantler/printf.c ****       buf[len++] = '0';
 3081              		.loc 1 431 11 is_stmt 1 view .LVU653
 3082              	@ src/pdantler/printf.c:431:     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 431:src/pdantler/printf.c ****       buf[len++] = '0';
 3083              		.loc 1 431 44 is_stmt 0 view .LVU654
 3084 03c6 E343     		mvns	r3, r4	@ tmp254, len
 3085              	@ src/pdantler/printf.c:431:     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 431:src/pdantler/printf.c ****       buf[len++] = '0';
 3086              		.loc 1 431 11 view .LVU655
 3087 03c8 202C     		cmp	r4, #32	@ len,
 3088              	@ src/pdantler/printf.c:431:     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 431:src/pdantler/printf.c ****       buf[len++] = '0';
 3089              		.loc 1 431 44 view .LVU656
 3090 03ca 0B44     		add	r3, r3, r1	@ tmp255, len
 3091              	@ src/pdantler/printf.c:431:     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 431:src/pdantler/printf.c ****       buf[len++] = '0';
 3092              		.loc 1 431 11 view .LVU657
 3093 03cc 87D0     		beq	.L254		@,
 3094              	@ src/pdantler/printf.c:431:     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 431:src/pdantler/printf.c ****       buf[len++] = '0';
 3095              		.loc 1 431 44 discriminator 1 view .LVU658
 3096 03ce F342     		cmn	r3, r6	@ tmp255, prec
 3097 03d0 F6D1     		bne	.L258		@,
 3098              	.L256:
 434:src/pdantler/printf.c ****       // add decimal
 3099              		.loc 1 434 5 is_stmt 1 view .LVU659
 436:src/pdantler/printf.c ****     }
 3100              		.loc 1 436 7 view .LVU660
 3101              	@ src/pdantler/printf.c:436:       buf[len++] = '.';
 436:src/pdantler/printf.c ****     }
 3102              		.loc 1 436 18 is_stmt 0 view .LVU661
 3103 03d2 04F15003 		add	r3, r4, #80	@ tmp438, len,
ARM GAS  /tmp/ccFy9xbE.s 			page 74


 3104 03d6 2E22     		movs	r2, #46	@ tmp310,
 3105              	@ src/pdantler/printf.c:436:       buf[len++] = '.';
 436:src/pdantler/printf.c ****     }
 3106              		.loc 1 436 14 view .LVU662
 3107 03d8 0134     		adds	r4, r4, #1	@ len, len,
 3108              	.LVL309:
 3109              	@ src/pdantler/printf.c:436:       buf[len++] = '.';
 436:src/pdantler/printf.c ****     }
 3110              		.loc 1 436 18 view .LVU663
 3111 03da 6B44     		add	r3, sp, r3	@ tmp309,, tmp438
 3112 03dc 03F8202C 		strb	r2, [r3, #-32]	@ tmp310, buf[len_205]
 3113 03e0 C6E6     		b	.L251		@
 3114              	.LVL310:
 3115              	.L346:
 436:src/pdantler/printf.c ****     }
 3116              		.loc 1 436 18 view .LVU664
 3117              	.LBE29:
 462:src/pdantler/printf.c ****     } else if (flags & FLAGS_SPACE) {
 3118              		.loc 1 462 7 is_stmt 1 view .LVU665
 3119              	@ src/pdantler/printf.c:462:       buf[len++] = '+'; // ignore the space if the '+' exists
 462:src/pdantler/printf.c ****     } else if (flags & FLAGS_SPACE) {
 3120              		.loc 1 462 18 is_stmt 0 view .LVU666
 3121 03e2 2B22     		movs	r2, #43	@ tmp301,
 3122 03e4 EBE6     		b	.L336		@
 3123              	.LVL311:
 3124              	.L345:
 3125              	@ src/pdantler/printf.c:408:   } else if ((frac == 0U) || (frac & 1U)) {
 408:src/pdantler/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 3126              		.loc 1 408 27 discriminator 1 view .LVU667
 3127 03e6 F807     		lsls	r0, r7, #31	@, frac,
 3128 03e8 7FF5A6AE 		bpl	.L245		@,
 3129 03ec C3E7     		b	.L247		@
 3130              	.LVL312:
 3131              	.L343:
 3132              	@ src/pdantler/printf.c:396:   double tmp = (value - whole) * pow10[prec];
 396:src/pdantler/printf.c ****   unsigned long frac = (unsigned long)tmp;
 3133              		.loc 1 396 39 view .LVU668
 3134 03ee 0B4B     		ldr	r3, .L350+12	@ tmp204,
 3135 03f0 0CAA     		add	r2, sp, #48	@ tmp312,,
 3136 03f2 0024     		movs	r4, #0	@ len,
 3137 03f4 03EBC603 		add	r3, r3, r6, lsl #3	@ tmp206, tmp204, prec,
 3138 03f8 0892     		str	r2, [sp, #32]	@ tmp312, %sfp
 3139 03fa 93ED007B 		vldr.64	d7, [r3]	@ prephitmp_123, pow10[prec_63(D)]
 3140 03fe B0EE478A 		vmov.f32	s16, s14	@ prephitmp_123, prephitmp_123
 3141 0402 F0EE678A 		vmov.f32	s17, s15	@ prephitmp_123, prephitmp_123
 3142 0406 61E6     		b	.L239		@
 3143              	.LVL313:
 3144              	.L347:
 3145              	.LBB30:
 3146              	@ src/pdantler/printf.c:431:     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 431:src/pdantler/printf.c ****       buf[len++] = '0';
 3147              		.loc 1 431 44 view .LVU669
 3148 0408 0C46     		mov	r4, r1	@ len, len
 3149 040a E2E7     		b	.L256		@
 3150              	.L351:
 3151 040c AFF30080 		.align	3
 3152              	.L350:
ARM GAS  /tmp/ccFy9xbE.s 			page 75


 3153 0410 00000000 		.word	0
 3154 0414 80842E41 		.word	1093567616
 3155 0418 0000E03F 		.word	1071644672
 3156 041c 00000000 		.word	.LANCHOR0
 3157              	.LBE30:
 3158              		.cfi_endproc
 3159              	.LFE11:
 3160              		.size	_ftoa, .-_ftoa
 3161              		.section	.text._out_char,"ax",%progbits
 3162              		.align	1
 3163              		.p2align 4,,15
 3164              		.syntax unified
 3165              		.thumb
 3166              		.thumb_func
 3167              		.fpu fpv5-sp-d16
 3168              		.type	_out_char, %function
 3169              	_out_char:
 3170              	.LVL314:
 3171              	.LFB2:
 147:src/pdantler/printf.c ****   (void)buffer;
 3172              		.loc 1 147 45 is_stmt 1 view -0
 3173              		.cfi_startproc
 3174              		@ args = 0, pretend = 0, frame = 0
 3175              		@ frame_needed = 0, uses_anonymous_args = 0
 3176              		@ link register save eliminated.
 148:src/pdantler/printf.c ****   (void)idx;
 3177              		.loc 1 148 3 view .LVU671
 149:src/pdantler/printf.c ****   (void)maxlen;
 3178              		.loc 1 149 3 view .LVU672
 150:src/pdantler/printf.c ****   if (character) {
 3179              		.loc 1 150 3 view .LVU673
 151:src/pdantler/printf.c ****     _putchar(character);
 3180              		.loc 1 151 3 view .LVU674
 3181              	@ src/pdantler/printf.c:151:   if (character) {
 151:src/pdantler/printf.c ****     _putchar(character);
 3182              		.loc 1 151 6 is_stmt 0 view .LVU675
 3183 0000 00B9     		cbnz	r0, .L354	@ tmp117,
 3184              	@ src/pdantler/printf.c:154: }
 154:src/pdantler/printf.c **** 
 3185              		.loc 1 154 1 view .LVU676
 3186 0002 7047     		bx	lr	@
 3187              	.L354:
 152:src/pdantler/printf.c ****   }
 3188              		.loc 1 152 5 is_stmt 1 view .LVU677
 3189 0004 FFF7FEBF 		b	_putchar		@
 3190              	.LVL315:
 152:src/pdantler/printf.c ****   }
 3191              		.loc 1 152 5 is_stmt 0 view .LVU678
 3192              		.cfi_endproc
 3193              	.LFE2:
 3194              		.size	_out_char, .-_out_char
 3195              		.section	.text._out_fct,"ax",%progbits
 3196              		.align	1
 3197              		.p2align 4,,15
 3198              		.syntax unified
 3199              		.thumb
 3200              		.thumb_func
ARM GAS  /tmp/ccFy9xbE.s 			page 76


 3201              		.fpu fpv5-sp-d16
 3202              		.type	_out_fct, %function
 3203              	_out_fct:
 3204              	.LVL316:
 3205              	.LFB3:
 158:src/pdantler/printf.c ****   (void)idx;
 3206              		.loc 1 158 44 is_stmt 1 view -0
 3207              		.cfi_startproc
 3208              		@ args = 0, pretend = 0, frame = 0
 3209              		@ frame_needed = 0, uses_anonymous_args = 0
 3210              		@ link register save eliminated.
 159:src/pdantler/printf.c ****   (void)maxlen;
 3211              		.loc 1 159 3 view .LVU680
 160:src/pdantler/printf.c ****   if (character) {
 3212              		.loc 1 160 3 view .LVU681
 161:src/pdantler/printf.c ****     // buffer is the output fct pointer
 3213              		.loc 1 161 3 view .LVU682
 3214              	@ src/pdantler/printf.c:161:   if (character) {
 161:src/pdantler/printf.c ****     // buffer is the output fct pointer
 3215              		.loc 1 161 6 is_stmt 0 view .LVU683
 3216 0000 10B1     		cbz	r0, .L355	@ tmp121,
 3217              	.LVL317:
 3218              	.LBB33:
 3219              	.LBI33:
 157:src/pdantler/printf.c ****                             size_t maxlen) {
 3220              		.loc 1 157 20 is_stmt 1 view .LVU684
 3221              	.LBB34:
 163:src/pdantler/printf.c ****         ->fct(character, ((out_fct_wrap_type *)buffer)->arg);
 3222              		.loc 1 163 5 view .LVU685
 3223              	@ src/pdantler/printf.c:163:     ((out_fct_wrap_type *)buffer)
 163:src/pdantler/printf.c ****         ->fct(character, ((out_fct_wrap_type *)buffer)->arg);
 3224              		.loc 1 163 6 is_stmt 0 view .LVU686
 3225 0002 D1E90031 		ldrd	r3, r1, [r1]	@ MEM[(struct out_fct_wrap_type *)buffer_3(D)].fct,, buffer
 3226              	.LVL318:
 163:src/pdantler/printf.c ****         ->fct(character, ((out_fct_wrap_type *)buffer)->arg);
 3227              		.loc 1 163 6 view .LVU687
 3228 0006 1847     		bx	r3	@ indirect register sibling call	@ MEM[(struct out_fct_wrap_type *)buffer_3(D)].fct
 3229              	.LVL319:
 3230              	.L355:
 163:src/pdantler/printf.c ****         ->fct(character, ((out_fct_wrap_type *)buffer)->arg);
 3231              		.loc 1 163 6 view .LVU688
 3232              	.LBE34:
 3233              	.LBE33:
 3234              	@ src/pdantler/printf.c:166: }
 166:src/pdantler/printf.c **** 
 3235              		.loc 1 166 1 view .LVU689
 3236 0008 7047     		bx	lr	@
 3237              		.cfi_endproc
 3238              	.LFE3:
 3239              		.size	_out_fct, .-_out_fct
 3240 000a 00BF     		.section	.text._vsnprintf,"ax",%progbits
 3241              		.align	1
 3242              		.p2align 4,,15
 3243              		.syntax unified
 3244              		.thumb
 3245              		.thumb_func
 3246              		.fpu fpv5-sp-d16
ARM GAS  /tmp/ccFy9xbE.s 			page 77


 3247              		.type	_vsnprintf, %function
 3248              	_vsnprintf:
 3249              	.LVL320:
 3250              	.LFB13:
 587:src/pdantler/printf.c **** #endif // PRINTF_SUPPORT_EXPONENTIAL
 588:src/pdantler/printf.c **** #endif // PRINTF_SUPPORT_FLOAT
 589:src/pdantler/printf.c **** 
 590:src/pdantler/printf.c **** // internal vsnprintf
 591:src/pdantler/printf.c **** static int _vsnprintf(out_fct_type out, char *buffer, const size_t maxlen,
 592:src/pdantler/printf.c ****                       const char *format, va_list va) {
 3251              		.loc 1 592 55 is_stmt 1 view -0
 3252              		.cfi_startproc
 3253              		@ args = 4, pretend = 0, frame = 24
 3254              		@ frame_needed = 0, uses_anonymous_args = 0
 3255              		.loc 1 592 55 is_stmt 0 view .LVU691
 3256 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3257              	.LCFI46:
 3258              		.cfi_def_cfa_offset 36
 3259              		.cfi_offset 4, -36
 3260              		.cfi_offset 5, -32
 3261              		.cfi_offset 6, -28
 3262              		.cfi_offset 7, -24
 3263              		.cfi_offset 8, -20
 3264              		.cfi_offset 9, -16
 3265              		.cfi_offset 10, -12
 3266              		.cfi_offset 11, -8
 3267              		.cfi_offset 14, -4
 3268 0004 1C46     		mov	r4, r3	@ format, tmp386
 3269              	@ src/pdantler/printf.c:598:     out = _out_null;
 593:src/pdantler/printf.c ****   unsigned int flags, width, precision, n;
 594:src/pdantler/printf.c ****   size_t idx = 0U;
 595:src/pdantler/printf.c **** 
 596:src/pdantler/printf.c ****   if (!buffer) {
 597:src/pdantler/printf.c ****     // use null output function
 598:src/pdantler/printf.c ****     out = _out_null;
 3270              		.loc 1 598 9 view .LVU692
 3271 0006 B1F1000A 		subs	r10, r1, #0	@ buffer, tmp384
 3272              	@ src/pdantler/printf.c:592:                       const char *format, va_list va) {
 592:src/pdantler/printf.c ****   unsigned int flags, width, precision, n;
 3273              		.loc 1 592 55 view .LVU693
 3274 000a 91B0     		sub	sp, sp, #68	@,,
 3275              	.LCFI47:
 3276              		.cfi_def_cfa_offset 104
 3277              	@ src/pdantler/printf.c:598:     out = _out_null;
 3278              		.loc 1 598 9 view .LVU694
 3279 000c 7E4B     		ldr	r3, .L514	@ tmp374,
 3280              	.LVL321:
 3281              		.loc 1 598 9 view .LVU695
 3282 000e 18BF     		it	ne
 3283 0010 8346     		movne	fp, r0	@ out, tmp383
 3284              	@ src/pdantler/printf.c:601:   while (*format) {
 599:src/pdantler/printf.c ****   }
 600:src/pdantler/printf.c **** 
 601:src/pdantler/printf.c ****   while (*format) {
 3285              		.loc 1 601 10 view .LVU696
 3286 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@ _109, *format_350(D)
 3287              	.LVL322:
ARM GAS  /tmp/ccFy9xbE.s 			page 78


 3288              	@ src/pdantler/printf.c:592:                       const char *format, va_list va) {
 592:src/pdantler/printf.c ****   unsigned int flags, width, precision, n;
 3289              		.loc 1 592 55 view .LVU697
 3290 0014 9146     		mov	r9, r2	@ maxlen, tmp385
 3291 0016 1A9E     		ldr	r6, [sp, #104]	@ D.6560, va
 3292              	.LVL323:
 593:src/pdantler/printf.c ****   size_t idx = 0U;
 3293              		.loc 1 593 3 is_stmt 1 view .LVU698
 594:src/pdantler/printf.c **** 
 3294              		.loc 1 594 3 view .LVU699
 596:src/pdantler/printf.c ****     // use null output function
 3295              		.loc 1 596 3 view .LVU700
 3296              	@ src/pdantler/printf.c:598:     out = _out_null;
 598:src/pdantler/printf.c ****   }
 3297              		.loc 1 598 9 is_stmt 0 view .LVU701
 3298 0018 08BF     		it	eq
 3299 001a 9B46     		moveq	fp, r3	@ out, tmp374
 3300              	.LVL324:
 3301              		.loc 1 601 9 is_stmt 1 view .LVU702
 3302 001c 0028     		cmp	r0, #0	@ _109
 3303 001e 00F06482 		beq	.L486	@
 3304 0022 4FF00008 		mov	r8, #0	@ idx,
 3305 0026 0BE0     		b	.L437		@
 3306              	.LVL325:
 3307              	.L496:
 602:src/pdantler/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 603:src/pdantler/printf.c ****     if (*format != '%') {
 604:src/pdantler/printf.c ****       // no
 605:src/pdantler/printf.c ****       out(*format, buffer, idx++, maxlen);
 3308              		.loc 1 605 7 view .LVU703
 3309 0028 08F10101 		add	r1, r8, #1	@ idx, idx,
 3310              	.LVL326:
 3311              		.loc 1 605 7 is_stmt 0 view .LVU704
 3312 002c 4246     		mov	r2, r8	@, idx
 3313 002e 4B46     		mov	r3, r9	@, maxlen
 3314              	@ src/pdantler/printf.c:606:       format++;
 606:src/pdantler/printf.c ****       format++;
 3315              		.loc 1 606 13 view .LVU705
 3316 0030 0134     		adds	r4, r4, #1	@ format, format,
 3317              	.LVL327:
 3318              	@ src/pdantler/printf.c:605:       out(*format, buffer, idx++, maxlen);
 605:src/pdantler/printf.c ****       format++;
 3319              		.loc 1 605 7 view .LVU706
 3320 0032 8846     		mov	r8, r1	@ idx, idx
 3321 0034 5146     		mov	r1, r10	@, buffer
 3322              	.LVL328:
 605:src/pdantler/printf.c ****       format++;
 3323              		.loc 1 605 7 view .LVU707
 3324 0036 D847     		blx	fp		@ out
 3325              	.LVL329:
 3326              		.loc 1 606 7 is_stmt 1 view .LVU708
 607:src/pdantler/printf.c ****       continue;
 3327              		.loc 1 607 7 view .LVU709
 3328              	.L360:
 601:src/pdantler/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 3329              		.loc 1 601 9 view .LVU710
 3330              	@ src/pdantler/printf.c:601:   while (*format) {
ARM GAS  /tmp/ccFy9xbE.s 			page 79


 601:src/pdantler/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 3331              		.loc 1 601 10 is_stmt 0 view .LVU711
 3332 0038 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@ _109, *format_7
 3333              	@ src/pdantler/printf.c:601:   while (*format) {
 601:src/pdantler/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 3334              		.loc 1 601 9 view .LVU712
 3335 003a 0028     		cmp	r0, #0	@ _109
 3336 003c 00F0AB80 		beq	.L495	@
 3337              	.LVL330:
 3338              	.L437:
 603:src/pdantler/printf.c ****       // no
 3339              		.loc 1 603 5 is_stmt 1 view .LVU713
 3340              	@ src/pdantler/printf.c:603:     if (*format != '%') {
 603:src/pdantler/printf.c ****       // no
 3341              		.loc 1 603 8 is_stmt 0 view .LVU714
 3342 0040 2528     		cmp	r0, #37	@ _109,
 3343 0042 F1D1     		bne	.L496		@,
 608:src/pdantler/printf.c ****     } else {
 609:src/pdantler/printf.c ****       // yes, evaluate it
 610:src/pdantler/printf.c ****       format++;
 3344              		.loc 1 610 7 is_stmt 1 view .LVU715
 3345              	.LVL331:
 611:src/pdantler/printf.c ****     }
 612:src/pdantler/printf.c **** 
 613:src/pdantler/printf.c ****     // evaluate flags
 614:src/pdantler/printf.c ****     flags = 0U;
 3346              		.loc 1 614 5 view .LVU716
 3347              	@ src/pdantler/printf.c:610:       format++;
 610:src/pdantler/printf.c ****     }
 3348              		.loc 1 610 13 is_stmt 0 view .LVU717
 3349 0044 631C     		adds	r3, r4, #1	@ ivtmp.328, format,
 3350              	.LVL332:
 3351              	@ src/pdantler/printf.c:614:     flags = 0U;
 3352              		.loc 1 614 11 view .LVU718
 3353 0046 4FF0000C 		mov	ip, #0	@ flags,
 3354              	.LVL333:
 3355              	.L361:
 3356              		.loc 1 614 11 view .LVU719
 3357 004a 1C46     		mov	r4, r3	@ format, ivtmp.328
 3358              	.LVL334:
 615:src/pdantler/printf.c ****     do {
 3359              		.loc 1 615 5 is_stmt 1 view .LVU720
 616:src/pdantler/printf.c ****       switch (*format) {
 3360              		.loc 1 616 7 view .LVU721
 3361              	@ src/pdantler/printf.c:616:       switch (*format) {
 3362              		.loc 1 616 15 is_stmt 0 view .LVU722
 3363 004c 13F8010B 		ldrb	r0, [r3], #1	@ zero_extendqisi2	@ prephitmp_372, MEM[base: format_342, offset: 0B]
 3364              	@ src/pdantler/printf.c:616:       switch (*format) {
 3365              		.loc 1 616 7 view .LVU723
 3366 0050 A0F12002 		sub	r2, r0, #32	@ tmp257, prephitmp_372,
 3367 0054 102A     		cmp	r2, #16	@ tmp257,
 3368 0056 0AD8     		bhi	.L362		@
 3369 0058 DFE802F0 		tbb	[pc, r2]	@ tmp257
 3370              	.L364:
 3371 005c 9A       		.byte	(.L368-.L364)/2
 3372 005d 09       		.byte	(.L362-.L364)/2
 3373 005e 09       		.byte	(.L362-.L364)/2
ARM GAS  /tmp/ccFy9xbE.s 			page 80


 3374 005f 97       		.byte	(.L367-.L364)/2
 3375 0060 09       		.byte	(.L362-.L364)/2
 3376 0061 09       		.byte	(.L362-.L364)/2
 3377 0062 09       		.byte	(.L362-.L364)/2
 3378 0063 09       		.byte	(.L362-.L364)/2
 3379 0064 09       		.byte	(.L362-.L364)/2
 3380 0065 09       		.byte	(.L362-.L364)/2
 3381 0066 09       		.byte	(.L362-.L364)/2
 3382 0067 94       		.byte	(.L366-.L364)/2
 3383 0068 09       		.byte	(.L362-.L364)/2
 3384 0069 91       		.byte	(.L365-.L364)/2
 3385 006a 09       		.byte	(.L362-.L364)/2
 3386 006b 09       		.byte	(.L362-.L364)/2
 3387 006c 8E       		.byte	(.L363-.L364)/2
 3388 006d 00       		.p2align 1
 3389              	.L362:
 3390              	.LVL335:
 617:src/pdantler/printf.c ****       case '0':
 618:src/pdantler/printf.c ****         flags |= FLAGS_ZEROPAD;
 619:src/pdantler/printf.c ****         format++;
 620:src/pdantler/printf.c ****         n = 1U;
 621:src/pdantler/printf.c ****         break;
 622:src/pdantler/printf.c ****       case '-':
 623:src/pdantler/printf.c ****         flags |= FLAGS_LEFT;
 624:src/pdantler/printf.c ****         format++;
 625:src/pdantler/printf.c ****         n = 1U;
 626:src/pdantler/printf.c ****         break;
 627:src/pdantler/printf.c ****       case '+':
 628:src/pdantler/printf.c ****         flags |= FLAGS_PLUS;
 629:src/pdantler/printf.c ****         format++;
 630:src/pdantler/printf.c ****         n = 1U;
 631:src/pdantler/printf.c ****         break;
 632:src/pdantler/printf.c ****       case ' ':
 633:src/pdantler/printf.c ****         flags |= FLAGS_SPACE;
 634:src/pdantler/printf.c ****         format++;
 635:src/pdantler/printf.c ****         n = 1U;
 636:src/pdantler/printf.c ****         break;
 637:src/pdantler/printf.c ****       case '#':
 638:src/pdantler/printf.c ****         flags |= FLAGS_HASH;
 639:src/pdantler/printf.c ****         format++;
 640:src/pdantler/printf.c ****         n = 1U;
 641:src/pdantler/printf.c ****         break;
 642:src/pdantler/printf.c ****       default:
 643:src/pdantler/printf.c ****         n = 0U;
 644:src/pdantler/printf.c ****         break;
 645:src/pdantler/printf.c ****       }
 646:src/pdantler/printf.c ****     } while (n);
 3391              		.loc 1 646 13 is_stmt 1 view .LVU724
 647:src/pdantler/printf.c **** 
 648:src/pdantler/printf.c ****     // evaluate width field
 649:src/pdantler/printf.c ****     width = 0U;
 3392              		.loc 1 649 5 view .LVU725
 650:src/pdantler/printf.c ****     if (_is_digit(*format)) {
 3393              		.loc 1 650 5 view .LVU726
 3394              	.LBB59:
 3395              	.LBI59:
 180:src/pdantler/printf.c **** 
ARM GAS  /tmp/ccFy9xbE.s 			page 81


 3396              		.loc 1 180 20 view .LVU727
 3397              	.LBB60:
 180:src/pdantler/printf.c **** 
 3398              		.loc 1 180 41 view .LVU728
 180:src/pdantler/printf.c **** 
 3399              		.loc 1 180 41 is_stmt 0 view .LVU729
 3400              	.LBE60:
 3401              	.LBE59:
 3402              	@ src/pdantler/printf.c:650:     if (_is_digit(*format)) {
 3403              		.loc 1 650 8 view .LVU730
 3404 006e A0F13003 		sub	r3, r0, #48	@ tmp261, prephitmp_372,
 3405 0072 092B     		cmp	r3, #9	@ tmp261,
 3406 0074 40F2AB80 		bls	.L497		@,
 651:src/pdantler/printf.c ****       width = _atoi(&format);
 652:src/pdantler/printf.c ****     } else if (*format == '*') {
 3407              		.loc 1 652 12 is_stmt 1 view .LVU731
 3408              	@ src/pdantler/printf.c:652:     } else if (*format == '*') {
 3409              		.loc 1 652 15 is_stmt 0 view .LVU732
 3410 0078 2A28     		cmp	r0, #42	@ prephitmp_372,
 3411 007a 00F0B580 		beq	.L498		@,
 3412              	@ src/pdantler/printf.c:649:     width = 0U;
 649:src/pdantler/printf.c ****     if (_is_digit(*format)) {
 3413              		.loc 1 649 11 view .LVU733
 3414 007e 0025     		movs	r5, #0	@ width,
 3415              	.LVL336:
 3416              	.L372:
 653:src/pdantler/printf.c ****       const int w = va_arg(va, int);
 654:src/pdantler/printf.c ****       if (w < 0) {
 655:src/pdantler/printf.c ****         flags |= FLAGS_LEFT; // reverse padding
 656:src/pdantler/printf.c ****         width = (unsigned int)-w;
 657:src/pdantler/printf.c ****       } else {
 658:src/pdantler/printf.c ****         width = (unsigned int)w;
 659:src/pdantler/printf.c ****       }
 660:src/pdantler/printf.c ****       format++;
 661:src/pdantler/printf.c ****     }
 662:src/pdantler/printf.c **** 
 663:src/pdantler/printf.c ****     // evaluate precision field
 664:src/pdantler/printf.c ****     precision = 0U;
 3417              		.loc 1 664 5 is_stmt 1 view .LVU734
 665:src/pdantler/printf.c ****     if (*format == '.') {
 3418              		.loc 1 665 5 view .LVU735
 3419              	@ src/pdantler/printf.c:665:     if (*format == '.') {
 3420              		.loc 1 665 8 is_stmt 0 view .LVU736
 3421 0080 2E28     		cmp	r0, #46	@ prephitmp_372,
 3422 0082 00F09680 		beq	.L499		@,
 3423              	.L491:
 3424              	@ src/pdantler/printf.c:664:     precision = 0U;
 664:src/pdantler/printf.c ****     if (*format == '.') {
 3425              		.loc 1 664 15 view .LVU737
 3426 0086 0027     		movs	r7, #0	@ i,
 3427              	.LVL337:
 3428              	.L375:
 666:src/pdantler/printf.c ****       flags |= FLAGS_PRECISION;
 667:src/pdantler/printf.c ****       format++;
 668:src/pdantler/printf.c ****       if (_is_digit(*format)) {
 669:src/pdantler/printf.c ****         precision = _atoi(&format);
 670:src/pdantler/printf.c ****       } else if (*format == '*') {
ARM GAS  /tmp/ccFy9xbE.s 			page 82


 671:src/pdantler/printf.c ****         const int prec = (int)va_arg(va, int);
 672:src/pdantler/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 673:src/pdantler/printf.c ****         format++;
 674:src/pdantler/printf.c ****       }
 675:src/pdantler/printf.c ****     }
 676:src/pdantler/printf.c **** 
 677:src/pdantler/printf.c ****     // evaluate length field
 678:src/pdantler/printf.c ****     switch (*format) {
 3429              		.loc 1 678 5 is_stmt 1 view .LVU738
 3430 0088 A0F16803 		sub	r3, r0, #104	@ tmp283, prephitmp_372,
 3431 008c 122B     		cmp	r3, #18	@ tmp283,
 3432 008e 18D8     		bhi	.L378		@
 3433 0090 DFE813F0 		tbh	[pc, r3, lsl #1]	@ tmp283
 3434              	.L380:
 3435 0094 0E01     		.2byte	(.L383-.L380)/2
 3436 0096 1700     		.2byte	(.L378-.L380)/2
 3437 0098 0901     		.2byte	(.L382-.L380)/2
 3438 009a 1700     		.2byte	(.L378-.L380)/2
 3439 009c 0101     		.2byte	(.L381-.L380)/2
 3440 009e 1700     		.2byte	(.L378-.L380)/2
 3441 00a0 1700     		.2byte	(.L378-.L380)/2
 3442 00a2 1700     		.2byte	(.L378-.L380)/2
 3443 00a4 1700     		.2byte	(.L378-.L380)/2
 3444 00a6 1700     		.2byte	(.L378-.L380)/2
 3445 00a8 1700     		.2byte	(.L378-.L380)/2
 3446 00aa 1700     		.2byte	(.L378-.L380)/2
 3447 00ac 1300     		.2byte	(.L379-.L380)/2
 3448 00ae 1700     		.2byte	(.L378-.L380)/2
 3449 00b0 1700     		.2byte	(.L378-.L380)/2
 3450 00b2 1700     		.2byte	(.L378-.L380)/2
 3451 00b4 1700     		.2byte	(.L378-.L380)/2
 3452 00b6 1700     		.2byte	(.L378-.L380)/2
 3453 00b8 1300     		.2byte	(.L379-.L380)/2
 3454              		.p2align 1
 3455              	.L379:
 679:src/pdantler/printf.c ****     case 'l':
 680:src/pdantler/printf.c ****       flags |= FLAGS_LONG;
 681:src/pdantler/printf.c ****       format++;
 682:src/pdantler/printf.c ****       if (*format == 'l') {
 683:src/pdantler/printf.c ****         flags |= FLAGS_LONG_LONG;
 684:src/pdantler/printf.c ****         format++;
 685:src/pdantler/printf.c ****       }
 686:src/pdantler/printf.c ****       break;
 687:src/pdantler/printf.c ****     case 'h':
 688:src/pdantler/printf.c ****       flags |= FLAGS_SHORT;
 689:src/pdantler/printf.c ****       format++;
 690:src/pdantler/printf.c ****       if (*format == 'h') {
 691:src/pdantler/printf.c ****         flags |= FLAGS_CHAR;
 692:src/pdantler/printf.c ****         format++;
 693:src/pdantler/printf.c ****       }
 694:src/pdantler/printf.c ****       break;
 695:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 696:src/pdantler/printf.c ****     case 't':
 697:src/pdantler/printf.c ****       flags |=
 698:src/pdantler/printf.c ****           (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 699:src/pdantler/printf.c ****       format++;
 700:src/pdantler/printf.c ****       break;
ARM GAS  /tmp/ccFy9xbE.s 			page 83


 701:src/pdantler/printf.c **** #endif
 702:src/pdantler/printf.c ****     case 'j':
 703:src/pdantler/printf.c ****       flags |=
 704:src/pdantler/printf.c ****           (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 705:src/pdantler/printf.c ****       format++;
 706:src/pdantler/printf.c ****       break;
 707:src/pdantler/printf.c ****     case 'z':
 708:src/pdantler/printf.c ****       flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 3456              		.loc 1 708 7 view .LVU739
 3457              	@ src/pdantler/printf.c:716:     switch (*format) {
 709:src/pdantler/printf.c ****       format++;
 710:src/pdantler/printf.c ****       break;
 711:src/pdantler/printf.c ****     default:
 712:src/pdantler/printf.c ****       break;
 713:src/pdantler/printf.c ****     }
 714:src/pdantler/printf.c **** 
 715:src/pdantler/printf.c ****     // evaluate specifier
 716:src/pdantler/printf.c ****     switch (*format) {
 3458              		.loc 1 716 13 is_stmt 0 view .LVU740
 3459 00ba 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2	@ prephitmp_372, MEM[(const char *)format_346 + 1B]
 3460              	@ src/pdantler/printf.c:708:       flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LO
 708:src/pdantler/printf.c ****       format++;
 3461              		.loc 1 708 13 view .LVU741
 3462 00bc 4CF4807C 		orr	ip, ip, #256	@ flags, flags,
 3463              	.LVL338:
 709:src/pdantler/printf.c ****       format++;
 3464              		.loc 1 709 7 is_stmt 1 view .LVU742
 710:src/pdantler/printf.c ****     default:
 3465              		.loc 1 710 7 view .LVU743
 3466              	@ src/pdantler/printf.c:709:       format++;
 709:src/pdantler/printf.c ****       format++;
 3467              		.loc 1 709 13 is_stmt 0 view .LVU744
 3468 00c0 0134     		adds	r4, r4, #1	@ format, format,
 3469              	.LVL339:
 3470              	.L378:
 3471              		.loc 1 716 5 is_stmt 1 view .LVU745
 3472 00c2 A0F12503 		sub	r3, r0, #37	@ tmp284, prephitmp_372,
 3473 00c6 532B     		cmp	r3, #83	@ tmp284,
 3474 00c8 00F29580 		bhi	.L386		@
 3475 00cc DFE813F0 		tbh	[pc, r3, lsl #1]	@ tmp284
 3476              	.L388:
 3477 00d0 7801     		.2byte	(.L394-.L388)/2
 3478 00d2 9300     		.2byte	(.L386-.L388)/2
 3479 00d4 9300     		.2byte	(.L386-.L388)/2
 3480 00d6 9300     		.2byte	(.L386-.L388)/2
 3481 00d8 9300     		.2byte	(.L386-.L388)/2
 3482 00da 9300     		.2byte	(.L386-.L388)/2
 3483 00dc 9300     		.2byte	(.L386-.L388)/2
 3484 00de 9300     		.2byte	(.L386-.L388)/2
 3485 00e0 9300     		.2byte	(.L386-.L388)/2
 3486 00e2 9300     		.2byte	(.L386-.L388)/2
 3487 00e4 9300     		.2byte	(.L386-.L388)/2
 3488 00e6 9300     		.2byte	(.L386-.L388)/2
 3489 00e8 9300     		.2byte	(.L386-.L388)/2
 3490 00ea 9300     		.2byte	(.L386-.L388)/2
 3491 00ec 9300     		.2byte	(.L386-.L388)/2
 3492 00ee 9300     		.2byte	(.L386-.L388)/2
ARM GAS  /tmp/ccFy9xbE.s 			page 84


 3493 00f0 9300     		.2byte	(.L386-.L388)/2
 3494 00f2 9300     		.2byte	(.L386-.L388)/2
 3495 00f4 9300     		.2byte	(.L386-.L388)/2
 3496 00f6 9300     		.2byte	(.L386-.L388)/2
 3497 00f8 9300     		.2byte	(.L386-.L388)/2
 3498 00fa 9300     		.2byte	(.L386-.L388)/2
 3499 00fc 9300     		.2byte	(.L386-.L388)/2
 3500 00fe 9300     		.2byte	(.L386-.L388)/2
 3501 0100 9300     		.2byte	(.L386-.L388)/2
 3502 0102 9300     		.2byte	(.L386-.L388)/2
 3503 0104 9300     		.2byte	(.L386-.L388)/2
 3504 0106 9300     		.2byte	(.L386-.L388)/2
 3505 0108 9300     		.2byte	(.L386-.L388)/2
 3506 010a 9300     		.2byte	(.L386-.L388)/2
 3507 010c 9300     		.2byte	(.L386-.L388)/2
 3508 010e 9300     		.2byte	(.L386-.L388)/2
 3509 0110 F800     		.2byte	(.L391-.L388)/2
 3510 0112 1701     		.2byte	(.L392-.L388)/2
 3511 0114 F800     		.2byte	(.L391-.L388)/2
 3512 0116 9300     		.2byte	(.L386-.L388)/2
 3513 0118 9300     		.2byte	(.L386-.L388)/2
 3514 011a 9300     		.2byte	(.L386-.L388)/2
 3515 011c 9300     		.2byte	(.L386-.L388)/2
 3516 011e 9300     		.2byte	(.L386-.L388)/2
 3517 0120 9300     		.2byte	(.L386-.L388)/2
 3518 0122 9300     		.2byte	(.L386-.L388)/2
 3519 0124 9300     		.2byte	(.L386-.L388)/2
 3520 0126 9300     		.2byte	(.L386-.L388)/2
 3521 0128 9300     		.2byte	(.L386-.L388)/2
 3522 012a 9300     		.2byte	(.L386-.L388)/2
 3523 012c 9300     		.2byte	(.L386-.L388)/2
 3524 012e 9300     		.2byte	(.L386-.L388)/2
 3525 0130 9300     		.2byte	(.L386-.L388)/2
 3526 0132 9300     		.2byte	(.L386-.L388)/2
 3527 0134 9300     		.2byte	(.L386-.L388)/2
 3528 0136 9E00     		.2byte	(.L387-.L388)/2
 3529 0138 9300     		.2byte	(.L386-.L388)/2
 3530 013a 9300     		.2byte	(.L386-.L388)/2
 3531 013c 9300     		.2byte	(.L386-.L388)/2
 3532 013e 9300     		.2byte	(.L386-.L388)/2
 3533 0140 9300     		.2byte	(.L386-.L388)/2
 3534 0142 9300     		.2byte	(.L386-.L388)/2
 3535 0144 9300     		.2byte	(.L386-.L388)/2
 3536 0146 9300     		.2byte	(.L386-.L388)/2
 3537 0148 9300     		.2byte	(.L386-.L388)/2
 3538 014a 9E00     		.2byte	(.L387-.L388)/2
 3539 014c 9801     		.2byte	(.L393-.L388)/2
 3540 014e 9E00     		.2byte	(.L387-.L388)/2
 3541 0150 F800     		.2byte	(.L391-.L388)/2
 3542 0152 1701     		.2byte	(.L392-.L388)/2
 3543 0154 F800     		.2byte	(.L391-.L388)/2
 3544 0156 9300     		.2byte	(.L386-.L388)/2
 3545 0158 9E00     		.2byte	(.L387-.L388)/2
 3546 015a 9300     		.2byte	(.L386-.L388)/2
 3547 015c 9300     		.2byte	(.L386-.L388)/2
 3548 015e 9300     		.2byte	(.L386-.L388)/2
 3549 0160 9300     		.2byte	(.L386-.L388)/2
ARM GAS  /tmp/ccFy9xbE.s 			page 85


 3550 0162 9300     		.2byte	(.L386-.L388)/2
 3551 0164 9E00     		.2byte	(.L387-.L388)/2
 3552 0166 8201     		.2byte	(.L390-.L388)/2
 3553 0168 9300     		.2byte	(.L386-.L388)/2
 3554 016a 9300     		.2byte	(.L386-.L388)/2
 3555 016c 2F01     		.2byte	(.L389-.L388)/2
 3556 016e 9300     		.2byte	(.L386-.L388)/2
 3557 0170 9E00     		.2byte	(.L387-.L388)/2
 3558 0172 9300     		.2byte	(.L386-.L388)/2
 3559 0174 9300     		.2byte	(.L386-.L388)/2
 3560 0176 9E00     		.2byte	(.L387-.L388)/2
 3561              	.LVL340:
 3562              		.p2align 1
 3563              	.L363:
 618:src/pdantler/printf.c ****         format++;
 3564              		.loc 1 618 9 view .LVU746
 3565              	@ src/pdantler/printf.c:618:         flags |= FLAGS_ZEROPAD;
 618:src/pdantler/printf.c ****         format++;
 3566              		.loc 1 618 15 is_stmt 0 view .LVU747
 3567 0178 4CF0010C 		orr	ip, ip, #1	@ flags, flags,
 3568              	.LVL341:
 619:src/pdantler/printf.c ****         n = 1U;
 3569              		.loc 1 619 9 is_stmt 1 view .LVU748
 620:src/pdantler/printf.c ****         break;
 3570              		.loc 1 620 9 view .LVU749
 621:src/pdantler/printf.c ****       case '-':
 3571              		.loc 1 621 9 view .LVU750
 646:src/pdantler/printf.c **** 
 3572              		.loc 1 646 13 view .LVU751
 3573 017c 65E7     		b	.L361		@
 3574              	.LVL342:
 3575              	.L365:
 623:src/pdantler/printf.c ****         format++;
 3576              		.loc 1 623 9 view .LVU752
 3577              	@ src/pdantler/printf.c:623:         flags |= FLAGS_LEFT;
 623:src/pdantler/printf.c ****         format++;
 3578              		.loc 1 623 15 is_stmt 0 view .LVU753
 3579 017e 4CF0020C 		orr	ip, ip, #2	@ flags, flags,
 3580              	.LVL343:
 624:src/pdantler/printf.c ****         n = 1U;
 3581              		.loc 1 624 9 is_stmt 1 view .LVU754
 625:src/pdantler/printf.c ****         break;
 3582              		.loc 1 625 9 view .LVU755
 626:src/pdantler/printf.c ****       case '+':
 3583              		.loc 1 626 9 view .LVU756
 646:src/pdantler/printf.c **** 
 3584              		.loc 1 646 13 view .LVU757
 3585 0182 62E7     		b	.L361		@
 3586              	.LVL344:
 3587              	.L366:
 628:src/pdantler/printf.c ****         format++;
 3588              		.loc 1 628 9 view .LVU758
 3589              	@ src/pdantler/printf.c:628:         flags |= FLAGS_PLUS;
 628:src/pdantler/printf.c ****         format++;
 3590              		.loc 1 628 15 is_stmt 0 view .LVU759
 3591 0184 4CF0040C 		orr	ip, ip, #4	@ flags, flags,
 3592              	.LVL345:
ARM GAS  /tmp/ccFy9xbE.s 			page 86


 629:src/pdantler/printf.c ****         n = 1U;
 3593              		.loc 1 629 9 is_stmt 1 view .LVU760
 630:src/pdantler/printf.c ****         break;
 3594              		.loc 1 630 9 view .LVU761
 631:src/pdantler/printf.c ****       case ' ':
 3595              		.loc 1 631 9 view .LVU762
 646:src/pdantler/printf.c **** 
 3596              		.loc 1 646 13 view .LVU763
 3597 0188 5FE7     		b	.L361		@
 3598              	.LVL346:
 3599              	.L367:
 638:src/pdantler/printf.c ****         format++;
 3600              		.loc 1 638 9 view .LVU764
 3601              	@ src/pdantler/printf.c:638:         flags |= FLAGS_HASH;
 638:src/pdantler/printf.c ****         format++;
 3602              		.loc 1 638 15 is_stmt 0 view .LVU765
 3603 018a 4CF0100C 		orr	ip, ip, #16	@ flags, flags,
 3604              	.LVL347:
 639:src/pdantler/printf.c ****         n = 1U;
 3605              		.loc 1 639 9 is_stmt 1 view .LVU766
 640:src/pdantler/printf.c ****         break;
 3606              		.loc 1 640 9 view .LVU767
 641:src/pdantler/printf.c ****       default:
 3607              		.loc 1 641 9 view .LVU768
 646:src/pdantler/printf.c **** 
 3608              		.loc 1 646 13 view .LVU769
 3609 018e 5CE7     		b	.L361		@
 3610              	.LVL348:
 3611              	.L368:
 633:src/pdantler/printf.c ****         format++;
 3612              		.loc 1 633 9 view .LVU770
 3613              	@ src/pdantler/printf.c:633:         flags |= FLAGS_SPACE;
 633:src/pdantler/printf.c ****         format++;
 3614              		.loc 1 633 15 is_stmt 0 view .LVU771
 3615 0190 4CF0080C 		orr	ip, ip, #8	@ flags, flags,
 3616              	.LVL349:
 634:src/pdantler/printf.c ****         n = 1U;
 3617              		.loc 1 634 9 is_stmt 1 view .LVU772
 635:src/pdantler/printf.c ****         break;
 3618              		.loc 1 635 9 view .LVU773
 636:src/pdantler/printf.c ****       case '#':
 3619              		.loc 1 636 9 view .LVU774
 646:src/pdantler/printf.c **** 
 3620              		.loc 1 646 13 view .LVU775
 3621 0194 59E7     		b	.L361		@
 3622              	.LVL350:
 3623              	.L495:
 3624              	@ src/pdantler/printf.c:906:   return (int)idx;
 717:src/pdantler/printf.c ****     case 'd':
 718:src/pdantler/printf.c ****     case 'i':
 719:src/pdantler/printf.c ****     case 'u':
 720:src/pdantler/printf.c ****     case 'x':
 721:src/pdantler/printf.c ****     case 'X':
 722:src/pdantler/printf.c ****     case 'o':
 723:src/pdantler/printf.c ****     case 'b': {
 724:src/pdantler/printf.c ****       // set the base
 725:src/pdantler/printf.c ****       unsigned int base;
ARM GAS  /tmp/ccFy9xbE.s 			page 87


 726:src/pdantler/printf.c ****       if (*format == 'x' || *format == 'X') {
 727:src/pdantler/printf.c ****         base = 16U;
 728:src/pdantler/printf.c ****       } else if (*format == 'o') {
 729:src/pdantler/printf.c ****         base = 8U;
 730:src/pdantler/printf.c ****       } else if (*format == 'b') {
 731:src/pdantler/printf.c ****         base = 2U;
 732:src/pdantler/printf.c ****       } else {
 733:src/pdantler/printf.c ****         base = 10U;
 734:src/pdantler/printf.c ****         flags &= ~FLAGS_HASH; // no hash for dec format
 735:src/pdantler/printf.c ****       }
 736:src/pdantler/printf.c ****       // uppercase
 737:src/pdantler/printf.c ****       if (*format == 'X') {
 738:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 739:src/pdantler/printf.c ****       }
 740:src/pdantler/printf.c **** 
 741:src/pdantler/printf.c ****       // no plus or space flag for u, x, X, o, b
 742:src/pdantler/printf.c ****       if ((*format != 'i') && (*format != 'd')) {
 743:src/pdantler/printf.c ****         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 744:src/pdantler/printf.c ****       }
 745:src/pdantler/printf.c **** 
 746:src/pdantler/printf.c ****       // ignore '0' flag when precision is given
 747:src/pdantler/printf.c ****       if (flags & FLAGS_PRECISION) {
 748:src/pdantler/printf.c ****         flags &= ~FLAGS_ZEROPAD;
 749:src/pdantler/printf.c ****       }
 750:src/pdantler/printf.c **** 
 751:src/pdantler/printf.c ****       // convert the integer
 752:src/pdantler/printf.c ****       if ((*format == 'i') || (*format == 'd')) {
 753:src/pdantler/printf.c ****         // signed
 754:src/pdantler/printf.c ****         if (flags & FLAGS_LONG_LONG) {
 755:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 756:src/pdantler/printf.c ****           const long long value = va_arg(va, long long);
 757:src/pdantler/printf.c ****           idx = _ntoa_long_long(
 758:src/pdantler/printf.c ****               out, buffer, idx, maxlen,
 759:src/pdantler/printf.c ****               (unsigned long long)(value > 0 ? value : 0 - value), value < 0,
 760:src/pdantler/printf.c ****               base, precision, width, flags);
 761:src/pdantler/printf.c **** #endif
 762:src/pdantler/printf.c ****         } else if (flags & FLAGS_LONG) {
 763:src/pdantler/printf.c ****           const long value = va_arg(va, long);
 764:src/pdantler/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen,
 765:src/pdantler/printf.c ****                            (unsigned long)(value > 0 ? value : 0 - value),
 766:src/pdantler/printf.c ****                            value < 0, base, precision, width, flags);
 767:src/pdantler/printf.c ****         } else {
 768:src/pdantler/printf.c ****           const int value = (flags & FLAGS_CHAR)    ? (char)va_arg(va, int)
 769:src/pdantler/printf.c ****                             : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int)
 770:src/pdantler/printf.c ****                                                     : va_arg(va, int);
 771:src/pdantler/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen,
 772:src/pdantler/printf.c ****                            (unsigned int)(value > 0 ? value : 0 - value),
 773:src/pdantler/printf.c ****                            value < 0, base, precision, width, flags);
 774:src/pdantler/printf.c ****         }
 775:src/pdantler/printf.c ****       } else {
 776:src/pdantler/printf.c ****         // unsigned
 777:src/pdantler/printf.c ****         if (flags & FLAGS_LONG_LONG) {
 778:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 779:src/pdantler/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen,
 780:src/pdantler/printf.c ****                                 va_arg(va, unsigned long long), false, base,
 781:src/pdantler/printf.c ****                                 precision, width, flags);
 782:src/pdantler/printf.c **** #endif
ARM GAS  /tmp/ccFy9xbE.s 			page 88


 783:src/pdantler/printf.c ****         } else if (flags & FLAGS_LONG) {
 784:src/pdantler/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long),
 785:src/pdantler/printf.c ****                            false, base, precision, width, flags);
 786:src/pdantler/printf.c ****         } else {
 787:src/pdantler/printf.c ****           const unsigned int value =
 788:src/pdantler/printf.c ****               (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int)
 789:src/pdantler/printf.c ****               : (flags & FLAGS_SHORT)
 790:src/pdantler/printf.c ****                   ? (unsigned short int)va_arg(va, unsigned int)
 791:src/pdantler/printf.c ****                   : va_arg(va, unsigned int);
 792:src/pdantler/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base,
 793:src/pdantler/printf.c ****                            precision, width, flags);
 794:src/pdantler/printf.c ****         }
 795:src/pdantler/printf.c ****       }
 796:src/pdantler/printf.c ****       format++;
 797:src/pdantler/printf.c ****       break;
 798:src/pdantler/printf.c ****     }
 799:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 800:src/pdantler/printf.c ****     case 'f':
 801:src/pdantler/printf.c ****     case 'F':
 802:src/pdantler/printf.c ****       if (*format == 'F')
 803:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 804:src/pdantler/printf.c ****       idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision,
 805:src/pdantler/printf.c ****                   width, flags);
 806:src/pdantler/printf.c ****       format++;
 807:src/pdantler/printf.c ****       break;
 808:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 809:src/pdantler/printf.c ****     case 'e':
 810:src/pdantler/printf.c ****     case 'E':
 811:src/pdantler/printf.c ****     case 'g':
 812:src/pdantler/printf.c ****     case 'G':
 813:src/pdantler/printf.c ****       if ((*format == 'g') || (*format == 'G'))
 814:src/pdantler/printf.c ****         flags |= FLAGS_ADAPT_EXP;
 815:src/pdantler/printf.c ****       if ((*format == 'E') || (*format == 'G'))
 816:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 817:src/pdantler/printf.c ****       idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision,
 818:src/pdantler/printf.c ****                   width, flags);
 819:src/pdantler/printf.c ****       format++;
 820:src/pdantler/printf.c ****       break;
 821:src/pdantler/printf.c **** #endif // PRINTF_SUPPORT_EXPONENTIAL
 822:src/pdantler/printf.c **** #endif // PRINTF_SUPPORT_FLOAT
 823:src/pdantler/printf.c ****     case 'c': {
 824:src/pdantler/printf.c ****       unsigned int l = 1U;
 825:src/pdantler/printf.c ****       // pre padding
 826:src/pdantler/printf.c ****       if (!(flags & FLAGS_LEFT)) {
 827:src/pdantler/printf.c ****         while (l++ < width) {
 828:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 829:src/pdantler/printf.c ****         }
 830:src/pdantler/printf.c ****       }
 831:src/pdantler/printf.c ****       // char output
 832:src/pdantler/printf.c ****       out((char)va_arg(va, int), buffer, idx++, maxlen);
 833:src/pdantler/printf.c ****       // post padding
 834:src/pdantler/printf.c ****       if (flags & FLAGS_LEFT) {
 835:src/pdantler/printf.c ****         while (l++ < width) {
 836:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 837:src/pdantler/printf.c ****         }
 838:src/pdantler/printf.c ****       }
 839:src/pdantler/printf.c ****       format++;
ARM GAS  /tmp/ccFy9xbE.s 			page 89


 840:src/pdantler/printf.c ****       break;
 841:src/pdantler/printf.c ****     }
 842:src/pdantler/printf.c **** 
 843:src/pdantler/printf.c ****     case 's': {
 844:src/pdantler/printf.c ****       const char *p = va_arg(va, char *);
 845:src/pdantler/printf.c ****       unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 846:src/pdantler/printf.c ****       // pre padding
 847:src/pdantler/printf.c ****       if (flags & FLAGS_PRECISION) {
 848:src/pdantler/printf.c ****         l = (l < precision ? l : precision);
 849:src/pdantler/printf.c ****       }
 850:src/pdantler/printf.c ****       if (!(flags & FLAGS_LEFT)) {
 851:src/pdantler/printf.c ****         while (l++ < width) {
 852:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 853:src/pdantler/printf.c ****         }
 854:src/pdantler/printf.c ****       }
 855:src/pdantler/printf.c ****       // string output
 856:src/pdantler/printf.c ****       while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 857:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 858:src/pdantler/printf.c ****       }
 859:src/pdantler/printf.c ****       // post padding
 860:src/pdantler/printf.c ****       if (flags & FLAGS_LEFT) {
 861:src/pdantler/printf.c ****         while (l++ < width) {
 862:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 863:src/pdantler/printf.c ****         }
 864:src/pdantler/printf.c ****       }
 865:src/pdantler/printf.c ****       format++;
 866:src/pdantler/printf.c ****       break;
 867:src/pdantler/printf.c ****     }
 868:src/pdantler/printf.c **** 
 869:src/pdantler/printf.c ****     case 'p': {
 870:src/pdantler/printf.c ****       width = sizeof(void *) * 2U;
 871:src/pdantler/printf.c ****       flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 872:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 873:src/pdantler/printf.c ****       const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
 874:src/pdantler/printf.c ****       if (is_ll) {
 875:src/pdantler/printf.c ****         idx = _ntoa_long_long(out, buffer, idx, maxlen,
 876:src/pdantler/printf.c ****                               (uintptr_t)va_arg(va, void *), false, 16U,
 877:src/pdantler/printf.c ****                               precision, width, flags);
 878:src/pdantler/printf.c ****       } else {
 879:src/pdantler/printf.c **** #endif
 880:src/pdantler/printf.c ****         idx = _ntoa_long(out, buffer, idx, maxlen,
 881:src/pdantler/printf.c ****                          (unsigned long)((uintptr_t)va_arg(va, void *)), false,
 882:src/pdantler/printf.c ****                          16U, precision, width, flags);
 883:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 884:src/pdantler/printf.c ****       }
 885:src/pdantler/printf.c **** #endif
 886:src/pdantler/printf.c ****       format++;
 887:src/pdantler/printf.c ****       break;
 888:src/pdantler/printf.c ****     }
 889:src/pdantler/printf.c **** 
 890:src/pdantler/printf.c ****     case '%':
 891:src/pdantler/printf.c ****       out('%', buffer, idx++, maxlen);
 892:src/pdantler/printf.c ****       format++;
 893:src/pdantler/printf.c ****       break;
 894:src/pdantler/printf.c **** 
 895:src/pdantler/printf.c ****     default:
 896:src/pdantler/printf.c ****       out(*format, buffer, idx++, maxlen);
ARM GAS  /tmp/ccFy9xbE.s 			page 90


 897:src/pdantler/printf.c ****       format++;
 898:src/pdantler/printf.c ****       break;
 899:src/pdantler/printf.c ****     }
 900:src/pdantler/printf.c ****   }
 901:src/pdantler/printf.c **** 
 902:src/pdantler/printf.c ****   // termination
 903:src/pdantler/printf.c ****   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 904:src/pdantler/printf.c **** 
 905:src/pdantler/printf.c ****   // return written chars without terminating \0
 906:src/pdantler/printf.c ****   return (int)idx;
 3625              		.loc 1 906 10 is_stmt 0 view .LVU776
 3626 0196 4446     		mov	r4, r8	@ <retval>, idx
 3627              	.LVL351:
 3628              	.L438:
 903:src/pdantler/printf.c **** 
 3629              		.loc 1 903 3 is_stmt 1 view .LVU777
 3630 0198 C845     		cmp	r8, r9	@ idx, maxlen
 3631 019a 01D3     		bcc	.L439		@,
 3632              	@ src/pdantler/printf.c:903:   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 903:src/pdantler/printf.c **** 
 3633              		.loc 1 903 3 is_stmt 0 discriminator 1 view .LVU778
 3634 019c 09F1FF38 		add	r8, r9, #-1	@ idx, maxlen,
 3635              	.L439:
 3636              	@ src/pdantler/printf.c:903:   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 903:src/pdantler/printf.c **** 
 3637              		.loc 1 903 3 discriminator 4 view .LVU779
 3638 01a0 4B46     		mov	r3, r9	@, maxlen
 3639 01a2 4246     		mov	r2, r8	@, idx
 3640 01a4 5146     		mov	r1, r10	@, buffer
 3641 01a6 0020     		movs	r0, #0	@,
 3642 01a8 D847     		blx	fp		@ out
 3643              	.LVL352:
 3644              		.loc 1 906 3 is_stmt 1 discriminator 4 view .LVU780
 3645              	@ src/pdantler/printf.c:907: }
 907:src/pdantler/printf.c **** }
 3646              		.loc 1 907 1 is_stmt 0 discriminator 4 view .LVU781
 3647 01aa 2046     		mov	r0, r4	@, <retval>
 3648 01ac 11B0     		add	sp, sp, #68	@,,
 3649              	.LCFI48:
 3650              		.cfi_remember_state
 3651              		.cfi_def_cfa_offset 36
 3652              		@ sp needed	@
 3653 01ae BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 3654              	.LVL353:
 3655              	.L499:
 3656              	.LCFI49:
 3657              		.cfi_restore_state
 666:src/pdantler/printf.c ****       format++;
 3658              		.loc 1 666 7 is_stmt 1 view .LVU782
 3659              	@ src/pdantler/printf.c:668:       if (_is_digit(*format)) {
 668:src/pdantler/printf.c ****         precision = _atoi(&format);
 3660              		.loc 1 668 11 is_stmt 0 view .LVU783
 3661 01b2 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2	@ prephitmp_372, MEM[(const char *)format_344 + 1B]
 3662              	@ src/pdantler/printf.c:666:       flags |= FLAGS_PRECISION;
 666:src/pdantler/printf.c ****       format++;
 3663              		.loc 1 666 13 view .LVU784
 3664 01b4 4CF4806C 		orr	ip, ip, #1024	@ flags, flags,
ARM GAS  /tmp/ccFy9xbE.s 			page 91


 3665              	.LVL354:
 667:src/pdantler/printf.c ****       if (_is_digit(*format)) {
 3666              		.loc 1 667 7 is_stmt 1 view .LVU785
 3667              	@ src/pdantler/printf.c:667:       format++;
 667:src/pdantler/printf.c ****       if (_is_digit(*format)) {
 3668              		.loc 1 667 13 is_stmt 0 view .LVU786
 3669 01b8 631C     		adds	r3, r4, #1	@ _327, format,
 3670              	.LVL355:
 668:src/pdantler/printf.c ****         precision = _atoi(&format);
 3671              		.loc 1 668 7 is_stmt 1 view .LVU787
 3672              	.LBB61:
 3673              	.LBI61:
 180:src/pdantler/printf.c **** 
 3674              		.loc 1 180 20 view .LVU788
 3675              	.LBB62:
 180:src/pdantler/printf.c **** 
 3676              		.loc 1 180 41 view .LVU789
 180:src/pdantler/printf.c **** 
 3677              		.loc 1 180 41 is_stmt 0 view .LVU790
 3678              	.LBE62:
 3679              	.LBE61:
 3680              	@ src/pdantler/printf.c:668:       if (_is_digit(*format)) {
 668:src/pdantler/printf.c ****         precision = _atoi(&format);
 3681              		.loc 1 668 10 view .LVU791
 3682 01ba A0F13002 		sub	r2, r0, #48	@ tmp273, prephitmp_372,
 3683 01be 092A     		cmp	r2, #9	@ tmp273,
 3684 01c0 40F23881 		bls	.L500		@,
 670:src/pdantler/printf.c ****         const int prec = (int)va_arg(va, int);
 3685              		.loc 1 670 14 is_stmt 1 view .LVU792
 3686              	@ src/pdantler/printf.c:670:       } else if (*format == '*') {
 670:src/pdantler/printf.c ****         const int prec = (int)va_arg(va, int);
 3687              		.loc 1 670 17 is_stmt 0 view .LVU793
 3688 01c4 2A28     		cmp	r0, #42	@ prephitmp_372,
 3689 01c6 00F04381 		beq	.L501		@,
 3690              	@ src/pdantler/printf.c:667:       format++;
 667:src/pdantler/printf.c ****       if (_is_digit(*format)) {
 3691              		.loc 1 667 13 view .LVU794
 3692 01ca 1C46     		mov	r4, r3	@ format, _327
 3693 01cc 5BE7     		b	.L491		@
 3694              	.LVL356:
 3695              	.L497:
 3696              	.LBB63:
 3697              	.LBB64:
 3698              	@ src/pdantler/printf.c:184:   unsigned int i = 0U;
 184:src/pdantler/printf.c ****   while (_is_digit(**str)) {
 3699              		.loc 1 184 16 view .LVU795
 3700 01ce 0025     		movs	r5, #0	@ width,
 3701              	.LVL357:
 3702              	.L369:
 186:src/pdantler/printf.c ****   }
 3703              		.loc 1 186 5 is_stmt 1 view .LVU796
 3704              	@ src/pdantler/printf.c:186:     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 186:src/pdantler/printf.c ****   }
 3705              		.loc 1 186 11 is_stmt 0 view .LVU797
 3706 01d0 05EB8505 		add	r5, r5, r5, lsl #2	@ tmp264, width, width,
 3707              	.LVL358:
 3708              	@ src/pdantler/printf.c:186:     i = i * 10U + (unsigned int)(*((*str)++) - '0');
ARM GAS  /tmp/ccFy9xbE.s 			page 92


 186:src/pdantler/printf.c ****   }
 3709              		.loc 1 186 17 view .LVU798
 3710 01d4 00EB4505 		add	r5, r0, r5, lsl #1	@ _319, prephitmp_372, tmp264,
 3711              	@ src/pdantler/printf.c:185:   while (_is_digit(**str)) {
 185:src/pdantler/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 3712              		.loc 1 185 10 view .LVU799
 3713 01d8 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2	@ prephitmp_372, MEM[base: _316, offset: 0B]
 3714              	.LVL359:
 3715              	@ src/pdantler/printf.c:185:   while (_is_digit(**str)) {
 185:src/pdantler/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 3716              		.loc 1 185 9 view .LVU800
 3717 01dc A0F13003 		sub	r3, r0, #48	@ tmp269, prephitmp_372,
 3718              	@ src/pdantler/printf.c:186:     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 186:src/pdantler/printf.c ****   }
 3719              		.loc 1 186 7 view .LVU801
 3720 01e0 303D     		subs	r5, r5, #48	@ width, _319,
 3721              	.LVL360:
 185:src/pdantler/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 3722              		.loc 1 185 9 is_stmt 1 view .LVU802
 3723              	.LBB65:
 3724              	.LBI65:
 180:src/pdantler/printf.c **** 
 3725              		.loc 1 180 20 view .LVU803
 3726              	.LBB66:
 180:src/pdantler/printf.c **** 
 3727              		.loc 1 180 41 view .LVU804
 180:src/pdantler/printf.c **** 
 3728              		.loc 1 180 41 is_stmt 0 view .LVU805
 3729              	.LBE66:
 3730              	.LBE65:
 3731              	@ src/pdantler/printf.c:185:   while (_is_digit(**str)) {
 185:src/pdantler/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 3732              		.loc 1 185 9 view .LVU806
 3733 01e2 092B     		cmp	r3, #9	@ tmp269,
 3734 01e4 F4D9     		bls	.L369		@,
 3735 01e6 4BE7     		b	.L372		@
 3736              	.LVL361:
 3737              	.L498:
 185:src/pdantler/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 3738              		.loc 1 185 9 view .LVU807
 3739              	.LBE64:
 3740              	.LBE63:
 3741              	.LBB67:
 653:src/pdantler/printf.c ****       if (w < 0) {
 3742              		.loc 1 653 7 is_stmt 1 view .LVU808
 3743              	@ src/pdantler/printf.c:653:       const int w = va_arg(va, int);
 653:src/pdantler/printf.c ****       if (w < 0) {
 3744              		.loc 1 653 17 is_stmt 0 view .LVU809
 3745 01e8 56F8045B 		ldr	r5, [r6], #4	@ w, MEM[(int *)va$__ap_405]
 3746              	.LVL362:
 654:src/pdantler/printf.c ****         flags |= FLAGS_LEFT; // reverse padding
 3747              		.loc 1 654 7 is_stmt 1 view .LVU810
 3748              	@ src/pdantler/printf.c:654:       if (w < 0) {
 654:src/pdantler/printf.c ****         flags |= FLAGS_LEFT; // reverse padding
 3749              		.loc 1 654 10 is_stmt 0 view .LVU811
 3750 01ec 002D     		cmp	r5, #0	@ w,
 3751 01ee 4CDB     		blt	.L502		@,
ARM GAS  /tmp/ccFy9xbE.s 			page 93


 3752              	.LVL363:
 660:src/pdantler/printf.c ****     }
 3753              		.loc 1 660 7 is_stmt 1 view .LVU812
 660:src/pdantler/printf.c ****     }
 3754              		.loc 1 660 7 is_stmt 0 view .LVU813
 3755              	.LBE67:
 3756              	@ src/pdantler/printf.c:665:     if (*format == '.') {
 665:src/pdantler/printf.c ****       flags |= FLAGS_PRECISION;
 3757              		.loc 1 665 9 view .LVU814
 3758 01f0 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2	@ prephitmp_372, MEM[(const char *)format_342 + 1B]
 3759              	.LBB68:
 3760              	@ src/pdantler/printf.c:660:       format++;
 660:src/pdantler/printf.c ****     }
 3761              		.loc 1 660 13 view .LVU815
 3762 01f2 0134     		adds	r4, r4, #1	@ format, format,
 3763              	.LVL364:
 660:src/pdantler/printf.c ****     }
 3764              		.loc 1 660 13 view .LVU816
 3765 01f4 44E7     		b	.L372		@
 3766              	.LVL365:
 3767              	.L386:
 660:src/pdantler/printf.c ****     }
 3768              		.loc 1 660 13 view .LVU817
 3769              	.LBE68:
 896:src/pdantler/printf.c ****       format++;
 3770              		.loc 1 896 7 is_stmt 1 view .LVU818
 3771 01f6 08F10103 		add	r3, r8, #1	@ idx, idx,
 3772              	.LVL366:
 896:src/pdantler/printf.c ****       format++;
 3773              		.loc 1 896 7 is_stmt 0 view .LVU819
 3774 01fa 4246     		mov	r2, r8	@, idx
 3775 01fc 5146     		mov	r1, r10	@, buffer
 3776              	@ src/pdantler/printf.c:897:       format++;
 897:src/pdantler/printf.c ****       break;
 3777              		.loc 1 897 13 view .LVU820
 3778 01fe 0134     		adds	r4, r4, #1	@ format, format,
 3779              	.LVL367:
 3780              	@ src/pdantler/printf.c:896:       out(*format, buffer, idx++, maxlen);
 896:src/pdantler/printf.c ****       format++;
 3781              		.loc 1 896 7 view .LVU821
 3782 0200 9846     		mov	r8, r3	@ idx, idx
 3783 0202 4B46     		mov	r3, r9	@, maxlen
 3784              	.LVL368:
 896:src/pdantler/printf.c ****       format++;
 3785              		.loc 1 896 7 view .LVU822
 3786 0204 D847     		blx	fp		@ out
 3787              	.LVL369:
 897:src/pdantler/printf.c ****       break;
 3788              		.loc 1 897 7 is_stmt 1 view .LVU823
 898:src/pdantler/printf.c ****     }
 3789              		.loc 1 898 7 view .LVU824
 3790 0206 17E7     		b	.L360		@
 3791              	.L515:
 3792              		.align	2
 3793              	.L514:
 3794 0208 00000000 		.word	_out_null
 3795              	.LVL370:
ARM GAS  /tmp/ccFy9xbE.s 			page 94


 3796              	.L387:
 3797              	.LBB69:
 725:src/pdantler/printf.c ****       if (*format == 'x' || *format == 'X') {
 3798              		.loc 1 725 7 view .LVU825
 726:src/pdantler/printf.c ****         base = 16U;
 3799              		.loc 1 726 7 view .LVU826
 3800              	@ src/pdantler/printf.c:726:       if (*format == 'x' || *format == 'X') {
 726:src/pdantler/printf.c ****         base = 16U;
 3801              		.loc 1 726 10 is_stmt 0 view .LVU827
 3802 020c 00F0DF03 		and	r3, r0, #223	@ tmp286, prephitmp_372,
 3803 0210 582B     		cmp	r3, #88	@ tmp286,
 3804 0212 00F02481 		beq	.L395		@,
 728:src/pdantler/printf.c ****         base = 8U;
 3805              		.loc 1 728 14 is_stmt 1 view .LVU828
 3806              	@ src/pdantler/printf.c:728:       } else if (*format == 'o') {
 728:src/pdantler/printf.c ****         base = 8U;
 3807              		.loc 1 728 17 is_stmt 0 view .LVU829
 3808 0216 6F28     		cmp	r0, #111	@ prephitmp_372,
 3809 0218 00F0B681 		beq	.L448		@,
 730:src/pdantler/printf.c ****         base = 2U;
 3810              		.loc 1 730 14 is_stmt 1 view .LVU830
 3811              	@ src/pdantler/printf.c:730:       } else if (*format == 'b') {
 730:src/pdantler/printf.c ****         base = 2U;
 3812              		.loc 1 730 17 is_stmt 0 view .LVU831
 3813 021c 6228     		cmp	r0, #98	@ prephitmp_372,
 3814 021e 00F0FC81 		beq	.L449		@,
 733:src/pdantler/printf.c ****         flags &= ~FLAGS_HASH; // no hash for dec format
 3815              		.loc 1 733 9 is_stmt 1 view .LVU832
 3816              	.LVL371:
 734:src/pdantler/printf.c ****       }
 3817              		.loc 1 734 9 view .LVU833
 3818              	@ src/pdantler/printf.c:734:         flags &= ~FLAGS_HASH; // no hash for dec format
 734:src/pdantler/printf.c ****       }
 3819              		.loc 1 734 15 is_stmt 0 view .LVU834
 3820 0222 2CF0100C 		bic	ip, ip, #16	@ flags, flags,
 3821              	.LVL372:
 737:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 3822              		.loc 1 737 7 is_stmt 1 view .LVU835
 3823              	@ src/pdantler/printf.c:733:         base = 10U;
 733:src/pdantler/printf.c ****         flags &= ~FLAGS_HASH; // no hash for dec format
 3824              		.loc 1 733 14 is_stmt 0 view .LVU836
 3825 0226 4FF00A0E 		mov	lr, #10	@ base,
 3826              	.LVL373:
 3827              	.L397:
 742:src/pdantler/printf.c ****         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 3828              		.loc 1 742 7 is_stmt 1 view .LVU837
 3829              	@ src/pdantler/printf.c:742:       if ((*format != 'i') && (*format != 'd')) {
 742:src/pdantler/printf.c ****         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 3830              		.loc 1 742 10 is_stmt 0 view .LVU838
 3831 022a 6928     		cmp	r0, #105	@ prephitmp_372,
 3832 022c 02D0     		beq	.L399		@,
 742:src/pdantler/printf.c ****         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 3833              		.loc 1 742 10 view .LVU839
 3834 022e 6428     		cmp	r0, #100	@ prephitmp_372,
 3835 0230 40F01C81 		bne	.L398		@,
 3836              	.LVL374:
 3837              	.L399:
ARM GAS  /tmp/ccFy9xbE.s 			page 95


 747:src/pdantler/printf.c ****         flags &= ~FLAGS_ZEROPAD;
 3838              		.loc 1 747 7 is_stmt 1 view .LVU840
 3839              	@ src/pdantler/printf.c:747:       if (flags & FLAGS_PRECISION) {
 747:src/pdantler/printf.c ****         flags &= ~FLAGS_ZEROPAD;
 3840              		.loc 1 747 10 is_stmt 0 view .LVU841
 3841 0234 1CF4806F 		tst	ip, #1024	@ flags,
 748:src/pdantler/printf.c ****       }
 3842              		.loc 1 748 9 is_stmt 1 view .LVU842
 3843              	@ src/pdantler/printf.c:748:         flags &= ~FLAGS_ZEROPAD;
 748:src/pdantler/printf.c ****       }
 3844              		.loc 1 748 15 is_stmt 0 view .LVU843
 3845 0238 18BF     		it	ne
 3846 023a 2CF0010C 		bicne	ip, ip, #1	@ flags, flags,
 3847              	.LVL375:
 752:src/pdantler/printf.c ****         // signed
 3848              		.loc 1 752 7 is_stmt 1 view .LVU844
 3849              	@ src/pdantler/printf.c:752:       if ((*format == 'i') || (*format == 'd')) {
 752:src/pdantler/printf.c ****         // signed
 3850              		.loc 1 752 10 is_stmt 0 view .LVU845
 3851 023e 6928     		cmp	r0, #105	@ prephitmp_372,
 3852 0240 00F01E81 		beq	.L459		@,
 3853 0244 A0F16400 		sub	r0, #100	@ tmp299,
 3854 0248 B0FA80F0 		clz	r0, r0	@ tmp299, tmp299
 3855 024c 4009     		lsrs	r0, r0, #5	@ tmp299, tmp299,
 3856 024e 0028     		cmp	r0, #0	@ tmp299
 3857 0250 40F01681 		bne	.L459	@
 777:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3858              		.loc 1 777 9 is_stmt 1 view .LVU846
 3859              	@ src/pdantler/printf.c:777:         if (flags & FLAGS_LONG_LONG) {
 777:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3860              		.loc 1 777 12 is_stmt 0 view .LVU847
 3861 0254 1CF40073 		ands	r3, ip, #512	@ tmp323, flags,
 3862 0258 40F0B681 		bne	.L503		@,
 783:src/pdantler/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long),
 3863              		.loc 1 783 16 is_stmt 1 view .LVU848
 3864              	@ src/pdantler/printf.c:783:         } else if (flags & FLAGS_LONG) {
 783:src/pdantler/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long),
 3865              		.loc 1 783 19 is_stmt 0 view .LVU849
 3866 025c 1CF4807F 		tst	ip, #256	@ flags,
 3867 0260 40F0CB81 		bne	.L504		@,
 3868              	.LBB70:
 787:src/pdantler/printf.c ****               (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int)
 3869              		.loc 1 787 11 is_stmt 1 view .LVU850
 3870              	@ src/pdantler/printf.c:789:               : (flags & FLAGS_SHORT)
 789:src/pdantler/printf.c ****                   ? (unsigned short int)va_arg(va, unsigned int)
 3871              		.loc 1 789 15 is_stmt 0 view .LVU851
 3872 0264 1CF0400F 		tst	ip, #64	@ flags,
 3873 0268 56F8043B 		ldr	r3, [r6], #4	@ MEM[(unsigned int *)va$__ap_349], MEM[(unsigned int *)va$__ap_349]
 3874              	.LVL376:
 789:src/pdantler/printf.c ****                   ? (unsigned short int)va_arg(va, unsigned int)
 3875              		.loc 1 789 15 view .LVU852
 3876 026c 40F08881 		bne	.L505		@,
 3877              	@ src/pdantler/printf.c:791:                   : va_arg(va, unsigned int);
 791:src/pdantler/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base,
 3878              		.loc 1 791 19 discriminator 2 view .LVU853
 3879 0270 1CF0800F 		tst	ip, #128	@ flags,
 3880              	.LVL377:
ARM GAS  /tmp/ccFy9xbE.s 			page 96


 791:src/pdantler/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base,
 3881              		.loc 1 791 19 discriminator 2 view .LVU854
 3882 0274 18BF     		it	ne
 3883 0276 9BB2     		uxthne	r3, r3	@ iftmp.41_146, MEM[(unsigned int *)va$__ap_349]
 3884              	.LVL378:
 3885              	.L413:
 792:src/pdantler/printf.c ****                            precision, width, flags);
 3886              		.loc 1 792 11 is_stmt 1 view .LVU855
 3887              	@ src/pdantler/printf.c:792:           idx = _ntoa_long(out, buffer, idx, maxlen, value, false, bas
 792:src/pdantler/printf.c ****                            precision, width, flags);
 3888              		.loc 1 792 17 is_stmt 0 view .LVU856
 3889 0278 0093     		str	r3, [sp]	@ iftmp.41_146,
 3890 027a 0023     		movs	r3, #0	@ tmp336,
 3891              	.LVL379:
 792:src/pdantler/printf.c ****                            precision, width, flags);
 3892              		.loc 1 792 17 view .LVU857
 3893 027c 4246     		mov	r2, r8	@, idx
 3894 027e 0193     		str	r3, [sp, #4]	@ tmp336,
 3895 0280 CDE9045C 		strd	r5, ip, [sp, #16]	@ width, flags,,
 3896 0284 CDE902E7 		strd	lr, r7, [sp, #8]	@ base, i,,
 3897 0288 19E1     		b	.L492		@
 3898              	.LVL380:
 3899              	.L502:
 792:src/pdantler/printf.c ****                            precision, width, flags);
 3900              		.loc 1 792 17 view .LVU858
 3901              	.LBE70:
 3902              	.LBE69:
 3903              	.LBB79:
 655:src/pdantler/printf.c ****         width = (unsigned int)-w;
 3904              		.loc 1 655 9 is_stmt 1 view .LVU859
 3905              	.LBE79:
 3906              	@ src/pdantler/printf.c:665:     if (*format == '.') {
 665:src/pdantler/printf.c ****       flags |= FLAGS_PRECISION;
 3907              		.loc 1 665 9 is_stmt 0 view .LVU860
 3908 028a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2	@ prephitmp_372, MEM[(const char *)format_342 + 1B]
 3909              	.LBB80:
 3910              	@ src/pdantler/printf.c:655:         flags |= FLAGS_LEFT; // reverse padding
 655:src/pdantler/printf.c ****         width = (unsigned int)-w;
 3911              		.loc 1 655 15 view .LVU861
 3912 028c 4CF0020C 		orr	ip, ip, #2	@ flags, flags,
 3913              	.LVL381:
 656:src/pdantler/printf.c ****       } else {
 3914              		.loc 1 656 9 is_stmt 1 view .LVU862
 3915              	@ src/pdantler/printf.c:656:         width = (unsigned int)-w;
 656:src/pdantler/printf.c ****       } else {
 3916              		.loc 1 656 31 is_stmt 0 view .LVU863
 3917 0290 6D42     		rsbs	r5, r5, #0	@ width, w
 3918              	.LVL382:
 660:src/pdantler/printf.c ****     }
 3919              		.loc 1 660 7 is_stmt 1 view .LVU864
 3920              	@ src/pdantler/printf.c:660:       format++;
 660:src/pdantler/printf.c ****     }
 3921              		.loc 1 660 13 is_stmt 0 view .LVU865
 3922 0292 0134     		adds	r4, r4, #1	@ format, format,
 3923              	.LVL383:
 660:src/pdantler/printf.c ****     }
 3924              		.loc 1 660 13 view .LVU866
ARM GAS  /tmp/ccFy9xbE.s 			page 97


 3925 0294 F4E6     		b	.L372		@
 3926              	.LVL384:
 3927              	.L381:
 660:src/pdantler/printf.c ****     }
 3928              		.loc 1 660 13 view .LVU867
 3929              	.LBE80:
 680:src/pdantler/printf.c ****       format++;
 3930              		.loc 1 680 7 is_stmt 1 view .LVU868
 681:src/pdantler/printf.c ****       if (*format == 'l') {
 3931              		.loc 1 681 7 view .LVU869
 682:src/pdantler/printf.c ****         flags |= FLAGS_LONG_LONG;
 3932              		.loc 1 682 7 view .LVU870
 3933              	@ src/pdantler/printf.c:682:       if (*format == 'l') {
 682:src/pdantler/printf.c ****         flags |= FLAGS_LONG_LONG;
 3934              		.loc 1 682 11 is_stmt 0 view .LVU871
 3935 0296 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2	@ prephitmp_372, MEM[(const char *)format_346 + 1B]
 3936              	@ src/pdantler/printf.c:682:       if (*format == 'l') {
 682:src/pdantler/printf.c ****         flags |= FLAGS_LONG_LONG;
 3937              		.loc 1 682 10 view .LVU872
 3938 0298 6C28     		cmp	r0, #108	@ prephitmp_372,
 3939 029a 00F01D81 		beq	.L384		@,
 3940              	@ src/pdantler/printf.c:680:       flags |= FLAGS_LONG;
 680:src/pdantler/printf.c ****       format++;
 3941              		.loc 1 680 13 view .LVU873
 3942 029e 4CF4807C 		orr	ip, ip, #256	@ flags, flags,
 3943              	.LVL385:
 3944              	@ src/pdantler/printf.c:681:       format++;
 681:src/pdantler/printf.c ****       if (*format == 'l') {
 3945              		.loc 1 681 13 view .LVU874
 3946 02a2 0134     		adds	r4, r4, #1	@ format, format,
 3947              	.LVL386:
 681:src/pdantler/printf.c ****       if (*format == 'l') {
 3948              		.loc 1 681 13 view .LVU875
 3949 02a4 0DE7     		b	.L378		@
 3950              	.L382:
 703:src/pdantler/printf.c ****           (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 3951              		.loc 1 703 7 is_stmt 1 view .LVU876
 3952              	@ src/pdantler/printf.c:716:     switch (*format) {
 716:src/pdantler/printf.c ****     case 'd':
 3953              		.loc 1 716 13 is_stmt 0 view .LVU877
 3954 02a6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2	@ prephitmp_372, MEM[(const char *)format_346 + 1B]
 3955              	@ src/pdantler/printf.c:703:       flags |=
 703:src/pdantler/printf.c ****           (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 3956              		.loc 1 703 13 view .LVU878
 3957 02a8 4CF4007C 		orr	ip, ip, #512	@ flags, flags,
 3958              	.LVL387:
 705:src/pdantler/printf.c ****       break;
 3959              		.loc 1 705 7 is_stmt 1 view .LVU879
 706:src/pdantler/printf.c ****     case 'z':
 3960              		.loc 1 706 7 view .LVU880
 3961              	@ src/pdantler/printf.c:705:       format++;
 705:src/pdantler/printf.c ****       break;
 3962              		.loc 1 705 13 is_stmt 0 view .LVU881
 3963 02ac 0134     		adds	r4, r4, #1	@ format, format,
 3964              	.LVL388:
 3965              	@ src/pdantler/printf.c:706:       break;
 706:src/pdantler/printf.c ****     case 'z':
ARM GAS  /tmp/ccFy9xbE.s 			page 98


 3966              		.loc 1 706 7 view .LVU882
 3967 02ae 08E7     		b	.L378		@
 3968              	.L383:
 688:src/pdantler/printf.c ****       format++;
 3969              		.loc 1 688 7 is_stmt 1 view .LVU883
 3970              	.LVL389:
 689:src/pdantler/printf.c ****       if (*format == 'h') {
 3971              		.loc 1 689 7 view .LVU884
 690:src/pdantler/printf.c ****         flags |= FLAGS_CHAR;
 3972              		.loc 1 690 7 view .LVU885
 3973              	@ src/pdantler/printf.c:690:       if (*format == 'h') {
 690:src/pdantler/printf.c ****         flags |= FLAGS_CHAR;
 3974              		.loc 1 690 11 is_stmt 0 view .LVU886
 3975 02b0 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2	@ prephitmp_372, MEM[(const char *)format_346 + 1B]
 3976              	@ src/pdantler/printf.c:690:       if (*format == 'h') {
 690:src/pdantler/printf.c ****         flags |= FLAGS_CHAR;
 3977              		.loc 1 690 10 view .LVU887
 3978 02b2 6828     		cmp	r0, #104	@ prephitmp_372,
 3979 02b4 00F00B81 		beq	.L385		@,
 3980              	@ src/pdantler/printf.c:688:       flags |= FLAGS_SHORT;
 688:src/pdantler/printf.c ****       format++;
 3981              		.loc 1 688 13 view .LVU888
 3982 02b8 4CF0800C 		orr	ip, ip, #128	@ flags, flags,
 3983              	.LVL390:
 3984              	@ src/pdantler/printf.c:689:       format++;
 689:src/pdantler/printf.c ****       if (*format == 'h') {
 3985              		.loc 1 689 13 view .LVU889
 3986 02bc 0134     		adds	r4, r4, #1	@ format, format,
 3987              	.LVL391:
 689:src/pdantler/printf.c ****       if (*format == 'h') {
 3988              		.loc 1 689 13 view .LVU890
 3989 02be 00E7     		b	.L378		@
 3990              	.L391:
 813:src/pdantler/printf.c ****         flags |= FLAGS_ADAPT_EXP;
 3991              		.loc 1 813 7 is_stmt 1 view .LVU891
 3992              	@ src/pdantler/printf.c:813:       if ((*format == 'g') || (*format == 'G'))
 813:src/pdantler/printf.c ****         flags |= FLAGS_ADAPT_EXP;
 3993              		.loc 1 813 10 is_stmt 0 view .LVU892
 3994 02c0 00F0DF03 		and	r3, r0, #223	@ tmp339, prephitmp_372,
 3995              	@ src/pdantler/printf.c:815:       if ((*format == 'E') || (*format == 'G'))
 815:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 3996              		.loc 1 815 10 view .LVU893
 3997 02c4 00F0FD00 		and	r0, r0, #253	@ tmp341, prephitmp_372,
 3998              	@ src/pdantler/printf.c:817:       idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precis
 817:src/pdantler/printf.c ****                   width, flags);
 3999              		.loc 1 817 13 view .LVU894
 4000 02c8 0736     		adds	r6, r6, #7	@ D.6571, D.6560,
 4001              	.LVL392:
 817:src/pdantler/printf.c ****                   width, flags);
 4002              		.loc 1 817 13 view .LVU895
 4003 02ca 0297     		str	r7, [sp, #8]	@ i,
 4004              	@ src/pdantler/printf.c:813:       if ((*format == 'g') || (*format == 'G'))
 813:src/pdantler/printf.c ****         flags |= FLAGS_ADAPT_EXP;
 4005              		.loc 1 813 10 view .LVU896
 4006 02cc 472B     		cmp	r3, #71	@ tmp339,
 814:src/pdantler/printf.c ****       if ((*format == 'E') || (*format == 'G'))
 4007              		.loc 1 814 9 is_stmt 1 view .LVU897
ARM GAS  /tmp/ccFy9xbE.s 			page 99


 4008              	@ src/pdantler/printf.c:817:       idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precis
 817:src/pdantler/printf.c ****                   width, flags);
 4009              		.loc 1 817 13 is_stmt 0 view .LVU898
 4010 02ce 4246     		mov	r2, r8	@, idx
 4011 02d0 26F00706 		bic	r6, r6, #7	@ D.6560, D.6571,
 4012              	.LVL393:
 817:src/pdantler/printf.c ****                   width, flags);
 4013              		.loc 1 817 13 view .LVU899
 4014 02d4 4B46     		mov	r3, r9	@, maxlen
 4015              	@ src/pdantler/printf.c:814:         flags |= FLAGS_ADAPT_EXP;
 814:src/pdantler/printf.c ****       if ((*format == 'E') || (*format == 'G'))
 4016              		.loc 1 814 15 view .LVU900
 4017 02d6 08BF     		it	eq
 4018 02d8 4CF4006C 		orreq	ip, ip, #2048	@ flags, flags,
 4019              	.LVL394:
 815:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 4020              		.loc 1 815 7 is_stmt 1 view .LVU901
 4021              	@ src/pdantler/printf.c:815:       if ((*format == 'E') || (*format == 'G'))
 815:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 4022              		.loc 1 815 10 is_stmt 0 view .LVU902
 4023 02dc 4528     		cmp	r0, #69	@ tmp341,
 816:src/pdantler/printf.c ****       idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision,
 4024              		.loc 1 816 9 is_stmt 1 view .LVU903
 4025              	@ src/pdantler/printf.c:817:       idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precis
 817:src/pdantler/printf.c ****                   width, flags);
 4026              		.loc 1 817 13 is_stmt 0 view .LVU904
 4027 02de 5146     		mov	r1, r10	@, buffer
 4028 02e0 5846     		mov	r0, fp	@, out
 4029              	@ src/pdantler/printf.c:816:         flags |= FLAGS_UPPERCASE;
 816:src/pdantler/printf.c ****       idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision,
 4030              		.loc 1 816 15 view .LVU905
 4031 02e2 08BF     		it	eq
 4032 02e4 4CF0200C 		orreq	ip, ip, #32	@ flags, flags,
 4033              	.LVL395:
 817:src/pdantler/printf.c ****                   width, flags);
 4034              		.loc 1 817 7 is_stmt 1 view .LVU906
 4035              	@ src/pdantler/printf.c:819:       format++;
 819:src/pdantler/printf.c ****       break;
 4036              		.loc 1 819 13 is_stmt 0 view .LVU907
 4037 02e8 0134     		adds	r4, r4, #1	@ format, format,
 4038              	.LVL396:
 4039              	@ src/pdantler/printf.c:817:       idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precis
 817:src/pdantler/printf.c ****                   width, flags);
 4040              		.loc 1 817 13 view .LVU908
 4041 02ea CDE9035C 		strd	r5, ip, [sp, #12]	@ width, flags,,
 4042 02ee B6EC027B 		vldmia.64	r6!, {d7}	@ D.6560, MEM[(double *)_359]
 4043              	.LVL397:
 817:src/pdantler/printf.c ****                   width, flags);
 4044              		.loc 1 817 13 view .LVU909
 4045 02f2 8DED007B 		vstr.64	d7, [sp]	@ MEM[(double *)_359],
 4046 02f6 FFF7FEFF 		bl	_etoa		@
 4047              	.LVL398:
 817:src/pdantler/printf.c ****                   width, flags);
 4048              		.loc 1 817 13 view .LVU910
 4049 02fa 8046     		mov	r8, r0	@ idx, tmp394
 819:src/pdantler/printf.c ****       break;
 4050              		.loc 1 819 7 is_stmt 1 view .LVU911
ARM GAS  /tmp/ccFy9xbE.s 			page 100


 4051              	.LVL399:
 820:src/pdantler/printf.c **** #endif // PRINTF_SUPPORT_EXPONENTIAL
 4052              		.loc 1 820 7 view .LVU912
 4053 02fc 9CE6     		b	.L360		@
 4054              	.LVL400:
 4055              	.L392:
 802:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 4056              		.loc 1 802 7 view .LVU913
 4057              	@ src/pdantler/printf.c:802:       if (*format == 'F')
 802:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 4058              		.loc 1 802 10 is_stmt 0 view .LVU914
 4059 02fe 4628     		cmp	r0, #70	@ prephitmp_372,
 803:src/pdantler/printf.c ****       idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision,
 4060              		.loc 1 803 9 is_stmt 1 view .LVU915
 4061              	@ src/pdantler/printf.c:804:       idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precis
 804:src/pdantler/printf.c ****                   width, flags);
 4062              		.loc 1 804 13 is_stmt 0 view .LVU916
 4063 0300 06F10706 		add	r6, r6, #7	@ D.6569, D.6560,
 4064              	.LVL401:
 804:src/pdantler/printf.c ****                   width, flags);
 4065              		.loc 1 804 13 view .LVU917
 4066 0304 0297     		str	r7, [sp, #8]	@ i,
 4067 0306 4246     		mov	r2, r8	@, idx
 4068              	@ src/pdantler/printf.c:803:         flags |= FLAGS_UPPERCASE;
 803:src/pdantler/printf.c ****       idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision,
 4069              		.loc 1 803 15 view .LVU918
 4070 0308 08BF     		it	eq
 4071 030a 4CF0200C 		orreq	ip, ip, #32	@ flags, flags,
 4072              	.LVL402:
 804:src/pdantler/printf.c ****                   width, flags);
 4073              		.loc 1 804 7 is_stmt 1 view .LVU919
 4074              	@ src/pdantler/printf.c:804:       idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precis
 804:src/pdantler/printf.c ****                   width, flags);
 4075              		.loc 1 804 13 is_stmt 0 view .LVU920
 4076 030e 26F00706 		bic	r6, r6, #7	@ D.6560, D.6569,
 4077              	.LVL403:
 804:src/pdantler/printf.c ****                   width, flags);
 4078              		.loc 1 804 13 view .LVU921
 4079 0312 4B46     		mov	r3, r9	@, maxlen
 4080 0314 5146     		mov	r1, r10	@, buffer
 4081 0316 5846     		mov	r0, fp	@, out
 4082              	@ src/pdantler/printf.c:806:       format++;
 806:src/pdantler/printf.c ****       break;
 4083              		.loc 1 806 13 view .LVU922
 4084 0318 0134     		adds	r4, r4, #1	@ format, format,
 4085              	.LVL404:
 4086              	@ src/pdantler/printf.c:804:       idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precis
 804:src/pdantler/printf.c ****                   width, flags);
 4087              		.loc 1 804 13 view .LVU923
 4088 031a CDE9035C 		strd	r5, ip, [sp, #12]	@ width, flags,,
 4089 031e B6EC027B 		vldmia.64	r6!, {d7}	@ D.6560, MEM[(double *)_97]
 4090              	.LVL405:
 804:src/pdantler/printf.c ****                   width, flags);
 4091              		.loc 1 804 13 view .LVU924
 4092 0322 8DED007B 		vstr.64	d7, [sp]	@ MEM[(double *)_97],
 4093 0326 FFF7FEFF 		bl	_ftoa		@
 4094              	.LVL406:
ARM GAS  /tmp/ccFy9xbE.s 			page 101


 804:src/pdantler/printf.c ****                   width, flags);
 4095              		.loc 1 804 13 view .LVU925
 4096 032a 8046     		mov	r8, r0	@ idx, tmp393
 806:src/pdantler/printf.c ****       break;
 4097              		.loc 1 806 7 is_stmt 1 view .LVU926
 4098              	.LVL407:
 807:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 4099              		.loc 1 807 7 view .LVU927
 4100 032c 84E6     		b	.L360		@
 4101              	.LVL408:
 4102              	.L389:
 4103              	.LBB81:
 844:src/pdantler/printf.c ****       unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 4104              		.loc 1 844 7 view .LVU928
 4105              	@ src/pdantler/printf.c:844:       const char *p = va_arg(va, char *);
 844:src/pdantler/printf.c ****       unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 4106              		.loc 1 844 19 is_stmt 0 view .LVU929
 4107 032e 3346     		mov	r3, r6	@ D.6574, D.6560
 4108              	.LVL409:
 844:src/pdantler/printf.c ****       unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 4109              		.loc 1 844 19 view .LVU930
 4110 0330 53F8042B 		ldr	r2, [r3], #4	@ p, MEM[(char * *)va$__ap_349]
 4111              	.LVL410:
 844:src/pdantler/printf.c ****       unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 4112              		.loc 1 844 19 view .LVU931
 4113 0334 0B92     		str	r2, [sp, #44]	@ p, %sfp
 4114 0336 0D93     		str	r3, [sp, #52]	@ D.6574, %sfp
 845:src/pdantler/printf.c ****       // pre padding
 4115              		.loc 1 845 7 is_stmt 1 view .LVU932
 4116              	@ src/pdantler/printf.c:845:       unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-
 845:src/pdantler/printf.c ****       // pre padding
 4117              		.loc 1 845 24 is_stmt 0 view .LVU933
 4118 0338 002F     		cmp	r7, #0	@ i
 4119 033a 40F09A80 		bne	.L422	@
 4120              	.LVL411:
 4121              	.LBB82:
 4122              	.LBB83:
 173:src/pdantler/printf.c ****     ;
 4123              		.loc 1 173 17 is_stmt 1 view .LVU934
 4124              	@ src/pdantler/printf.c:173:   for (s = str; *s && maxsize--; ++s)
 173:src/pdantler/printf.c ****     ;
 4125              		.loc 1 173 3 is_stmt 0 view .LVU935
 4126 033e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2	@ _96, *p_219
 4127 0340 0028     		cmp	r0, #0	@ _96
 4128 0342 00F08781 		beq	.L506	@
 4129              	@ src/pdantler/printf.c:173:   for (s = str; *s && maxsize--; ++s)
 173:src/pdantler/printf.c ****     ;
 4130              		.loc 1 173 30 view .LVU936
 4131 0346 6FF00102 		mvn	r2, #1	@ maxsize,
 4132              	.LVL412:
 4133              	.L423:
 173:src/pdantler/printf.c ****     ;
 4134              		.loc 1 173 30 view .LVU937
 4135 034a 0132     		adds	r2, r2, #1	@ tmp347, maxsize,
 4136 034c 0B9E     		ldr	r6, [sp, #44]	@ p, %sfp
 4137              	.LVL413:
 173:src/pdantler/printf.c ****     ;
ARM GAS  /tmp/ccFy9xbE.s 			page 102


 4138              		.loc 1 173 30 view .LVU938
 4139 034e 3244     		add	r2, r2, r6	@ _128, p
 4140 0350 02E0     		b	.L426		@
 4141              	.LVL414:
 4142              	.L425:
 4143              	@ src/pdantler/printf.c:173:   for (s = str; *s && maxsize--; ++s)
 173:src/pdantler/printf.c ****     ;
 4144              		.loc 1 173 20 view .LVU939
 4145 0352 B242     		cmp	r2, r6	@ _128, s
 4146 0354 00F0C580 		beq	.L507		@,
 4147              	.LVL415:
 4148              	.L426:
 174:src/pdantler/printf.c ****   return (unsigned int)(s - str);
 4149              		.loc 1 174 5 is_stmt 1 view .LVU940
 173:src/pdantler/printf.c ****     ;
 4150              		.loc 1 173 34 view .LVU941
 173:src/pdantler/printf.c ****     ;
 4151              		.loc 1 173 17 view .LVU942
 4152              	@ src/pdantler/printf.c:173:   for (s = str; *s && maxsize--; ++s)
 173:src/pdantler/printf.c ****     ;
 4153              		.loc 1 173 3 is_stmt 0 view .LVU943
 4154 0358 16F8013F 		ldrb	r3, [r6, #1]!	@ zero_extendqisi2	@ MEM[base: s_307, offset: 0B], MEM[base: s_307, offset: 0B]
 4155              	.LVL416:
 173:src/pdantler/printf.c ****     ;
 4156              		.loc 1 173 3 view .LVU944
 4157 035c 002B     		cmp	r3, #0	@ MEM[base: s_307, offset: 0B]
 4158 035e F8D1     		bne	.L425	@
 4159              	@ src/pdantler/printf.c:175:   return (unsigned int)(s - str);
 175:src/pdantler/printf.c **** }
 4160              		.loc 1 175 27 view .LVU945
 4161 0360 0B9B     		ldr	r3, [sp, #44]	@ p, %sfp
 4162 0362 F31A     		subs	r3, r6, r3	@ l, s, p
 4163 0364 0C93     		str	r3, [sp, #48]	@ l, %sfp
 4164              	.LVL417:
 4165              	.L424:
 175:src/pdantler/printf.c **** }
 4166              		.loc 1 175 3 is_stmt 1 view .LVU946
 175:src/pdantler/printf.c **** }
 4167              		.loc 1 175 3 is_stmt 0 view .LVU947
 4168              	.LBE83:
 4169              	.LBE82:
 847:src/pdantler/printf.c ****         l = (l < precision ? l : precision);
 4170              		.loc 1 847 7 is_stmt 1 view .LVU948
 4171              	@ src/pdantler/printf.c:847:       if (flags & FLAGS_PRECISION) {
 847:src/pdantler/printf.c ****         l = (l < precision ? l : precision);
 4172              		.loc 1 847 10 is_stmt 0 view .LVU949
 4173 0366 1CF48063 		ands	r3, ip, #1024	@ _94, flags,
 4174 036a 0E93     		str	r3, [sp, #56]	@ _94, %sfp
 4175 036c 04D0     		beq	.L427		@,
 848:src/pdantler/printf.c ****       }
 4176              		.loc 1 848 9 is_stmt 1 view .LVU950
 4177              	@ src/pdantler/printf.c:848:         l = (l < precision ? l : precision);
 848:src/pdantler/printf.c ****       }
 4178              		.loc 1 848 11 is_stmt 0 view .LVU951
 4179 036e 0C9B     		ldr	r3, [sp, #48]	@ l, %sfp
 4180 0370 BB42     		cmp	r3, r7	@ l, i
 4181 0372 28BF     		it	cs
ARM GAS  /tmp/ccFy9xbE.s 			page 103


 4182 0374 3B46     		movcs	r3, r7	@ l, i
 4183 0376 0C93     		str	r3, [sp, #48]	@ l, %sfp
 4184              	.L427:
 850:src/pdantler/printf.c ****         while (l++ < width) {
 4185              		.loc 1 850 7 is_stmt 1 view .LVU952
 4186              	@ src/pdantler/printf.c:850:       if (!(flags & FLAGS_LEFT)) {
 850:src/pdantler/printf.c ****         while (l++ < width) {
 4187              		.loc 1 850 10 is_stmt 0 view .LVU953
 4188 0378 1CF00203 		ands	r3, ip, #2	@ _95, flags,
 4189 037c 0F93     		str	r3, [sp, #60]	@ _95, %sfp
 4190 037e 00F0E280 		beq	.L508		@,
 4191              	.LVL418:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4192              		.loc 1 856 13 is_stmt 1 view .LVU954
 4193 0382 0028     		cmp	r0, #0	@ _96
 4194 0384 00F0CD80 		beq	.L494	@
 4195              	.LVL419:
 4196              	.L442:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4197              		.loc 1 856 13 is_stmt 0 view .LVU955
 4198 0388 0B9E     		ldr	r6, [sp, #44]	@ ivtmp.294, %sfp
 4199 038a 4246     		mov	r2, r8	@ idx, idx
 4200 038c 0B95     		str	r5, [sp, #44]	@ width, %sfp
 4201              	.LVL420:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4202              		.loc 1 856 13 view .LVU956
 4203 038e 0E9D     		ldr	r5, [sp, #56]	@ _94, %sfp
 4204              	.LVL421:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4205              		.loc 1 856 13 view .LVU957
 4206 0390 00E0     		b	.L432		@
 4207              	.LVL422:
 4208              	.L455:
 4209              	@ src/pdantler/printf.c:857:         out(*(p++), buffer, idx++, maxlen);
 857:src/pdantler/printf.c ****       }
 4210              		.loc 1 857 9 view .LVU958
 4211 0392 4246     		mov	r2, r8	@ idx, idx
 4212              	.LVL423:
 4213              	.L432:
 4214              	@ src/pdantler/printf.c:857:         out(*(p++), buffer, idx++, maxlen);
 857:src/pdantler/printf.c ****       }
 4215              		.loc 1 857 9 discriminator 1 view .LVU959
 4216 0394 4B46     		mov	r3, r9	@, maxlen
 4217 0396 5146     		mov	r1, r10	@, buffer
 4218              	@ src/pdantler/printf.c:856:       while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--))
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4219              		.loc 1 856 24 discriminator 1 view .LVU960
 4220 0398 1DB1     		cbz	r5, .L434	@ _94,
 4221              	.LVL424:
 4222              	@ src/pdantler/printf.c:856:       while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--))
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4223              		.loc 1 856 67 discriminator 2 view .LVU961
 4224 039a 07F1FF3C 		add	ip, r7, #-1	@ precision, i,
 4225              	.LVL425:
 4226              	@ src/pdantler/printf.c:856:       while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--))
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4227              		.loc 1 856 55 discriminator 2 view .LVU962
ARM GAS  /tmp/ccFy9xbE.s 			page 104


 4228 039e 3FB1     		cbz	r7, .L493	@ i,
 4229 03a0 6746     		mov	r7, ip	@ i, precision
 4230              	.LVL426:
 4231              	.L434:
 857:src/pdantler/printf.c ****       }
 4232              		.loc 1 857 9 is_stmt 1 view .LVU963
 857:src/pdantler/printf.c ****       }
 4233              		.loc 1 857 9 is_stmt 0 view .LVU964
 4234 03a2 D847     		blx	fp		@ out
 4235              	.LVL427:
 4236              	@ src/pdantler/printf.c:856:       while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--))
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4237              		.loc 1 856 15 view .LVU965
 4238 03a4 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2	@ _96, MEM[base: _163, offset: 0B]
 4239              	@ src/pdantler/printf.c:857:         out(*(p++), buffer, idx++, maxlen);
 857:src/pdantler/printf.c ****       }
 4240              		.loc 1 857 9 view .LVU966
 4241 03a8 08F10108 		add	r8, r8, #1	@ idx, idx,
 4242              	.LVL428:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4243              		.loc 1 856 13 is_stmt 1 view .LVU967
 4244 03ac 0028     		cmp	r0, #0	@ _96
 4245 03ae F0D1     		bne	.L455	@
 4246              	.LVL429:
 4247              	.L493:
 860:src/pdantler/printf.c ****         while (l++ < width) {
 4248              		.loc 1 860 7 view .LVU968
 4249              	@ src/pdantler/printf.c:860:       if (flags & FLAGS_LEFT) {
 860:src/pdantler/printf.c ****         while (l++ < width) {
 4250              		.loc 1 860 10 is_stmt 0 view .LVU969
 4251 03b0 0F9B     		ldr	r3, [sp, #60]	@ _95, %sfp
 4252 03b2 0B9D     		ldr	r5, [sp, #44]	@ width, %sfp
 4253 03b4 002B     		cmp	r3, #0	@ _95
 4254 03b6 40F0B480 		bne	.L494	@
 4255              	.LVL430:
 4256              	.L435:
 865:src/pdantler/printf.c ****       break;
 4257              		.loc 1 865 7 is_stmt 1 view .LVU970
 4258              	@ src/pdantler/printf.c:865:       format++;
 865:src/pdantler/printf.c ****       break;
 4259              		.loc 1 865 13 is_stmt 0 view .LVU971
 4260 03ba 0134     		adds	r4, r4, #1	@ format, format,
 4261              	.LVL431:
 866:src/pdantler/printf.c ****     }
 4262              		.loc 1 866 7 is_stmt 1 view .LVU972
 4263              	@ src/pdantler/printf.c:844:       const char *p = va_arg(va, char *);
 844:src/pdantler/printf.c ****       unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 4264              		.loc 1 844 19 is_stmt 0 view .LVU973
 4265 03bc 0D9E     		ldr	r6, [sp, #52]	@ D.6560, %sfp
 4266              	@ src/pdantler/printf.c:866:       break;
 866:src/pdantler/printf.c ****     }
 4267              		.loc 1 866 7 view .LVU974
 4268 03be 3BE6     		b	.L360		@
 4269              	.LVL432:
 4270              	.L394:
 866:src/pdantler/printf.c ****     }
 4271              		.loc 1 866 7 view .LVU975
ARM GAS  /tmp/ccFy9xbE.s 			page 105


 4272              	.LBE81:
 891:src/pdantler/printf.c ****       format++;
 4273              		.loc 1 891 7 is_stmt 1 view .LVU976
 4274 03c0 08F10103 		add	r3, r8, #1	@ idx, idx,
 4275              	.LVL433:
 891:src/pdantler/printf.c ****       format++;
 4276              		.loc 1 891 7 is_stmt 0 view .LVU977
 4277 03c4 4246     		mov	r2, r8	@, idx
 4278 03c6 5146     		mov	r1, r10	@, buffer
 4279 03c8 2520     		movs	r0, #37	@,
 4280 03ca 9846     		mov	r8, r3	@ idx, idx
 4281 03cc 4B46     		mov	r3, r9	@, maxlen
 4282              	.LVL434:
 4283              	@ src/pdantler/printf.c:892:       format++;
 892:src/pdantler/printf.c ****       break;
 4284              		.loc 1 892 13 view .LVU978
 4285 03ce 0134     		adds	r4, r4, #1	@ format, format,
 4286              	.LVL435:
 4287              	@ src/pdantler/printf.c:891:       out('%', buffer, idx++, maxlen);
 891:src/pdantler/printf.c ****       format++;
 4288              		.loc 1 891 7 view .LVU979
 4289 03d0 D847     		blx	fp		@ out
 4290              	.LVL436:
 892:src/pdantler/printf.c ****       break;
 4291              		.loc 1 892 7 is_stmt 1 view .LVU980
 893:src/pdantler/printf.c **** 
 4292              		.loc 1 893 7 view .LVU981
 4293 03d2 31E6     		b	.L360		@
 4294              	.LVL437:
 4295              	.L390:
 4296              	.LBB90:
 870:src/pdantler/printf.c ****       flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 4297              		.loc 1 870 7 view .LVU982
 871:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4298              		.loc 1 871 7 view .LVU983
 873:src/pdantler/printf.c ****       if (is_ll) {
 4299              		.loc 1 873 7 view .LVU984
 874:src/pdantler/printf.c ****         idx = _ntoa_long_long(out, buffer, idx, maxlen,
 4300              		.loc 1 874 7 view .LVU985
 880:src/pdantler/printf.c ****                          (unsigned long)((uintptr_t)va_arg(va, void *)), false,
 4301              		.loc 1 880 9 view .LVU986
 4302              	@ src/pdantler/printf.c:871:       flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 871:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4303              		.loc 1 871 13 is_stmt 0 view .LVU987
 4304 03d4 4CF02103 		orr	r3, ip, #33	@ flags, flags,
 4305              	.LVL438:
 4306              	@ src/pdantler/printf.c:880:         idx = _ntoa_long(out, buffer, idx, maxlen,
 880:src/pdantler/printf.c ****                          (unsigned long)((uintptr_t)va_arg(va, void *)), false,
 4307              		.loc 1 880 15 view .LVU988
 4308 03d8 0397     		str	r7, [sp, #12]	@ i,
 4309              	.LVL439:
 880:src/pdantler/printf.c ****                          (unsigned long)((uintptr_t)va_arg(va, void *)), false,
 4310              		.loc 1 880 15 view .LVU989
 4311 03da 4246     		mov	r2, r8	@, idx
 4312 03dc 5146     		mov	r1, r10	@, buffer
 4313 03de 0593     		str	r3, [sp, #20]	@ flags,
 4314 03e0 0823     		movs	r3, #8	@ tmp507,
ARM GAS  /tmp/ccFy9xbE.s 			page 106


 4315              	.LVL440:
 880:src/pdantler/printf.c ****                          (unsigned long)((uintptr_t)va_arg(va, void *)), false,
 4316              		.loc 1 880 15 view .LVU990
 4317 03e2 5846     		mov	r0, fp	@, out
 4318              	@ src/pdantler/printf.c:886:       format++;
 886:src/pdantler/printf.c ****       break;
 4319              		.loc 1 886 13 view .LVU991
 4320 03e4 0134     		adds	r4, r4, #1	@ format, format,
 4321              	.LVL441:
 4322              	@ src/pdantler/printf.c:880:         idx = _ntoa_long(out, buffer, idx, maxlen,
 880:src/pdantler/printf.c ****                          (unsigned long)((uintptr_t)va_arg(va, void *)), false,
 4323              		.loc 1 880 15 view .LVU992
 4324 03e6 0493     		str	r3, [sp, #16]	@ tmp507,
 4325 03e8 1023     		movs	r3, #16	@ tmp509,
 4326 03ea 0293     		str	r3, [sp, #8]	@ tmp509,
 4327 03ec 0023     		movs	r3, #0	@ tmp354,
 4328 03ee 0193     		str	r3, [sp, #4]	@ tmp354,
 4329 03f0 56F8043B 		ldr	r3, [r6], #4	@ MEM[(void * *)va$__ap_349], MEM[(void * *)va$__ap_349]
 4330              	.LVL442:
 880:src/pdantler/printf.c ****                          (unsigned long)((uintptr_t)va_arg(va, void *)), false,
 4331              		.loc 1 880 15 view .LVU993
 4332 03f4 0093     		str	r3, [sp]	@ MEM[(void * *)va$__ap_349],
 4333 03f6 4B46     		mov	r3, r9	@, maxlen
 4334 03f8 FFF7FEFF 		bl	_ntoa_long		@
 4335              	.LVL443:
 880:src/pdantler/printf.c ****                          (unsigned long)((uintptr_t)va_arg(va, void *)), false,
 4336              		.loc 1 880 15 view .LVU994
 4337 03fc 8046     		mov	r8, r0	@ idx, tmp395
 886:src/pdantler/printf.c ****       break;
 4338              		.loc 1 886 7 is_stmt 1 view .LVU995
 4339              	.LVL444:
 887:src/pdantler/printf.c ****     }
 4340              		.loc 1 887 7 view .LVU996
 4341 03fe 1BE6     		b	.L360		@
 4342              	.LVL445:
 4343              	.L393:
 887:src/pdantler/printf.c ****     }
 4344              		.loc 1 887 7 is_stmt 0 view .LVU997
 4345              	.LBE90:
 4346              	.LBB91:
 824:src/pdantler/printf.c ****       // pre padding
 4347              		.loc 1 824 7 is_stmt 1 view .LVU998
 826:src/pdantler/printf.c ****         while (l++ < width) {
 4348              		.loc 1 826 7 view .LVU999
 4349              	@ src/pdantler/printf.c:826:       if (!(flags & FLAGS_LEFT)) {
 826:src/pdantler/printf.c ****         while (l++ < width) {
 4350              		.loc 1 826 10 is_stmt 0 view .LVU1000
 4351 0400 1CF0020F 		tst	ip, #2	@ flags,
 4352 0404 74D0     		beq	.L509		@,
 832:src/pdantler/printf.c ****       // post padding
 4353              		.loc 1 832 7 is_stmt 1 view .LVU1001
 4354              	.LVL446:
 832:src/pdantler/printf.c ****       // post padding
 4355              		.loc 1 832 7 is_stmt 0 view .LVU1002
 4356 0406 56F8040B 		ldr	r0, [r6], #4	@ MEM[(int *)va$__ap_349], MEM[(int *)va$__ap_349]
 4357              	.LVL447:
 832:src/pdantler/printf.c ****       // post padding
ARM GAS  /tmp/ccFy9xbE.s 			page 107


 4358              		.loc 1 832 7 view .LVU1003
 4359 040a 4B46     		mov	r3, r9	@, maxlen
 4360 040c 4246     		mov	r2, r8	@, idx
 4361 040e 5146     		mov	r1, r10	@, buffer
 4362 0410 C0B2     		uxtb	r0, r0	@, MEM[(int *)va$__ap_349]
 4363 0412 08F10107 		add	r7, r8, #1	@ idx, idx,
 4364              	.LVL448:
 832:src/pdantler/printf.c ****       // post padding
 4365              		.loc 1 832 7 view .LVU1004
 4366 0416 D847     		blx	fp		@ out
 4367              	.LVL449:
 834:src/pdantler/printf.c ****         while (l++ < width) {
 4368              		.loc 1 834 7 is_stmt 1 view .LVU1005
 835:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4369              		.loc 1 835 15 view .LVU1006
 835:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4370              		.loc 1 835 15 is_stmt 0 view .LVU1007
 4371 0418 012D     		cmp	r5, #1	@ width,
 4372 041a 40F2B380 		bls	.L510		@,
 4373 041e A844     		add	r8, r8, r5	@ idx, width
 4374              	.LVL450:
 4375              	.L421:
 836:src/pdantler/printf.c ****         }
 4376              		.loc 1 836 11 is_stmt 1 view .LVU1008
 4377 0420 3A46     		mov	r2, r7	@ idx, idx
 4378 0422 0137     		adds	r7, r7, #1	@ idx, idx,
 4379              	.LVL451:
 836:src/pdantler/printf.c ****         }
 4380              		.loc 1 836 11 is_stmt 0 view .LVU1009
 4381 0424 4B46     		mov	r3, r9	@, maxlen
 4382 0426 5146     		mov	r1, r10	@, buffer
 4383 0428 2020     		movs	r0, #32	@,
 4384 042a D847     		blx	fp		@ out
 4385              	.LVL452:
 835:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4386              		.loc 1 835 15 is_stmt 1 view .LVU1010
 835:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4387              		.loc 1 835 15 is_stmt 0 view .LVU1011
 4388 042c 4745     		cmp	r7, r8	@ idx, idx
 4389 042e F7D1     		bne	.L421		@,
 4390              	.LVL453:
 4391              	.L441:
 839:src/pdantler/printf.c ****       break;
 4392              		.loc 1 839 7 is_stmt 1 view .LVU1012
 4393              	@ src/pdantler/printf.c:839:       format++;
 839:src/pdantler/printf.c ****       break;
 4394              		.loc 1 839 13 is_stmt 0 view .LVU1013
 4395 0430 0134     		adds	r4, r4, #1	@ format, format,
 4396              	.LVL454:
 840:src/pdantler/printf.c ****     }
 4397              		.loc 1 840 7 is_stmt 1 view .LVU1014
 4398 0432 01E6     		b	.L360		@
 4399              	.LVL455:
 4400              	.L500:
 840:src/pdantler/printf.c ****     }
 4401              		.loc 1 840 7 is_stmt 0 view .LVU1015
 4402              	.LBE91:
ARM GAS  /tmp/ccFy9xbE.s 			page 108


 4403              	.LBB92:
 4404              	.LBB93:
 4405              	@ src/pdantler/printf.c:184:   unsigned int i = 0U;
 184:src/pdantler/printf.c ****   while (_is_digit(**str)) {
 4406              		.loc 1 184 16 view .LVU1016
 4407 0434 0027     		movs	r7, #0	@ i,
 4408              	.LVL456:
 4409              	.L377:
 186:src/pdantler/printf.c ****   }
 4410              		.loc 1 186 5 is_stmt 1 view .LVU1017
 4411              	@ src/pdantler/printf.c:186:     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 186:src/pdantler/printf.c ****   }
 4412              		.loc 1 186 11 is_stmt 0 view .LVU1018
 4413 0436 07EB8707 		add	r7, r7, r7, lsl #2	@ tmp276, i, i,
 4414              	.LVL457:
 4415              	@ src/pdantler/printf.c:186:     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 186:src/pdantler/printf.c ****   }
 4416              		.loc 1 186 17 view .LVU1019
 4417 043a 00EB4707 		add	r7, r0, r7, lsl #1	@ _330, prephitmp_372, tmp276,
 4418              	@ src/pdantler/printf.c:185:   while (_is_digit(**str)) {
 185:src/pdantler/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 4419              		.loc 1 185 10 view .LVU1020
 4420 043e 13F8010F 		ldrb	r0, [r3, #1]!	@ zero_extendqisi2	@ prephitmp_372, MEM[base: _327, offset: 0B]
 4421              	.LVL458:
 4422              	@ src/pdantler/printf.c:185:   while (_is_digit(**str)) {
 185:src/pdantler/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 4423              		.loc 1 185 9 view .LVU1021
 4424 0442 A0F13002 		sub	r2, r0, #48	@ tmp281, prephitmp_372,
 4425              	@ src/pdantler/printf.c:186:     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 186:src/pdantler/printf.c ****   }
 4426              		.loc 1 186 7 view .LVU1022
 4427 0446 303F     		subs	r7, r7, #48	@ i, _330,
 4428              	.LVL459:
 185:src/pdantler/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 4429              		.loc 1 185 9 is_stmt 1 view .LVU1023
 4430              	.LBB94:
 4431              	.LBI94:
 180:src/pdantler/printf.c **** 
 4432              		.loc 1 180 20 view .LVU1024
 4433              	.LBB95:
 180:src/pdantler/printf.c **** 
 4434              		.loc 1 180 41 view .LVU1025
 180:src/pdantler/printf.c **** 
 4435              		.loc 1 180 41 is_stmt 0 view .LVU1026
 4436              	.LBE95:
 4437              	.LBE94:
 4438              	@ src/pdantler/printf.c:185:   while (_is_digit(**str)) {
 185:src/pdantler/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 4439              		.loc 1 185 9 view .LVU1027
 4440 0448 092A     		cmp	r2, #9	@ tmp281,
 4441 044a F4D9     		bls	.L377		@,
 4442 044c 1C46     		mov	r4, r3	@ format, _327
 4443 044e 1BE6     		b	.L375		@
 4444              	.LVL460:
 4445              	.L501:
 185:src/pdantler/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 4446              		.loc 1 185 9 view .LVU1028
ARM GAS  /tmp/ccFy9xbE.s 			page 109


 4447              	.LBE93:
 4448              	.LBE92:
 4449              	.LBB96:
 671:src/pdantler/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 4450              		.loc 1 671 9 is_stmt 1 view .LVU1029
 672:src/pdantler/printf.c ****         format++;
 4451              		.loc 1 672 9 view .LVU1030
 4452              	@ src/pdantler/printf.c:672:         precision = prec > 0 ? (unsigned int)prec : 0U;
 672:src/pdantler/printf.c ****         format++;
 4453              		.loc 1 672 51 is_stmt 0 view .LVU1031
 4454 0450 56F8047B 		ldr	r7, [r6], #4	@ MEM[(int *)va$__ap_115], MEM[(int *)va$__ap_115]
 4455              	.LVL461:
 4456              	@ src/pdantler/printf.c:673:         format++;
 673:src/pdantler/printf.c ****       }
 4457              		.loc 1 673 15 view .LVU1032
 4458 0454 0234     		adds	r4, r4, #2	@ format, format,
 4459              	.LBE96:
 4460              	@ src/pdantler/printf.c:678:     switch (*format) {
 678:src/pdantler/printf.c ****     case 'l':
 4461              		.loc 1 678 13 view .LVU1033
 4462 0456 2078     		ldrb	r0, [r4]	@ zero_extendqisi2	@ prephitmp_372, MEM[(const char *)format_344 + 2B]
 4463              	.LBB97:
 4464              	@ src/pdantler/printf.c:672:         precision = prec > 0 ? (unsigned int)prec : 0U;
 672:src/pdantler/printf.c ****         format++;
 4465              		.loc 1 672 51 view .LVU1034
 4466 0458 27EAE777 		bic	r7, r7, r7, asr #31	@ i, MEM[(int *)va$__ap_115]
 4467              	.LVL462:
 673:src/pdantler/printf.c ****       }
 4468              		.loc 1 673 9 is_stmt 1 view .LVU1035
 673:src/pdantler/printf.c ****       }
 4469              		.loc 1 673 9 is_stmt 0 view .LVU1036
 4470 045c 14E6     		b	.L375		@
 4471              	.LVL463:
 4472              	.L395:
 673:src/pdantler/printf.c ****       }
 4473              		.loc 1 673 9 view .LVU1037
 4474              	.LBE97:
 4475              	.LBB98:
 737:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 4476              		.loc 1 737 7 is_stmt 1 view .LVU1038
 4477              	@ src/pdantler/printf.c:737:       if (*format == 'X') {
 737:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 4478              		.loc 1 737 10 is_stmt 0 view .LVU1039
 4479 045e 5828     		cmp	r0, #88	@ prephitmp_372,
 4480 0460 40F0C880 		bne	.L450		@,
 738:src/pdantler/printf.c ****       }
 4481              		.loc 1 738 9 is_stmt 1 view .LVU1040
 4482              	@ src/pdantler/printf.c:738:         flags |= FLAGS_UPPERCASE;
 738:src/pdantler/printf.c ****       }
 4483              		.loc 1 738 15 is_stmt 0 view .LVU1041
 4484 0464 4CF0200C 		orr	ip, ip, #32	@ flags, flags,
 4485              	.LVL464:
 742:src/pdantler/printf.c ****         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 4486              		.loc 1 742 7 is_stmt 1 view .LVU1042
 4487              	@ src/pdantler/printf.c:727:         base = 16U;
 727:src/pdantler/printf.c ****       } else if (*format == 'o') {
 4488              		.loc 1 727 14 is_stmt 0 view .LVU1043
ARM GAS  /tmp/ccFy9xbE.s 			page 110


 4489 0468 4FF0100E 		mov	lr, #16	@ base,
 4490              	.LVL465:
 4491              	.L398:
 743:src/pdantler/printf.c ****       }
 4492              		.loc 1 743 9 is_stmt 1 view .LVU1044
 4493              	@ src/pdantler/printf.c:743:         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 743:src/pdantler/printf.c ****       }
 4494              		.loc 1 743 15 is_stmt 0 view .LVU1045
 4495 046c 2CF00C0C 		bic	ip, ip, #12	@ flags, flags,
 4496              	.LVL466:
 743:src/pdantler/printf.c ****       }
 4497              		.loc 1 743 15 view .LVU1046
 4498 0470 E0E6     		b	.L399		@
 4499              	.LVL467:
 4500              	.L422:
 743:src/pdantler/printf.c ****       }
 4501              		.loc 1 743 15 view .LVU1047
 4502              	.LBE98:
 4503              	.LBB99:
 4504              	.LBB87:
 4505              	.LBB84:
 173:src/pdantler/printf.c ****     ;
 4506              		.loc 1 173 17 is_stmt 1 view .LVU1048
 4507              	@ src/pdantler/printf.c:173:   for (s = str; *s && maxsize--; ++s)
 173:src/pdantler/printf.c ****     ;
 4508              		.loc 1 173 3 is_stmt 0 view .LVU1049
 4509 0472 0B9B     		ldr	r3, [sp, #44]	@ p, %sfp
 4510              	.LVL468:
 173:src/pdantler/printf.c ****     ;
 4511              		.loc 1 173 3 view .LVU1050
 4512 0474 1878     		ldrb	r0, [r3]	@ zero_extendqisi2	@ _96, *p_219
 4513 0476 0028     		cmp	r0, #0	@ _96
 4514 0478 00F0EE80 		beq	.L453	@
 4515              	@ src/pdantler/printf.c:173:   for (s = str; *s && maxsize--; ++s)
 173:src/pdantler/printf.c ****     ;
 4516              		.loc 1 173 30 view .LVU1051
 4517 047c 7A1E     		subs	r2, r7, #1	@ maxsize, i,
 4518              	.LVL469:
 173:src/pdantler/printf.c ****     ;
 4519              		.loc 1 173 30 view .LVU1052
 4520 047e 64E7     		b	.L423		@
 4521              	.LVL470:
 4522              	.L459:
 173:src/pdantler/printf.c ****     ;
 4523              		.loc 1 173 30 view .LVU1053
 4524              	.LBE84:
 4525              	.LBE87:
 4526              	.LBE99:
 4527              	.LBB100:
 754:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4528              		.loc 1 754 9 is_stmt 1 view .LVU1054
 4529              	@ src/pdantler/printf.c:754:         if (flags & FLAGS_LONG_LONG) {
 754:src/pdantler/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 4530              		.loc 1 754 12 is_stmt 0 view .LVU1055
 4531 0480 1CF4007F 		tst	ip, #512	@ flags,
 4532 0484 40F08380 		bne	.L511		@,
 762:src/pdantler/printf.c ****           const long value = va_arg(va, long);
ARM GAS  /tmp/ccFy9xbE.s 			page 111


 4533              		.loc 1 762 16 is_stmt 1 view .LVU1056
 4534              	@ src/pdantler/printf.c:762:         } else if (flags & FLAGS_LONG) {
 762:src/pdantler/printf.c ****           const long value = va_arg(va, long);
 4535              		.loc 1 762 19 is_stmt 0 view .LVU1057
 4536 0488 1CF4807F 		tst	ip, #256	@ flags,
 4537 048c 40F0C880 		bne	.L512		@,
 4538              	.LBB71:
 768:src/pdantler/printf.c ****                             : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int)
 4539              		.loc 1 768 11 is_stmt 1 view .LVU1058
 4540              	@ src/pdantler/printf.c:769:                             : (flags & FLAGS_SHORT) ? (short int)va_ar
 769:src/pdantler/printf.c ****                                                     : va_arg(va, int);
 4541              		.loc 1 769 29 is_stmt 0 view .LVU1059
 4542 0490 1CF0400F 		tst	ip, #64	@ flags,
 4543 0494 56F8043B 		ldr	r3, [r6], #4	@ MEM[(int *)va$__ap_349], MEM[(int *)va$__ap_349]
 4544              	.LVL471:
 769:src/pdantler/printf.c ****                                                     : va_arg(va, int);
 4545              		.loc 1 769 29 view .LVU1060
 4546 0498 6FD1     		bne	.L513		@,
 4547              	@ src/pdantler/printf.c:770:                                                     : va_arg(va, int);
 770:src/pdantler/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen,
 4548              		.loc 1 770 53 discriminator 2 view .LVU1061
 4549 049a 1CF0800F 		tst	ip, #128	@ flags,
 4550 049e 00F0D480 		beq	.L409		@,
 4551              	.LVL472:
 4552              	@ src/pdantler/printf.c:769:                             : (flags & FLAGS_SHORT) ? (short int)va_ar
 769:src/pdantler/printf.c ****                                                     : va_arg(va, int);
 4553              		.loc 1 769 55 view .LVU1062
 4554 04a2 1BB2     		sxth	r3, r3	@ iftmp.39_144, MEM[(int *)va$__ap_349]
 4555              	@ src/pdantler/printf.c:772:                            (unsigned int)(value > 0 ? value : 0 - valu
 772:src/pdantler/printf.c ****                            value < 0, base, precision, width, flags);
 4556              		.loc 1 772 28 view .LVU1063
 4557 04a4 83EAE372 		eor	r2, r3, r3, asr #31	@ tmp319, iftmp.39_144, iftmp.39_144,
 4558 04a8 A2EBE372 		sub	r2, r2, r3, asr #31	@ tmp319, tmp319, iftmp.39_144,
 4559 04ac 92B2     		uxth	r2, r2	@ prephitmp_139, tmp319
 4560              	.LVL473:
 4561              	.L408:
 771:src/pdantler/printf.c ****                            (unsigned int)(value > 0 ? value : 0 - value),
 4562              		.loc 1 771 11 is_stmt 1 view .LVU1064
 4563              	@ src/pdantler/printf.c:771:           idx = _ntoa_long(out, buffer, idx, maxlen,
 771:src/pdantler/printf.c ****                            (unsigned int)(value > 0 ? value : 0 - value),
 4564              		.loc 1 771 17 is_stmt 0 view .LVU1065
 4565 04ae DB0F     		lsrs	r3, r3, #31	@ tmp322, iftmp.39_144,
 4566              	.LVL474:
 771:src/pdantler/printf.c ****                            (unsigned int)(value > 0 ? value : 0 - value),
 4567              		.loc 1 771 17 view .LVU1066
 4568 04b0 0092     		str	r2, [sp]	@ prephitmp_139,
 4569 04b2 4246     		mov	r2, r8	@, idx
 4570 04b4 0193     		str	r3, [sp, #4]	@ tmp322,
 4571 04b6 CDE9045C 		strd	r5, ip, [sp, #16]	@ width, flags,,
 4572 04ba CDE902E7 		strd	lr, r7, [sp, #8]	@ base, i,,
 4573              	.L492:
 771:src/pdantler/printf.c ****                            (unsigned int)(value > 0 ? value : 0 - value),
 4574              		.loc 1 771 17 view .LVU1067
 4575              	.LBE71:
 4576              	.LBB72:
 4577              	@ src/pdantler/printf.c:792:           idx = _ntoa_long(out, buffer, idx, maxlen, value, false, bas
 792:src/pdantler/printf.c ****                            precision, width, flags);
ARM GAS  /tmp/ccFy9xbE.s 			page 112


 4578              		.loc 1 792 17 view .LVU1068
 4579 04be 4B46     		mov	r3, r9	@, maxlen
 4580 04c0 5146     		mov	r1, r10	@, buffer
 4581 04c2 5846     		mov	r0, fp	@, out
 4582              	.LBE72:
 4583              	.LBE100:
 4584              	.LBB101:
 4585              	@ src/pdantler/printf.c:839:       format++;
 839:src/pdantler/printf.c ****       break;
 4586              		.loc 1 839 13 view .LVU1069
 4587 04c4 0134     		adds	r4, r4, #1	@ format, format,
 4588              	.LVL475:
 839:src/pdantler/printf.c ****       break;
 4589              		.loc 1 839 13 view .LVU1070
 4590              	.LBE101:
 4591              	.LBB102:
 4592              	.LBB73:
 4593              	@ src/pdantler/printf.c:792:           idx = _ntoa_long(out, buffer, idx, maxlen, value, false, bas
 792:src/pdantler/printf.c ****                            precision, width, flags);
 4594              		.loc 1 792 17 view .LVU1071
 4595 04c6 FFF7FEFF 		bl	_ntoa_long		@
 4596              	.LVL476:
 792:src/pdantler/printf.c ****                            precision, width, flags);
 4597              		.loc 1 792 17 view .LVU1072
 4598 04ca 8046     		mov	r8, r0	@ idx, tmp392
 792:src/pdantler/printf.c ****                            precision, width, flags);
 4599              		.loc 1 792 17 view .LVU1073
 4600              	.LBE73:
 796:src/pdantler/printf.c ****       break;
 4601              		.loc 1 796 7 is_stmt 1 view .LVU1074
 796:src/pdantler/printf.c ****       break;
 4602              		.loc 1 796 7 is_stmt 0 view .LVU1075
 4603              	.LBE102:
 4604              	.LBB103:
 839:src/pdantler/printf.c ****       break;
 4605              		.loc 1 839 7 is_stmt 1 view .LVU1076
 4606              	.LVL477:
 840:src/pdantler/printf.c ****     }
 4607              		.loc 1 840 7 view .LVU1077
 4608 04cc B4E5     		b	.L360		@
 4609              	.LVL478:
 4610              	.L385:
 840:src/pdantler/printf.c ****     }
 4611              		.loc 1 840 7 is_stmt 0 view .LVU1078
 4612              	.LBE103:
 691:src/pdantler/printf.c ****         format++;
 4613              		.loc 1 691 9 is_stmt 1 view .LVU1079
 4614              	@ src/pdantler/printf.c:716:     switch (*format) {
 716:src/pdantler/printf.c ****     case 'd':
 4615              		.loc 1 716 13 is_stmt 0 view .LVU1080
 4616 04ce A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2	@ prephitmp_372, MEM[(const char *)format_346 + 2B]
 4617              	@ src/pdantler/printf.c:691:         flags |= FLAGS_CHAR;
 691:src/pdantler/printf.c ****         format++;
 4618              		.loc 1 691 15 view .LVU1081
 4619 04d0 4CF0C00C 		orr	ip, ip, #192	@ flags, flags,
 4620              	.LVL479:
 692:src/pdantler/printf.c ****       }
ARM GAS  /tmp/ccFy9xbE.s 			page 113


 4621              		.loc 1 692 9 is_stmt 1 view .LVU1082
 4622              	@ src/pdantler/printf.c:692:         format++;
 692:src/pdantler/printf.c ****       }
 4623              		.loc 1 692 15 is_stmt 0 view .LVU1083
 4624 04d4 0234     		adds	r4, r4, #2	@ format, format,
 4625              	.LVL480:
 692:src/pdantler/printf.c ****       }
 4626              		.loc 1 692 15 view .LVU1084
 4627 04d6 F4E5     		b	.L378		@
 4628              	.LVL481:
 4629              	.L384:
 683:src/pdantler/printf.c ****         format++;
 4630              		.loc 1 683 9 is_stmt 1 view .LVU1085
 4631              	@ src/pdantler/printf.c:716:     switch (*format) {
 716:src/pdantler/printf.c ****     case 'd':
 4632              		.loc 1 716 13 is_stmt 0 view .LVU1086
 4633 04d8 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2	@ prephitmp_372, MEM[(const char *)format_346 + 2B]
 4634              	@ src/pdantler/printf.c:683:         flags |= FLAGS_LONG_LONG;
 683:src/pdantler/printf.c ****         format++;
 4635              		.loc 1 683 15 view .LVU1087
 4636 04da 4CF4407C 		orr	ip, ip, #768	@ flags, flags,
 4637              	.LVL482:
 684:src/pdantler/printf.c ****       }
 4638              		.loc 1 684 9 is_stmt 1 view .LVU1088
 4639              	@ src/pdantler/printf.c:684:         format++;
 684:src/pdantler/printf.c ****       }
 4640              		.loc 1 684 15 is_stmt 0 view .LVU1089
 4641 04de 0234     		adds	r4, r4, #2	@ format, format,
 4642              	.LVL483:
 684:src/pdantler/printf.c ****       }
 4643              		.loc 1 684 15 view .LVU1090
 4644 04e0 EFE5     		b	.L378		@
 4645              	.LVL484:
 4646              	.L507:
 4647              	.LBB104:
 4648              	.LBB88:
 4649              	.LBB85:
 4650              	@ src/pdantler/printf.c:175:   return (unsigned int)(s - str);
 175:src/pdantler/printf.c **** }
 4651              		.loc 1 175 27 view .LVU1091
 4652 04e2 0B9B     		ldr	r3, [sp, #44]	@ p, %sfp
 4653 04e4 D31A     		subs	r3, r2, r3	@ l, _128, p
 4654 04e6 0C93     		str	r3, [sp, #48]	@ l, %sfp
 4655 04e8 3DE7     		b	.L424		@
 4656              	.LVL485:
 4657              	.L486:
 175:src/pdantler/printf.c **** }
 4658              		.loc 1 175 27 view .LVU1092
 4659              	.LBE85:
 4660              	.LBE88:
 4661              	.LBE104:
 4662              	@ src/pdantler/printf.c:601:   while (*format) {
 601:src/pdantler/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 4663              		.loc 1 601 9 view .LVU1093
 4664 04ea 0446     		mov	r4, r0	@ <retval>, _109
 4665              	.LVL486:
 601:src/pdantler/printf.c ****     // format specifier?  %[flags][width][.precision][length]
ARM GAS  /tmp/ccFy9xbE.s 			page 114


 4666              		.loc 1 601 9 view .LVU1094
 4667 04ec 8046     		mov	r8, r0	@ idx, <retval>
 4668 04ee 53E6     		b	.L438		@
 4669              	.LVL487:
 4670              	.L509:
 4671              	.LBB105:
 827:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4672              		.loc 1 827 15 is_stmt 1 view .LVU1095
 827:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4673              		.loc 1 827 15 is_stmt 0 view .LVU1096
 4674 04f0 012D     		cmp	r5, #1	@ width,
 4675 04f2 40F2B880 		bls	.L451		@,
 4676 04f6 08F1FF33 		add	r3, r8, #-1	@ tmp344, idx,
 4677 04fa 1D44     		add	r5, r5, r3	@ idx, tmp344
 4678              	.LVL488:
 4679              	.L420:
 828:src/pdantler/printf.c ****         }
 4680              		.loc 1 828 11 is_stmt 1 view .LVU1097
 4681 04fc 4246     		mov	r2, r8	@ idx, idx
 4682              	.LVL489:
 828:src/pdantler/printf.c ****         }
 4683              		.loc 1 828 11 is_stmt 0 view .LVU1098
 4684 04fe 08F10108 		add	r8, r8, #1	@ idx, idx,
 4685              	.LVL490:
 828:src/pdantler/printf.c ****         }
 4686              		.loc 1 828 11 view .LVU1099
 4687 0502 4B46     		mov	r3, r9	@, maxlen
 4688 0504 5146     		mov	r1, r10	@, buffer
 4689 0506 2020     		movs	r0, #32	@,
 4690 0508 D847     		blx	fp		@ out
 4691              	.LVL491:
 827:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4692              		.loc 1 827 15 is_stmt 1 view .LVU1100
 827:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4693              		.loc 1 827 15 is_stmt 0 view .LVU1101
 4694 050a A845     		cmp	r8, r5	@ idx, idx
 4695 050c F6D1     		bne	.L420		@,
 4696              	.LVL492:
 4697              	.L419:
 832:src/pdantler/printf.c ****       // post padding
 4698              		.loc 1 832 7 is_stmt 1 view .LVU1102
 832:src/pdantler/printf.c ****       // post padding
 4699              		.loc 1 832 7 is_stmt 0 view .LVU1103
 4700 050e 56F8040B 		ldr	r0, [r6], #4	@ MEM[(int *)va$__ap_349], MEM[(int *)va$__ap_349]
 4701              	.LVL493:
 832:src/pdantler/printf.c ****       // post padding
 4702              		.loc 1 832 7 view .LVU1104
 4703 0512 4B46     		mov	r3, r9	@, maxlen
 4704 0514 2A46     		mov	r2, r5	@, idx
 4705 0516 5146     		mov	r1, r10	@, buffer
 4706 0518 C0B2     		uxtb	r0, r0	@, MEM[(int *)va$__ap_349]
 4707 051a 05F10108 		add	r8, r5, #1	@ idx, idx,
 4708              	.LVL494:
 832:src/pdantler/printf.c ****       // post padding
 4709              		.loc 1 832 7 view .LVU1105
 4710 051e D847     		blx	fp		@ out
 4711              	.LVL495:
ARM GAS  /tmp/ccFy9xbE.s 			page 115


 834:src/pdantler/printf.c ****         while (l++ < width) {
 4712              		.loc 1 834 7 is_stmt 1 view .LVU1106
 4713 0520 86E7     		b	.L441		@
 4714              	.LVL496:
 4715              	.L494:
 834:src/pdantler/printf.c ****         while (l++ < width) {
 4716              		.loc 1 834 7 is_stmt 0 view .LVU1107
 4717              	.LBE105:
 4718              	.LBB106:
 4719              	@ src/pdantler/printf.c:861:         while (l++ < width) {
 861:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4720              		.loc 1 861 15 view .LVU1108
 4721 0522 0C9B     		ldr	r3, [sp, #48]	@ l, %sfp
 4722 0524 4646     		mov	r6, r8	@ idx, idx
 4723              	.LVL497:
 861:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4724              		.loc 1 861 15 is_stmt 1 view .LVU1109
 861:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4725              		.loc 1 861 15 is_stmt 0 view .LVU1110
 4726 0526 9D42     		cmp	r5, r3	@ width, l
 4727 0528 7FF647AF 		bls	.L435		@,
 4728 052c 05EB0800 		add	r0, r5, r8	@ tmp350, width, idx
 4729 0530 A0EB0308 		sub	r8, r0, r3	@ idx, tmp350, l
 4730              	.L436:
 862:src/pdantler/printf.c ****         }
 4731              		.loc 1 862 11 is_stmt 1 view .LVU1111
 4732 0534 3246     		mov	r2, r6	@ idx, idx
 4733 0536 0136     		adds	r6, r6, #1	@ idx, idx,
 4734              	.LVL498:
 862:src/pdantler/printf.c ****         }
 4735              		.loc 1 862 11 is_stmt 0 view .LVU1112
 4736 0538 4B46     		mov	r3, r9	@, maxlen
 4737 053a 5146     		mov	r1, r10	@, buffer
 4738 053c 2020     		movs	r0, #32	@,
 4739 053e D847     		blx	fp		@ out
 4740              	.LVL499:
 861:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4741              		.loc 1 861 15 is_stmt 1 view .LVU1113
 861:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4742              		.loc 1 861 15 is_stmt 0 view .LVU1114
 4743 0540 4645     		cmp	r6, r8	@ idx, idx
 4744 0542 F7D1     		bne	.L436		@,
 4745 0544 39E7     		b	.L435		@
 4746              	.LVL500:
 4747              	.L508:
 851:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4748              		.loc 1 851 15 is_stmt 1 view .LVU1115
 4749              	@ src/pdantler/printf.c:851:         while (l++ < width) {
 851:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4750              		.loc 1 851 17 is_stmt 0 view .LVU1116
 4751 0546 0C9A     		ldr	r2, [sp, #48]	@ l, %sfp
 4752              	@ src/pdantler/printf.c:851:         while (l++ < width) {
 851:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4753              		.loc 1 851 15 view .LVU1117
 4754 0548 9542     		cmp	r5, r2	@ width, l
 4755              	@ src/pdantler/printf.c:851:         while (l++ < width) {
 851:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
ARM GAS  /tmp/ccFy9xbE.s 			page 116


 4756              		.loc 1 851 17 view .LVU1118
 4757 054a 02F10103 		add	r3, r2, #1	@ l, l,
 4758              	.LVL501:
 4759              	@ src/pdantler/printf.c:851:         while (l++ < width) {
 851:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4760              		.loc 1 851 15 view .LVU1119
 4761 054e 40F28580 		bls	.L454		@,
 4762 0552 05EB0806 		add	r6, r5, r8	@ tmp349, width, idx
 4763 0556 B61A     		subs	r6, r6, r2	@ _147, tmp349, l
 4764              	.LVL502:
 4765              	.L430:
 852:src/pdantler/printf.c ****         }
 4766              		.loc 1 852 11 is_stmt 1 view .LVU1120
 4767 0558 4246     		mov	r2, r8	@ idx, idx
 4768              	.LVL503:
 852:src/pdantler/printf.c ****         }
 4769              		.loc 1 852 11 is_stmt 0 view .LVU1121
 4770 055a 08F10108 		add	r8, r8, #1	@ idx, idx,
 4771              	.LVL504:
 852:src/pdantler/printf.c ****         }
 4772              		.loc 1 852 11 view .LVU1122
 4773 055e 4B46     		mov	r3, r9	@, maxlen
 4774 0560 5146     		mov	r1, r10	@, buffer
 4775 0562 2020     		movs	r0, #32	@,
 4776 0564 D847     		blx	fp		@ out
 4777              	.LVL505:
 851:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4778              		.loc 1 851 15 is_stmt 1 view .LVU1123
 851:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4779              		.loc 1 851 15 is_stmt 0 view .LVU1124
 4780 0566 4645     		cmp	r6, r8	@ _147, idx
 4781 0568 F6D1     		bne	.L430		@,
 4782              	.LVL506:
 4783              	@ src/pdantler/printf.c:851:         while (l++ < width) {
 851:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4784              		.loc 1 851 17 view .LVU1125
 4785 056a 6B1C     		adds	r3, r5, #1	@ l, width,
 4786              	.LVL507:
 851:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4787              		.loc 1 851 17 view .LVU1126
 4788 056c 0C93     		str	r3, [sp, #48]	@ l, %sfp
 4789              	.LVL508:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4790              		.loc 1 856 13 is_stmt 1 view .LVU1127
 4791 056e 0B9B     		ldr	r3, [sp, #44]	@ p, %sfp
 4792              	.LVL509:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4793              		.loc 1 856 13 is_stmt 0 view .LVU1128
 4794 0570 1878     		ldrb	r0, [r3]	@ zero_extendqisi2	@ _96, *p_219
 4795 0572 0028     		cmp	r0, #0	@ _96
 4796 0574 7FF408AF 		bne	.L442	@
 4797 0578 1FE7     		b	.L435		@
 4798              	.LVL510:
 4799              	.L513:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4800              		.loc 1 856 13 view .LVU1129
 4801 057a DBB2     		uxtb	r3, r3	@ iftmp.39_144, MEM[(int *)va$__ap_349]
ARM GAS  /tmp/ccFy9xbE.s 			page 117


 4802              	.LBE106:
 4803              	.LBB107:
 4804              	.LBB74:
 4805 057c 1A46     		mov	r2, r3	@ prephitmp_139, iftmp.39_144
 4806 057e 96E7     		b	.L408		@
 4807              	.LVL511:
 4808              	.L505:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4809              		.loc 1 856 13 view .LVU1130
 4810 0580 DBB2     		uxtb	r3, r3	@ iftmp.41_146, MEM[(unsigned int *)va$__ap_349]
 4811              	.LBE74:
 4812              	.LBB75:
 4813 0582 79E6     		b	.L413		@
 4814              	.LVL512:
 4815              	.L510:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 4816              		.loc 1 856 13 view .LVU1131
 4817              	.LBE75:
 4818              	.LBE107:
 4819              	.LBB108:
 4820              	@ src/pdantler/printf.c:835:         while (l++ < width) {
 835:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4821              		.loc 1 835 15 view .LVU1132
 4822 0584 B846     		mov	r8, r7	@ idx, idx
 4823 0586 53E7     		b	.L441		@
 4824              	.LVL513:
 4825              	.L448:
 835:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 4826              		.loc 1 835 15 view .LVU1133
 4827              	.LBE108:
 4828              	.LBB109:
 4829              	@ src/pdantler/printf.c:729:         base = 8U;
 729:src/pdantler/printf.c ****       } else if (*format == 'b') {
 4830              		.loc 1 729 14 view .LVU1134
 4831 0588 4FF0080E 		mov	lr, #8	@ base,
 4832 058c 6EE7     		b	.L398		@
 4833              	.L511:
 4834              	.LBB76:
 756:src/pdantler/printf.c ****           idx = _ntoa_long_long(
 4835              		.loc 1 756 11 is_stmt 1 view .LVU1135
 4836              	@ src/pdantler/printf.c:756:           const long long value = va_arg(va, long long);
 756:src/pdantler/printf.c ****           idx = _ntoa_long_long(
 4837              		.loc 1 756 27 is_stmt 0 view .LVU1136
 4838 058e 0736     		adds	r6, r6, #7	@ D.6549, D.6560,
 4839              	.LVL514:
 4840              	@ src/pdantler/printf.c:757:           idx = _ntoa_long_long(
 757:src/pdantler/printf.c ****               out, buffer, idx, maxlen,
 4841              		.loc 1 757 17 view .LVU1137
 4842 0590 0021     		movs	r1, #0	@ tmp302,
 4843              	@ src/pdantler/printf.c:756:           const long long value = va_arg(va, long long);
 756:src/pdantler/printf.c ****           idx = _ntoa_long_long(
 4844              		.loc 1 756 27 view .LVU1138
 4845 0592 26F00706 		bic	r6, r6, #7	@ D.6549, D.6549,
 4846              	.LVL515:
 756:src/pdantler/printf.c ****           idx = _ntoa_long_long(
 4847              		.loc 1 756 27 view .LVU1139
 4848 0596 7368     		ldr	r3, [r6, #4]	@ value, MEM[(long long int *)_176]
ARM GAS  /tmp/ccFy9xbE.s 			page 118


 4849              	.LVL516:
 757:src/pdantler/printf.c ****               out, buffer, idx, maxlen,
 4850              		.loc 1 757 11 is_stmt 1 view .LVU1140
 4851              	@ src/pdantler/printf.c:756:           const long long value = va_arg(va, long long);
 756:src/pdantler/printf.c ****           idx = _ntoa_long_long(
 4852              		.loc 1 756 27 is_stmt 0 view .LVU1141
 4853 0598 56F8082B 		ldr	r2, [r6], #8	@ value, MEM[(long long int *)_176]
 4854              	.LVL517:
 4855              	@ src/pdantler/printf.c:757:           idx = _ntoa_long_long(
 757:src/pdantler/printf.c ****               out, buffer, idx, maxlen,
 4856              		.loc 1 757 17 view .LVU1142
 4857 059c D80F     		lsrs	r0, r3, #31	@ tmp305, value,
 4858              	@ src/pdantler/printf.c:759:               (unsigned long long)(value > 0 ? value : 0 - value), val
 759:src/pdantler/printf.c ****               base, precision, width, flags);
 4859              		.loc 1 759 15 view .LVU1143
 4860 059e 002B     		cmp	r3, #0	@ tmp366
 4861              	@ src/pdantler/printf.c:757:           idx = _ntoa_long_long(
 757:src/pdantler/printf.c ****               out, buffer, idx, maxlen,
 4862              		.loc 1 757 17 view .LVU1144
 4863 05a0 0697     		str	r7, [sp, #24]	@ i,
 4864 05a2 0290     		str	r0, [sp, #8]	@ tmp305,
 4865 05a4 CDE9075C 		strd	r5, ip, [sp, #28]	@ width, flags,,
 4866 05a8 CDE904E1 		strd	lr, r1, [sp, #16]	@ base, tmp302,,
 4867              	@ src/pdantler/printf.c:759:               (unsigned long long)(value > 0 ? value : 0 - value), val
 759:src/pdantler/printf.c ****               base, precision, width, flags);
 4868              		.loc 1 759 15 view .LVU1145
 4869 05ac 02DA     		bge	.L404		@,
 759:src/pdantler/printf.c ****               base, precision, width, flags);
 4870              		.loc 1 759 15 view .LVU1146
 4871 05ae 5242     		negs	r2, r2	@ tmp367, value
 4872 05b0 63EB4303 		sbc	r3, r3, r3, lsl #1	@ tmp366, tmp366
 4873              	.L404:
 4874              	@ src/pdantler/printf.c:757:           idx = _ntoa_long_long(
 757:src/pdantler/printf.c ****               out, buffer, idx, maxlen,
 4875              		.loc 1 757 17 view .LVU1147
 4876 05b4 5146     		mov	r1, r10	@, buffer
 4877 05b6 5846     		mov	r0, fp	@, out
 4878 05b8 CDE90023 		strd	r2, r3, [sp]	@ value, tmp366,
 4879 05bc 4246     		mov	r2, r8	@, idx
 4880 05be 4B46     		mov	r3, r9	@, maxlen
 4881 05c0 FFF7FEFF 		bl	_ntoa_long_long		@
 4882              	.LVL518:
 757:src/pdantler/printf.c ****               out, buffer, idx, maxlen,
 4883              		.loc 1 757 17 view .LVU1148
 4884 05c4 8046     		mov	r8, r0	@ idx, tmp387
 757:src/pdantler/printf.c ****               out, buffer, idx, maxlen,
 4885              		.loc 1 757 17 view .LVU1149
 4886              	.LBE76:
 4887 05c6 33E7     		b	.L441		@
 4888              	.LVL519:
 4889              	.L503:
 779:src/pdantler/printf.c ****                                 va_arg(va, unsigned long long), false, base,
 4890              		.loc 1 779 11 is_stmt 1 view .LVU1150
 4891              	@ src/pdantler/printf.c:779:           idx = _ntoa_long_long(out, buffer, idx, maxlen,
 779:src/pdantler/printf.c ****                                 va_arg(va, unsigned long long), false, base,
 4892              		.loc 1 779 17 is_stmt 0 view .LVU1151
 4893 05c8 0736     		adds	r6, r6, #7	@ D.6559, D.6560,
ARM GAS  /tmp/ccFy9xbE.s 			page 119


 4894              	.LVL520:
 779:src/pdantler/printf.c ****                                 va_arg(va, unsigned long long), false, base,
 4895              		.loc 1 779 17 view .LVU1152
 4896 05ca 0590     		str	r0, [sp, #20]	@ tmp299,
 4897 05cc 0290     		str	r0, [sp, #8]	@ tmp299,
 4898 05ce 4246     		mov	r2, r8	@, idx
 4899 05d0 26F00706 		bic	r6, r6, #7	@ D.6560, D.6559,
 4900              	.LVL521:
 779:src/pdantler/printf.c ****                                 va_arg(va, unsigned long long), false, base,
 4901              		.loc 1 779 17 view .LVU1153
 4902 05d4 0697     		str	r7, [sp, #24]	@ i,
 4903 05d6 CDF810E0 		str	lr, [sp, #16]	@ base,
 4904 05da 4B46     		mov	r3, r9	@, maxlen
 4905 05dc 5146     		mov	r1, r10	@, buffer
 4906 05de 5846     		mov	r0, fp	@, out
 4907 05e0 CDE9075C 		strd	r5, ip, [sp, #28]	@ width, flags,,
 4908 05e4 B6EC027B 		vldmia.64	r6!, {d7}	@ int	@ D.6560, MEM[(long long unsigned int *)_364]
 4909              	.LVL522:
 779:src/pdantler/printf.c ****                                 va_arg(va, unsigned long long), false, base,
 4910              		.loc 1 779 17 view .LVU1154
 4911 05e8 8DED007B 		vstr.64	d7, [sp]	@ int	@ MEM[(long long unsigned int *)_364],
 4912 05ec FFF7FEFF 		bl	_ntoa_long_long		@
 4913              	.LVL523:
 779:src/pdantler/printf.c ****                                 va_arg(va, unsigned long long), false, base,
 4914              		.loc 1 779 17 view .LVU1155
 4915 05f0 8046     		mov	r8, r0	@ idx, tmp390
 779:src/pdantler/printf.c ****                                 va_arg(va, unsigned long long), false, base,
 4916              		.loc 1 779 17 view .LVU1156
 4917 05f2 1DE7     		b	.L441		@
 4918              	.LVL524:
 4919              	.L450:
 4920              	@ src/pdantler/printf.c:727:         base = 16U;
 727:src/pdantler/printf.c ****       } else if (*format == 'o') {
 4921              		.loc 1 727 14 view .LVU1157
 4922 05f4 4FF0100E 		mov	lr, #16	@ base,
 4923 05f8 17E6     		b	.L397		@
 4924              	.LVL525:
 4925              	.L504:
 784:src/pdantler/printf.c ****                            false, base, precision, width, flags);
 4926              		.loc 1 784 11 is_stmt 1 view .LVU1158
 4927              	@ src/pdantler/printf.c:784:           idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsign
 784:src/pdantler/printf.c ****                            false, base, precision, width, flags);
 4928              		.loc 1 784 17 is_stmt 0 view .LVU1159
 4929 05fa 0193     		str	r3, [sp, #4]	@ tmp323,
 4930              	.LVL526:
 784:src/pdantler/printf.c ****                            false, base, precision, width, flags);
 4931              		.loc 1 784 17 view .LVU1160
 4932 05fc 4246     		mov	r2, r8	@, idx
 4933 05fe 4B46     		mov	r3, r9	@, maxlen
 4934 0600 5846     		mov	r0, fp	@, out
 4935 0602 CDE9045C 		strd	r5, ip, [sp, #16]	@ width, flags,,
 4936 0606 CDE902E7 		strd	lr, r7, [sp, #8]	@ base, i,,
 4937 060a 56F8041B 		ldr	r1, [r6], #4	@ MEM[(long unsigned int *)va$__ap_349], MEM[(long unsigned int *)va$__ap_349]
 4938              	.LVL527:
 784:src/pdantler/printf.c ****                            false, base, precision, width, flags);
 4939              		.loc 1 784 17 view .LVU1161
 4940 060e 0091     		str	r1, [sp]	@ MEM[(long unsigned int *)va$__ap_349],
ARM GAS  /tmp/ccFy9xbE.s 			page 120


 4941 0610 5146     		mov	r1, r10	@, buffer
 4942 0612 FFF7FEFF 		bl	_ntoa_long		@
 4943              	.LVL528:
 784:src/pdantler/printf.c ****                            false, base, precision, width, flags);
 4944              		.loc 1 784 17 view .LVU1162
 4945 0616 8046     		mov	r8, r0	@ idx, tmp391
 784:src/pdantler/printf.c ****                            false, base, precision, width, flags);
 4946              		.loc 1 784 17 view .LVU1163
 4947 0618 0AE7     		b	.L441		@
 4948              	.LVL529:
 4949              	.L449:
 4950              	@ src/pdantler/printf.c:731:         base = 2U;
 731:src/pdantler/printf.c ****       } else {
 4951              		.loc 1 731 14 view .LVU1164
 4952 061a 4FF0020E 		mov	lr, #2	@ base,
 4953              	.LVL530:
 737:src/pdantler/printf.c ****         flags |= FLAGS_UPPERCASE;
 4954              		.loc 1 737 7 is_stmt 1 view .LVU1165
 742:src/pdantler/printf.c ****         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 4955              		.loc 1 742 7 view .LVU1166
 4956 061e 25E7     		b	.L398		@
 4957              	.LVL531:
 4958              	.L512:
 4959              	.LBB77:
 763:src/pdantler/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen,
 4960              		.loc 1 763 11 view .LVU1167
 4961              	@ src/pdantler/printf.c:763:           const long value = va_arg(va, long);
 763:src/pdantler/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen,
 4962              		.loc 1 763 22 is_stmt 0 view .LVU1168
 4963 0620 56F8040B 		ldr	r0, [r6], #4	@ value, MEM[(long int *)va$__ap_349]
 4964              	.LVL532:
 764:src/pdantler/printf.c ****                            (unsigned long)(value > 0 ? value : 0 - value),
 4965              		.loc 1 764 11 is_stmt 1 view .LVU1169
 4966              	@ src/pdantler/printf.c:764:           idx = _ntoa_long(out, buffer, idx, maxlen,
 764:src/pdantler/printf.c ****                            (unsigned long)(value > 0 ? value : 0 - value),
 4967              		.loc 1 764 17 is_stmt 0 view .LVU1170
 4968 0624 4246     		mov	r2, r8	@, idx
 4969 0626 4B46     		mov	r3, r9	@, maxlen
 4970 0628 5146     		mov	r1, r10	@, buffer
 4971              	@ src/pdantler/printf.c:765:                            (unsigned long)(value > 0 ? value : 0 - val
 765:src/pdantler/printf.c ****                            value < 0, base, precision, width, flags);
 4972              		.loc 1 765 28 view .LVU1171
 4973 062a 0028     		cmp	r0, #0	@ tmp314,
 4974              	@ src/pdantler/printf.c:764:           idx = _ntoa_long(out, buffer, idx, maxlen,
 764:src/pdantler/printf.c ****                            (unsigned long)(value > 0 ? value : 0 - value),
 4975              		.loc 1 764 17 view .LVU1172
 4976 062c CDE9045C 		strd	r5, ip, [sp, #16]	@ width, flags,,
 4977 0630 4FEAD075 		lsr	r5, r0, #31	@ tmp313, value,
 4978              	.LVL533:
 4979              	@ src/pdantler/printf.c:765:                            (unsigned long)(value > 0 ? value : 0 - val
 765:src/pdantler/printf.c ****                            value < 0, base, precision, width, flags);
 4980              		.loc 1 765 28 view .LVU1173
 4981 0634 B8BF     		it	lt
 4982 0636 4042     		rsblt	r0, r0, #0	@ tmp314, value,
 4983              	@ src/pdantler/printf.c:764:           idx = _ntoa_long(out, buffer, idx, maxlen,
 764:src/pdantler/printf.c ****                            (unsigned long)(value > 0 ? value : 0 - value),
 4984              		.loc 1 764 17 view .LVU1174
ARM GAS  /tmp/ccFy9xbE.s 			page 121


 4985 0638 CDE902E7 		strd	lr, r7, [sp, #8]	@ base, i,,
 4986 063c 0090     		str	r0, [sp]	@ tmp314,
 4987 063e 5846     		mov	r0, fp	@, out
 4988 0640 0195     		str	r5, [sp, #4]	@ tmp313,
 4989 0642 FFF7FEFF 		bl	_ntoa_long		@
 4990              	.LVL534:
 764:src/pdantler/printf.c ****                            (unsigned long)(value > 0 ? value : 0 - value),
 4991              		.loc 1 764 17 view .LVU1175
 4992 0646 8046     		mov	r8, r0	@ idx, tmp388
 764:src/pdantler/printf.c ****                            (unsigned long)(value > 0 ? value : 0 - value),
 4993              		.loc 1 764 17 view .LVU1176
 4994              	.LBE77:
 4995 0648 F2E6     		b	.L441		@
 4996              	.LVL535:
 4997              	.L409:
 4998              	.LBB78:
 4999              	@ src/pdantler/printf.c:772:                            (unsigned int)(value > 0 ? value : 0 - valu
 772:src/pdantler/printf.c ****                            value < 0, base, precision, width, flags);
 5000              		.loc 1 772 28 view .LVU1177
 5001 064a 83EAE372 		eor	r2, r3, r3, asr #31	@ prephitmp_139, iftmp.39_144, iftmp.39_144,
 5002 064e A2EBE372 		sub	r2, r2, r3, asr #31	@ prephitmp_139, prephitmp_139, iftmp.39_144,
 5003 0652 2CE7     		b	.L408		@
 5004              	.LVL536:
 5005              	.L506:
 772:src/pdantler/printf.c ****                            value < 0, base, precision, width, flags);
 5006              		.loc 1 772 28 view .LVU1178
 5007              	.LBE78:
 5008              	.LBE109:
 5009              	.LBB110:
 5010              	.LBB89:
 5011              	.LBB86:
 5012              	@ src/pdantler/printf.c:173:   for (s = str; *s && maxsize--; ++s)
 173:src/pdantler/printf.c ****     ;
 5013              		.loc 1 173 3 view .LVU1179
 5014 0654 0C97     		str	r7, [sp, #48]	@ i, %sfp
 5015 0656 86E6     		b	.L424		@
 5016              	.LVL537:
 5017              	.L453:
 173:src/pdantler/printf.c ****     ;
 5018              		.loc 1 173 3 view .LVU1180
 5019 0658 0C90     		str	r0, [sp, #48]	@ _96, %sfp
 5020 065a 84E6     		b	.L424		@
 5021              	.LVL538:
 5022              	.L454:
 173:src/pdantler/printf.c ****     ;
 5023              		.loc 1 173 3 view .LVU1181
 5024              	.LBE86:
 5025              	.LBE89:
 5026              	@ src/pdantler/printf.c:851:         while (l++ < width) {
 851:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 5027              		.loc 1 851 17 view .LVU1182
 5028 065c 0C93     		str	r3, [sp, #48]	@ l, %sfp
 5029              	.LVL539:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 5030              		.loc 1 856 13 is_stmt 1 view .LVU1183
 5031 065e 0028     		cmp	r0, #0	@ _96
 5032 0660 7FF492AE 		bne	.L442	@
ARM GAS  /tmp/ccFy9xbE.s 			page 122


 5033              	.LVL540:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 5034              		.loc 1 856 13 is_stmt 0 view .LVU1184
 5035 0664 A9E6     		b	.L435		@
 5036              	.LVL541:
 5037              	.L451:
 856:src/pdantler/printf.c ****         out(*(p++), buffer, idx++, maxlen);
 5038              		.loc 1 856 13 view .LVU1185
 5039              	.LBE110:
 5040              	.LBB111:
 5041              	@ src/pdantler/printf.c:827:         while (l++ < width) {
 827:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 5042              		.loc 1 827 15 view .LVU1186
 5043 0666 4546     		mov	r5, r8	@ idx, idx
 5044              	.LVL542:
 827:src/pdantler/printf.c ****           out(' ', buffer, idx++, maxlen);
 5045              		.loc 1 827 15 view .LVU1187
 5046 0668 51E7     		b	.L419		@
 5047              	.LBE111:
 5048              		.cfi_endproc
 5049              	.LFE13:
 5050              		.size	_vsnprintf, .-_vsnprintf
 5051 066a 00BF     		.section	.text.printf_,"ax",%progbits
 5052              		.align	1
 5053              		.p2align 4,,15
 5054              		.global	printf_
 5055              		.syntax unified
 5056              		.thumb
 5057              		.thumb_func
 5058              		.fpu fpv5-sp-d16
 5059              		.type	printf_, %function
 5060              	printf_:
 5061              	.LVL543:
 5062              	.LFB14:
 908:src/pdantler/printf.c **** 
 909:src/pdantler/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 910:src/pdantler/printf.c **** 
 911:src/pdantler/printf.c **** int printf_(const char *format, ...) {
 5063              		.loc 1 911 38 is_stmt 1 view -0
 5064              		.cfi_startproc
 5065              		@ args = 4, pretend = 16, frame = 8
 5066              		@ frame_needed = 0, uses_anonymous_args = 1
 912:src/pdantler/printf.c ****   va_list va;
 5067              		.loc 1 912 3 view .LVU1189
 913:src/pdantler/printf.c ****   va_start(va, format);
 5068              		.loc 1 913 3 view .LVU1190
 5069              	@ src/pdantler/printf.c:911: int printf_(const char *format, ...) {
 911:src/pdantler/printf.c ****   va_list va;
 5070              		.loc 1 911 38 is_stmt 0 view .LVU1191
 5071 0000 0FB4     		push	{r0, r1, r2, r3}	@
 5072              	.LCFI50:
 5073              		.cfi_def_cfa_offset 16
 5074              		.cfi_offset 0, -16
 5075              		.cfi_offset 1, -12
 5076              		.cfi_offset 2, -8
 5077              		.cfi_offset 3, -4
 5078 0002 10B5     		push	{r4, lr}	@
ARM GAS  /tmp/ccFy9xbE.s 			page 123


 5079              	.LCFI51:
 5080              		.cfi_def_cfa_offset 24
 5081              		.cfi_offset 4, -24
 5082              		.cfi_offset 14, -20
 5083 0004 84B0     		sub	sp, sp, #16	@,,
 5084              	.LCFI52:
 5085              		.cfi_def_cfa_offset 40
 5086              	@ src/pdantler/printf.c:915:   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va
 914:src/pdantler/printf.c ****   char buffer[1];
 915:src/pdantler/printf.c ****   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 5087              		.loc 1 915 19 view .LVU1192
 5088 0006 4FF0FF32 		mov	r2, #-1	@,
 5089 000a 0748     		ldr	r0, .L518	@,
 5090              	@ src/pdantler/printf.c:911: int printf_(const char *format, ...) {
 911:src/pdantler/printf.c ****   va_list va;
 5091              		.loc 1 911 38 view .LVU1193
 5092 000c 06AC     		add	r4, sp, #24	@ tmp115,,
 5093              	@ src/pdantler/printf.c:915:   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va
 5094              		.loc 1 915 19 view .LVU1194
 5095 000e 02A9     		add	r1, sp, #8	@,,
 5096              	@ src/pdantler/printf.c:911: int printf_(const char *format, ...) {
 911:src/pdantler/printf.c ****   va_list va;
 5097              		.loc 1 911 38 view .LVU1195
 5098 0010 54F8043B 		ldr	r3, [r4], #4	@ format, format
 5099              	@ src/pdantler/printf.c:915:   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va
 5100              		.loc 1 915 19 view .LVU1196
 5101 0014 0094     		str	r4, [sp]	@ tmp115,
 5102              	@ src/pdantler/printf.c:913:   va_start(va, format);
 913:src/pdantler/printf.c ****   char buffer[1];
 5103              		.loc 1 913 3 view .LVU1197
 5104 0016 0394     		str	r4, [sp, #12]	@ tmp115, MEM[(struct  *)&va].__ap
 914:src/pdantler/printf.c ****   char buffer[1];
 5105              		.loc 1 914 3 is_stmt 1 view .LVU1198
 5106              		.loc 1 915 3 view .LVU1199
 5107              	@ src/pdantler/printf.c:915:   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va
 5108              		.loc 1 915 19 is_stmt 0 view .LVU1200
 5109 0018 FFF7FEFF 		bl	_vsnprintf		@
 5110              	.LVL544:
 916:src/pdantler/printf.c ****   va_end(va);
 5111              		.loc 1 916 3 is_stmt 1 view .LVU1201
 917:src/pdantler/printf.c ****   return ret;
 5112              		.loc 1 917 3 view .LVU1202
 5113              	@ src/pdantler/printf.c:918: }
 918:src/pdantler/printf.c **** }
 5114              		.loc 1 918 1 is_stmt 0 view .LVU1203
 5115 001c 04B0     		add	sp, sp, #16	@,,
 5116              	.LCFI53:
 5117              		.cfi_def_cfa_offset 24
 5118              		@ sp needed	@
 5119 001e BDE81040 		pop	{r4, lr}	@
 5120              	.LCFI54:
 5121              		.cfi_restore 14
 5122              		.cfi_restore 4
 5123              		.cfi_def_cfa_offset 16
 5124 0022 04B0     		add	sp, sp, #16	@,,
 5125              	.LCFI55:
 5126              		.cfi_restore 3
ARM GAS  /tmp/ccFy9xbE.s 			page 124


 5127              		.cfi_restore 2
 5128              		.cfi_restore 1
 5129              		.cfi_restore 0
 5130              		.cfi_def_cfa_offset 0
 5131 0024 7047     		bx	lr	@
 5132              	.L519:
 5133 0026 00BF     		.align	2
 5134              	.L518:
 5135 0028 00000000 		.word	_out_char
 5136              		.cfi_endproc
 5137              	.LFE14:
 5138              		.size	printf_, .-printf_
 5139              		.section	.text.sprintf_,"ax",%progbits
 5140              		.align	1
 5141              		.p2align 4,,15
 5142              		.global	sprintf_
 5143              		.syntax unified
 5144              		.thumb
 5145              		.thumb_func
 5146              		.fpu fpv5-sp-d16
 5147              		.type	sprintf_, %function
 5148              	sprintf_:
 5149              	.LVL545:
 5150              	.LFB15:
 919:src/pdantler/printf.c **** 
 920:src/pdantler/printf.c **** int sprintf_(char *buffer, const char *format, ...) {
 5151              		.loc 1 920 53 is_stmt 1 view -0
 5152              		.cfi_startproc
 5153              		@ args = 4, pretend = 12, frame = 8
 5154              		@ frame_needed = 0, uses_anonymous_args = 1
 921:src/pdantler/printf.c ****   va_list va;
 5155              		.loc 1 921 3 view .LVU1205
 922:src/pdantler/printf.c ****   va_start(va, format);
 5156              		.loc 1 922 3 view .LVU1206
 5157              	@ src/pdantler/printf.c:920: int sprintf_(char *buffer, const char *format, ...) {
 920:src/pdantler/printf.c ****   va_list va;
 5158              		.loc 1 920 53 is_stmt 0 view .LVU1207
 5159 0000 0EB4     		push	{r1, r2, r3}	@
 5160              	.LCFI56:
 5161              		.cfi_def_cfa_offset 12
 5162              		.cfi_offset 1, -12
 5163              		.cfi_offset 2, -8
 5164              		.cfi_offset 3, -4
 5165 0002 10B5     		push	{r4, lr}	@
 5166              	.LCFI57:
 5167              		.cfi_def_cfa_offset 20
 5168              		.cfi_offset 4, -20
 5169              		.cfi_offset 14, -16
 5170 0004 85B0     		sub	sp, sp, #20	@,,
 5171              	.LCFI58:
 5172              		.cfi_def_cfa_offset 40
 5173              	@ src/pdantler/printf.c:920: int sprintf_(char *buffer, const char *format, ...) {
 920:src/pdantler/printf.c ****   va_list va;
 5174              		.loc 1 920 53 view .LVU1208
 5175 0006 0146     		mov	r1, r0	@ tmp120, buffer
 5176              	@ src/pdantler/printf.c:923:   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, 
 923:src/pdantler/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
ARM GAS  /tmp/ccFy9xbE.s 			page 125


 5177              		.loc 1 923 19 view .LVU1209
 5178 0008 4FF0FF32 		mov	r2, #-1	@,
 5179 000c 0648     		ldr	r0, .L522	@,
 5180              	.LVL546:
 5181              	@ src/pdantler/printf.c:920: int sprintf_(char *buffer, const char *format, ...) {
 920:src/pdantler/printf.c ****   va_list va;
 5182              		.loc 1 920 53 view .LVU1210
 5183 000e 07AC     		add	r4, sp, #28	@ tmp116,,
 5184 0010 54F8043B 		ldr	r3, [r4], #4	@ format, format
 5185              	@ src/pdantler/printf.c:923:   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, 
 5186              		.loc 1 923 19 view .LVU1211
 5187 0014 0094     		str	r4, [sp]	@ tmp116,
 5188              	@ src/pdantler/printf.c:922:   va_start(va, format);
 922:src/pdantler/printf.c ****   va_start(va, format);
 5189              		.loc 1 922 3 view .LVU1212
 5190 0016 0394     		str	r4, [sp, #12]	@ tmp116, MEM[(struct  *)&va].__ap
 5191              		.loc 1 923 3 is_stmt 1 view .LVU1213
 5192              	@ src/pdantler/printf.c:923:   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, 
 5193              		.loc 1 923 19 is_stmt 0 view .LVU1214
 5194 0018 FFF7FEFF 		bl	_vsnprintf		@
 5195              	.LVL547:
 924:src/pdantler/printf.c ****   va_end(va);
 5196              		.loc 1 924 3 is_stmt 1 view .LVU1215
 925:src/pdantler/printf.c ****   return ret;
 5197              		.loc 1 925 3 view .LVU1216
 5198              	@ src/pdantler/printf.c:926: }
 926:src/pdantler/printf.c **** }
 5199              		.loc 1 926 1 is_stmt 0 view .LVU1217
 5200 001c 05B0     		add	sp, sp, #20	@,,
 5201              	.LCFI59:
 5202              		.cfi_def_cfa_offset 20
 5203              		@ sp needed	@
 5204 001e BDE81040 		pop	{r4, lr}	@
 5205              	.LCFI60:
 5206              		.cfi_restore 14
 5207              		.cfi_restore 4
 5208              		.cfi_def_cfa_offset 12
 5209 0022 03B0     		add	sp, sp, #12	@,,
 5210              	.LCFI61:
 5211              		.cfi_restore 3
 5212              		.cfi_restore 2
 5213              		.cfi_restore 1
 5214              		.cfi_def_cfa_offset 0
 5215 0024 7047     		bx	lr	@
 5216              	.L523:
 5217 0026 00BF     		.align	2
 5218              	.L522:
 5219 0028 00000000 		.word	_out_buffer
 5220              		.cfi_endproc
 5221              	.LFE15:
 5222              		.size	sprintf_, .-sprintf_
 5223              		.section	.text.snprintf_,"ax",%progbits
 5224              		.align	1
 5225              		.p2align 4,,15
 5226              		.global	snprintf_
 5227              		.syntax unified
 5228              		.thumb
ARM GAS  /tmp/ccFy9xbE.s 			page 126


 5229              		.thumb_func
 5230              		.fpu fpv5-sp-d16
 5231              		.type	snprintf_, %function
 5232              	snprintf_:
 5233              	.LVL548:
 5234              	.LFB16:
 927:src/pdantler/printf.c **** 
 928:src/pdantler/printf.c **** int snprintf_(char *buffer, size_t count, const char *format, ...) {
 5235              		.loc 1 928 68 is_stmt 1 view -0
 5236              		.cfi_startproc
 5237              		@ args = 4, pretend = 8, frame = 8
 5238              		@ frame_needed = 0, uses_anonymous_args = 1
 929:src/pdantler/printf.c ****   va_list va;
 5239              		.loc 1 929 3 view .LVU1219
 930:src/pdantler/printf.c ****   va_start(va, format);
 5240              		.loc 1 930 3 view .LVU1220
 5241              	@ src/pdantler/printf.c:928: int snprintf_(char *buffer, size_t count, const char *format, ...) {
 928:src/pdantler/printf.c ****   va_list va;
 5242              		.loc 1 928 68 is_stmt 0 view .LVU1221
 5243 0000 0CB4     		push	{r2, r3}	@
 5244              	.LCFI62:
 5245              		.cfi_def_cfa_offset 8
 5246              		.cfi_offset 2, -8
 5247              		.cfi_offset 3, -4
 5248 0002 10B5     		push	{r4, lr}	@
 5249              	.LCFI63:
 5250              		.cfi_def_cfa_offset 16
 5251              		.cfi_offset 4, -16
 5252              		.cfi_offset 14, -12
 5253 0004 84B0     		sub	sp, sp, #16	@,,
 5254              	.LCFI64:
 5255              		.cfi_def_cfa_offset 32
 5256              	@ src/pdantler/printf.c:928: int snprintf_(char *buffer, size_t count, const char *format, ...) {
 928:src/pdantler/printf.c ****   va_list va;
 5257              		.loc 1 928 68 view .LVU1222
 5258 0006 8446     		mov	ip, r0	@ tmp121, buffer
 5259 0008 0A46     		mov	r2, r1	@ tmp122, count
 5260              	@ src/pdantler/printf.c:931:   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 931:src/pdantler/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 5261              		.loc 1 931 19 view .LVU1223
 5262 000a 0748     		ldr	r0, .L526	@,
 5263              	.LVL549:
 5264              	@ src/pdantler/printf.c:928: int snprintf_(char *buffer, size_t count, const char *format, ...) {
 928:src/pdantler/printf.c ****   va_list va;
 5265              		.loc 1 928 68 view .LVU1224
 5266 000c 06AC     		add	r4, sp, #24	@ tmp117,,
 5267              	@ src/pdantler/printf.c:931:   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 5268              		.loc 1 931 19 view .LVU1225
 5269 000e 6146     		mov	r1, ip	@, tmp121
 5270              	.LVL550:
 5271              	@ src/pdantler/printf.c:928: int snprintf_(char *buffer, size_t count, const char *format, ...) {
 928:src/pdantler/printf.c ****   va_list va;
 5272              		.loc 1 928 68 view .LVU1226
 5273 0010 54F8043B 		ldr	r3, [r4], #4	@ format, format
 5274              	@ src/pdantler/printf.c:931:   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 5275              		.loc 1 931 19 view .LVU1227
 5276 0014 0094     		str	r4, [sp]	@ tmp117,
ARM GAS  /tmp/ccFy9xbE.s 			page 127


 5277              	@ src/pdantler/printf.c:930:   va_start(va, format);
 930:src/pdantler/printf.c ****   va_start(va, format);
 5278              		.loc 1 930 3 view .LVU1228
 5279 0016 0394     		str	r4, [sp, #12]	@ tmp117, MEM[(struct  *)&va].__ap
 5280              		.loc 1 931 3 is_stmt 1 view .LVU1229
 5281              	@ src/pdantler/printf.c:931:   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 5282              		.loc 1 931 19 is_stmt 0 view .LVU1230
 5283 0018 FFF7FEFF 		bl	_vsnprintf		@
 5284              	.LVL551:
 932:src/pdantler/printf.c ****   va_end(va);
 5285              		.loc 1 932 3 is_stmt 1 view .LVU1231
 933:src/pdantler/printf.c ****   return ret;
 5286              		.loc 1 933 3 view .LVU1232
 5287              	@ src/pdantler/printf.c:934: }
 934:src/pdantler/printf.c **** }
 5288              		.loc 1 934 1 is_stmt 0 view .LVU1233
 5289 001c 04B0     		add	sp, sp, #16	@,,
 5290              	.LCFI65:
 5291              		.cfi_def_cfa_offset 16
 5292              		@ sp needed	@
 5293 001e BDE81040 		pop	{r4, lr}	@
 5294              	.LCFI66:
 5295              		.cfi_restore 14
 5296              		.cfi_restore 4
 5297              		.cfi_def_cfa_offset 8
 5298 0022 02B0     		add	sp, sp, #8	@,,
 5299              	.LCFI67:
 5300              		.cfi_restore 3
 5301              		.cfi_restore 2
 5302              		.cfi_def_cfa_offset 0
 5303 0024 7047     		bx	lr	@
 5304              	.L527:
 5305 0026 00BF     		.align	2
 5306              	.L526:
 5307 0028 00000000 		.word	_out_buffer
 5308              		.cfi_endproc
 5309              	.LFE16:
 5310              		.size	snprintf_, .-snprintf_
 5311              		.section	.text.vprintf_,"ax",%progbits
 5312              		.align	1
 5313              		.p2align 4,,15
 5314              		.global	vprintf_
 5315              		.syntax unified
 5316              		.thumb
 5317              		.thumb_func
 5318              		.fpu fpv5-sp-d16
 5319              		.type	vprintf_, %function
 5320              	vprintf_:
 5321              	.LVL552:
 5322              	.LFB17:
 935:src/pdantler/printf.c **** 
 936:src/pdantler/printf.c **** int vprintf_(const char *format, va_list va) {
 5323              		.loc 1 936 46 is_stmt 1 view -0
 5324              		.cfi_startproc
 5325              		@ args = 0, pretend = 0, frame = 8
 5326              		@ frame_needed = 0, uses_anonymous_args = 0
 937:src/pdantler/printf.c ****   char buffer[1];
ARM GAS  /tmp/ccFy9xbE.s 			page 128


 5327              		.loc 1 937 3 view .LVU1235
 938:src/pdantler/printf.c ****   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 5328              		.loc 1 938 3 view .LVU1236
 5329              	@ src/pdantler/printf.c:936: int vprintf_(const char *format, va_list va) {
 936:src/pdantler/printf.c ****   char buffer[1];
 5330              		.loc 1 936 46 is_stmt 0 view .LVU1237
 5331 0000 10B5     		push	{r4, lr}	@
 5332              	.LCFI68:
 5333              		.cfi_def_cfa_offset 8
 5334              		.cfi_offset 4, -8
 5335              		.cfi_offset 14, -4
 5336 0002 84B0     		sub	sp, sp, #16	@,,
 5337              	.LCFI69:
 5338              		.cfi_def_cfa_offset 24
 5339              	@ src/pdantler/printf.c:936: int vprintf_(const char *format, va_list va) {
 936:src/pdantler/printf.c ****   char buffer[1];
 5340              		.loc 1 936 46 view .LVU1238
 5341 0004 0C46     		mov	r4, r1	@ tmp120, va
 5342 0006 0346     		mov	r3, r0	@ tmp119, format
 5343              	@ src/pdantler/printf.c:938:   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 5344              		.loc 1 938 10 view .LVU1239
 5345 0008 4FF0FF32 		mov	r2, #-1	@,
 5346 000c 03A9     		add	r1, sp, #12	@,,
 5347              	.LVL553:
 5348              		.loc 1 938 10 view .LVU1240
 5349 000e 0094     		str	r4, [sp]	@ tmp120,
 5350 0010 0248     		ldr	r0, .L530	@,
 5351              	.LVL554:
 5352              		.loc 1 938 10 view .LVU1241
 5353 0012 FFF7FEFF 		bl	_vsnprintf		@
 5354              	.LVL555:
 5355              	@ src/pdantler/printf.c:939: }
 939:src/pdantler/printf.c **** }
 5356              		.loc 1 939 1 view .LVU1242
 5357 0016 04B0     		add	sp, sp, #16	@,,
 5358              	.LCFI70:
 5359              		.cfi_def_cfa_offset 8
 5360              		@ sp needed	@
 5361 0018 10BD     		pop	{r4, pc}	@
 5362              	.L531:
 5363 001a 00BF     		.align	2
 5364              	.L530:
 5365 001c 00000000 		.word	_out_char
 5366              		.cfi_endproc
 5367              	.LFE17:
 5368              		.size	vprintf_, .-vprintf_
 5369              		.section	.text.vsnprintf_,"ax",%progbits
 5370              		.align	1
 5371              		.p2align 4,,15
 5372              		.global	vsnprintf_
 5373              		.syntax unified
 5374              		.thumb
 5375              		.thumb_func
 5376              		.fpu fpv5-sp-d16
 5377              		.type	vsnprintf_, %function
 5378              	vsnprintf_:
 5379              	.LVL556:
ARM GAS  /tmp/ccFy9xbE.s 			page 129


 5380              	.LFB18:
 940:src/pdantler/printf.c **** 
 941:src/pdantler/printf.c **** int vsnprintf_(char *buffer, size_t count, const char *format, va_list va) {
 5381              		.loc 1 941 76 is_stmt 1 view -0
 5382              		.cfi_startproc
 5383              		@ args = 0, pretend = 0, frame = 0
 5384              		@ frame_needed = 0, uses_anonymous_args = 0
 942:src/pdantler/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 5385              		.loc 1 942 3 view .LVU1244
 5386              	@ src/pdantler/printf.c:941: int vsnprintf_(char *buffer, size_t count, const char *format, va_list
 941:src/pdantler/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 5387              		.loc 1 941 76 is_stmt 0 view .LVU1245
 5388 0000 9446     		mov	ip, r2	@ tmp122, format
 5389              	@ src/pdantler/printf.c:942:   return _vsnprintf(_out_buffer, buffer, count, format, va);
 5390              		.loc 1 942 10 view .LVU1246
 5391 0002 0A46     		mov	r2, r1	@, tmp121
 5392              	.LVL557:
 5393              		.loc 1 942 10 view .LVU1247
 5394 0004 0146     		mov	r1, r0	@, tmp120
 5395              	.LVL558:
 5396              		.loc 1 942 10 view .LVU1248
 5397 0006 0548     		ldr	r0, .L534	@,
 5398              	.LVL559:
 5399              	@ src/pdantler/printf.c:941: int vsnprintf_(char *buffer, size_t count, const char *format, va_list
 941:src/pdantler/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 5400              		.loc 1 941 76 view .LVU1249
 5401 0008 10B5     		push	{r4, lr}	@
 5402              	.LCFI71:
 5403              		.cfi_def_cfa_offset 8
 5404              		.cfi_offset 4, -8
 5405              		.cfi_offset 14, -4
 5406 000a 1C46     		mov	r4, r3	@ tmp123, va
 5407 000c 82B0     		sub	sp, sp, #8	@,,
 5408              	.LCFI72:
 5409              		.cfi_def_cfa_offset 16
 5410              	@ src/pdantler/printf.c:942:   return _vsnprintf(_out_buffer, buffer, count, format, va);
 5411              		.loc 1 942 10 view .LVU1250
 5412 000e 6346     		mov	r3, ip	@, tmp122
 5413              	.LVL560:
 5414              		.loc 1 942 10 view .LVU1251
 5415 0010 0094     		str	r4, [sp]	@ tmp123,
 5416 0012 FFF7FEFF 		bl	_vsnprintf		@
 5417              	.LVL561:
 5418              	@ src/pdantler/printf.c:943: }
 943:src/pdantler/printf.c **** }
 5419              		.loc 1 943 1 view .LVU1252
 5420 0016 02B0     		add	sp, sp, #8	@,,
 5421              	.LCFI73:
 5422              		.cfi_def_cfa_offset 8
 5423              		@ sp needed	@
 5424 0018 10BD     		pop	{r4, pc}	@
 5425              	.L535:
 5426 001a 00BF     		.align	2
 5427              	.L534:
 5428 001c 00000000 		.word	_out_buffer
 5429              		.cfi_endproc
 5430              	.LFE18:
ARM GAS  /tmp/ccFy9xbE.s 			page 130


 5431              		.size	vsnprintf_, .-vsnprintf_
 5432              		.section	.text.fctprintf,"ax",%progbits
 5433              		.align	1
 5434              		.p2align 4,,15
 5435              		.global	fctprintf
 5436              		.syntax unified
 5437              		.thumb
 5438              		.thumb_func
 5439              		.fpu fpv5-sp-d16
 5440              		.type	fctprintf, %function
 5441              	fctprintf:
 5442              	.LVL562:
 5443              	.LFB19:
 944:src/pdantler/printf.c **** 
 945:src/pdantler/printf.c **** int fctprintf(void (*out)(char character, void *arg), void *arg,
 946:src/pdantler/printf.c ****               const char *format, ...) {
 5444              		.loc 1 946 40 is_stmt 1 view -0
 5445              		.cfi_startproc
 5446              		@ args = 4, pretend = 8, frame = 16
 5447              		@ frame_needed = 0, uses_anonymous_args = 1
 947:src/pdantler/printf.c ****   va_list va;
 5448              		.loc 1 947 3 view .LVU1254
 948:src/pdantler/printf.c ****   va_start(va, format);
 5449              		.loc 1 948 3 view .LVU1255
 5450              	@ src/pdantler/printf.c:946:               const char *format, ...) {
 946:src/pdantler/printf.c ****   va_list va;
 5451              		.loc 1 946 40 is_stmt 0 view .LVU1256
 5452 0000 0CB4     		push	{r2, r3}	@
 5453              	.LCFI74:
 5454              		.cfi_def_cfa_offset 8
 5455              		.cfi_offset 2, -8
 5456              		.cfi_offset 3, -4
 5457 0002 30B5     		push	{r4, r5, lr}	@
 5458              	.LCFI75:
 5459              		.cfi_def_cfa_offset 20
 5460              		.cfi_offset 4, -20
 5461              		.cfi_offset 5, -16
 5462              		.cfi_offset 14, -12
 5463 0004 87B0     		sub	sp, sp, #28	@,,
 5464              	.LCFI76:
 5465              		.cfi_def_cfa_offset 48
 5466              	@ src/pdantler/printf.c:946:               const char *format, ...) {
 946:src/pdantler/printf.c ****   va_list va;
 5467              		.loc 1 946 40 view .LVU1257
 5468 0006 0D46     		mov	r5, r1	@ tmp123, arg
 5469              	@ src/pdantler/printf.c:950:   const int ret = _vsnprintf(_out_fct, (char *)(uintptr_t)&out_fct_wra
 949:src/pdantler/printf.c ****   const out_fct_wrap_type out_fct_wrap = {out, arg};
 950:src/pdantler/printf.c ****   const int ret = _vsnprintf(_out_fct, (char *)(uintptr_t)&out_fct_wrap,
 5470              		.loc 1 950 19 view .LVU1258
 5471 0008 4FF0FF32 		mov	r2, #-1	@,
 5472              	@ src/pdantler/printf.c:946:               const char *format, ...) {
 946:src/pdantler/printf.c ****   va_list va;
 5473              		.loc 1 946 40 view .LVU1259
 5474 000c 0AAC     		add	r4, sp, #40	@ tmp117,,
 5475              	@ src/pdantler/printf.c:950:   const int ret = _vsnprintf(_out_fct, (char *)(uintptr_t)&out_fct_wra
 5476              		.loc 1 950 19 view .LVU1260
 5477 000e 04A9     		add	r1, sp, #16	@,,
ARM GAS  /tmp/ccFy9xbE.s 			page 131


 5478              	@ src/pdantler/printf.c:949:   const out_fct_wrap_type out_fct_wrap = {out, arg};
 949:src/pdantler/printf.c ****   const out_fct_wrap_type out_fct_wrap = {out, arg};
 5479              		.loc 1 949 27 view .LVU1261
 5480 0010 0490     		str	r0, [sp, #16]	@ tmp122, out_fct_wrap.fct
 5481              	@ src/pdantler/printf.c:946:               const char *format, ...) {
 946:src/pdantler/printf.c ****   va_list va;
 5482              		.loc 1 946 40 view .LVU1262
 5483 0012 54F8043B 		ldr	r3, [r4], #4	@ format, format
 5484              	@ src/pdantler/printf.c:950:   const int ret = _vsnprintf(_out_fct, (char *)(uintptr_t)&out_fct_wra
 5485              		.loc 1 950 19 view .LVU1263
 5486 0016 0548     		ldr	r0, .L538	@,
 5487              	.LVL563:
 5488              		.loc 1 950 19 view .LVU1264
 5489 0018 0094     		str	r4, [sp]	@ tmp117,
 5490              	@ src/pdantler/printf.c:949:   const out_fct_wrap_type out_fct_wrap = {out, arg};
 949:src/pdantler/printf.c ****   const out_fct_wrap_type out_fct_wrap = {out, arg};
 5491              		.loc 1 949 27 view .LVU1265
 5492 001a 0595     		str	r5, [sp, #20]	@ tmp123, out_fct_wrap.arg
 5493              	@ src/pdantler/printf.c:948:   va_start(va, format);
 948:src/pdantler/printf.c ****   const out_fct_wrap_type out_fct_wrap = {out, arg};
 5494              		.loc 1 948 3 view .LVU1266
 5495 001c 0394     		str	r4, [sp, #12]	@ tmp117, MEM[(struct  *)&va].__ap
 949:src/pdantler/printf.c ****   const out_fct_wrap_type out_fct_wrap = {out, arg};
 5496              		.loc 1 949 3 is_stmt 1 view .LVU1267
 5497              		.loc 1 950 3 view .LVU1268
 5498              	@ src/pdantler/printf.c:950:   const int ret = _vsnprintf(_out_fct, (char *)(uintptr_t)&out_fct_wra
 5499              		.loc 1 950 19 is_stmt 0 view .LVU1269
 5500 001e FFF7FEFF 		bl	_vsnprintf		@
 5501              	.LVL564:
 951:src/pdantler/printf.c ****                              (size_t)-1, format, va);
 952:src/pdantler/printf.c ****   va_end(va);
 5502              		.loc 1 952 3 is_stmt 1 view .LVU1270
 953:src/pdantler/printf.c ****   return ret;
 5503              		.loc 1 953 3 view .LVU1271
 5504              	@ src/pdantler/printf.c:954: }
 954:src/pdantler/printf.c **** }
 5505              		.loc 1 954 1 is_stmt 0 view .LVU1272
 5506 0022 07B0     		add	sp, sp, #28	@,,
 5507              	.LCFI77:
 5508              		.cfi_def_cfa_offset 20
 5509              		@ sp needed	@
 5510 0024 BDE83040 		pop	{r4, r5, lr}	@
 5511              	.LCFI78:
 5512              		.cfi_restore 14
 5513              		.cfi_restore 5
 5514              		.cfi_restore 4
 5515              		.cfi_def_cfa_offset 8
 5516              	.LVL565:
 5517              		.loc 1 954 1 view .LVU1273
 5518 0028 02B0     		add	sp, sp, #8	@,,
 5519              	.LCFI79:
 5520              		.cfi_restore 3
 5521              		.cfi_restore 2
 5522              		.cfi_def_cfa_offset 0
 5523 002a 7047     		bx	lr	@
 5524              	.L539:
 5525              		.align	2
ARM GAS  /tmp/ccFy9xbE.s 			page 132


 5526              	.L538:
 5527 002c 00000000 		.word	_out_fct
 5528              		.cfi_endproc
 5529              	.LFE19:
 5530              		.size	fctprintf, .-fctprintf
 5531              		.section	.rodata.pow10.0,"a"
 5532              		.align	3
 5533              		.set	.LANCHOR0,. + 0
 5534              		.type	pow10.0, %object
 5535              		.size	pow10.0, 80
 5536              	pow10.0:
 5537 0000 00000000 		.word	0
 5538 0004 0000F03F 		.word	1072693248
 5539 0008 00000000 		.word	0
 5540 000c 00002440 		.word	1076101120
 5541 0010 00000000 		.word	0
 5542 0014 00005940 		.word	1079574528
 5543 0018 00000000 		.word	0
 5544 001c 00408F40 		.word	1083129856
 5545 0020 00000000 		.word	0
 5546 0024 0088C340 		.word	1086556160
 5547 0028 00000000 		.word	0
 5548 002c 006AF840 		.word	1090021888
 5549 0030 00000000 		.word	0
 5550 0034 80842E41 		.word	1093567616
 5551 0038 00000000 		.word	0
 5552 003c D0126341 		.word	1097011920
 5553 0040 00000000 		.word	0
 5554 0044 84D79741 		.word	1100470148
 5555 0048 00000000 		.word	0
 5556 004c 65CDCD41 		.word	1104006501
 5557              		.text
 5558              	.Letext0:
 5559              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 5560              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 5561              		.file 4 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 5562              		.file 5 "<built-in>"
 5563              		.file 6 "src/pdantler/printf.h"
 5564              		.section	.debug_info,"",%progbits
 5565              	.Ldebug_info0:
 5566 0000 751B0000 		.4byte	0x1b75
 5567 0004 0200     		.2byte	0x2
 5568 0006 00000000 		.4byte	.Ldebug_abbrev0
 5569 000a 04       		.byte	0x4
 5570 000b 01       		.uleb128 0x1
 5571 000c 4A0F0000 		.4byte	.LASF795
 5572 0010 0C       		.byte	0xc
 5573 0011 1F380000 		.4byte	.LASF796
 5574 0015 A21A0000 		.4byte	.LASF797
 5575 0019 B8010000 		.4byte	.Ldebug_ranges0+0x1b8
 5576 001d 00000000 		.4byte	0
 5577 0021 00000000 		.4byte	0
 5578 0025 00000000 		.4byte	.Ldebug_line0
 5579 0029 00000000 		.4byte	.Ldebug_macro0
 5580 002d 02       		.uleb128 0x2
 5581 002e 08       		.byte	0x8
 5582 002f 04       		.byte	0x4
ARM GAS  /tmp/ccFy9xbE.s 			page 133


 5583 0030 FB260000 		.4byte	.LASF748
 5584 0034 02       		.uleb128 0x2
 5585 0035 01       		.byte	0x1
 5586 0036 06       		.byte	0x6
 5587 0037 CE100000 		.4byte	.LASF749
 5588 003b 02       		.uleb128 0x2
 5589 003c 02       		.byte	0x2
 5590 003d 05       		.byte	0x5
 5591 003e 403C0000 		.4byte	.LASF750
 5592 0042 02       		.uleb128 0x2
 5593 0043 04       		.byte	0x4
 5594 0044 05       		.byte	0x5
 5595 0045 3B0B0000 		.4byte	.LASF751
 5596 0049 03       		.uleb128 0x3
 5597 004a 42000000 		.4byte	0x42
 5598 004e 02       		.uleb128 0x2
 5599 004f 08       		.byte	0x8
 5600 0050 05       		.byte	0x5
 5601 0051 74250000 		.4byte	.LASF752
 5602 0055 03       		.uleb128 0x3
 5603 0056 4E000000 		.4byte	0x4e
 5604 005a 02       		.uleb128 0x2
 5605 005b 01       		.byte	0x1
 5606 005c 08       		.byte	0x8
 5607 005d 562E0000 		.4byte	.LASF753
 5608 0061 02       		.uleb128 0x2
 5609 0062 02       		.byte	0x2
 5610 0063 07       		.byte	0x7
 5611 0064 BF0D0000 		.4byte	.LASF754
 5612 0068 02       		.uleb128 0x2
 5613 0069 04       		.byte	0x4
 5614 006a 07       		.byte	0x7
 5615 006b B51E0000 		.4byte	.LASF755
 5616 006f 04       		.uleb128 0x4
 5617 0070 973C0000 		.4byte	.LASF758
 5618 0074 02       		.byte	0x2
 5619 0075 37       		.byte	0x37
 5620 0076 19       		.byte	0x19
 5621 0077 7B000000 		.4byte	0x7b
 5622 007b 02       		.uleb128 0x2
 5623 007c 08       		.byte	0x8
 5624 007d 07       		.byte	0x7
 5625 007e 5D330000 		.4byte	.LASF756
 5626 0082 05       		.uleb128 0x5
 5627 0083 04       		.byte	0x4
 5628 0084 05       		.byte	0x5
 5629 0085 696E7400 		.ascii	"int\000"
 5630 0089 03       		.uleb128 0x3
 5631 008a 82000000 		.4byte	0x82
 5632 008e 02       		.uleb128 0x2
 5633 008f 04       		.byte	0x4
 5634 0090 07       		.byte	0x7
 5635 0091 2F2A0000 		.4byte	.LASF757
 5636 0095 03       		.uleb128 0x3
 5637 0096 8E000000 		.4byte	0x8e
 5638 009a 04       		.uleb128 0x4
 5639 009b 11220000 		.4byte	.LASF759
ARM GAS  /tmp/ccFy9xbE.s 			page 134


 5640 009f 02       		.byte	0x2
 5641 00a0 56       		.byte	0x56
 5642 00a1 1A       		.byte	0x1a
 5643 00a2 8E000000 		.4byte	0x8e
 5644 00a6 04       		.uleb128 0x4
 5645 00a7 FA130000 		.4byte	.LASF760
 5646 00ab 03       		.byte	0x3
 5647 00ac 28       		.byte	0x28
 5648 00ad 1B       		.byte	0x1b
 5649 00ae B2000000 		.4byte	0xb2
 5650 00b2 06       		.uleb128 0x6
 5651 00b3 BA360000 		.4byte	.LASF829
 5652 00b7 04       		.byte	0x4
 5653 00b8 05       		.byte	0x5
 5654 00b9 00       		.byte	0
 5655 00ba CC000000 		.4byte	0xcc
 5656 00be 07       		.uleb128 0x7
 5657 00bf 3E200000 		.4byte	.LASF830
 5658 00c3 CC000000 		.4byte	0xcc
 5659 00c7 02       		.byte	0x2
 5660 00c8 23       		.byte	0x23
 5661 00c9 00       		.uleb128 0
 5662 00ca 01       		.byte	0x1
 5663 00cb 00       		.byte	0
 5664 00cc 08       		.uleb128 0x8
 5665 00cd 04       		.byte	0x4
 5666 00ce 04       		.uleb128 0x4
 5667 00cf 9F250000 		.4byte	.LASF761
 5668 00d3 03       		.byte	0x3
 5669 00d4 63       		.byte	0x63
 5670 00d5 18       		.byte	0x18
 5671 00d6 A6000000 		.4byte	0xa6
 5672 00da 04       		.uleb128 0x4
 5673 00db 87000000 		.4byte	.LASF762
 5674 00df 04       		.byte	0x4
 5675 00e0 D1       		.byte	0xd1
 5676 00e1 17       		.byte	0x17
 5677 00e2 8E000000 		.4byte	0x8e
 5678 00e6 03       		.uleb128 0x3
 5679 00e7 DA000000 		.4byte	0xda
 5680 00eb 02       		.uleb128 0x2
 5681 00ec 08       		.byte	0x8
 5682 00ed 04       		.byte	0x4
 5683 00ee 20300000 		.4byte	.LASF763
 5684 00f2 04       		.uleb128 0x4
 5685 00f3 4C2A0000 		.4byte	.LASF764
 5686 00f7 01       		.byte	0x1
 5687 00f8 77       		.byte	0x77
 5688 00f9 10       		.byte	0x10
 5689 00fa FE000000 		.4byte	0xfe
 5690 00fe 09       		.uleb128 0x9
 5691 00ff 04       		.byte	0x4
 5692 0100 04010000 		.4byte	0x104
 5693 0104 0A       		.uleb128 0xa
 5694 0105 01       		.byte	0x1
 5695 0106 1F010000 		.4byte	0x11f
 5696 010a 0B       		.uleb128 0xb
ARM GAS  /tmp/ccFy9xbE.s 			page 135


 5697 010b 1F010000 		.4byte	0x11f
 5698 010f 0B       		.uleb128 0xb
 5699 0110 CC000000 		.4byte	0xcc
 5700 0114 0B       		.uleb128 0xb
 5701 0115 DA000000 		.4byte	0xda
 5702 0119 0B       		.uleb128 0xb
 5703 011a DA000000 		.4byte	0xda
 5704 011e 00       		.byte	0
 5705 011f 02       		.uleb128 0x2
 5706 0120 01       		.byte	0x1
 5707 0121 08       		.byte	0x8
 5708 0122 CC140000 		.4byte	.LASF765
 5709 0126 03       		.uleb128 0x3
 5710 0127 1F010000 		.4byte	0x11f
 5711 012b 0C       		.uleb128 0xc
 5712 012c 08       		.byte	0x8
 5713 012d 01       		.byte	0x1
 5714 012e 7B       		.byte	0x7b
 5715 012f 09       		.byte	0x9
 5716 0130 53010000 		.4byte	0x153
 5717 0134 0D       		.uleb128 0xd
 5718 0135 66637400 		.ascii	"fct\000"
 5719 0139 01       		.byte	0x1
 5720 013a 7C       		.byte	0x7c
 5721 013b 0A       		.byte	0xa
 5722 013c 64010000 		.4byte	0x164
 5723 0140 02       		.byte	0x2
 5724 0141 23       		.byte	0x23
 5725 0142 00       		.uleb128 0
 5726 0143 0D       		.uleb128 0xd
 5727 0144 61726700 		.ascii	"arg\000"
 5728 0148 01       		.byte	0x1
 5729 0149 7D       		.byte	0x7d
 5730 014a 09       		.byte	0x9
 5731 014b CC000000 		.4byte	0xcc
 5732 014f 02       		.byte	0x2
 5733 0150 23       		.byte	0x23
 5734 0151 04       		.uleb128 0x4
 5735 0152 00       		.byte	0
 5736 0153 0A       		.uleb128 0xa
 5737 0154 01       		.byte	0x1
 5738 0155 64010000 		.4byte	0x164
 5739 0159 0B       		.uleb128 0xb
 5740 015a 1F010000 		.4byte	0x11f
 5741 015e 0B       		.uleb128 0xb
 5742 015f CC000000 		.4byte	0xcc
 5743 0163 00       		.byte	0
 5744 0164 09       		.uleb128 0x9
 5745 0165 04       		.byte	0x4
 5746 0166 53010000 		.4byte	0x153
 5747 016a 04       		.uleb128 0x4
 5748 016b D8010000 		.4byte	.LASF766
 5749 016f 01       		.byte	0x1
 5750 0170 7E       		.byte	0x7e
 5751 0171 03       		.byte	0x3
 5752 0172 2B010000 		.4byte	0x12b
 5753 0176 03       		.uleb128 0x3
ARM GAS  /tmp/ccFy9xbE.s 			page 136


 5754 0177 6A010000 		.4byte	0x16a
 5755 017b 0E       		.uleb128 0xe
 5756 017c 01       		.byte	0x1
 5757 017d 8E2F0000 		.4byte	.LASF768
 5758 0181 01       		.byte	0x1
 5759 0182 B103     		.2byte	0x3b1
 5760 0184 05       		.byte	0x5
 5761 0185 01       		.byte	0x1
 5762 0186 82000000 		.4byte	0x82
 5763 018a 00000000 		.4byte	.LFB19
 5764 018e 30000000 		.4byte	.LFE19
 5765 0192 00000000 		.4byte	.LLST134
 5766 0196 01       		.byte	0x1
 5767 0197 38020000 		.4byte	0x238
 5768 019b 0F       		.uleb128 0xf
 5769 019c 6F757400 		.ascii	"out\000"
 5770 01a0 01       		.byte	0x1
 5771 01a1 B103     		.2byte	0x3b1
 5772 01a3 16       		.byte	0x16
 5773 01a4 64010000 		.4byte	0x164
 5774 01a8 62000000 		.4byte	.LLST135
 5775 01ac 5C000000 		.4byte	.LVUS135
 5776 01b0 0F       		.uleb128 0xf
 5777 01b1 61726700 		.ascii	"arg\000"
 5778 01b5 01       		.byte	0x1
 5779 01b6 B103     		.2byte	0x3b1
 5780 01b8 3D       		.byte	0x3d
 5781 01b9 CC000000 		.4byte	0xcc
 5782 01bd 95000000 		.4byte	.LLST136
 5783 01c1 8F000000 		.4byte	.LVUS136
 5784 01c5 10       		.uleb128 0x10
 5785 01c6 1F1F0000 		.4byte	.LASF772
 5786 01ca 01       		.byte	0x1
 5787 01cb B203     		.2byte	0x3b2
 5788 01cd 1B       		.byte	0x1b
 5789 01ce 38020000 		.4byte	0x238
 5790 01d2 02       		.byte	0x2
 5791 01d3 91       		.byte	0x91
 5792 01d4 78       		.sleb128 -8
 5793 01d5 11       		.uleb128 0x11
 5794 01d6 12       		.uleb128 0x12
 5795 01d7 766100   		.ascii	"va\000"
 5796 01da 01       		.byte	0x1
 5797 01db B303     		.2byte	0x3b3
 5798 01dd 0B       		.byte	0xb
 5799 01de CE000000 		.4byte	0xce
 5800 01e2 02       		.byte	0x2
 5801 01e3 91       		.byte	0x91
 5802 01e4 5C       		.sleb128 -36
 5803 01e5 13       		.uleb128 0x13
 5804 01e6 920E0000 		.4byte	.LASF767
 5805 01ea 01       		.byte	0x1
 5806 01eb B503     		.2byte	0x3b5
 5807 01ed 1B       		.byte	0x1b
 5808 01ee 76010000 		.4byte	0x176
 5809 01f2 02       		.byte	0x2
 5810 01f3 91       		.byte	0x91
ARM GAS  /tmp/ccFy9xbE.s 			page 137


 5811 01f4 60       		.sleb128 -32
 5812 01f5 14       		.uleb128 0x14
 5813 01f6 72657400 		.ascii	"ret\000"
 5814 01fa 01       		.byte	0x1
 5815 01fb B603     		.2byte	0x3b6
 5816 01fd 0D       		.byte	0xd
 5817 01fe 89000000 		.4byte	0x89
 5818 0202 C3000000 		.4byte	.LLST137
 5819 0206 C1000000 		.4byte	.LVUS137
 5820 020a 15       		.uleb128 0x15
 5821 020b 22000000 		.4byte	.LVL564
 5822 020f 59050000 		.4byte	0x559
 5823 0213 16       		.uleb128 0x16
 5824 0214 01       		.byte	0x1
 5825 0215 50       		.byte	0x50
 5826 0216 05       		.byte	0x5
 5827 0217 03       		.byte	0x3
 5828 0218 00000000 		.4byte	_out_fct
 5829 021c 16       		.uleb128 0x16
 5830 021d 01       		.byte	0x1
 5831 021e 51       		.byte	0x51
 5832 021f 02       		.byte	0x2
 5833 0220 91       		.byte	0x91
 5834 0221 50       		.sleb128 -48
 5835 0222 16       		.uleb128 0x16
 5836 0223 01       		.byte	0x1
 5837 0224 52       		.byte	0x52
 5838 0225 02       		.byte	0x2
 5839 0226 09       		.byte	0x9
 5840 0227 FF       		.byte	0xff
 5841 0228 16       		.uleb128 0x16
 5842 0229 01       		.byte	0x1
 5843 022a 53       		.byte	0x53
 5844 022b 03       		.byte	0x3
 5845 022c 91       		.byte	0x91
 5846 022d 68       		.sleb128 -24
 5847 022e 06       		.byte	0x6
 5848 022f 16       		.uleb128 0x16
 5849 0230 02       		.byte	0x2
 5850 0231 7D       		.byte	0x7d
 5851 0232 00       		.sleb128 0
 5852 0233 02       		.byte	0x2
 5853 0234 91       		.byte	0x91
 5854 0235 6C       		.sleb128 -20
 5855 0236 00       		.byte	0
 5856 0237 00       		.byte	0
 5857 0238 09       		.uleb128 0x9
 5858 0239 04       		.byte	0x4
 5859 023a 26010000 		.4byte	0x126
 5860 023e 0E       		.uleb128 0xe
 5861 023f 01       		.byte	0x1
 5862 0240 7B3D0000 		.4byte	.LASF769
 5863 0244 01       		.byte	0x1
 5864 0245 AD03     		.2byte	0x3ad
 5865 0247 05       		.byte	0x5
 5866 0248 01       		.byte	0x1
 5867 0249 82000000 		.4byte	0x82
ARM GAS  /tmp/ccFy9xbE.s 			page 138


 5868 024d 00000000 		.4byte	.LFB18
 5869 0251 20000000 		.4byte	.LFE18
 5870 0255 D6000000 		.4byte	.LLST129
 5871 0259 01       		.byte	0x1
 5872 025a E1020000 		.4byte	0x2e1
 5873 025e 17       		.uleb128 0x17
 5874 025f 721A0000 		.4byte	.LASF770
 5875 0263 01       		.byte	0x1
 5876 0264 AD03     		.2byte	0x3ad
 5877 0266 16       		.byte	0x16
 5878 0267 E1020000 		.4byte	0x2e1
 5879 026b 14010000 		.4byte	.LLST130
 5880 026f 0E010000 		.4byte	.LVUS130
 5881 0273 17       		.uleb128 0x17
 5882 0274 47290000 		.4byte	.LASF771
 5883 0278 01       		.byte	0x1
 5884 0279 AD03     		.2byte	0x3ad
 5885 027b 25       		.byte	0x25
 5886 027c DA000000 		.4byte	0xda
 5887 0280 46010000 		.4byte	.LLST131
 5888 0284 40010000 		.4byte	.LVUS131
 5889 0288 17       		.uleb128 0x17
 5890 0289 1F1F0000 		.4byte	.LASF772
 5891 028d 01       		.byte	0x1
 5892 028e AD03     		.2byte	0x3ad
 5893 0290 38       		.byte	0x38
 5894 0291 38020000 		.4byte	0x238
 5895 0295 78010000 		.4byte	.LLST132
 5896 0299 72010000 		.4byte	.LVUS132
 5897 029d 0F       		.uleb128 0xf
 5898 029e 766100   		.ascii	"va\000"
 5899 02a1 01       		.byte	0x1
 5900 02a2 AD03     		.2byte	0x3ad
 5901 02a4 48       		.byte	0x48
 5902 02a5 CE000000 		.4byte	0xce
 5903 02a9 A6010000 		.4byte	.LLST133
 5904 02ad A4010000 		.4byte	.LVUS133
 5905 02b1 15       		.uleb128 0x15
 5906 02b2 16000000 		.4byte	.LVL561
 5907 02b6 59050000 		.4byte	0x559
 5908 02ba 16       		.uleb128 0x16
 5909 02bb 01       		.byte	0x1
 5910 02bc 50       		.byte	0x50
 5911 02bd 05       		.byte	0x5
 5912 02be 03       		.byte	0x3
 5913 02bf 00000000 		.4byte	_out_buffer
 5914 02c3 16       		.uleb128 0x16
 5915 02c4 01       		.byte	0x1
 5916 02c5 51       		.byte	0x51
 5917 02c6 03       		.byte	0x3
 5918 02c7 F3       		.byte	0xf3
 5919 02c8 01       		.uleb128 0x1
 5920 02c9 50       		.byte	0x50
 5921 02ca 16       		.uleb128 0x16
 5922 02cb 01       		.byte	0x1
 5923 02cc 52       		.byte	0x52
 5924 02cd 03       		.byte	0x3
ARM GAS  /tmp/ccFy9xbE.s 			page 139


 5925 02ce F3       		.byte	0xf3
 5926 02cf 01       		.uleb128 0x1
 5927 02d0 51       		.byte	0x51
 5928 02d1 16       		.uleb128 0x16
 5929 02d2 01       		.byte	0x1
 5930 02d3 53       		.byte	0x53
 5931 02d4 03       		.byte	0x3
 5932 02d5 F3       		.byte	0xf3
 5933 02d6 01       		.uleb128 0x1
 5934 02d7 52       		.byte	0x52
 5935 02d8 16       		.uleb128 0x16
 5936 02d9 02       		.byte	0x2
 5937 02da 7D       		.byte	0x7d
 5938 02db 00       		.sleb128 0
 5939 02dc 02       		.byte	0x2
 5940 02dd 74       		.byte	0x74
 5941 02de 00       		.sleb128 0
 5942 02df 00       		.byte	0
 5943 02e0 00       		.byte	0
 5944 02e1 09       		.uleb128 0x9
 5945 02e2 04       		.byte	0x4
 5946 02e3 1F010000 		.4byte	0x11f
 5947 02e7 0E       		.uleb128 0xe
 5948 02e8 01       		.byte	0x1
 5949 02e9 EC340000 		.4byte	.LASF773
 5950 02ed 01       		.byte	0x1
 5951 02ee A803     		.2byte	0x3a8
 5952 02f0 05       		.byte	0x5
 5953 02f1 01       		.byte	0x1
 5954 02f2 82000000 		.4byte	0x82
 5955 02f6 00000000 		.4byte	.LFB17
 5956 02fa 20000000 		.4byte	.LFE17
 5957 02fe B9010000 		.4byte	.LLST126
 5958 0302 01       		.byte	0x1
 5959 0303 6E030000 		.4byte	0x36e
 5960 0307 17       		.uleb128 0x17
 5961 0308 1F1F0000 		.4byte	.LASF772
 5962 030c 01       		.byte	0x1
 5963 030d A803     		.2byte	0x3a8
 5964 030f 1A       		.byte	0x1a
 5965 0310 38020000 		.4byte	0x238
 5966 0314 F7010000 		.4byte	.LLST127
 5967 0318 F1010000 		.4byte	.LVUS127
 5968 031c 0F       		.uleb128 0xf
 5969 031d 766100   		.ascii	"va\000"
 5970 0320 01       		.byte	0x1
 5971 0321 A803     		.2byte	0x3a8
 5972 0323 2A       		.byte	0x2a
 5973 0324 CE000000 		.4byte	0xce
 5974 0328 25020000 		.4byte	.LLST128
 5975 032c 23020000 		.4byte	.LVUS128
 5976 0330 13       		.uleb128 0x13
 5977 0331 721A0000 		.4byte	.LASF770
 5978 0335 01       		.byte	0x1
 5979 0336 A903     		.2byte	0x3a9
 5980 0338 08       		.byte	0x8
 5981 0339 6E030000 		.4byte	0x36e
ARM GAS  /tmp/ccFy9xbE.s 			page 140


 5982 033d 02       		.byte	0x2
 5983 033e 91       		.byte	0x91
 5984 033f 74       		.sleb128 -12
 5985 0340 15       		.uleb128 0x15
 5986 0341 16000000 		.4byte	.LVL555
 5987 0345 59050000 		.4byte	0x559
 5988 0349 16       		.uleb128 0x16
 5989 034a 01       		.byte	0x1
 5990 034b 50       		.byte	0x50
 5991 034c 05       		.byte	0x5
 5992 034d 03       		.byte	0x3
 5993 034e 00000000 		.4byte	_out_char
 5994 0352 16       		.uleb128 0x16
 5995 0353 01       		.byte	0x1
 5996 0354 51       		.byte	0x51
 5997 0355 02       		.byte	0x2
 5998 0356 91       		.byte	0x91
 5999 0357 74       		.sleb128 -12
 6000 0358 16       		.uleb128 0x16
 6001 0359 01       		.byte	0x1
 6002 035a 52       		.byte	0x52
 6003 035b 02       		.byte	0x2
 6004 035c 09       		.byte	0x9
 6005 035d FF       		.byte	0xff
 6006 035e 16       		.uleb128 0x16
 6007 035f 01       		.byte	0x1
 6008 0360 53       		.byte	0x53
 6009 0361 03       		.byte	0x3
 6010 0362 F3       		.byte	0xf3
 6011 0363 01       		.uleb128 0x1
 6012 0364 50       		.byte	0x50
 6013 0365 16       		.uleb128 0x16
 6014 0366 02       		.byte	0x2
 6015 0367 7D       		.byte	0x7d
 6016 0368 00       		.sleb128 0
 6017 0369 02       		.byte	0x2
 6018 036a 74       		.byte	0x74
 6019 036b 00       		.sleb128 0
 6020 036c 00       		.byte	0
 6021 036d 00       		.byte	0
 6022 036e 18       		.uleb128 0x18
 6023 036f 1F010000 		.4byte	0x11f
 6024 0373 7E030000 		.4byte	0x37e
 6025 0377 19       		.uleb128 0x19
 6026 0378 8E000000 		.4byte	0x8e
 6027 037c 00       		.byte	0
 6028 037d 00       		.byte	0
 6029 037e 0E       		.uleb128 0xe
 6030 037f 01       		.byte	0x1
 6031 0380 C4360000 		.4byte	.LASF774
 6032 0384 01       		.byte	0x1
 6033 0385 A003     		.2byte	0x3a0
 6034 0387 05       		.byte	0x5
 6035 0388 01       		.byte	0x1
 6036 0389 82000000 		.4byte	0x82
 6037 038d 00000000 		.4byte	.LFB16
 6038 0391 2C000000 		.4byte	.LFE16
ARM GAS  /tmp/ccFy9xbE.s 			page 141


 6039 0395 38020000 		.4byte	.LLST122
 6040 0399 01       		.byte	0x1
 6041 039a 2D040000 		.4byte	0x42d
 6042 039e 17       		.uleb128 0x17
 6043 039f 721A0000 		.4byte	.LASF770
 6044 03a3 01       		.byte	0x1
 6045 03a4 A003     		.2byte	0x3a0
 6046 03a6 15       		.byte	0x15
 6047 03a7 E1020000 		.4byte	0x2e1
 6048 03ab 9A020000 		.4byte	.LLST123
 6049 03af 94020000 		.4byte	.LVUS123
 6050 03b3 17       		.uleb128 0x17
 6051 03b4 47290000 		.4byte	.LASF771
 6052 03b8 01       		.byte	0x1
 6053 03b9 A003     		.2byte	0x3a0
 6054 03bb 24       		.byte	0x24
 6055 03bc DA000000 		.4byte	0xda
 6056 03c0 CC020000 		.4byte	.LLST124
 6057 03c4 C6020000 		.4byte	.LVUS124
 6058 03c8 10       		.uleb128 0x10
 6059 03c9 1F1F0000 		.4byte	.LASF772
 6060 03cd 01       		.byte	0x1
 6061 03ce A003     		.2byte	0x3a0
 6062 03d0 37       		.byte	0x37
 6063 03d1 38020000 		.4byte	0x238
 6064 03d5 02       		.byte	0x2
 6065 03d6 91       		.byte	0x91
 6066 03d7 78       		.sleb128 -8
 6067 03d8 11       		.uleb128 0x11
 6068 03d9 12       		.uleb128 0x12
 6069 03da 766100   		.ascii	"va\000"
 6070 03dd 01       		.byte	0x1
 6071 03de A103     		.2byte	0x3a1
 6072 03e0 0B       		.byte	0xb
 6073 03e1 CE000000 		.4byte	0xce
 6074 03e5 02       		.byte	0x2
 6075 03e6 91       		.byte	0x91
 6076 03e7 6C       		.sleb128 -20
 6077 03e8 14       		.uleb128 0x14
 6078 03e9 72657400 		.ascii	"ret\000"
 6079 03ed 01       		.byte	0x1
 6080 03ee A303     		.2byte	0x3a3
 6081 03f0 0D       		.byte	0xd
 6082 03f1 89000000 		.4byte	0x89
 6083 03f5 FA020000 		.4byte	.LLST125
 6084 03f9 F8020000 		.4byte	.LVUS125
 6085 03fd 15       		.uleb128 0x15
 6086 03fe 1C000000 		.4byte	.LVL551
 6087 0402 59050000 		.4byte	0x559
 6088 0406 16       		.uleb128 0x16
 6089 0407 01       		.byte	0x1
 6090 0408 50       		.byte	0x50
 6091 0409 05       		.byte	0x5
 6092 040a 03       		.byte	0x3
 6093 040b 00000000 		.4byte	_out_buffer
 6094 040f 16       		.uleb128 0x16
 6095 0410 01       		.byte	0x1
ARM GAS  /tmp/ccFy9xbE.s 			page 142


 6096 0411 51       		.byte	0x51
 6097 0412 03       		.byte	0x3
 6098 0413 F3       		.byte	0xf3
 6099 0414 01       		.uleb128 0x1
 6100 0415 50       		.byte	0x50
 6101 0416 16       		.uleb128 0x16
 6102 0417 01       		.byte	0x1
 6103 0418 52       		.byte	0x52
 6104 0419 03       		.byte	0x3
 6105 041a F3       		.byte	0xf3
 6106 041b 01       		.uleb128 0x1
 6107 041c 51       		.byte	0x51
 6108 041d 16       		.uleb128 0x16
 6109 041e 01       		.byte	0x1
 6110 041f 53       		.byte	0x53
 6111 0420 03       		.byte	0x3
 6112 0421 91       		.byte	0x91
 6113 0422 68       		.sleb128 -24
 6114 0423 06       		.byte	0x6
 6115 0424 16       		.uleb128 0x16
 6116 0425 02       		.byte	0x2
 6117 0426 7D       		.byte	0x7d
 6118 0427 00       		.sleb128 0
 6119 0428 02       		.byte	0x2
 6120 0429 91       		.byte	0x91
 6121 042a 6C       		.sleb128 -20
 6122 042b 00       		.byte	0
 6123 042c 00       		.byte	0
 6124 042d 0E       		.uleb128 0xe
 6125 042e 01       		.byte	0x1
 6126 042f 3C3B0000 		.4byte	.LASF775
 6127 0433 01       		.byte	0x1
 6128 0434 9803     		.2byte	0x398
 6129 0436 05       		.byte	0x5
 6130 0437 01       		.byte	0x1
 6131 0438 82000000 		.4byte	0x82
 6132 043c 00000000 		.4byte	.LFB15
 6133 0440 2C000000 		.4byte	.LFE15
 6134 0444 0D030000 		.4byte	.LLST119
 6135 0448 01       		.byte	0x1
 6136 0449 C6040000 		.4byte	0x4c6
 6137 044d 17       		.uleb128 0x17
 6138 044e 721A0000 		.4byte	.LASF770
 6139 0452 01       		.byte	0x1
 6140 0453 9803     		.2byte	0x398
 6141 0455 14       		.byte	0x14
 6142 0456 E1020000 		.4byte	0x2e1
 6143 045a 6F030000 		.4byte	.LLST120
 6144 045e 69030000 		.4byte	.LVUS120
 6145 0462 10       		.uleb128 0x10
 6146 0463 1F1F0000 		.4byte	.LASF772
 6147 0467 01       		.byte	0x1
 6148 0468 9803     		.2byte	0x398
 6149 046a 28       		.byte	0x28
 6150 046b 38020000 		.4byte	0x238
 6151 046f 02       		.byte	0x2
 6152 0470 91       		.byte	0x91
ARM GAS  /tmp/ccFy9xbE.s 			page 143


 6153 0471 74       		.sleb128 -12
 6154 0472 11       		.uleb128 0x11
 6155 0473 12       		.uleb128 0x12
 6156 0474 766100   		.ascii	"va\000"
 6157 0477 01       		.byte	0x1
 6158 0478 9903     		.2byte	0x399
 6159 047a 0B       		.byte	0xb
 6160 047b CE000000 		.4byte	0xce
 6161 047f 02       		.byte	0x2
 6162 0480 91       		.byte	0x91
 6163 0481 64       		.sleb128 -28
 6164 0482 14       		.uleb128 0x14
 6165 0483 72657400 		.ascii	"ret\000"
 6166 0487 01       		.byte	0x1
 6167 0488 9B03     		.2byte	0x39b
 6168 048a 0D       		.byte	0xd
 6169 048b 89000000 		.4byte	0x89
 6170 048f 9D030000 		.4byte	.LLST121
 6171 0493 9B030000 		.4byte	.LVUS121
 6172 0497 15       		.uleb128 0x15
 6173 0498 1C000000 		.4byte	.LVL547
 6174 049c 59050000 		.4byte	0x559
 6175 04a0 16       		.uleb128 0x16
 6176 04a1 01       		.byte	0x1
 6177 04a2 50       		.byte	0x50
 6178 04a3 05       		.byte	0x5
 6179 04a4 03       		.byte	0x3
 6180 04a5 00000000 		.4byte	_out_buffer
 6181 04a9 16       		.uleb128 0x16
 6182 04aa 01       		.byte	0x1
 6183 04ab 51       		.byte	0x51
 6184 04ac 03       		.byte	0x3
 6185 04ad F3       		.byte	0xf3
 6186 04ae 01       		.uleb128 0x1
 6187 04af 50       		.byte	0x50
 6188 04b0 16       		.uleb128 0x16
 6189 04b1 01       		.byte	0x1
 6190 04b2 52       		.byte	0x52
 6191 04b3 02       		.byte	0x2
 6192 04b4 09       		.byte	0x9
 6193 04b5 FF       		.byte	0xff
 6194 04b6 16       		.uleb128 0x16
 6195 04b7 01       		.byte	0x1
 6196 04b8 53       		.byte	0x53
 6197 04b9 03       		.byte	0x3
 6198 04ba 91       		.byte	0x91
 6199 04bb 5C       		.sleb128 -36
 6200 04bc 06       		.byte	0x6
 6201 04bd 16       		.uleb128 0x16
 6202 04be 02       		.byte	0x2
 6203 04bf 7D       		.byte	0x7d
 6204 04c0 00       		.sleb128 0
 6205 04c1 02       		.byte	0x2
 6206 04c2 91       		.byte	0x91
 6207 04c3 60       		.sleb128 -32
 6208 04c4 00       		.byte	0
 6209 04c5 00       		.byte	0
ARM GAS  /tmp/ccFy9xbE.s 			page 144


 6210 04c6 0E       		.uleb128 0xe
 6211 04c7 01       		.byte	0x1
 6212 04c8 0E280000 		.4byte	.LASF776
 6213 04cc 01       		.byte	0x1
 6214 04cd 8F03     		.2byte	0x38f
 6215 04cf 05       		.byte	0x5
 6216 04d0 01       		.byte	0x1
 6217 04d1 82000000 		.4byte	0x82
 6218 04d5 00000000 		.4byte	.LFB14
 6219 04d9 2C000000 		.4byte	.LFE14
 6220 04dd B0030000 		.4byte	.LLST117
 6221 04e1 01       		.byte	0x1
 6222 04e2 59050000 		.4byte	0x559
 6223 04e6 10       		.uleb128 0x10
 6224 04e7 1F1F0000 		.4byte	.LASF772
 6225 04eb 01       		.byte	0x1
 6226 04ec 8F03     		.2byte	0x38f
 6227 04ee 19       		.byte	0x19
 6228 04ef 38020000 		.4byte	0x238
 6229 04f3 02       		.byte	0x2
 6230 04f4 91       		.byte	0x91
 6231 04f5 70       		.sleb128 -16
 6232 04f6 11       		.uleb128 0x11
 6233 04f7 12       		.uleb128 0x12
 6234 04f8 766100   		.ascii	"va\000"
 6235 04fb 01       		.byte	0x1
 6236 04fc 9003     		.2byte	0x390
 6237 04fe 0B       		.byte	0xb
 6238 04ff CE000000 		.4byte	0xce
 6239 0503 02       		.byte	0x2
 6240 0504 91       		.byte	0x91
 6241 0505 64       		.sleb128 -28
 6242 0506 13       		.uleb128 0x13
 6243 0507 721A0000 		.4byte	.LASF770
 6244 050b 01       		.byte	0x1
 6245 050c 9203     		.2byte	0x392
 6246 050e 08       		.byte	0x8
 6247 050f 6E030000 		.4byte	0x36e
 6248 0513 02       		.byte	0x2
 6249 0514 91       		.byte	0x91
 6250 0515 60       		.sleb128 -32
 6251 0516 14       		.uleb128 0x14
 6252 0517 72657400 		.ascii	"ret\000"
 6253 051b 01       		.byte	0x1
 6254 051c 9303     		.2byte	0x393
 6255 051e 0D       		.byte	0xd
 6256 051f 89000000 		.4byte	0x89
 6257 0523 0E040000 		.4byte	.LLST118
 6258 0527 0C040000 		.4byte	.LVUS118
 6259 052b 15       		.uleb128 0x15
 6260 052c 1C000000 		.4byte	.LVL544
 6261 0530 59050000 		.4byte	0x559
 6262 0534 16       		.uleb128 0x16
 6263 0535 01       		.byte	0x1
 6264 0536 50       		.byte	0x50
 6265 0537 05       		.byte	0x5
 6266 0538 03       		.byte	0x3
ARM GAS  /tmp/ccFy9xbE.s 			page 145


 6267 0539 00000000 		.4byte	_out_char
 6268 053d 16       		.uleb128 0x16
 6269 053e 01       		.byte	0x1
 6270 053f 51       		.byte	0x51
 6271 0540 02       		.byte	0x2
 6272 0541 91       		.byte	0x91
 6273 0542 40       		.sleb128 -64
 6274 0543 16       		.uleb128 0x16
 6275 0544 01       		.byte	0x1
 6276 0545 52       		.byte	0x52
 6277 0546 02       		.byte	0x2
 6278 0547 09       		.byte	0x9
 6279 0548 FF       		.byte	0xff
 6280 0549 16       		.uleb128 0x16
 6281 054a 01       		.byte	0x1
 6282 054b 53       		.byte	0x53
 6283 054c 03       		.byte	0x3
 6284 054d 91       		.byte	0x91
 6285 054e 50       		.sleb128 -48
 6286 054f 06       		.byte	0x6
 6287 0550 16       		.uleb128 0x16
 6288 0551 02       		.byte	0x2
 6289 0552 7D       		.byte	0x7d
 6290 0553 00       		.sleb128 0
 6291 0554 02       		.byte	0x2
 6292 0555 91       		.byte	0x91
 6293 0556 54       		.sleb128 -44
 6294 0557 00       		.byte	0
 6295 0558 00       		.byte	0
 6296 0559 1A       		.uleb128 0x1a
 6297 055a E1230000 		.4byte	.LASF785
 6298 055e 01       		.byte	0x1
 6299 055f 4F02     		.2byte	0x24f
 6300 0561 0C       		.byte	0xc
 6301 0562 01       		.byte	0x1
 6302 0563 82000000 		.4byte	0x82
 6303 0567 00000000 		.4byte	.LFB13
 6304 056b 6A060000 		.4byte	.LFE13
 6305 056f 21040000 		.4byte	.LLST91
 6306 0573 01       		.byte	0x1
 6307 0574 470B0000 		.4byte	0xb47
 6308 0578 0F       		.uleb128 0xf
 6309 0579 6F757400 		.ascii	"out\000"
 6310 057d 01       		.byte	0x1
 6311 057e 4F02     		.2byte	0x24f
 6312 0580 24       		.byte	0x24
 6313 0581 F2000000 		.4byte	0xf2
 6314 0585 6F040000 		.4byte	.LLST92
 6315 0589 67040000 		.4byte	.LVUS92
 6316 058d 17       		.uleb128 0x17
 6317 058e 721A0000 		.4byte	.LASF770
 6318 0592 01       		.byte	0x1
 6319 0593 4F02     		.2byte	0x24f
 6320 0595 2F       		.byte	0x2f
 6321 0596 E1020000 		.4byte	0x2e1
 6322 059a B2040000 		.4byte	.LLST93
 6323 059e A6040000 		.4byte	.LVUS93
ARM GAS  /tmp/ccFy9xbE.s 			page 146


 6324 05a2 17       		.uleb128 0x17
 6325 05a3 13260000 		.4byte	.LASF777
 6326 05a7 01       		.byte	0x1
 6327 05a8 4F02     		.2byte	0x24f
 6328 05aa 44       		.byte	0x44
 6329 05ab E6000000 		.4byte	0xe6
 6330 05af 08050000 		.4byte	.LLST94
 6331 05b3 FC040000 		.4byte	.LVUS94
 6332 05b7 17       		.uleb128 0x17
 6333 05b8 1F1F0000 		.4byte	.LASF772
 6334 05bc 01       		.byte	0x1
 6335 05bd 5002     		.2byte	0x250
 6336 05bf 23       		.byte	0x23
 6337 05c0 38020000 		.4byte	0x238
 6338 05c4 CA050000 		.4byte	.LLST95
 6339 05c8 52050000 		.4byte	.LVUS95
 6340 05cc 0F       		.uleb128 0xf
 6341 05cd 766100   		.ascii	"va\000"
 6342 05d0 01       		.byte	0x1
 6343 05d1 5002     		.2byte	0x250
 6344 05d3 33       		.byte	0x33
 6345 05d4 CE000000 		.4byte	0xce
 6346 05d8 FD080000 		.4byte	.LLST96
 6347 05dc 91080000 		.4byte	.LVUS96
 6348 05e0 1B       		.uleb128 0x1b
 6349 05e1 0A170000 		.4byte	.LASF778
 6350 05e5 01       		.byte	0x1
 6351 05e6 5102     		.2byte	0x251
 6352 05e8 10       		.byte	0x10
 6353 05e9 8E000000 		.4byte	0x8e
 6354 05ed 2F0C0000 		.4byte	.LLST97
 6355 05f1 F50B0000 		.4byte	.LVUS97
 6356 05f5 1B       		.uleb128 0x1b
 6357 05f6 F6250000 		.4byte	.LASF779
 6358 05fa 01       		.byte	0x1
 6359 05fb 5102     		.2byte	0x251
 6360 05fd 17       		.byte	0x17
 6361 05fe 8E000000 		.4byte	0x8e
 6362 0602 B40D0000 		.4byte	.LLST98
 6363 0606 940D0000 		.4byte	.LVUS98
 6364 060a 1B       		.uleb128 0x1b
 6365 060b D43C0000 		.4byte	.LASF780
 6366 060f 01       		.byte	0x1
 6367 0610 5102     		.2byte	0x251
 6368 0612 1E       		.byte	0x1e
 6369 0613 8E000000 		.4byte	0x8e
 6370 0617 8D0E0000 		.4byte	.LLST99
 6371 061b 730E0000 		.4byte	.LVUS99
 6372 061f 14       		.uleb128 0x14
 6373 0620 6E00     		.ascii	"n\000"
 6374 0622 01       		.byte	0x1
 6375 0623 5102     		.2byte	0x251
 6376 0625 29       		.byte	0x29
 6377 0626 8E000000 		.4byte	0x8e
 6378 062a 370F0000 		.4byte	.LLST100
 6379 062e 270F0000 		.4byte	.LVUS100
 6380 0632 14       		.uleb128 0x14
ARM GAS  /tmp/ccFy9xbE.s 			page 147


 6381 0633 69647800 		.ascii	"idx\000"
 6382 0637 01       		.byte	0x1
 6383 0638 5202     		.2byte	0x252
 6384 063a 0A       		.byte	0xa
 6385 063b DA000000 		.4byte	0xda
 6386 063f D50F0000 		.4byte	.LLST101
 6387 0643 9F0F0000 		.4byte	.LVUS101
 6388 0647 1C       		.uleb128 0x1c
 6389 0648 68000000 		.4byte	.Ldebug_ranges0+0x68
 6390 064c 5E060000 		.4byte	0x65e
 6391 0650 12       		.uleb128 0x12
 6392 0651 7700     		.ascii	"w\000"
 6393 0653 01       		.byte	0x1
 6394 0654 8D02     		.2byte	0x28d
 6395 0656 11       		.byte	0x11
 6396 0657 89000000 		.4byte	0x89
 6397 065b 01       		.byte	0x1
 6398 065c 55       		.byte	0x55
 6399 065d 00       		.byte	0
 6400 065e 1C       		.uleb128 0x1c
 6401 065f A0010000 		.4byte	.Ldebug_ranges0+0x1a0
 6402 0663 75060000 		.4byte	0x675
 6403 0667 1D       		.uleb128 0x1d
 6404 0668 91460000 		.4byte	.LASF787
 6405 066c 01       		.byte	0x1
 6406 066d 9F02     		.2byte	0x29f
 6407 066f 13       		.byte	0x13
 6408 0670 89000000 		.4byte	0x89
 6409 0674 00       		.byte	0
 6410 0675 1C       		.uleb128 0x1c
 6411 0676 90000000 		.4byte	.Ldebug_ranges0+0x90
 6412 067a E3070000 		.4byte	0x7e3
 6413 067e 1B       		.uleb128 0x1b
 6414 067f 85440000 		.4byte	.LASF781
 6415 0683 01       		.byte	0x1
 6416 0684 D502     		.2byte	0x2d5
 6417 0686 14       		.byte	0x14
 6418 0687 8E000000 		.4byte	0x8e
 6419 068b 16110000 		.4byte	.LLST106
 6420 068f 0C110000 		.4byte	.LVUS106
 6421 0693 1E       		.uleb128 0x1e
 6422 0694 8E050000 		.4byte	.LBB76
 6423 0698 C6050000 		.4byte	.LBE76
 6424 069c D7060000 		.4byte	0x6d7
 6425 06a0 13       		.uleb128 0x13
 6426 06a1 63140000 		.4byte	.LASF782
 6427 06a5 01       		.byte	0x1
 6428 06a6 F402     		.2byte	0x2f4
 6429 06a8 1B       		.byte	0x1b
 6430 06a9 55000000 		.4byte	0x55
 6431 06ad 06       		.byte	0x6
 6432 06ae 52       		.byte	0x52
 6433 06af 93       		.byte	0x93
 6434 06b0 04       		.uleb128 0x4
 6435 06b1 53       		.byte	0x53
 6436 06b2 93       		.byte	0x93
 6437 06b3 04       		.uleb128 0x4
ARM GAS  /tmp/ccFy9xbE.s 			page 148


 6438 06b4 15       		.uleb128 0x15
 6439 06b5 C4050000 		.4byte	.LVL518
 6440 06b9 09130000 		.4byte	0x1309
 6441 06bd 16       		.uleb128 0x16
 6442 06be 01       		.byte	0x1
 6443 06bf 50       		.byte	0x50
 6444 06c0 02       		.byte	0x2
 6445 06c1 7B       		.byte	0x7b
 6446 06c2 00       		.sleb128 0
 6447 06c3 16       		.uleb128 0x16
 6448 06c4 01       		.byte	0x1
 6449 06c5 51       		.byte	0x51
 6450 06c6 02       		.byte	0x2
 6451 06c7 7A       		.byte	0x7a
 6452 06c8 00       		.sleb128 0
 6453 06c9 16       		.uleb128 0x16
 6454 06ca 01       		.byte	0x1
 6455 06cb 52       		.byte	0x52
 6456 06cc 02       		.byte	0x2
 6457 06cd 78       		.byte	0x78
 6458 06ce 00       		.sleb128 0
 6459 06cf 16       		.uleb128 0x16
 6460 06d0 01       		.byte	0x1
 6461 06d1 53       		.byte	0x53
 6462 06d2 02       		.byte	0x2
 6463 06d3 79       		.byte	0x79
 6464 06d4 00       		.sleb128 0
 6465 06d5 00       		.byte	0
 6466 06d6 00       		.byte	0
 6467 06d7 1E       		.uleb128 0x1e
 6468 06d8 20060000 		.4byte	.LBB77
 6469 06dc 48060000 		.4byte	.LBE77
 6470 06e0 24070000 		.4byte	0x724
 6471 06e4 13       		.uleb128 0x13
 6472 06e5 63140000 		.4byte	.LASF782
 6473 06e9 01       		.byte	0x1
 6474 06ea FB02     		.2byte	0x2fb
 6475 06ec 16       		.byte	0x16
 6476 06ed 49000000 		.4byte	0x49
 6477 06f1 01       		.byte	0x1
 6478 06f2 50       		.byte	0x50
 6479 06f3 15       		.uleb128 0x15
 6480 06f4 46060000 		.4byte	.LVL534
 6481 06f8 A9140000 		.4byte	0x14a9
 6482 06fc 16       		.uleb128 0x16
 6483 06fd 01       		.byte	0x1
 6484 06fe 50       		.byte	0x50
 6485 06ff 02       		.byte	0x2
 6486 0700 7B       		.byte	0x7b
 6487 0701 00       		.sleb128 0
 6488 0702 16       		.uleb128 0x16
 6489 0703 01       		.byte	0x1
 6490 0704 51       		.byte	0x51
 6491 0705 02       		.byte	0x2
 6492 0706 7A       		.byte	0x7a
 6493 0707 00       		.sleb128 0
 6494 0708 16       		.uleb128 0x16
ARM GAS  /tmp/ccFy9xbE.s 			page 149


 6495 0709 01       		.byte	0x1
 6496 070a 52       		.byte	0x52
 6497 070b 02       		.byte	0x2
 6498 070c 78       		.byte	0x78
 6499 070d 00       		.sleb128 0
 6500 070e 16       		.uleb128 0x16
 6501 070f 01       		.byte	0x1
 6502 0710 53       		.byte	0x53
 6503 0711 02       		.byte	0x2
 6504 0712 79       		.byte	0x79
 6505 0713 00       		.sleb128 0
 6506 0714 16       		.uleb128 0x16
 6507 0715 02       		.byte	0x2
 6508 0716 7D       		.byte	0x7d
 6509 0717 04       		.sleb128 4
 6510 0718 02       		.byte	0x2
 6511 0719 75       		.byte	0x75
 6512 071a 00       		.sleb128 0
 6513 071b 16       		.uleb128 0x16
 6514 071c 02       		.byte	0x2
 6515 071d 7D       		.byte	0x7d
 6516 071e 0C       		.sleb128 12
 6517 071f 02       		.byte	0x2
 6518 0720 77       		.byte	0x77
 6519 0721 00       		.sleb128 0
 6520 0722 00       		.byte	0
 6521 0723 00       		.byte	0
 6522 0724 1C       		.uleb128 0x1c
 6523 0725 F0000000 		.4byte	.Ldebug_ranges0+0xf0
 6524 0729 43070000 		.4byte	0x743
 6525 072d 1B       		.uleb128 0x1b
 6526 072e 63140000 		.4byte	.LASF782
 6527 0732 01       		.byte	0x1
 6528 0733 0003     		.2byte	0x300
 6529 0735 15       		.byte	0x15
 6530 0736 89000000 		.4byte	0x89
 6531 073a 5B110000 		.4byte	.LLST108
 6532 073e 59110000 		.4byte	.LVUS108
 6533 0742 00       		.byte	0
 6534 0743 1C       		.uleb128 0x1c
 6535 0744 C8000000 		.4byte	.Ldebug_ranges0+0xc8
 6536 0748 7E070000 		.4byte	0x77e
 6537 074c 1B       		.uleb128 0x1b
 6538 074d 63140000 		.4byte	.LASF782
 6539 0751 01       		.byte	0x1
 6540 0752 1303     		.2byte	0x313
 6541 0754 1E       		.byte	0x1e
 6542 0755 95000000 		.4byte	0x95
 6543 0759 72110000 		.4byte	.LLST107
 6544 075d 6E110000 		.4byte	.LVUS107
 6545 0761 15       		.uleb128 0x15
 6546 0762 CA040000 		.4byte	.LVL476
 6547 0766 A9140000 		.4byte	0x14a9
 6548 076a 16       		.uleb128 0x16
 6549 076b 01       		.byte	0x1
 6550 076c 50       		.byte	0x50
 6551 076d 02       		.byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 150


 6552 076e 7B       		.byte	0x7b
 6553 076f 00       		.sleb128 0
 6554 0770 16       		.uleb128 0x16
 6555 0771 01       		.byte	0x1
 6556 0772 51       		.byte	0x51
 6557 0773 02       		.byte	0x2
 6558 0774 7A       		.byte	0x7a
 6559 0775 00       		.sleb128 0
 6560 0776 16       		.uleb128 0x16
 6561 0777 01       		.byte	0x1
 6562 0778 53       		.byte	0x53
 6563 0779 02       		.byte	0x2
 6564 077a 79       		.byte	0x79
 6565 077b 00       		.sleb128 0
 6566 077c 00       		.byte	0
 6567 077d 00       		.byte	0
 6568 077e 1F       		.uleb128 0x1f
 6569 077f F0050000 		.4byte	.LVL523
 6570 0783 09130000 		.4byte	0x1309
 6571 0787 B2070000 		.4byte	0x7b2
 6572 078b 16       		.uleb128 0x16
 6573 078c 01       		.byte	0x1
 6574 078d 50       		.byte	0x50
 6575 078e 02       		.byte	0x2
 6576 078f 7B       		.byte	0x7b
 6577 0790 00       		.sleb128 0
 6578 0791 16       		.uleb128 0x16
 6579 0792 01       		.byte	0x1
 6580 0793 51       		.byte	0x51
 6581 0794 02       		.byte	0x2
 6582 0795 7A       		.byte	0x7a
 6583 0796 00       		.sleb128 0
 6584 0797 16       		.uleb128 0x16
 6585 0798 01       		.byte	0x1
 6586 0799 52       		.byte	0x52
 6587 079a 02       		.byte	0x2
 6588 079b 78       		.byte	0x78
 6589 079c 00       		.sleb128 0
 6590 079d 16       		.uleb128 0x16
 6591 079e 01       		.byte	0x1
 6592 079f 53       		.byte	0x53
 6593 07a0 02       		.byte	0x2
 6594 07a1 79       		.byte	0x79
 6595 07a2 00       		.sleb128 0
 6596 07a3 16       		.uleb128 0x16
 6597 07a4 02       		.byte	0x2
 6598 07a5 7D       		.byte	0x7d
 6599 07a6 18       		.sleb128 24
 6600 07a7 02       		.byte	0x2
 6601 07a8 77       		.byte	0x77
 6602 07a9 00       		.sleb128 0
 6603 07aa 16       		.uleb128 0x16
 6604 07ab 02       		.byte	0x2
 6605 07ac 7D       		.byte	0x7d
 6606 07ad 1C       		.sleb128 28
 6607 07ae 02       		.byte	0x2
 6608 07af 75       		.byte	0x75
ARM GAS  /tmp/ccFy9xbE.s 			page 151


 6609 07b0 00       		.sleb128 0
 6610 07b1 00       		.byte	0
 6611 07b2 15       		.uleb128 0x15
 6612 07b3 16060000 		.4byte	.LVL528
 6613 07b7 A9140000 		.4byte	0x14a9
 6614 07bb 16       		.uleb128 0x16
 6615 07bc 01       		.byte	0x1
 6616 07bd 50       		.byte	0x50
 6617 07be 02       		.byte	0x2
 6618 07bf 7B       		.byte	0x7b
 6619 07c0 00       		.sleb128 0
 6620 07c1 16       		.uleb128 0x16
 6621 07c2 01       		.byte	0x1
 6622 07c3 51       		.byte	0x51
 6623 07c4 02       		.byte	0x2
 6624 07c5 7A       		.byte	0x7a
 6625 07c6 00       		.sleb128 0
 6626 07c7 16       		.uleb128 0x16
 6627 07c8 01       		.byte	0x1
 6628 07c9 52       		.byte	0x52
 6629 07ca 02       		.byte	0x2
 6630 07cb 78       		.byte	0x78
 6631 07cc 00       		.sleb128 0
 6632 07cd 16       		.uleb128 0x16
 6633 07ce 01       		.byte	0x1
 6634 07cf 53       		.byte	0x53
 6635 07d0 02       		.byte	0x2
 6636 07d1 79       		.byte	0x79
 6637 07d2 00       		.sleb128 0
 6638 07d3 16       		.uleb128 0x16
 6639 07d4 02       		.byte	0x2
 6640 07d5 7D       		.byte	0x7d
 6641 07d6 0C       		.sleb128 12
 6642 07d7 02       		.byte	0x2
 6643 07d8 77       		.byte	0x77
 6644 07d9 00       		.sleb128 0
 6645 07da 16       		.uleb128 0x16
 6646 07db 02       		.byte	0x2
 6647 07dc 7D       		.byte	0x7d
 6648 07dd 10       		.sleb128 16
 6649 07de 02       		.byte	0x2
 6650 07df 75       		.byte	0x75
 6651 07e0 00       		.sleb128 0
 6652 07e1 00       		.byte	0
 6653 07e2 00       		.byte	0
 6654 07e3 1C       		.uleb128 0x1c
 6655 07e4 68010000 		.4byte	.Ldebug_ranges0+0x168
 6656 07e8 78080000 		.4byte	0x878
 6657 07ec 14       		.uleb128 0x14
 6658 07ed 6C00     		.ascii	"l\000"
 6659 07ef 01       		.byte	0x1
 6660 07f0 3803     		.2byte	0x338
 6661 07f2 14       		.byte	0x14
 6662 07f3 8E000000 		.4byte	0x8e
 6663 07f7 A5110000 		.4byte	.LLST114
 6664 07fb 91110000 		.4byte	.LVUS114
 6665 07ff 20       		.uleb128 0x20
ARM GAS  /tmp/ccFy9xbE.s 			page 152


 6666 0800 18040000 		.4byte	.LVL449
 6667 0804 1B080000 		.4byte	0x81b
 6668 0808 16       		.uleb128 0x16
 6669 0809 01       		.byte	0x1
 6670 080a 51       		.byte	0x51
 6671 080b 02       		.byte	0x2
 6672 080c 7A       		.byte	0x7a
 6673 080d 00       		.sleb128 0
 6674 080e 16       		.uleb128 0x16
 6675 080f 01       		.byte	0x1
 6676 0810 52       		.byte	0x52
 6677 0811 02       		.byte	0x2
 6678 0812 78       		.byte	0x78
 6679 0813 00       		.sleb128 0
 6680 0814 16       		.uleb128 0x16
 6681 0815 01       		.byte	0x1
 6682 0816 53       		.byte	0x53
 6683 0817 02       		.byte	0x2
 6684 0818 79       		.byte	0x79
 6685 0819 00       		.sleb128 0
 6686 081a 00       		.byte	0
 6687 081b 20       		.uleb128 0x20
 6688 081c 2C040000 		.4byte	.LVL452
 6689 0820 3D080000 		.4byte	0x83d
 6690 0824 16       		.uleb128 0x16
 6691 0825 01       		.byte	0x1
 6692 0826 50       		.byte	0x50
 6693 0827 02       		.byte	0x2
 6694 0828 08       		.byte	0x8
 6695 0829 20       		.byte	0x20
 6696 082a 16       		.uleb128 0x16
 6697 082b 01       		.byte	0x1
 6698 082c 51       		.byte	0x51
 6699 082d 02       		.byte	0x2
 6700 082e 7A       		.byte	0x7a
 6701 082f 00       		.sleb128 0
 6702 0830 16       		.uleb128 0x16
 6703 0831 01       		.byte	0x1
 6704 0832 52       		.byte	0x52
 6705 0833 02       		.byte	0x2
 6706 0834 77       		.byte	0x77
 6707 0835 7F       		.sleb128 -1
 6708 0836 16       		.uleb128 0x16
 6709 0837 01       		.byte	0x1
 6710 0838 53       		.byte	0x53
 6711 0839 02       		.byte	0x2
 6712 083a 79       		.byte	0x79
 6713 083b 00       		.sleb128 0
 6714 083c 00       		.byte	0
 6715 083d 20       		.uleb128 0x20
 6716 083e 0A050000 		.4byte	.LVL491
 6717 0842 5F080000 		.4byte	0x85f
 6718 0846 16       		.uleb128 0x16
 6719 0847 01       		.byte	0x1
 6720 0848 50       		.byte	0x50
 6721 0849 02       		.byte	0x2
 6722 084a 08       		.byte	0x8
ARM GAS  /tmp/ccFy9xbE.s 			page 153


 6723 084b 20       		.byte	0x20
 6724 084c 16       		.uleb128 0x16
 6725 084d 01       		.byte	0x1
 6726 084e 51       		.byte	0x51
 6727 084f 02       		.byte	0x2
 6728 0850 7A       		.byte	0x7a
 6729 0851 00       		.sleb128 0
 6730 0852 16       		.uleb128 0x16
 6731 0853 01       		.byte	0x1
 6732 0854 52       		.byte	0x52
 6733 0855 02       		.byte	0x2
 6734 0856 78       		.byte	0x78
 6735 0857 7F       		.sleb128 -1
 6736 0858 16       		.uleb128 0x16
 6737 0859 01       		.byte	0x1
 6738 085a 53       		.byte	0x53
 6739 085b 02       		.byte	0x2
 6740 085c 79       		.byte	0x79
 6741 085d 00       		.sleb128 0
 6742 085e 00       		.byte	0
 6743 085f 21       		.uleb128 0x21
 6744 0860 20050000 		.4byte	.LVL495
 6745 0864 16       		.uleb128 0x16
 6746 0865 01       		.byte	0x1
 6747 0866 51       		.byte	0x51
 6748 0867 02       		.byte	0x2
 6749 0868 7A       		.byte	0x7a
 6750 0869 00       		.sleb128 0
 6751 086a 16       		.uleb128 0x16
 6752 086b 01       		.byte	0x1
 6753 086c 52       		.byte	0x52
 6754 086d 02       		.byte	0x2
 6755 086e 75       		.byte	0x75
 6756 086f 00       		.sleb128 0
 6757 0870 16       		.uleb128 0x16
 6758 0871 01       		.byte	0x1
 6759 0872 53       		.byte	0x53
 6760 0873 02       		.byte	0x2
 6761 0874 79       		.byte	0x79
 6762 0875 00       		.sleb128 0
 6763 0876 00       		.byte	0
 6764 0877 00       		.byte	0
 6765 0878 1C       		.uleb128 0x1c
 6766 0879 10010000 		.4byte	.Ldebug_ranges0+0x110
 6767 087d 1F090000 		.4byte	0x91f
 6768 0881 14       		.uleb128 0x14
 6769 0882 7000     		.ascii	"p\000"
 6770 0884 01       		.byte	0x1
 6771 0885 4C03     		.2byte	0x34c
 6772 0887 13       		.byte	0x13
 6773 0888 38020000 		.4byte	0x238
 6774 088c 43120000 		.4byte	.LLST109
 6775 0890 3B120000 		.4byte	.LVUS109
 6776 0894 14       		.uleb128 0x14
 6777 0895 6C00     		.ascii	"l\000"
 6778 0897 01       		.byte	0x1
 6779 0898 4D03     		.2byte	0x34d
ARM GAS  /tmp/ccFy9xbE.s 			page 154


 6780 089a 14       		.byte	0x14
 6781 089b 8E000000 		.4byte	0x8e
 6782 089f 91120000 		.4byte	.LLST110
 6783 08a3 81120000 		.4byte	.LVUS110
 6784 08a7 22       		.uleb128 0x22
 6785 08a8 C3180000 		.4byte	0x18c3
 6786 08ac 40010000 		.4byte	.Ldebug_ranges0+0x140
 6787 08b0 01       		.byte	0x1
 6788 08b1 4D03     		.2byte	0x34d
 6789 08b3 18       		.byte	0x18
 6790 08b4 DE080000 		.4byte	0x8de
 6791 08b8 23       		.uleb128 0x23
 6792 08b9 E1180000 		.4byte	0x18e1
 6793 08bd 01130000 		.4byte	.LLST111
 6794 08c1 F7120000 		.4byte	.LVUS111
 6795 08c5 24       		.uleb128 0x24
 6796 08c6 D5180000 		.4byte	0x18d5
 6797 08ca 25       		.uleb128 0x25
 6798 08cb 40010000 		.4byte	.Ldebug_ranges0+0x140
 6799 08cf 26       		.uleb128 0x26
 6800 08d0 ED180000 		.4byte	0x18ed
 6801 08d4 58130000 		.4byte	.LLST112
 6802 08d8 44130000 		.4byte	.LVUS112
 6803 08dc 00       		.byte	0
 6804 08dd 00       		.byte	0
 6805 08de 20       		.uleb128 0x20
 6806 08df 40050000 		.4byte	.LVL499
 6807 08e3 00090000 		.4byte	0x900
 6808 08e7 16       		.uleb128 0x16
 6809 08e8 01       		.byte	0x1
 6810 08e9 50       		.byte	0x50
 6811 08ea 02       		.byte	0x2
 6812 08eb 08       		.byte	0x8
 6813 08ec 20       		.byte	0x20
 6814 08ed 16       		.uleb128 0x16
 6815 08ee 01       		.byte	0x1
 6816 08ef 51       		.byte	0x51
 6817 08f0 02       		.byte	0x2
 6818 08f1 7A       		.byte	0x7a
 6819 08f2 00       		.sleb128 0
 6820 08f3 16       		.uleb128 0x16
 6821 08f4 01       		.byte	0x1
 6822 08f5 52       		.byte	0x52
 6823 08f6 02       		.byte	0x2
 6824 08f7 76       		.byte	0x76
 6825 08f8 7F       		.sleb128 -1
 6826 08f9 16       		.uleb128 0x16
 6827 08fa 01       		.byte	0x1
 6828 08fb 53       		.byte	0x53
 6829 08fc 02       		.byte	0x2
 6830 08fd 79       		.byte	0x79
 6831 08fe 00       		.sleb128 0
 6832 08ff 00       		.byte	0
 6833 0900 21       		.uleb128 0x21
 6834 0901 66050000 		.4byte	.LVL505
 6835 0905 16       		.uleb128 0x16
 6836 0906 01       		.byte	0x1
ARM GAS  /tmp/ccFy9xbE.s 			page 155


 6837 0907 50       		.byte	0x50
 6838 0908 02       		.byte	0x2
 6839 0909 08       		.byte	0x8
 6840 090a 20       		.byte	0x20
 6841 090b 16       		.uleb128 0x16
 6842 090c 01       		.byte	0x1
 6843 090d 51       		.byte	0x51
 6844 090e 02       		.byte	0x2
 6845 090f 7A       		.byte	0x7a
 6846 0910 00       		.sleb128 0
 6847 0911 16       		.uleb128 0x16
 6848 0912 01       		.byte	0x1
 6849 0913 52       		.byte	0x52
 6850 0914 02       		.byte	0x2
 6851 0915 78       		.byte	0x78
 6852 0916 7F       		.sleb128 -1
 6853 0917 16       		.uleb128 0x16
 6854 0918 01       		.byte	0x1
 6855 0919 53       		.byte	0x53
 6856 091a 02       		.byte	0x2
 6857 091b 79       		.byte	0x79
 6858 091c 00       		.sleb128 0
 6859 091d 00       		.byte	0
 6860 091e 00       		.byte	0
 6861 091f 1E       		.uleb128 0x1e
 6862 0920 D4030000 		.4byte	.LBB90
 6863 0924 00040000 		.4byte	.LBE90
 6864 0928 7D090000 		.4byte	0x97d
 6865 092c 1B       		.uleb128 0x1b
 6866 092d 0F0A0000 		.4byte	.LASF783
 6867 0931 01       		.byte	0x1
 6868 0932 6903     		.2byte	0x369
 6869 0934 12       		.byte	0x12
 6870 0935 4E0B0000 		.4byte	0xb4e
 6871 0939 D8130000 		.4byte	.LLST113
 6872 093d D6130000 		.4byte	.LVUS113
 6873 0941 15       		.uleb128 0x15
 6874 0942 FC030000 		.4byte	.LVL443
 6875 0946 A9140000 		.4byte	0x14a9
 6876 094a 16       		.uleb128 0x16
 6877 094b 01       		.byte	0x1
 6878 094c 50       		.byte	0x50
 6879 094d 02       		.byte	0x2
 6880 094e 7B       		.byte	0x7b
 6881 094f 00       		.sleb128 0
 6882 0950 16       		.uleb128 0x16
 6883 0951 01       		.byte	0x1
 6884 0952 51       		.byte	0x51
 6885 0953 02       		.byte	0x2
 6886 0954 7A       		.byte	0x7a
 6887 0955 00       		.sleb128 0
 6888 0956 16       		.uleb128 0x16
 6889 0957 01       		.byte	0x1
 6890 0958 52       		.byte	0x52
 6891 0959 02       		.byte	0x2
 6892 095a 78       		.byte	0x78
 6893 095b 00       		.sleb128 0
ARM GAS  /tmp/ccFy9xbE.s 			page 156


 6894 095c 16       		.uleb128 0x16
 6895 095d 01       		.byte	0x1
 6896 095e 53       		.byte	0x53
 6897 095f 02       		.byte	0x2
 6898 0960 79       		.byte	0x79
 6899 0961 00       		.sleb128 0
 6900 0962 16       		.uleb128 0x16
 6901 0963 02       		.byte	0x2
 6902 0964 7D       		.byte	0x7d
 6903 0965 04       		.sleb128 4
 6904 0966 01       		.byte	0x1
 6905 0967 30       		.byte	0x30
 6906 0968 16       		.uleb128 0x16
 6907 0969 02       		.byte	0x2
 6908 096a 7D       		.byte	0x7d
 6909 096b 08       		.sleb128 8
 6910 096c 01       		.byte	0x1
 6911 096d 40       		.byte	0x40
 6912 096e 16       		.uleb128 0x16
 6913 096f 02       		.byte	0x2
 6914 0970 7D       		.byte	0x7d
 6915 0971 0C       		.sleb128 12
 6916 0972 02       		.byte	0x2
 6917 0973 77       		.byte	0x77
 6918 0974 00       		.sleb128 0
 6919 0975 16       		.uleb128 0x16
 6920 0976 02       		.byte	0x2
 6921 0977 7D       		.byte	0x7d
 6922 0978 10       		.sleb128 16
 6923 0979 01       		.byte	0x1
 6924 097a 38       		.byte	0x38
 6925 097b 00       		.byte	0
 6926 097c 00       		.byte	0
 6927 097d 27       		.uleb128 0x27
 6928 097e A5180000 		.4byte	0x18a5
 6929 0982 6E000000 		.4byte	.LBI59
 6930 0986 0300     		.2byte	.LVU727
 6931 0988 6E000000 		.4byte	.LBB59
 6932 098c 6E000000 		.4byte	.LBE59
 6933 0990 01       		.byte	0x1
 6934 0991 8A02     		.2byte	0x28a
 6935 0993 09       		.byte	0x9
 6936 0994 A6090000 		.4byte	0x9a6
 6937 0998 23       		.uleb128 0x23
 6938 0999 B7180000 		.4byte	0x18b7
 6939 099d EE130000 		.4byte	.LLST102
 6940 09a1 EC130000 		.4byte	.LVUS102
 6941 09a5 00       		.byte	0
 6942 09a6 27       		.uleb128 0x27
 6943 09a7 A5180000 		.4byte	0x18a5
 6944 09ab BA010000 		.4byte	.LBI61
 6945 09af 0100     		.2byte	.LVU788
 6946 09b1 BA010000 		.4byte	.LBB61
 6947 09b5 BA010000 		.4byte	.LBE61
 6948 09b9 01       		.byte	0x1
 6949 09ba 9C02     		.2byte	0x29c
 6950 09bc 0B       		.byte	0xb
ARM GAS  /tmp/ccFy9xbE.s 			page 157


 6951 09bd CF090000 		.4byte	0x9cf
 6952 09c1 23       		.uleb128 0x23
 6953 09c2 B7180000 		.4byte	0x18b7
 6954 09c6 03140000 		.4byte	.LLST103
 6955 09ca 01140000 		.4byte	.LVUS103
 6956 09ce 00       		.byte	0
 6957 09cf 28       		.uleb128 0x28
 6958 09d0 76180000 		.4byte	0x1876
 6959 09d4 CE010000 		.4byte	.LBB63
 6960 09d8 E8010000 		.4byte	.LBE63
 6961 09dc 01       		.byte	0x1
 6962 09dd 8B02     		.2byte	0x28b
 6963 09df 0F       		.byte	0xf
 6964 09e0 1B0A0000 		.4byte	0xa1b
 6965 09e4 24       		.uleb128 0x24
 6966 09e5 88180000 		.4byte	0x1888
 6967 09e9 26       		.uleb128 0x26
 6968 09ea 94180000 		.4byte	0x1894
 6969 09ee 1A140000 		.4byte	.LLST104
 6970 09f2 16140000 		.4byte	.LVUS104
 6971 09f6 29       		.uleb128 0x29
 6972 09f7 A5180000 		.4byte	0x18a5
 6973 09fb E2010000 		.4byte	.LBI65
 6974 09ff 0100     		.2byte	.LVU803
 6975 0a01 E2010000 		.4byte	.LBB65
 6976 0a05 E2010000 		.4byte	.LBE65
 6977 0a09 01       		.byte	0x1
 6978 0a0a B9       		.byte	0xb9
 6979 0a0b 0A       		.byte	0xa
 6980 0a0c 23       		.uleb128 0x23
 6981 0a0d B7180000 		.4byte	0x18b7
 6982 0a11 3A140000 		.4byte	.LLST105
 6983 0a15 38140000 		.4byte	.LVUS105
 6984 0a19 00       		.byte	0
 6985 0a1a 00       		.byte	0
 6986 0a1b 28       		.uleb128 0x28
 6987 0a1c 76180000 		.4byte	0x1876
 6988 0a20 34040000 		.4byte	.LBB92
 6989 0a24 50040000 		.4byte	.LBE92
 6990 0a28 01       		.byte	0x1
 6991 0a29 9D02     		.2byte	0x29d
 6992 0a2b 15       		.byte	0x15
 6993 0a2c 670A0000 		.4byte	0xa67
 6994 0a30 24       		.uleb128 0x24
 6995 0a31 88180000 		.4byte	0x1888
 6996 0a35 26       		.uleb128 0x26
 6997 0a36 94180000 		.4byte	0x1894
 6998 0a3a 51140000 		.4byte	.LLST115
 6999 0a3e 4D140000 		.4byte	.LVUS115
 7000 0a42 29       		.uleb128 0x29
 7001 0a43 A5180000 		.4byte	0x18a5
 7002 0a47 48040000 		.4byte	.LBI94
 7003 0a4b 0100     		.2byte	.LVU1024
 7004 0a4d 48040000 		.4byte	.LBB94
 7005 0a51 48040000 		.4byte	.LBE94
 7006 0a55 01       		.byte	0x1
 7007 0a56 B9       		.byte	0xb9
ARM GAS  /tmp/ccFy9xbE.s 			page 158


 7008 0a57 0A       		.byte	0xa
 7009 0a58 23       		.uleb128 0x23
 7010 0a59 B7180000 		.4byte	0x18b7
 7011 0a5d 71140000 		.4byte	.LLST116
 7012 0a61 6F140000 		.4byte	.LVUS116
 7013 0a65 00       		.byte	0
 7014 0a66 00       		.byte	0
 7015 0a67 20       		.uleb128 0x20
 7016 0a68 38000000 		.4byte	.LVL329
 7017 0a6c 830A0000 		.4byte	0xa83
 7018 0a70 16       		.uleb128 0x16
 7019 0a71 01       		.byte	0x1
 7020 0a72 51       		.byte	0x51
 7021 0a73 02       		.byte	0x2
 7022 0a74 7A       		.byte	0x7a
 7023 0a75 00       		.sleb128 0
 7024 0a76 16       		.uleb128 0x16
 7025 0a77 01       		.byte	0x1
 7026 0a78 52       		.byte	0x52
 7027 0a79 02       		.byte	0x2
 7028 0a7a 78       		.byte	0x78
 7029 0a7b 7F       		.sleb128 -1
 7030 0a7c 16       		.uleb128 0x16
 7031 0a7d 01       		.byte	0x1
 7032 0a7e 53       		.byte	0x53
 7033 0a7f 02       		.byte	0x2
 7034 0a80 79       		.byte	0x79
 7035 0a81 00       		.sleb128 0
 7036 0a82 00       		.byte	0
 7037 0a83 20       		.uleb128 0x20
 7038 0a84 AA010000 		.4byte	.LVL352
 7039 0a88 A40A0000 		.4byte	0xaa4
 7040 0a8c 16       		.uleb128 0x16
 7041 0a8d 01       		.byte	0x1
 7042 0a8e 50       		.byte	0x50
 7043 0a8f 01       		.byte	0x1
 7044 0a90 30       		.byte	0x30
 7045 0a91 16       		.uleb128 0x16
 7046 0a92 01       		.byte	0x1
 7047 0a93 51       		.byte	0x51
 7048 0a94 02       		.byte	0x2
 7049 0a95 7A       		.byte	0x7a
 7050 0a96 00       		.sleb128 0
 7051 0a97 16       		.uleb128 0x16
 7052 0a98 01       		.byte	0x1
 7053 0a99 52       		.byte	0x52
 7054 0a9a 02       		.byte	0x2
 7055 0a9b 78       		.byte	0x78
 7056 0a9c 00       		.sleb128 0
 7057 0a9d 16       		.uleb128 0x16
 7058 0a9e 01       		.byte	0x1
 7059 0a9f 53       		.byte	0x53
 7060 0aa0 02       		.byte	0x2
 7061 0aa1 79       		.byte	0x79
 7062 0aa2 00       		.sleb128 0
 7063 0aa3 00       		.byte	0
 7064 0aa4 20       		.uleb128 0x20
ARM GAS  /tmp/ccFy9xbE.s 			page 159


 7065 0aa5 06020000 		.4byte	.LVL369
 7066 0aa9 C00A0000 		.4byte	0xac0
 7067 0aad 16       		.uleb128 0x16
 7068 0aae 01       		.byte	0x1
 7069 0aaf 51       		.byte	0x51
 7070 0ab0 02       		.byte	0x2
 7071 0ab1 7A       		.byte	0x7a
 7072 0ab2 00       		.sleb128 0
 7073 0ab3 16       		.uleb128 0x16
 7074 0ab4 01       		.byte	0x1
 7075 0ab5 52       		.byte	0x52
 7076 0ab6 02       		.byte	0x2
 7077 0ab7 78       		.byte	0x78
 7078 0ab8 7F       		.sleb128 -1
 7079 0ab9 16       		.uleb128 0x16
 7080 0aba 01       		.byte	0x1
 7081 0abb 53       		.byte	0x53
 7082 0abc 02       		.byte	0x2
 7083 0abd 79       		.byte	0x79
 7084 0abe 00       		.sleb128 0
 7085 0abf 00       		.byte	0
 7086 0ac0 1F       		.uleb128 0x1f
 7087 0ac1 FA020000 		.4byte	.LVL398
 7088 0ac5 530B0000 		.4byte	0xb53
 7089 0ac9 F40A0000 		.4byte	0xaf4
 7090 0acd 16       		.uleb128 0x16
 7091 0ace 01       		.byte	0x1
 7092 0acf 50       		.byte	0x50
 7093 0ad0 02       		.byte	0x2
 7094 0ad1 7B       		.byte	0x7b
 7095 0ad2 00       		.sleb128 0
 7096 0ad3 16       		.uleb128 0x16
 7097 0ad4 01       		.byte	0x1
 7098 0ad5 51       		.byte	0x51
 7099 0ad6 02       		.byte	0x2
 7100 0ad7 7A       		.byte	0x7a
 7101 0ad8 00       		.sleb128 0
 7102 0ad9 16       		.uleb128 0x16
 7103 0ada 01       		.byte	0x1
 7104 0adb 52       		.byte	0x52
 7105 0adc 02       		.byte	0x2
 7106 0add 78       		.byte	0x78
 7107 0ade 00       		.sleb128 0
 7108 0adf 16       		.uleb128 0x16
 7109 0ae0 01       		.byte	0x1
 7110 0ae1 53       		.byte	0x53
 7111 0ae2 02       		.byte	0x2
 7112 0ae3 79       		.byte	0x79
 7113 0ae4 00       		.sleb128 0
 7114 0ae5 16       		.uleb128 0x16
 7115 0ae6 02       		.byte	0x2
 7116 0ae7 7D       		.byte	0x7d
 7117 0ae8 08       		.sleb128 8
 7118 0ae9 02       		.byte	0x2
 7119 0aea 77       		.byte	0x77
 7120 0aeb 00       		.sleb128 0
 7121 0aec 16       		.uleb128 0x16
ARM GAS  /tmp/ccFy9xbE.s 			page 160


 7122 0aed 02       		.byte	0x2
 7123 0aee 7D       		.byte	0x7d
 7124 0aef 0C       		.sleb128 12
 7125 0af0 02       		.byte	0x2
 7126 0af1 75       		.byte	0x75
 7127 0af2 00       		.sleb128 0
 7128 0af3 00       		.byte	0
 7129 0af4 1F       		.uleb128 0x1f
 7130 0af5 2A030000 		.4byte	.LVL406
 7131 0af9 760F0000 		.4byte	0xf76
 7132 0afd 280B0000 		.4byte	0xb28
 7133 0b01 16       		.uleb128 0x16
 7134 0b02 01       		.byte	0x1
 7135 0b03 50       		.byte	0x50
 7136 0b04 02       		.byte	0x2
 7137 0b05 7B       		.byte	0x7b
 7138 0b06 00       		.sleb128 0
 7139 0b07 16       		.uleb128 0x16
 7140 0b08 01       		.byte	0x1
 7141 0b09 51       		.byte	0x51
 7142 0b0a 02       		.byte	0x2
 7143 0b0b 7A       		.byte	0x7a
 7144 0b0c 00       		.sleb128 0
 7145 0b0d 16       		.uleb128 0x16
 7146 0b0e 01       		.byte	0x1
 7147 0b0f 52       		.byte	0x52
 7148 0b10 02       		.byte	0x2
 7149 0b11 78       		.byte	0x78
 7150 0b12 00       		.sleb128 0
 7151 0b13 16       		.uleb128 0x16
 7152 0b14 01       		.byte	0x1
 7153 0b15 53       		.byte	0x53
 7154 0b16 02       		.byte	0x2
 7155 0b17 79       		.byte	0x79
 7156 0b18 00       		.sleb128 0
 7157 0b19 16       		.uleb128 0x16
 7158 0b1a 02       		.byte	0x2
 7159 0b1b 7D       		.byte	0x7d
 7160 0b1c 08       		.sleb128 8
 7161 0b1d 02       		.byte	0x2
 7162 0b1e 77       		.byte	0x77
 7163 0b1f 00       		.sleb128 0
 7164 0b20 16       		.uleb128 0x16
 7165 0b21 02       		.byte	0x2
 7166 0b22 7D       		.byte	0x7d
 7167 0b23 0C       		.sleb128 12
 7168 0b24 02       		.byte	0x2
 7169 0b25 75       		.byte	0x75
 7170 0b26 00       		.sleb128 0
 7171 0b27 00       		.byte	0
 7172 0b28 21       		.uleb128 0x21
 7173 0b29 D2030000 		.4byte	.LVL436
 7174 0b2d 16       		.uleb128 0x16
 7175 0b2e 01       		.byte	0x1
 7176 0b2f 50       		.byte	0x50
 7177 0b30 02       		.byte	0x2
 7178 0b31 08       		.byte	0x8
ARM GAS  /tmp/ccFy9xbE.s 			page 161


 7179 0b32 25       		.byte	0x25
 7180 0b33 16       		.uleb128 0x16
 7181 0b34 01       		.byte	0x1
 7182 0b35 51       		.byte	0x51
 7183 0b36 02       		.byte	0x2
 7184 0b37 7A       		.byte	0x7a
 7185 0b38 00       		.sleb128 0
 7186 0b39 16       		.uleb128 0x16
 7187 0b3a 01       		.byte	0x1
 7188 0b3b 52       		.byte	0x52
 7189 0b3c 02       		.byte	0x2
 7190 0b3d 78       		.byte	0x78
 7191 0b3e 7F       		.sleb128 -1
 7192 0b3f 16       		.uleb128 0x16
 7193 0b40 01       		.byte	0x1
 7194 0b41 53       		.byte	0x53
 7195 0b42 02       		.byte	0x2
 7196 0b43 79       		.byte	0x79
 7197 0b44 00       		.sleb128 0
 7198 0b45 00       		.byte	0
 7199 0b46 00       		.byte	0
 7200 0b47 02       		.uleb128 0x2
 7201 0b48 01       		.byte	0x1
 7202 0b49 02       		.byte	0x2
 7203 0b4a 09140000 		.4byte	.LASF784
 7204 0b4e 03       		.uleb128 0x3
 7205 0b4f 470B0000 		.4byte	0xb47
 7206 0b53 2A       		.uleb128 0x2a
 7207 0b54 8A440000 		.4byte	.LASF786
 7208 0b58 01       		.byte	0x1
 7209 0b59 DA01     		.2byte	0x1da
 7210 0b5b 0F       		.byte	0xf
 7211 0b5c 01       		.byte	0x1
 7212 0b5d DA000000 		.4byte	0xda
 7213 0b61 00000000 		.4byte	.LFB12
 7214 0b65 62040000 		.4byte	.LFE12
 7215 0b69 84140000 		.4byte	.LLST46
 7216 0b6d 01       		.byte	0x1
 7217 0b6e 710F0000 		.4byte	0xf71
 7218 0b72 0F       		.uleb128 0xf
 7219 0b73 6F757400 		.ascii	"out\000"
 7220 0b77 01       		.byte	0x1
 7221 0b78 DA01     		.2byte	0x1da
 7222 0b7a 22       		.byte	0x22
 7223 0b7b F2000000 		.4byte	0xf2
 7224 0b7f 1D150000 		.4byte	.LLST47
 7225 0b83 13150000 		.4byte	.LVUS47
 7226 0b87 17       		.uleb128 0x17
 7227 0b88 721A0000 		.4byte	.LASF770
 7228 0b8c 01       		.byte	0x1
 7229 0b8d DA01     		.2byte	0x1da
 7230 0b8f 2D       		.byte	0x2d
 7231 0b90 E1020000 		.4byte	0x2e1
 7232 0b94 69150000 		.4byte	.LLST48
 7233 0b98 5F150000 		.4byte	.LVUS48
 7234 0b9c 0F       		.uleb128 0xf
 7235 0b9d 69647800 		.ascii	"idx\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 162


 7236 0ba1 01       		.byte	0x1
 7237 0ba2 DA01     		.2byte	0x1da
 7238 0ba4 3C       		.byte	0x3c
 7239 0ba5 DA000000 		.4byte	0xda
 7240 0ba9 C3150000 		.4byte	.LLST49
 7241 0bad AB150000 		.4byte	.LVUS49
 7242 0bb1 17       		.uleb128 0x17
 7243 0bb2 13260000 		.4byte	.LASF777
 7244 0bb6 01       		.byte	0x1
 7245 0bb7 DA01     		.2byte	0x1da
 7246 0bb9 48       		.byte	0x48
 7247 0bba DA000000 		.4byte	0xda
 7248 0bbe 63160000 		.4byte	.LLST50
 7249 0bc2 59160000 		.4byte	.LVUS50
 7250 0bc6 17       		.uleb128 0x17
 7251 0bc7 63140000 		.4byte	.LASF782
 7252 0bcb 01       		.byte	0x1
 7253 0bcc DB01     		.2byte	0x1db
 7254 0bce 1C       		.byte	0x1c
 7255 0bcf 2D000000 		.4byte	0x2d
 7256 0bd3 B5160000 		.4byte	.LLST51
 7257 0bd7 A5160000 		.4byte	.LVUS51
 7258 0bdb 17       		.uleb128 0x17
 7259 0bdc 91460000 		.4byte	.LASF787
 7260 0be0 01       		.byte	0x1
 7261 0be1 DB01     		.2byte	0x1db
 7262 0be3 30       		.byte	0x30
 7263 0be4 8E000000 		.4byte	0x8e
 7264 0be8 34170000 		.4byte	.LLST52
 7265 0bec 22170000 		.4byte	.LVUS52
 7266 0bf0 17       		.uleb128 0x17
 7267 0bf1 F6250000 		.4byte	.LASF779
 7268 0bf5 01       		.byte	0x1
 7269 0bf6 DB01     		.2byte	0x1db
 7270 0bf8 43       		.byte	0x43
 7271 0bf9 8E000000 		.4byte	0x8e
 7272 0bfd B0170000 		.4byte	.LLST53
 7273 0c01 AA170000 		.4byte	.LVUS53
 7274 0c05 17       		.uleb128 0x17
 7275 0c06 0A170000 		.4byte	.LASF778
 7276 0c0a 01       		.byte	0x1
 7277 0c0b DC01     		.2byte	0x1dc
 7278 0c0d 22       		.byte	0x22
 7279 0c0e 8E000000 		.4byte	0x8e
 7280 0c12 F4170000 		.4byte	.LLST54
 7281 0c16 DC170000 		.4byte	.LVUS54
 7282 0c1a 1B       		.uleb128 0x1b
 7283 0c1b 5A140000 		.4byte	.LASF788
 7284 0c1f 01       		.byte	0x1
 7285 0c20 E301     		.2byte	0x1e3
 7286 0c22 0E       		.byte	0xe
 7287 0c23 4E0B0000 		.4byte	0xb4e
 7288 0c27 94180000 		.4byte	.LLST55
 7289 0c2b 8C180000 		.4byte	.LVUS55
 7290 0c2f 2B       		.uleb128 0x2b
 7291 0c30 08       		.byte	0x8
 7292 0c31 01       		.byte	0x1
ARM GAS  /tmp/ccFy9xbE.s 			page 163


 7293 0c32 EF01     		.2byte	0x1ef
 7294 0c34 03       		.byte	0x3
 7295 0c35 500C0000 		.4byte	0xc50
 7296 0c39 2C       		.uleb128 0x2c
 7297 0c3a 5500     		.ascii	"U\000"
 7298 0c3c 01       		.byte	0x1
 7299 0c3d F001     		.2byte	0x1f0
 7300 0c3f 0E       		.byte	0xe
 7301 0c40 6F000000 		.4byte	0x6f
 7302 0c44 2C       		.uleb128 0x2c
 7303 0c45 4600     		.ascii	"F\000"
 7304 0c47 01       		.byte	0x1
 7305 0c48 F101     		.2byte	0x1f1
 7306 0c4a 0C       		.byte	0xc
 7307 0c4b 2D000000 		.4byte	0x2d
 7308 0c4f 00       		.byte	0
 7309 0c50 1B       		.uleb128 0x1b
 7310 0c51 8F080000 		.4byte	.LASF789
 7311 0c55 01       		.byte	0x1
 7312 0c56 F201     		.2byte	0x1f2
 7313 0c58 05       		.byte	0x5
 7314 0c59 2F0C0000 		.4byte	0xc2f
 7315 0c5d 14190000 		.4byte	.LLST56
 7316 0c61 06190000 		.4byte	.LVUS56
 7317 0c65 1B       		.uleb128 0x1b
 7318 0c66 28460000 		.4byte	.LASF790
 7319 0c6a 01       		.byte	0x1
 7320 0c6b F501     		.2byte	0x1f5
 7321 0c6d 07       		.byte	0x7
 7322 0c6e 82000000 		.4byte	0x82
 7323 0c72 90190000 		.4byte	.LLST57
 7324 0c76 88190000 		.4byte	.LVUS57
 7325 0c7a 1B       		.uleb128 0x1b
 7326 0c7b 00110000 		.4byte	.LASF791
 7327 0c7f 01       		.byte	0x1
 7328 0c80 FA01     		.2byte	0x1fa
 7329 0c82 07       		.byte	0x7
 7330 0c83 82000000 		.4byte	0x82
 7331 0c87 E4190000 		.4byte	.LLST58
 7332 0c8b CA190000 		.4byte	.LVUS58
 7333 0c8f 14       		.uleb128 0x14
 7334 0c90 7A00     		.ascii	"z\000"
 7335 0c92 01       		.byte	0x1
 7336 0c93 FE01     		.2byte	0x1fe
 7337 0c95 10       		.byte	0x10
 7338 0c96 710F0000 		.4byte	0xf71
 7339 0c9a 921A0000 		.4byte	.LLST59
 7340 0c9e 881A0000 		.4byte	.LVUS59
 7341 0ca2 14       		.uleb128 0x14
 7342 0ca3 7A3200   		.ascii	"z2\000"
 7343 0ca6 01       		.byte	0x1
 7344 0ca7 FF01     		.2byte	0x1ff
 7345 0ca9 10       		.byte	0x10
 7346 0caa 710F0000 		.4byte	0xf71
 7347 0cae F41A0000 		.4byte	.LLST60
 7348 0cb2 F21A0000 		.4byte	.LVUS60
 7349 0cb6 1B       		.uleb128 0x1b
ARM GAS  /tmp/ccFy9xbE.s 			page 164


 7350 0cb7 69050000 		.4byte	.LASF792
 7351 0cbb 01       		.byte	0x1
 7352 0cbc 0C02     		.2byte	0x20c
 7353 0cbe 10       		.byte	0x10
 7354 0cbf 8E000000 		.4byte	0x8e
 7355 0cc3 201B0000 		.4byte	.LLST61
 7356 0cc7 0C1B0000 		.4byte	.LVUS61
 7357 0ccb 1B       		.uleb128 0x1b
 7358 0ccc 1C3E0000 		.4byte	.LASF793
 7359 0cd0 01       		.byte	0x1
 7360 0cd1 2402     		.2byte	0x224
 7361 0cd3 10       		.byte	0x10
 7362 0cd4 8E000000 		.4byte	0x8e
 7363 0cd8 B21B0000 		.4byte	.LLST62
 7364 0cdc 9E1B0000 		.4byte	.LVUS62
 7365 0ce0 1B       		.uleb128 0x1b
 7366 0ce1 39120000 		.4byte	.LASF794
 7367 0ce5 01       		.byte	0x1
 7368 0ce6 3702     		.2byte	0x237
 7369 0ce8 10       		.byte	0x10
 7370 0ce9 E6000000 		.4byte	0xe6
 7371 0ced 381C0000 		.4byte	.LLST63
 7372 0cf1 321C0000 		.4byte	.LVUS63
 7373 0cf5 2D       		.uleb128 0x2d
 7374 0cf6 2E000000 		.4byte	.LVL101
 7375 0cfa DB1A0000 		.4byte	0x1adb
 7376 0cfe 2D       		.uleb128 0x2d
 7377 0cff 42000000 		.4byte	.LVL102
 7378 0d03 E61A0000 		.4byte	0x1ae6
 7379 0d07 2D       		.uleb128 0x2d
 7380 0d08 58000000 		.4byte	.LVL103
 7381 0d0c F11A0000 		.4byte	0x1af1
 7382 0d10 2D       		.uleb128 0x2d
 7383 0d11 6A000000 		.4byte	.LVL105
 7384 0d15 F11A0000 		.4byte	0x1af1
 7385 0d19 2D       		.uleb128 0x2d
 7386 0d1a 98000000 		.4byte	.LVL108
 7387 0d1e FC1A0000 		.4byte	0x1afc
 7388 0d22 2D       		.uleb128 0x2d
 7389 0d23 A2000000 		.4byte	.LVL109
 7390 0d27 071B0000 		.4byte	0x1b07
 7391 0d2b 2D       		.uleb128 0x2d
 7392 0d2c AC000000 		.4byte	.LVL110
 7393 0d30 121B0000 		.4byte	0x1b12
 7394 0d34 2D       		.uleb128 0x2d
 7395 0d35 C6000000 		.4byte	.LVL111
 7396 0d39 1D1B0000 		.4byte	0x1b1d
 7397 0d3d 2D       		.uleb128 0x2d
 7398 0d3e D0000000 		.4byte	.LVL112
 7399 0d42 071B0000 		.4byte	0x1b07
 7400 0d46 2D       		.uleb128 0x2d
 7401 0d47 DC000000 		.4byte	.LVL113
 7402 0d4b 121B0000 		.4byte	0x1b12
 7403 0d4f 2D       		.uleb128 0x2d
 7404 0d50 E0000000 		.4byte	.LVL114
 7405 0d54 281B0000 		.4byte	0x1b28
 7406 0d58 2D       		.uleb128 0x2d
ARM GAS  /tmp/ccFy9xbE.s 			page 165


 7407 0d59 E6000000 		.4byte	.LVL116
 7408 0d5d FC1A0000 		.4byte	0x1afc
 7409 0d61 2D       		.uleb128 0x2d
 7410 0d62 F4000000 		.4byte	.LVL117
 7411 0d66 071B0000 		.4byte	0x1b07
 7412 0d6a 2D       		.uleb128 0x2d
 7413 0d6b FC000000 		.4byte	.LVL118
 7414 0d6f 121B0000 		.4byte	0x1b12
 7415 0d73 2D       		.uleb128 0x2d
 7416 0d74 00010000 		.4byte	.LVL119
 7417 0d78 281B0000 		.4byte	0x1b28
 7418 0d7c 2D       		.uleb128 0x2d
 7419 0d7d 10010000 		.4byte	.LVL122
 7420 0d81 071B0000 		.4byte	0x1b07
 7421 0d85 2D       		.uleb128 0x2d
 7422 0d86 1A010000 		.4byte	.LVL123
 7423 0d8a FC1A0000 		.4byte	0x1afc
 7424 0d8e 2D       		.uleb128 0x2d
 7425 0d8f 28010000 		.4byte	.LVL125
 7426 0d93 071B0000 		.4byte	0x1b07
 7427 0d97 2D       		.uleb128 0x2d
 7428 0d98 34010000 		.4byte	.LVL126
 7429 0d9c 1D1B0000 		.4byte	0x1b1d
 7430 0da0 2D       		.uleb128 0x2d
 7431 0da1 40010000 		.4byte	.LVL128
 7432 0da5 071B0000 		.4byte	0x1b07
 7433 0da9 2D       		.uleb128 0x2d
 7434 0daa 50010000 		.4byte	.LVL130
 7435 0dae 121B0000 		.4byte	0x1b12
 7436 0db2 2D       		.uleb128 0x2d
 7437 0db3 60010000 		.4byte	.LVL131
 7438 0db7 331B0000 		.4byte	0x1b33
 7439 0dbb 2D       		.uleb128 0x2d
 7440 0dbc 68010000 		.4byte	.LVL132
 7441 0dc0 121B0000 		.4byte	0x1b12
 7442 0dc4 2D       		.uleb128 0x2d
 7443 0dc5 74010000 		.4byte	.LVL133
 7444 0dc9 331B0000 		.4byte	0x1b33
 7445 0dcd 2D       		.uleb128 0x2d
 7446 0dce 7C010000 		.4byte	.LVL134
 7447 0dd2 121B0000 		.4byte	0x1b12
 7448 0dd6 2D       		.uleb128 0x2d
 7449 0dd7 88010000 		.4byte	.LVL135
 7450 0ddb 331B0000 		.4byte	0x1b33
 7451 0ddf 2D       		.uleb128 0x2d
 7452 0de0 9A010000 		.4byte	.LVL137
 7453 0de4 1D1B0000 		.4byte	0x1b1d
 7454 0de8 2D       		.uleb128 0x2d
 7455 0de9 A6010000 		.4byte	.LVL138
 7456 0ded 121B0000 		.4byte	0x1b12
 7457 0df1 2D       		.uleb128 0x2d
 7458 0df2 B2010000 		.4byte	.LVL139
 7459 0df6 331B0000 		.4byte	0x1b33
 7460 0dfa 2D       		.uleb128 0x2d
 7461 0dfb BA010000 		.4byte	.LVL140
 7462 0dff 121B0000 		.4byte	0x1b12
 7463 0e03 2D       		.uleb128 0x2d
ARM GAS  /tmp/ccFy9xbE.s 			page 166


 7464 0e04 C2010000 		.4byte	.LVL141
 7465 0e08 071B0000 		.4byte	0x1b07
 7466 0e0c 2D       		.uleb128 0x2d
 7467 0e0d CE010000 		.4byte	.LVL143
 7468 0e11 E61A0000 		.4byte	0x1ae6
 7469 0e15 2D       		.uleb128 0x2d
 7470 0e16 00020000 		.4byte	.LVL148
 7471 0e1a 3E1B0000 		.4byte	0x1b3e
 7472 0e1e 2D       		.uleb128 0x2d
 7473 0e1f 12020000 		.4byte	.LVL149
 7474 0e23 F11A0000 		.4byte	0x1af1
 7475 0e27 2D       		.uleb128 0x2d
 7476 0e28 3E020000 		.4byte	.LVL153
 7477 0e2c F11A0000 		.4byte	0x1af1
 7478 0e30 2E       		.uleb128 0x2e
 7479 0e31 90020000 		.4byte	.LVL162
 7480 0e35 01       		.byte	0x1
 7481 0e36 760F0000 		.4byte	0xf76
 7482 0e3a 2D       		.uleb128 0x2d
 7483 0e3b A2020000 		.4byte	.LVL165
 7484 0e3f 331B0000 		.4byte	0x1b33
 7485 0e43 2D       		.uleb128 0x2d
 7486 0e44 3E030000 		.4byte	.LVL171
 7487 0e48 331B0000 		.4byte	0x1b33
 7488 0e4c 2D       		.uleb128 0x2d
 7489 0e4d 4E030000 		.4byte	.LVL173
 7490 0e51 F11A0000 		.4byte	0x1af1
 7491 0e55 1F       		.uleb128 0x1f
 7492 0e56 78030000 		.4byte	.LVL176
 7493 0e5a 760F0000 		.4byte	0xf76
 7494 0e5e A30E0000 		.4byte	0xea3
 7495 0e62 16       		.uleb128 0x16
 7496 0e63 01       		.byte	0x1
 7497 0e64 50       		.byte	0x50
 7498 0e65 02       		.byte	0x2
 7499 0e66 77       		.byte	0x77
 7500 0e67 00       		.sleb128 0
 7501 0e68 16       		.uleb128 0x16
 7502 0e69 01       		.byte	0x1
 7503 0e6a 51       		.byte	0x51
 7504 0e6b 02       		.byte	0x2
 7505 0e6c 74       		.byte	0x74
 7506 0e6d 00       		.sleb128 0
 7507 0e6e 16       		.uleb128 0x16
 7508 0e6f 01       		.byte	0x1
 7509 0e70 52       		.byte	0x52
 7510 0e71 02       		.byte	0x2
 7511 0e72 7A       		.byte	0x7a
 7512 0e73 00       		.sleb128 0
 7513 0e74 16       		.uleb128 0x16
 7514 0e75 01       		.byte	0x1
 7515 0e76 53       		.byte	0x53
 7516 0e77 02       		.byte	0x2
 7517 0e78 75       		.byte	0x75
 7518 0e79 00       		.sleb128 0
 7519 0e7a 16       		.uleb128 0x16
 7520 0e7b 02       		.byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 167


 7521 0e7c 7D       		.byte	0x7d
 7522 0e7d 00       		.sleb128 0
 7523 0e7e 06       		.byte	0x6
 7524 0e7f 91       		.byte	0x91
 7525 0e80 A07F     		.sleb128 -96
 7526 0e82 F6       		.byte	0xf6
 7527 0e83 08       		.byte	0x8
 7528 0e84 2D       		.uleb128 0x2d
 7529 0e85 16       		.uleb128 0x16
 7530 0e86 02       		.byte	0x2
 7531 0e87 7D       		.byte	0x7d
 7532 0e88 08       		.sleb128 8
 7533 0e89 04       		.byte	0x4
 7534 0e8a 91       		.byte	0x91
 7535 0e8b A87F     		.sleb128 -88
 7536 0e8d 06       		.byte	0x6
 7537 0e8e 16       		.uleb128 0x16
 7538 0e8f 02       		.byte	0x2
 7539 0e90 7D       		.byte	0x7d
 7540 0e91 0C       		.sleb128 12
 7541 0e92 02       		.byte	0x2
 7542 0e93 76       		.byte	0x76
 7543 0e94 00       		.sleb128 0
 7544 0e95 16       		.uleb128 0x16
 7545 0e96 02       		.byte	0x2
 7546 0e97 7D       		.byte	0x7d
 7547 0e98 10       		.sleb128 16
 7548 0e99 08       		.byte	0x8
 7549 0e9a 91       		.byte	0x91
 7550 0e9b 9C7F     		.sleb128 -100
 7551 0e9d 06       		.byte	0x6
 7552 0e9e 0B       		.byte	0xb
 7553 0e9f FFF7     		.2byte	0xf7ff
 7554 0ea1 1A       		.byte	0x1a
 7555 0ea2 00       		.byte	0
 7556 0ea3 2F       		.uleb128 0x2f
 7557 0ea4 96030000 		.4byte	.LVL179
 7558 0ea8 02       		.byte	0x2
 7559 0ea9 77       		.byte	0x77
 7560 0eaa 00       		.sleb128 0
 7561 0eab EC0E0000 		.4byte	0xeec
 7562 0eaf 16       		.uleb128 0x16
 7563 0eb0 01       		.byte	0x1
 7564 0eb1 50       		.byte	0x50
 7565 0eb2 26       		.byte	0x26
 7566 0eb3 08       		.byte	0x8
 7567 0eb4 65       		.byte	0x65
 7568 0eb5 08       		.byte	0x8
 7569 0eb6 45       		.byte	0x45
 7570 0eb7 76       		.byte	0x76
 7571 0eb8 7F       		.sleb128 -1
 7572 0eb9 91       		.byte	0x91
 7573 0eba 9C7F     		.sleb128 -100
 7574 0ebc 06       		.byte	0x6
 7575 0ebd 09       		.byte	0x9
 7576 0ebe FE       		.byte	0xfe
 7577 0ebf 24       		.byte	0x24
ARM GAS  /tmp/ccFy9xbE.s 			page 168


 7578 0ec0 33       		.byte	0x33
 7579 0ec1 25       		.byte	0x25
 7580 0ec2 30       		.byte	0x30
 7581 0ec3 2E       		.byte	0x2e
 7582 0ec4 28       		.byte	0x28
 7583 0ec5 0100     		.2byte	0x1
 7584 0ec7 16       		.byte	0x16
 7585 0ec8 13       		.byte	0x13
 7586 0ec9 91       		.byte	0x91
 7587 0eca 9C7F     		.sleb128 -100
 7588 0ecc 06       		.byte	0x6
 7589 0ecd 09       		.byte	0x9
 7590 0ece FE       		.byte	0xfe
 7591 0ecf 24       		.byte	0x24
 7592 0ed0 33       		.byte	0x33
 7593 0ed1 25       		.byte	0x25
 7594 0ed2 30       		.byte	0x30
 7595 0ed3 29       		.byte	0x29
 7596 0ed4 28       		.byte	0x28
 7597 0ed5 0100     		.2byte	0x1
 7598 0ed7 16       		.byte	0x16
 7599 0ed8 13       		.byte	0x13
 7600 0ed9 16       		.uleb128 0x16
 7601 0eda 01       		.byte	0x1
 7602 0edb 51       		.byte	0x51
 7603 0edc 02       		.byte	0x2
 7604 0edd 74       		.byte	0x74
 7605 0ede 00       		.sleb128 0
 7606 0edf 16       		.uleb128 0x16
 7607 0ee0 01       		.byte	0x1
 7608 0ee1 52       		.byte	0x52
 7609 0ee2 02       		.byte	0x2
 7610 0ee3 76       		.byte	0x76
 7611 0ee4 7F       		.sleb128 -1
 7612 0ee5 16       		.uleb128 0x16
 7613 0ee6 01       		.byte	0x1
 7614 0ee7 53       		.byte	0x53
 7615 0ee8 02       		.byte	0x2
 7616 0ee9 75       		.byte	0x75
 7617 0eea 00       		.sleb128 0
 7618 0eeb 00       		.byte	0
 7619 0eec 1F       		.uleb128 0x1f
 7620 0eed C8030000 		.4byte	.LVL180
 7621 0ef1 A9140000 		.4byte	0x14a9
 7622 0ef5 520F0000 		.4byte	0xf52
 7623 0ef9 16       		.uleb128 0x16
 7624 0efa 01       		.byte	0x1
 7625 0efb 50       		.byte	0x50
 7626 0efc 02       		.byte	0x2
 7627 0efd 77       		.byte	0x77
 7628 0efe 00       		.sleb128 0
 7629 0eff 16       		.uleb128 0x16
 7630 0f00 01       		.byte	0x1
 7631 0f01 51       		.byte	0x51
 7632 0f02 02       		.byte	0x2
 7633 0f03 74       		.byte	0x74
 7634 0f04 00       		.sleb128 0
ARM GAS  /tmp/ccFy9xbE.s 			page 169


 7635 0f05 16       		.uleb128 0x16
 7636 0f06 01       		.byte	0x1
 7637 0f07 52       		.byte	0x52
 7638 0f08 02       		.byte	0x2
 7639 0f09 76       		.byte	0x76
 7640 0f0a 00       		.sleb128 0
 7641 0f0b 16       		.uleb128 0x16
 7642 0f0c 01       		.byte	0x1
 7643 0f0d 53       		.byte	0x53
 7644 0f0e 02       		.byte	0x2
 7645 0f0f 75       		.byte	0x75
 7646 0f10 00       		.sleb128 0
 7647 0f11 16       		.uleb128 0x16
 7648 0f12 02       		.byte	0x2
 7649 0f13 7D       		.byte	0x7d
 7650 0f14 00       		.sleb128 0
 7651 0f15 14       		.byte	0x14
 7652 0f16 91       		.byte	0x91
 7653 0f17 B47F     		.sleb128 -76
 7654 0f19 06       		.byte	0x6
 7655 0f1a 1F       		.byte	0x1f
 7656 0f1b 91       		.byte	0x91
 7657 0f1c B47F     		.sleb128 -76
 7658 0f1e 06       		.byte	0x6
 7659 0f1f 91       		.byte	0x91
 7660 0f20 B47F     		.sleb128 -76
 7661 0f22 06       		.byte	0x6
 7662 0f23 30       		.byte	0x30
 7663 0f24 2D       		.byte	0x2d
 7664 0f25 28       		.byte	0x28
 7665 0f26 0100     		.2byte	0x1
 7666 0f28 16       		.byte	0x16
 7667 0f29 13       		.byte	0x13
 7668 0f2a 16       		.uleb128 0x16
 7669 0f2b 02       		.byte	0x2
 7670 0f2c 7D       		.byte	0x7d
 7671 0f2d 04       		.sleb128 4
 7672 0f2e 06       		.byte	0x6
 7673 0f2f 91       		.byte	0x91
 7674 0f30 B47F     		.sleb128 -76
 7675 0f32 06       		.byte	0x6
 7676 0f33 4F       		.byte	0x4f
 7677 0f34 25       		.byte	0x25
 7678 0f35 16       		.uleb128 0x16
 7679 0f36 02       		.byte	0x2
 7680 0f37 7D       		.byte	0x7d
 7681 0f38 08       		.sleb128 8
 7682 0f39 01       		.byte	0x1
 7683 0f3a 3A       		.byte	0x3a
 7684 0f3b 16       		.uleb128 0x16
 7685 0f3c 02       		.byte	0x2
 7686 0f3d 7D       		.byte	0x7d
 7687 0f3e 0C       		.sleb128 12
 7688 0f3f 01       		.byte	0x1
 7689 0f40 30       		.byte	0x30
 7690 0f41 16       		.uleb128 0x16
 7691 0f42 02       		.byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 170


 7692 0f43 7D       		.byte	0x7d
 7693 0f44 10       		.sleb128 16
 7694 0f45 05       		.byte	0x5
 7695 0f46 91       		.byte	0x91
 7696 0f47 40       		.sleb128 -64
 7697 0f48 06       		.byte	0x6
 7698 0f49 31       		.byte	0x31
 7699 0f4a 1C       		.byte	0x1c
 7700 0f4b 16       		.uleb128 0x16
 7701 0f4c 02       		.byte	0x2
 7702 0f4d 7D       		.byte	0x7d
 7703 0f4e 14       		.sleb128 20
 7704 0f4f 01       		.byte	0x1
 7705 0f50 35       		.byte	0x35
 7706 0f51 00       		.byte	0
 7707 0f52 21       		.uleb128 0x21
 7708 0f53 EC030000 		.4byte	.LVL184
 7709 0f57 16       		.uleb128 0x16
 7710 0f58 01       		.byte	0x1
 7711 0f59 50       		.byte	0x50
 7712 0f5a 02       		.byte	0x2
 7713 0f5b 08       		.byte	0x8
 7714 0f5c 20       		.byte	0x20
 7715 0f5d 16       		.uleb128 0x16
 7716 0f5e 01       		.byte	0x1
 7717 0f5f 51       		.byte	0x51
 7718 0f60 02       		.byte	0x2
 7719 0f61 74       		.byte	0x74
 7720 0f62 00       		.sleb128 0
 7721 0f63 16       		.uleb128 0x16
 7722 0f64 01       		.byte	0x1
 7723 0f65 52       		.byte	0x52
 7724 0f66 02       		.byte	0x2
 7725 0f67 76       		.byte	0x76
 7726 0f68 7F       		.sleb128 -1
 7727 0f69 16       		.uleb128 0x16
 7728 0f6a 01       		.byte	0x1
 7729 0f6b 53       		.byte	0x53
 7730 0f6c 02       		.byte	0x2
 7731 0f6d 75       		.byte	0x75
 7732 0f6e 00       		.sleb128 0
 7733 0f6f 00       		.byte	0
 7734 0f70 00       		.byte	0
 7735 0f71 03       		.uleb128 0x3
 7736 0f72 2D000000 		.4byte	0x2d
 7737 0f76 2A       		.uleb128 0x2a
 7738 0f77 18210000 		.4byte	.LASF798
 7739 0f7b 01       		.byte	0x1
 7740 0f7c 5901     		.2byte	0x159
 7741 0f7e 0F       		.byte	0xf
 7742 0f7f 01       		.byte	0x1
 7743 0f80 DA000000 		.4byte	0xda
 7744 0f84 00000000 		.4byte	.LFB11
 7745 0f88 20040000 		.4byte	.LFE11
 7746 0f8c 671C0000 		.4byte	.LLST64
 7747 0f90 01       		.byte	0x1
 7748 0f91 E4120000 		.4byte	0x12e4
ARM GAS  /tmp/ccFy9xbE.s 			page 171


 7749 0f95 0F       		.uleb128 0xf
 7750 0f96 6F757400 		.ascii	"out\000"
 7751 0f9a 01       		.byte	0x1
 7752 0f9b 5901     		.2byte	0x159
 7753 0f9d 22       		.byte	0x22
 7754 0f9e F2000000 		.4byte	0xf2
 7755 0fa2 681D0000 		.4byte	.LLST65
 7756 0fa6 581D0000 		.4byte	.LVUS65
 7757 0faa 17       		.uleb128 0x17
 7758 0fab 721A0000 		.4byte	.LASF770
 7759 0faf 01       		.byte	0x1
 7760 0fb0 5901     		.2byte	0x159
 7761 0fb2 2D       		.byte	0x2d
 7762 0fb3 E1020000 		.4byte	0x2e1
 7763 0fb7 E61D0000 		.4byte	.LLST66
 7764 0fbb D61D0000 		.4byte	.LVUS66
 7765 0fbf 0F       		.uleb128 0xf
 7766 0fc0 69647800 		.ascii	"idx\000"
 7767 0fc4 01       		.byte	0x1
 7768 0fc5 5901     		.2byte	0x159
 7769 0fc7 3C       		.byte	0x3c
 7770 0fc8 DA000000 		.4byte	0xda
 7771 0fcc 6A1E0000 		.4byte	.LLST67
 7772 0fd0 541E0000 		.4byte	.LVUS67
 7773 0fd4 17       		.uleb128 0x17
 7774 0fd5 13260000 		.4byte	.LASF777
 7775 0fd9 01       		.byte	0x1
 7776 0fda 5901     		.2byte	0x159
 7777 0fdc 48       		.byte	0x48
 7778 0fdd DA000000 		.4byte	0xda
 7779 0fe1 0A1F0000 		.4byte	.LLST68
 7780 0fe5 F41E0000 		.4byte	.LVUS68
 7781 0fe9 17       		.uleb128 0x17
 7782 0fea 63140000 		.4byte	.LASF782
 7783 0fee 01       		.byte	0x1
 7784 0fef 5A01     		.2byte	0x15a
 7785 0ff1 1C       		.byte	0x1c
 7786 0ff2 2D000000 		.4byte	0x2d
 7787 0ff6 A61F0000 		.4byte	.LLST69
 7788 0ffa 941F0000 		.4byte	.LVUS69
 7789 0ffe 17       		.uleb128 0x17
 7790 0fff 91460000 		.4byte	.LASF787
 7791 1003 01       		.byte	0x1
 7792 1004 5A01     		.2byte	0x15a
 7793 1006 30       		.byte	0x30
 7794 1007 8E000000 		.4byte	0x8e
 7795 100b 3C200000 		.4byte	.LLST70
 7796 100f 26200000 		.4byte	.LVUS70
 7797 1013 17       		.uleb128 0x17
 7798 1014 F6250000 		.4byte	.LASF779
 7799 1018 01       		.byte	0x1
 7800 1019 5A01     		.2byte	0x15a
 7801 101b 43       		.byte	0x43
 7802 101c 8E000000 		.4byte	0x8e
 7803 1020 E0200000 		.4byte	.LLST71
 7804 1024 C6200000 		.4byte	.LVUS71
 7805 1028 17       		.uleb128 0x17
ARM GAS  /tmp/ccFy9xbE.s 			page 172


 7806 1029 0A170000 		.4byte	.LASF778
 7807 102d 01       		.byte	0x1
 7808 102e 5B01     		.2byte	0x15b
 7809 1030 22       		.byte	0x22
 7810 1031 8E000000 		.4byte	0x8e
 7811 1035 96210000 		.4byte	.LLST72
 7812 1039 88210000 		.4byte	.LVUS72
 7813 103d 12       		.uleb128 0x12
 7814 103e 62756600 		.ascii	"buf\000"
 7815 1042 01       		.byte	0x1
 7816 1043 5C01     		.2byte	0x15c
 7817 1045 08       		.byte	0x8
 7818 1046 E4120000 		.4byte	0x12e4
 7819 104a 03       		.byte	0x3
 7820 104b 91       		.byte	0x91
 7821 104c A87F     		.sleb128 -88
 7822 104e 14       		.uleb128 0x14
 7823 104f 6C656E00 		.ascii	"len\000"
 7824 1053 01       		.byte	0x1
 7825 1054 5D01     		.2byte	0x15d
 7826 1056 0A       		.byte	0xa
 7827 1057 DA000000 		.4byte	0xda
 7828 105b 1E220000 		.4byte	.LLST73
 7829 105f F2210000 		.4byte	.LVUS73
 7830 1063 1B       		.uleb128 0x1b
 7831 1064 F2090000 		.4byte	.LASF799
 7832 1068 01       		.byte	0x1
 7833 1069 5E01     		.2byte	0x15e
 7834 106b 0A       		.byte	0xa
 7835 106c 2D000000 		.4byte	0x2d
 7836 1070 43230000 		.4byte	.LLST74
 7837 1074 27230000 		.4byte	.LVUS74
 7838 1078 13       		.uleb128 0x13
 7839 1079 C2410000 		.4byte	.LASF800
 7840 107d 01       		.byte	0x1
 7841 107e 6101     		.2byte	0x161
 7842 1080 17       		.byte	0x17
 7843 1081 04130000 		.4byte	0x1304
 7844 1085 05       		.byte	0x5
 7845 1086 03       		.byte	0x3
 7846 1087 00000000 		.4byte	pow10.0
 7847 108b 1B       		.uleb128 0x1b
 7848 108c 5A140000 		.4byte	.LASF788
 7849 1090 01       		.byte	0x1
 7850 1091 7B01     		.2byte	0x17b
 7851 1093 08       		.byte	0x8
 7852 1094 470B0000 		.4byte	0xb47
 7853 1098 39240000 		.4byte	.LLST75
 7854 109c 2D240000 		.4byte	.LVUS75
 7855 10a0 1B       		.uleb128 0x1b
 7856 10a1 19450000 		.4byte	.LASF801
 7857 10a5 01       		.byte	0x1
 7858 10a6 8B01     		.2byte	0x18b
 7859 10a8 07       		.byte	0x7
 7860 10a9 82000000 		.4byte	0x82
 7861 10ad 9E240000 		.4byte	.LLST76
 7862 10b1 8C240000 		.4byte	.LVUS76
ARM GAS  /tmp/ccFy9xbE.s 			page 173


 7863 10b5 14       		.uleb128 0x14
 7864 10b6 746D7000 		.ascii	"tmp\000"
 7865 10ba 01       		.byte	0x1
 7866 10bb 8C01     		.2byte	0x18c
 7867 10bd 0A       		.byte	0xa
 7868 10be 2D000000 		.4byte	0x2d
 7869 10c2 15250000 		.4byte	.LLST77
 7870 10c6 09250000 		.4byte	.LVUS77
 7871 10ca 1B       		.uleb128 0x1b
 7872 10cb 423A0000 		.4byte	.LASF802
 7873 10cf 01       		.byte	0x1
 7874 10d0 8D01     		.2byte	0x18d
 7875 10d2 11       		.byte	0x11
 7876 10d3 68000000 		.4byte	0x68
 7877 10d7 9F250000 		.4byte	.LLST78
 7878 10db 87250000 		.4byte	.LVUS78
 7879 10df 1C       		.uleb128 0x1c
 7880 10e0 48000000 		.4byte	.Ldebug_ranges0+0x48
 7881 10e4 FE100000 		.4byte	0x10fe
 7882 10e8 1B       		.uleb128 0x1b
 7883 10e9 47290000 		.4byte	.LASF771
 7884 10ed 01       		.byte	0x1
 7885 10ee A501     		.2byte	0x1a5
 7886 10f0 12       		.byte	0x12
 7887 10f1 8E000000 		.4byte	0x8e
 7888 10f5 3A260000 		.4byte	.LLST79
 7889 10f9 2C260000 		.4byte	.LVUS79
 7890 10fd 00       		.byte	0
 7891 10fe 2D       		.uleb128 0x2d
 7892 10ff 2C000000 		.4byte	.LVL209
 7893 1103 DB1A0000 		.4byte	0x1adb
 7894 1107 2D       		.uleb128 0x2d
 7895 1108 42000000 		.4byte	.LVL210
 7896 110c F11A0000 		.4byte	0x1af1
 7897 1110 2D       		.uleb128 0x2d
 7898 1111 56000000 		.4byte	.LVL211
 7899 1115 E61A0000 		.4byte	0x1ae6
 7900 1119 2D       		.uleb128 0x2d
 7901 111a 6A000000 		.4byte	.LVL212
 7902 111e E61A0000 		.4byte	0x1ae6
 7903 1122 2D       		.uleb128 0x2d
 7904 1123 7E000000 		.4byte	.LVL213
 7905 1127 F11A0000 		.4byte	0x1af1
 7906 112b 2D       		.uleb128 0x2d
 7907 112c 90000000 		.4byte	.LVL215
 7908 1130 F11A0000 		.4byte	0x1af1
 7909 1134 2D       		.uleb128 0x2d
 7910 1135 D4000000 		.4byte	.LVL223
 7911 1139 281B0000 		.4byte	0x1b28
 7912 113d 2D       		.uleb128 0x2d
 7913 113e DA000000 		.4byte	.LVL225
 7914 1142 FC1A0000 		.4byte	0x1afc
 7915 1146 2D       		.uleb128 0x2d
 7916 1147 E6000000 		.4byte	.LVL226
 7917 114b 1D1B0000 		.4byte	0x1b1d
 7918 114f 2D       		.uleb128 0x2d
 7919 1150 EE000000 		.4byte	.LVL227
ARM GAS  /tmp/ccFy9xbE.s 			page 174


 7920 1154 071B0000 		.4byte	0x1b07
 7921 1158 2D       		.uleb128 0x2d
 7922 1159 FA000000 		.4byte	.LVL229
 7923 115d 491B0000 		.4byte	0x1b49
 7924 1161 2D       		.uleb128 0x2d
 7925 1162 00010000 		.4byte	.LVL231
 7926 1166 541B0000 		.4byte	0x1b54
 7927 116a 2D       		.uleb128 0x2d
 7928 116b 0C010000 		.4byte	.LVL232
 7929 116f 1D1B0000 		.4byte	0x1b1d
 7930 1173 2D       		.uleb128 0x2d
 7931 1174 1C010000 		.4byte	.LVL235
 7932 1178 E61A0000 		.4byte	0x1ae6
 7933 117c 2D       		.uleb128 0x2d
 7934 117d 2A010000 		.4byte	.LVL237
 7935 1181 541B0000 		.4byte	0x1b54
 7936 1185 2D       		.uleb128 0x2d
 7937 1186 32010000 		.4byte	.LVL238
 7938 118a 3E1B0000 		.4byte	0x1b3e
 7939 118e 2D       		.uleb128 0x2d
 7940 118f 44010000 		.4byte	.LVL242
 7941 1193 FC1A0000 		.4byte	0x1afc
 7942 1197 2D       		.uleb128 0x2d
 7943 1198 50010000 		.4byte	.LVL243
 7944 119c 1D1B0000 		.4byte	0x1b1d
 7945 11a0 2D       		.uleb128 0x2d
 7946 11a1 5C010000 		.4byte	.LVL245
 7947 11a5 F11A0000 		.4byte	0x1af1
 7948 11a9 2D       		.uleb128 0x2d
 7949 11aa 6C010000 		.4byte	.LVL246
 7950 11ae E61A0000 		.4byte	0x1ae6
 7951 11b2 1F       		.uleb128 0x1f
 7952 11b3 E4010000 		.4byte	.LVL257
 7953 11b7 36170000 		.4byte	0x1736
 7954 11bb F5110000 		.4byte	0x11f5
 7955 11bf 16       		.uleb128 0x16
 7956 11c0 01       		.byte	0x1
 7957 11c1 50       		.byte	0x50
 7958 11c2 04       		.byte	0x4
 7959 11c3 91       		.byte	0x91
 7960 11c4 907F     		.sleb128 -112
 7961 11c6 06       		.byte	0x6
 7962 11c7 16       		.uleb128 0x16
 7963 11c8 01       		.byte	0x1
 7964 11c9 51       		.byte	0x51
 7965 11ca 04       		.byte	0x4
 7966 11cb 91       		.byte	0x91
 7967 11cc 947F     		.sleb128 -108
 7968 11ce 06       		.byte	0x6
 7969 11cf 16       		.uleb128 0x16
 7970 11d0 01       		.byte	0x1
 7971 11d1 52       		.byte	0x52
 7972 11d2 02       		.byte	0x2
 7973 11d3 7A       		.byte	0x7a
 7974 11d4 00       		.sleb128 0
 7975 11d5 16       		.uleb128 0x16
 7976 11d6 01       		.byte	0x1
ARM GAS  /tmp/ccFy9xbE.s 			page 175


 7977 11d7 53       		.byte	0x53
 7978 11d8 02       		.byte	0x2
 7979 11d9 7B       		.byte	0x7b
 7980 11da 00       		.sleb128 0
 7981 11db 16       		.uleb128 0x16
 7982 11dc 02       		.byte	0x2
 7983 11dd 7D       		.byte	0x7d
 7984 11de 00       		.sleb128 0
 7985 11df 02       		.byte	0x2
 7986 11e0 74       		.byte	0x74
 7987 11e1 00       		.sleb128 0
 7988 11e2 16       		.uleb128 0x16
 7989 11e3 02       		.byte	0x2
 7990 11e4 7D       		.byte	0x7d
 7991 11e5 08       		.sleb128 8
 7992 11e6 04       		.byte	0x4
 7993 11e7 91       		.byte	0x91
 7994 11e8 8C7F     		.sleb128 -116
 7995 11ea 06       		.byte	0x6
 7996 11eb 16       		.uleb128 0x16
 7997 11ec 02       		.byte	0x2
 7998 11ed 7D       		.byte	0x7d
 7999 11ee 0C       		.sleb128 12
 8000 11ef 04       		.byte	0x4
 8001 11f0 91       		.byte	0x91
 8002 11f1 887F     		.sleb128 -120
 8003 11f3 06       		.byte	0x6
 8004 11f4 00       		.byte	0
 8005 11f5 30       		.uleb128 0x30
 8006 11f6 24020000 		.4byte	.LVL264
 8007 11fa 01       		.byte	0x1
 8008 11fb 36170000 		.4byte	0x1736
 8009 11ff 88120000 		.4byte	0x1288
 8010 1203 16       		.uleb128 0x16
 8011 1204 01       		.byte	0x1
 8012 1205 50       		.byte	0x50
 8013 1206 04       		.byte	0x4
 8014 1207 7D       		.byte	0x7d
 8015 1208 907F     		.sleb128 -112
 8016 120a 06       		.byte	0x6
 8017 120b 16       		.uleb128 0x16
 8018 120c 01       		.byte	0x1
 8019 120d 51       		.byte	0x51
 8020 120e 04       		.byte	0x4
 8021 120f 7D       		.byte	0x7d
 8022 1210 947F     		.sleb128 -108
 8023 1212 06       		.byte	0x6
 8024 1213 16       		.uleb128 0x16
 8025 1214 01       		.byte	0x1
 8026 1215 52       		.byte	0x52
 8027 1216 03       		.byte	0x3
 8028 1217 F3       		.byte	0xf3
 8029 1218 01       		.uleb128 0x1
 8030 1219 52       		.byte	0x52
 8031 121a 16       		.uleb128 0x16
 8032 121b 01       		.byte	0x1
 8033 121c 53       		.byte	0x53
ARM GAS  /tmp/ccFy9xbE.s 			page 176


 8034 121d 03       		.byte	0x3
 8035 121e F3       		.byte	0xf3
 8036 121f 01       		.uleb128 0x1
 8037 1220 53       		.byte	0x53
 8038 1221 16       		.uleb128 0x16
 8039 1222 02       		.byte	0x2
 8040 1223 91       		.byte	0x91
 8041 1224 00       		.sleb128 0
 8042 1225 17       		.byte	0x17
 8043 1226 03       		.byte	0x3
 8044 1227 08000000 		.4byte	.LC1
 8045 122b 03       		.byte	0x3
 8046 122c 00000000 		.4byte	.LC0
 8047 1230 7D       		.byte	0x7d
 8048 1231 887F     		.sleb128 -120
 8049 1233 06       		.byte	0x6
 8050 1234 34       		.byte	0x34
 8051 1235 1A       		.byte	0x1a
 8052 1236 30       		.byte	0x30
 8053 1237 29       		.byte	0x29
 8054 1238 28       		.byte	0x28
 8055 1239 0100     		.2byte	0x1
 8056 123b 16       		.byte	0x16
 8057 123c 13       		.byte	0x13
 8058 123d 16       		.uleb128 0x16
 8059 123e 02       		.byte	0x2
 8060 123f 91       		.byte	0x91
 8061 1240 04       		.sleb128 4
 8062 1241 33       		.byte	0x33
 8063 1242 33       		.byte	0x33
 8064 1243 34       		.byte	0x34
 8065 1244 03       		.byte	0x3
 8066 1245 08000000 		.4byte	.LC1
 8067 1249 03       		.byte	0x3
 8068 124a 00000000 		.4byte	.LC0
 8069 124e 7D       		.byte	0x7d
 8070 124f 887F     		.sleb128 -120
 8071 1251 06       		.byte	0x6
 8072 1252 34       		.byte	0x34
 8073 1253 1A       		.byte	0x1a
 8074 1254 30       		.byte	0x30
 8075 1255 29       		.byte	0x29
 8076 1256 28       		.byte	0x28
 8077 1257 0100     		.2byte	0x1
 8078 1259 16       		.byte	0x16
 8079 125a 13       		.byte	0x13
 8080 125b 7D       		.byte	0x7d
 8081 125c 887F     		.sleb128 -120
 8082 125e 06       		.byte	0x6
 8083 125f 34       		.byte	0x34
 8084 1260 1A       		.byte	0x1a
 8085 1261 30       		.byte	0x30
 8086 1262 2E       		.byte	0x2e
 8087 1263 28       		.byte	0x28
 8088 1264 0100     		.2byte	0x1
 8089 1266 16       		.byte	0x16
 8090 1267 13       		.byte	0x13
ARM GAS  /tmp/ccFy9xbE.s 			page 177


 8091 1268 7D       		.byte	0x7d
 8092 1269 887F     		.sleb128 -120
 8093 126b 06       		.byte	0x6
 8094 126c 34       		.byte	0x34
 8095 126d 1A       		.byte	0x1a
 8096 126e 30       		.byte	0x30
 8097 126f 29       		.byte	0x29
 8098 1270 28       		.byte	0x28
 8099 1271 0100     		.2byte	0x1
 8100 1273 16       		.byte	0x16
 8101 1274 13       		.byte	0x13
 8102 1275 16       		.uleb128 0x16
 8103 1276 02       		.byte	0x2
 8104 1277 91       		.byte	0x91
 8105 1278 08       		.sleb128 8
 8106 1279 04       		.byte	0x4
 8107 127a 7D       		.byte	0x7d
 8108 127b 8C7F     		.sleb128 -116
 8109 127d 06       		.byte	0x6
 8110 127e 16       		.uleb128 0x16
 8111 127f 02       		.byte	0x2
 8112 1280 91       		.byte	0x91
 8113 1281 0C       		.sleb128 12
 8114 1282 04       		.byte	0x4
 8115 1283 7D       		.byte	0x7d
 8116 1284 887F     		.sleb128 -120
 8117 1286 06       		.byte	0x6
 8118 1287 00       		.byte	0
 8119 1288 2E       		.uleb128 0x2e
 8120 1289 4A020000 		.4byte	.LVL270
 8121 128d 01       		.byte	0x1
 8122 128e 36170000 		.4byte	0x1736
 8123 1292 2D       		.uleb128 0x2d
 8124 1293 5A020000 		.4byte	.LVL271
 8125 1297 1D1B0000 		.4byte	0x1b1d
 8126 129b 30       		.uleb128 0x30
 8127 129c 8C020000 		.4byte	.LVL281
 8128 12a0 01       		.byte	0x1
 8129 12a1 530B0000 		.4byte	0xb53
 8130 12a5 DA120000 		.4byte	0x12da
 8131 12a9 16       		.uleb128 0x16
 8132 12aa 01       		.byte	0x1
 8133 12ab 50       		.byte	0x50
 8134 12ac 04       		.byte	0x4
 8135 12ad 7D       		.byte	0x7d
 8136 12ae 907F     		.sleb128 -112
 8137 12b0 06       		.byte	0x6
 8138 12b1 16       		.uleb128 0x16
 8139 12b2 01       		.byte	0x1
 8140 12b3 51       		.byte	0x51
 8141 12b4 04       		.byte	0x4
 8142 12b5 7D       		.byte	0x7d
 8143 12b6 947F     		.sleb128 -108
 8144 12b8 06       		.byte	0x6
 8145 12b9 16       		.uleb128 0x16
 8146 12ba 01       		.byte	0x1
 8147 12bb 52       		.byte	0x52
ARM GAS  /tmp/ccFy9xbE.s 			page 178


 8148 12bc 03       		.byte	0x3
 8149 12bd F3       		.byte	0xf3
 8150 12be 01       		.uleb128 0x1
 8151 12bf 52       		.byte	0x52
 8152 12c0 16       		.uleb128 0x16
 8153 12c1 01       		.byte	0x1
 8154 12c2 53       		.byte	0x53
 8155 12c3 03       		.byte	0x3
 8156 12c4 F3       		.byte	0xf3
 8157 12c5 01       		.uleb128 0x1
 8158 12c6 53       		.byte	0x53
 8159 12c7 16       		.uleb128 0x16
 8160 12c8 02       		.byte	0x2
 8161 12c9 91       		.byte	0x91
 8162 12ca 0C       		.sleb128 12
 8163 12cb 04       		.byte	0x4
 8164 12cc 7D       		.byte	0x7d
 8165 12cd 8C7F     		.sleb128 -116
 8166 12cf 06       		.byte	0x6
 8167 12d0 16       		.uleb128 0x16
 8168 12d1 02       		.byte	0x2
 8169 12d2 91       		.byte	0x91
 8170 12d3 10       		.sleb128 16
 8171 12d4 04       		.byte	0x4
 8172 12d5 7D       		.byte	0x7d
 8173 12d6 887F     		.sleb128 -120
 8174 12d8 06       		.byte	0x6
 8175 12d9 00       		.byte	0
 8176 12da 2D       		.uleb128 0x2d
 8177 12db 6C030000 		.4byte	.LVL297
 8178 12df F11A0000 		.4byte	0x1af1
 8179 12e3 00       		.byte	0
 8180 12e4 18       		.uleb128 0x18
 8181 12e5 1F010000 		.4byte	0x11f
 8182 12e9 F4120000 		.4byte	0x12f4
 8183 12ed 19       		.uleb128 0x19
 8184 12ee 8E000000 		.4byte	0x8e
 8185 12f2 1F       		.byte	0x1f
 8186 12f3 00       		.byte	0
 8187 12f4 18       		.uleb128 0x18
 8188 12f5 710F0000 		.4byte	0xf71
 8189 12f9 04130000 		.4byte	0x1304
 8190 12fd 19       		.uleb128 0x19
 8191 12fe 8E000000 		.4byte	0x8e
 8192 1302 09       		.byte	0x9
 8193 1303 00       		.byte	0
 8194 1304 03       		.uleb128 0x3
 8195 1305 F4120000 		.4byte	0x12f4
 8196 1309 2A       		.uleb128 0x2a
 8197 130a D5390000 		.4byte	.LASF803
 8198 130e 01       		.byte	0x1
 8199 130f 3101     		.2byte	0x131
 8200 1311 0F       		.byte	0xf
 8201 1312 01       		.byte	0x1
 8202 1313 DA000000 		.4byte	0xda
 8203 1317 00000000 		.4byte	.LFB10
 8204 131b C6000000 		.4byte	.LFE10
ARM GAS  /tmp/ccFy9xbE.s 			page 179


 8205 131f 9D260000 		.4byte	.LLST33
 8206 1323 01       		.byte	0x1
 8207 1324 A9140000 		.4byte	0x14a9
 8208 1328 0F       		.uleb128 0xf
 8209 1329 6F757400 		.ascii	"out\000"
 8210 132d 01       		.byte	0x1
 8211 132e 3101     		.2byte	0x131
 8212 1330 2C       		.byte	0x2c
 8213 1331 F2000000 		.4byte	0xf2
 8214 1335 05270000 		.4byte	.LLST34
 8215 1339 FB260000 		.4byte	.LVUS34
 8216 133d 17       		.uleb128 0x17
 8217 133e 721A0000 		.4byte	.LASF770
 8218 1342 01       		.byte	0x1
 8219 1343 3101     		.2byte	0x131
 8220 1345 37       		.byte	0x37
 8221 1346 E1020000 		.4byte	0x2e1
 8222 134a 51270000 		.4byte	.LLST35
 8223 134e 49270000 		.4byte	.LVUS35
 8224 1352 0F       		.uleb128 0xf
 8225 1353 69647800 		.ascii	"idx\000"
 8226 1357 01       		.byte	0x1
 8227 1358 3101     		.2byte	0x131
 8228 135a 46       		.byte	0x46
 8229 135b DA000000 		.4byte	0xda
 8230 135f 8F270000 		.4byte	.LLST36
 8231 1363 87270000 		.4byte	.LVUS36
 8232 1367 17       		.uleb128 0x17
 8233 1368 13260000 		.4byte	.LASF777
 8234 136c 01       		.byte	0x1
 8235 136d 3201     		.2byte	0x132
 8236 136f 26       		.byte	0x26
 8237 1370 DA000000 		.4byte	0xda
 8238 1374 CC270000 		.4byte	.LLST37
 8239 1378 C8270000 		.4byte	.LVUS37
 8240 137c 17       		.uleb128 0x17
 8241 137d 63140000 		.4byte	.LASF782
 8242 1381 01       		.byte	0x1
 8243 1382 3201     		.2byte	0x132
 8244 1384 41       		.byte	0x41
 8245 1385 7B000000 		.4byte	0x7b
 8246 1389 F2270000 		.4byte	.LLST38
 8247 138d EA270000 		.4byte	.LVUS38
 8248 1391 17       		.uleb128 0x17
 8249 1392 5A140000 		.4byte	.LASF788
 8250 1396 01       		.byte	0x1
 8251 1397 3301     		.2byte	0x133
 8252 1399 24       		.byte	0x24
 8253 139a 470B0000 		.4byte	0xb47
 8254 139e 36280000 		.4byte	.LLST39
 8255 13a2 32280000 		.4byte	.LVUS39
 8256 13a6 17       		.uleb128 0x17
 8257 13a7 85440000 		.4byte	.LASF781
 8258 13ab 01       		.byte	0x1
 8259 13ac 3301     		.2byte	0x133
 8260 13ae 41       		.byte	0x41
 8261 13af 7B000000 		.4byte	0x7b
ARM GAS  /tmp/ccFy9xbE.s 			page 180


 8262 13b3 5A280000 		.4byte	.LLST40
 8263 13b7 56280000 		.4byte	.LVUS40
 8264 13bb 17       		.uleb128 0x17
 8265 13bc 91460000 		.4byte	.LASF787
 8266 13c0 01       		.byte	0x1
 8267 13c1 3401     		.2byte	0x134
 8268 13c3 2C       		.byte	0x2c
 8269 13c4 8E000000 		.4byte	0x8e
 8270 13c8 7E280000 		.4byte	.LLST41
 8271 13cc 7A280000 		.4byte	.LVUS41
 8272 13d0 17       		.uleb128 0x17
 8273 13d1 F6250000 		.4byte	.LASF779
 8274 13d5 01       		.byte	0x1
 8275 13d6 3401     		.2byte	0x134
 8276 13d8 3F       		.byte	0x3f
 8277 13d9 8E000000 		.4byte	0x8e
 8278 13dd A2280000 		.4byte	.LLST42
 8279 13e1 9E280000 		.4byte	.LVUS42
 8280 13e5 17       		.uleb128 0x17
 8281 13e6 0A170000 		.4byte	.LASF778
 8282 13ea 01       		.byte	0x1
 8283 13eb 3501     		.2byte	0x135
 8284 13ed 2C       		.byte	0x2c
 8285 13ee 8E000000 		.4byte	0x8e
 8286 13f2 C8280000 		.4byte	.LLST43
 8287 13f6 C2280000 		.4byte	.LVUS43
 8288 13fa 12       		.uleb128 0x12
 8289 13fb 62756600 		.ascii	"buf\000"
 8290 13ff 01       		.byte	0x1
 8291 1400 3601     		.2byte	0x136
 8292 1402 08       		.byte	0x8
 8293 1403 E4120000 		.4byte	0x12e4
 8294 1407 03       		.byte	0x3
 8295 1408 91       		.byte	0x91
 8296 1409 A87F     		.sleb128 -88
 8297 140b 14       		.uleb128 0x14
 8298 140c 6C656E00 		.ascii	"len\000"
 8299 1410 01       		.byte	0x1
 8300 1411 3701     		.2byte	0x137
 8301 1413 0A       		.byte	0xa
 8302 1414 DA000000 		.4byte	0xda
 8303 1418 FF280000 		.4byte	.LLST44
 8304 141c F3280000 		.4byte	.LVUS44
 8305 1420 1C       		.uleb128 0x1c
 8306 1421 20000000 		.4byte	.Ldebug_ranges0+0x20
 8307 1425 3F140000 		.4byte	0x143f
 8308 1429 1B       		.uleb128 0x1b
 8309 142a 5C1B0000 		.4byte	.LASF804
 8310 142e 01       		.byte	0x1
 8311 142f 4101     		.2byte	0x141
 8312 1431 12       		.byte	0x12
 8313 1432 26010000 		.4byte	0x126
 8314 1436 51290000 		.4byte	.LLST45
 8315 143a 4D290000 		.4byte	.LVUS45
 8316 143e 00       		.byte	0
 8317 143f 1F       		.uleb128 0x1f
 8318 1440 6A000000 		.4byte	.LVL86
ARM GAS  /tmp/ccFy9xbE.s 			page 181


 8319 1444 1D160000 		.4byte	0x161d
 8320 1448 9F140000 		.4byte	0x149f
 8321 144c 16       		.uleb128 0x16
 8322 144d 01       		.byte	0x1
 8323 144e 50       		.byte	0x50
 8324 144f 03       		.byte	0x3
 8325 1450 92       		.byte	0x92
 8326 1451 50       		.uleb128 0x50
 8327 1452 00       		.sleb128 0
 8328 1453 16       		.uleb128 0x16
 8329 1454 01       		.byte	0x1
 8330 1455 51       		.byte	0x51
 8331 1456 03       		.byte	0x3
 8332 1457 92       		.byte	0x92
 8333 1458 51       		.uleb128 0x51
 8334 1459 00       		.sleb128 0
 8335 145a 16       		.uleb128 0x16
 8336 145b 01       		.byte	0x1
 8337 145c 52       		.byte	0x52
 8338 145d 03       		.byte	0x3
 8339 145e 92       		.byte	0x92
 8340 145f 52       		.uleb128 0x52
 8341 1460 00       		.sleb128 0
 8342 1461 16       		.uleb128 0x16
 8343 1462 01       		.byte	0x1
 8344 1463 53       		.byte	0x53
 8345 1464 02       		.byte	0x2
 8346 1465 7B       		.byte	0x7b
 8347 1466 00       		.sleb128 0
 8348 1467 16       		.uleb128 0x16
 8349 1468 02       		.byte	0x2
 8350 1469 7D       		.byte	0x7d
 8351 146a 00       		.sleb128 0
 8352 146b 02       		.byte	0x2
 8353 146c 74       		.byte	0x74
 8354 146d 00       		.sleb128 0
 8355 146e 16       		.uleb128 0x16
 8356 146f 02       		.byte	0x2
 8357 1470 7D       		.byte	0x7d
 8358 1471 04       		.sleb128 4
 8359 1472 02       		.byte	0x2
 8360 1473 76       		.byte	0x76
 8361 1474 00       		.sleb128 0
 8362 1475 16       		.uleb128 0x16
 8363 1476 02       		.byte	0x2
 8364 1477 7D       		.byte	0x7d
 8365 1478 08       		.sleb128 8
 8366 1479 05       		.byte	0x5
 8367 147a 91       		.byte	0x91
 8368 147b A07F     		.sleb128 -96
 8369 147d 94       		.byte	0x94
 8370 147e 01       		.byte	0x1
 8371 147f 16       		.uleb128 0x16
 8372 1480 02       		.byte	0x2
 8373 1481 7D       		.byte	0x7d
 8374 1482 0C       		.sleb128 12
 8375 1483 02       		.byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 182


 8376 1484 77       		.byte	0x77
 8377 1485 00       		.sleb128 0
 8378 1486 16       		.uleb128 0x16
 8379 1487 02       		.byte	0x2
 8380 1488 7D       		.byte	0x7d
 8381 1489 10       		.sleb128 16
 8382 148a 03       		.byte	0x3
 8383 148b 91       		.byte	0x91
 8384 148c 18       		.sleb128 24
 8385 148d 06       		.byte	0x6
 8386 148e 16       		.uleb128 0x16
 8387 148f 02       		.byte	0x2
 8388 1490 7D       		.byte	0x7d
 8389 1491 14       		.sleb128 20
 8390 1492 03       		.byte	0x3
 8391 1493 91       		.byte	0x91
 8392 1494 1C       		.sleb128 28
 8393 1495 06       		.byte	0x6
 8394 1496 16       		.uleb128 0x16
 8395 1497 02       		.byte	0x2
 8396 1498 7D       		.byte	0x7d
 8397 1499 18       		.sleb128 24
 8398 149a 03       		.byte	0x3
 8399 149b 91       		.byte	0x91
 8400 149c 20       		.sleb128 32
 8401 149d 06       		.byte	0x6
 8402 149e 00       		.byte	0
 8403 149f 2D       		.uleb128 0x2d
 8404 14a0 9C000000 		.4byte	.LVL90
 8405 14a4 5F1B0000 		.4byte	0x1b5f
 8406 14a8 00       		.byte	0
 8407 14a9 2A       		.uleb128 0x2a
 8408 14aa 74380000 		.4byte	.LASF805
 8409 14ae 01       		.byte	0x1
 8410 14af 1401     		.2byte	0x114
 8411 14b1 0F       		.byte	0xf
 8412 14b2 01       		.byte	0x1
 8413 14b3 DA000000 		.4byte	0xda
 8414 14b7 00000000 		.4byte	.LFB9
 8415 14bb 98000000 		.4byte	.LFE9
 8416 14bf 71290000 		.4byte	.LLST20
 8417 14c3 01       		.byte	0x1
 8418 14c4 1D160000 		.4byte	0x161d
 8419 14c8 0F       		.uleb128 0xf
 8420 14c9 6F757400 		.ascii	"out\000"
 8421 14cd 01       		.byte	0x1
 8422 14ce 1401     		.2byte	0x114
 8423 14d0 27       		.byte	0x27
 8424 14d1 F2000000 		.4byte	0xf2
 8425 14d5 BD290000 		.4byte	.LLST21
 8426 14d9 B7290000 		.4byte	.LVUS21
 8427 14dd 17       		.uleb128 0x17
 8428 14de 721A0000 		.4byte	.LASF770
 8429 14e2 01       		.byte	0x1
 8430 14e3 1401     		.2byte	0x114
 8431 14e5 32       		.byte	0x32
 8432 14e6 E1020000 		.4byte	0x2e1
ARM GAS  /tmp/ccFy9xbE.s 			page 183


 8433 14ea EF290000 		.4byte	.LLST22
 8434 14ee E9290000 		.4byte	.LVUS22
 8435 14f2 0F       		.uleb128 0xf
 8436 14f3 69647800 		.ascii	"idx\000"
 8437 14f7 01       		.byte	0x1
 8438 14f8 1401     		.2byte	0x114
 8439 14fa 41       		.byte	0x41
 8440 14fb DA000000 		.4byte	0xda
 8441 14ff 212A0000 		.4byte	.LLST23
 8442 1503 1B2A0000 		.4byte	.LVUS23
 8443 1507 17       		.uleb128 0x17
 8444 1508 13260000 		.4byte	.LASF777
 8445 150c 01       		.byte	0x1
 8446 150d 1501     		.2byte	0x115
 8447 150f 21       		.byte	0x21
 8448 1510 DA000000 		.4byte	0xda
 8449 1514 532A0000 		.4byte	.LLST24
 8450 1518 4D2A0000 		.4byte	.LVUS24
 8451 151c 17       		.uleb128 0x17
 8452 151d 63140000 		.4byte	.LASF782
 8453 1521 01       		.byte	0x1
 8454 1522 1501     		.2byte	0x115
 8455 1524 37       		.byte	0x37
 8456 1525 68000000 		.4byte	0x68
 8457 1529 872A0000 		.4byte	.LLST25
 8458 152d 7F2A0000 		.4byte	.LVUS25
 8459 1531 17       		.uleb128 0x17
 8460 1532 5A140000 		.4byte	.LASF788
 8461 1536 01       		.byte	0x1
 8462 1537 1501     		.2byte	0x115
 8463 1539 43       		.byte	0x43
 8464 153a 470B0000 		.4byte	0xb47
 8465 153e C12A0000 		.4byte	.LLST26
 8466 1542 BD2A0000 		.4byte	.LVUS26
 8467 1546 17       		.uleb128 0x17
 8468 1547 85440000 		.4byte	.LASF781
 8469 154b 01       		.byte	0x1
 8470 154c 1601     		.2byte	0x116
 8471 154e 28       		.byte	0x28
 8472 154f 68000000 		.4byte	0x68
 8473 1553 E52A0000 		.4byte	.LLST27
 8474 1557 E12A0000 		.4byte	.LVUS27
 8475 155b 17       		.uleb128 0x17
 8476 155c 91460000 		.4byte	.LASF787
 8477 1560 01       		.byte	0x1
 8478 1561 1601     		.2byte	0x116
 8479 1563 3B       		.byte	0x3b
 8480 1564 8E000000 		.4byte	0x8e
 8481 1568 092B0000 		.4byte	.LLST28
 8482 156c 052B0000 		.4byte	.LVUS28
 8483 1570 17       		.uleb128 0x17
 8484 1571 F6250000 		.4byte	.LASF779
 8485 1575 01       		.byte	0x1
 8486 1576 1701     		.2byte	0x117
 8487 1578 27       		.byte	0x27
 8488 1579 8E000000 		.4byte	0x8e
 8489 157d 2D2B0000 		.4byte	.LLST29
ARM GAS  /tmp/ccFy9xbE.s 			page 184


 8490 1581 292B0000 		.4byte	.LVUS29
 8491 1585 17       		.uleb128 0x17
 8492 1586 0A170000 		.4byte	.LASF778
 8493 158a 01       		.byte	0x1
 8494 158b 1701     		.2byte	0x117
 8495 158d 3B       		.byte	0x3b
 8496 158e 8E000000 		.4byte	0x8e
 8497 1592 532B0000 		.4byte	.LLST30
 8498 1596 4D2B0000 		.4byte	.LVUS30
 8499 159a 12       		.uleb128 0x12
 8500 159b 62756600 		.ascii	"buf\000"
 8501 159f 01       		.byte	0x1
 8502 15a0 1801     		.2byte	0x118
 8503 15a2 08       		.byte	0x8
 8504 15a3 E4120000 		.4byte	0x12e4
 8505 15a7 03       		.byte	0x3
 8506 15a8 91       		.byte	0x91
 8507 15a9 B87F     		.sleb128 -72
 8508 15ab 14       		.uleb128 0x14
 8509 15ac 6C656E00 		.ascii	"len\000"
 8510 15b0 01       		.byte	0x1
 8511 15b1 1901     		.2byte	0x119
 8512 15b3 0A       		.byte	0xa
 8513 15b4 DA000000 		.4byte	0xda
 8514 15b8 892B0000 		.4byte	.LLST31
 8515 15bc 7D2B0000 		.4byte	.LVUS31
 8516 15c0 1C       		.uleb128 0x1c
 8517 15c1 00000000 		.4byte	.Ldebug_ranges0+0
 8518 15c5 DF150000 		.4byte	0x15df
 8519 15c9 1B       		.uleb128 0x1b
 8520 15ca 5C1B0000 		.4byte	.LASF804
 8521 15ce 01       		.byte	0x1
 8522 15cf 2301     		.2byte	0x123
 8523 15d1 12       		.byte	0x12
 8524 15d2 26010000 		.4byte	0x126
 8525 15d6 DD2B0000 		.4byte	.LLST32
 8526 15da D72B0000 		.4byte	.LVUS32
 8527 15de 00       		.byte	0
 8528 15df 15       		.uleb128 0x15
 8529 15e0 44000000 		.4byte	.LVL71
 8530 15e4 1D160000 		.4byte	0x161d
 8531 15e8 16       		.uleb128 0x16
 8532 15e9 02       		.byte	0x2
 8533 15ea 7D       		.byte	0x7d
 8534 15eb 00       		.sleb128 0
 8535 15ec 02       		.byte	0x2
 8536 15ed 7B       		.byte	0x7b
 8537 15ee 00       		.sleb128 0
 8538 15ef 16       		.uleb128 0x16
 8539 15f0 02       		.byte	0x2
 8540 15f1 7D       		.byte	0x7d
 8541 15f2 04       		.sleb128 4
 8542 15f3 02       		.byte	0x2
 8543 15f4 76       		.byte	0x76
 8544 15f5 00       		.sleb128 0
 8545 15f6 16       		.uleb128 0x16
 8546 15f7 02       		.byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 185


 8547 15f8 7D       		.byte	0x7d
 8548 15f9 08       		.sleb128 8
 8549 15fa 02       		.byte	0x2
 8550 15fb 74       		.byte	0x74
 8551 15fc 00       		.sleb128 0
 8552 15fd 16       		.uleb128 0x16
 8553 15fe 02       		.byte	0x2
 8554 15ff 7D       		.byte	0x7d
 8555 1600 0C       		.sleb128 12
 8556 1601 02       		.byte	0x2
 8557 1602 75       		.byte	0x75
 8558 1603 00       		.sleb128 0
 8559 1604 16       		.uleb128 0x16
 8560 1605 02       		.byte	0x2
 8561 1606 7D       		.byte	0x7d
 8562 1607 10       		.sleb128 16
 8563 1608 03       		.byte	0x3
 8564 1609 91       		.byte	0x91
 8565 160a 0C       		.sleb128 12
 8566 160b 06       		.byte	0x6
 8567 160c 16       		.uleb128 0x16
 8568 160d 02       		.byte	0x2
 8569 160e 7D       		.byte	0x7d
 8570 160f 14       		.sleb128 20
 8571 1610 03       		.byte	0x3
 8572 1611 91       		.byte	0x91
 8573 1612 10       		.sleb128 16
 8574 1613 06       		.byte	0x6
 8575 1614 16       		.uleb128 0x16
 8576 1615 02       		.byte	0x2
 8577 1616 7D       		.byte	0x7d
 8578 1617 18       		.sleb128 24
 8579 1618 02       		.byte	0x2
 8580 1619 7A       		.byte	0x7a
 8581 161a 00       		.sleb128 0
 8582 161b 00       		.byte	0
 8583 161c 00       		.byte	0
 8584 161d 31       		.uleb128 0x31
 8585 161e 8E170000 		.4byte	.LASF806
 8586 1622 01       		.byte	0x1
 8587 1623 DC       		.byte	0xdc
 8588 1624 0F       		.byte	0xf
 8589 1625 01       		.byte	0x1
 8590 1626 DA000000 		.4byte	0xda
 8591 162a 00000000 		.4byte	.LFB8
 8592 162e CE010000 		.4byte	.LFE8
 8593 1632 102C0000 		.4byte	.LLST8
 8594 1636 01       		.byte	0x1
 8595 1637 36170000 		.4byte	0x1736
 8596 163b 32       		.uleb128 0x32
 8597 163c 6F757400 		.ascii	"out\000"
 8598 1640 01       		.byte	0x1
 8599 1641 DC       		.byte	0xdc
 8600 1642 29       		.byte	0x29
 8601 1643 F2000000 		.4byte	0xf2
 8602 1647 862C0000 		.4byte	.LLST9
 8603 164b 782C0000 		.4byte	.LVUS9
ARM GAS  /tmp/ccFy9xbE.s 			page 186


 8604 164f 33       		.uleb128 0x33
 8605 1650 721A0000 		.4byte	.LASF770
 8606 1654 01       		.byte	0x1
 8607 1655 DC       		.byte	0xdc
 8608 1656 34       		.byte	0x34
 8609 1657 E1020000 		.4byte	0x2e1
 8610 165b F22C0000 		.4byte	.LLST10
 8611 165f E42C0000 		.4byte	.LVUS10
 8612 1663 32       		.uleb128 0x32
 8613 1664 69647800 		.ascii	"idx\000"
 8614 1668 01       		.byte	0x1
 8615 1669 DC       		.byte	0xdc
 8616 166a 43       		.byte	0x43
 8617 166b DA000000 		.4byte	0xda
 8618 166f 5E2D0000 		.4byte	.LLST11
 8619 1673 502D0000 		.4byte	.LVUS11
 8620 1677 33       		.uleb128 0x33
 8621 1678 13260000 		.4byte	.LASF777
 8622 167c 01       		.byte	0x1
 8623 167d DD       		.byte	0xdd
 8624 167e 23       		.byte	0x23
 8625 167f DA000000 		.4byte	0xda
 8626 1683 CA2D0000 		.4byte	.LLST12
 8627 1687 BC2D0000 		.4byte	.LVUS12
 8628 168b 32       		.uleb128 0x32
 8629 168c 62756600 		.ascii	"buf\000"
 8630 1690 01       		.byte	0x1
 8631 1691 DD       		.byte	0xdd
 8632 1692 31       		.byte	0x31
 8633 1693 E1020000 		.4byte	0x2e1
 8634 1697 342E0000 		.4byte	.LLST13
 8635 169b 282E0000 		.4byte	.LVUS13
 8636 169f 32       		.uleb128 0x32
 8637 16a0 6C656E00 		.ascii	"len\000"
 8638 16a4 01       		.byte	0x1
 8639 16a5 DD       		.byte	0xdd
 8640 16a6 3D       		.byte	0x3d
 8641 16a7 DA000000 		.4byte	0xda
 8642 16ab C22E0000 		.4byte	.LLST14
 8643 16af 842E0000 		.4byte	.LVUS14
 8644 16b3 33       		.uleb128 0x33
 8645 16b4 5A140000 		.4byte	.LASF788
 8646 16b8 01       		.byte	0x1
 8647 16b9 DD       		.byte	0xdd
 8648 16ba 47       		.byte	0x47
 8649 16bb 470B0000 		.4byte	0xb47
 8650 16bf 41300000 		.4byte	.LLST15
 8651 16c3 35300000 		.4byte	.LVUS15
 8652 16c7 33       		.uleb128 0x33
 8653 16c8 85440000 		.4byte	.LASF781
 8654 16cc 01       		.byte	0x1
 8655 16cd DE       		.byte	0xde
 8656 16ce 29       		.byte	0x29
 8657 16cf 8E000000 		.4byte	0x8e
 8658 16d3 9D300000 		.4byte	.LLST16
 8659 16d7 91300000 		.4byte	.LVUS16
 8660 16db 33       		.uleb128 0x33
ARM GAS  /tmp/ccFy9xbE.s 			page 187


 8661 16dc 91460000 		.4byte	.LASF787
 8662 16e0 01       		.byte	0x1
 8663 16e1 DE       		.byte	0xde
 8664 16e2 3C       		.byte	0x3c
 8665 16e3 8E000000 		.4byte	0x8e
 8666 16e7 F9300000 		.4byte	.LLST17
 8667 16eb ED300000 		.4byte	.LVUS17
 8668 16ef 33       		.uleb128 0x33
 8669 16f0 F6250000 		.4byte	.LASF779
 8670 16f4 01       		.byte	0x1
 8671 16f5 DF       		.byte	0xdf
 8672 16f6 29       		.byte	0x29
 8673 16f7 8E000000 		.4byte	0x8e
 8674 16fb 61310000 		.4byte	.LLST18
 8675 16ff 49310000 		.4byte	.LVUS18
 8676 1703 33       		.uleb128 0x33
 8677 1704 0A170000 		.4byte	.LASF778
 8678 1708 01       		.byte	0x1
 8679 1709 DF       		.byte	0xdf
 8680 170a 3D       		.byte	0x3d
 8681 170b 8E000000 		.4byte	0x8e
 8682 170f 00320000 		.4byte	.LLST19
 8683 1713 F4310000 		.4byte	.LVUS19
 8684 1717 2E       		.uleb128 0x2e
 8685 1718 B8000000 		.4byte	.LVL32
 8686 171c 01       		.byte	0x1
 8687 171d 36170000 		.4byte	0x1736
 8688 1721 2E       		.uleb128 0x2e
 8689 1722 00010000 		.4byte	.LVL41
 8690 1726 01       		.byte	0x1
 8691 1727 36170000 		.4byte	0x1736
 8692 172b 2E       		.uleb128 0x2e
 8693 172c 54010000 		.4byte	.LVL49
 8694 1730 01       		.byte	0x1
 8695 1731 36170000 		.4byte	0x1736
 8696 1735 00       		.byte	0
 8697 1736 31       		.uleb128 0x31
 8698 1737 21370000 		.4byte	.LASF807
 8699 173b 01       		.byte	0x1
 8700 173c C0       		.byte	0xc0
 8701 173d 0F       		.byte	0xf
 8702 173e 01       		.byte	0x1
 8703 173f DA000000 		.4byte	0xda
 8704 1743 00000000 		.4byte	.LFB7
 8705 1747 86000000 		.4byte	.LFE7
 8706 174b 50320000 		.4byte	.LLST0
 8707 174f 01       		.byte	0x1
 8708 1750 76180000 		.4byte	0x1876
 8709 1754 32       		.uleb128 0x32
 8710 1755 6F757400 		.ascii	"out\000"
 8711 1759 01       		.byte	0x1
 8712 175a C0       		.byte	0xc0
 8713 175b 25       		.byte	0x25
 8714 175c F2000000 		.4byte	0xf2
 8715 1760 78320000 		.4byte	.LLST1
 8716 1764 70320000 		.4byte	.LVUS1
 8717 1768 33       		.uleb128 0x33
ARM GAS  /tmp/ccFy9xbE.s 			page 188


 8718 1769 721A0000 		.4byte	.LASF770
 8719 176d 01       		.byte	0x1
 8720 176e C0       		.byte	0xc0
 8721 176f 30       		.byte	0x30
 8722 1770 E1020000 		.4byte	0x2e1
 8723 1774 B4320000 		.4byte	.LLST2
 8724 1778 AC320000 		.4byte	.LVUS2
 8725 177c 32       		.uleb128 0x32
 8726 177d 69647800 		.ascii	"idx\000"
 8727 1781 01       		.byte	0x1
 8728 1782 C0       		.byte	0xc0
 8729 1783 3F       		.byte	0x3f
 8730 1784 DA000000 		.4byte	0xda
 8731 1788 FC320000 		.4byte	.LLST3
 8732 178c E8320000 		.4byte	.LVUS3
 8733 1790 33       		.uleb128 0x33
 8734 1791 13260000 		.4byte	.LASF777
 8735 1795 01       		.byte	0x1
 8736 1796 C1       		.byte	0xc1
 8737 1797 1F       		.byte	0x1f
 8738 1798 DA000000 		.4byte	0xda
 8739 179c 78330000 		.4byte	.LLST4
 8740 17a0 74330000 		.4byte	.LVUS4
 8741 17a4 34       		.uleb128 0x34
 8742 17a5 62756600 		.ascii	"buf\000"
 8743 17a9 01       		.byte	0x1
 8744 17aa C1       		.byte	0xc1
 8745 17ab 33       		.byte	0x33
 8746 17ac 38020000 		.4byte	0x238
 8747 17b0 02       		.byte	0x2
 8748 17b1 91       		.byte	0x91
 8749 17b2 00       		.sleb128 0
 8750 17b3 32       		.uleb128 0x32
 8751 17b4 6C656E00 		.ascii	"len\000"
 8752 17b8 01       		.byte	0x1
 8753 17b9 C1       		.byte	0xc1
 8754 17ba 3F       		.byte	0x3f
 8755 17bb DA000000 		.4byte	0xda
 8756 17bf 9E330000 		.4byte	.LLST5
 8757 17c3 96330000 		.4byte	.LVUS5
 8758 17c7 35       		.uleb128 0x35
 8759 17c8 F6250000 		.4byte	.LASF779
 8760 17cc 01       		.byte	0x1
 8761 17cd C2       		.byte	0xc2
 8762 17ce 25       		.byte	0x25
 8763 17cf 8E000000 		.4byte	0x8e
 8764 17d3 02       		.byte	0x2
 8765 17d4 91       		.byte	0x91
 8766 17d5 08       		.sleb128 8
 8767 17d6 35       		.uleb128 0x35
 8768 17d7 0A170000 		.4byte	.LASF778
 8769 17db 01       		.byte	0x1
 8770 17dc C2       		.byte	0xc2
 8771 17dd 39       		.byte	0x39
 8772 17de 8E000000 		.4byte	0x8e
 8773 17e2 02       		.byte	0x2
 8774 17e3 91       		.byte	0x91
ARM GAS  /tmp/ccFy9xbE.s 			page 189


 8775 17e4 0C       		.sleb128 12
 8776 17e5 36       		.uleb128 0x36
 8777 17e6 39120000 		.4byte	.LASF794
 8778 17ea 01       		.byte	0x1
 8779 17eb C3       		.byte	0xc3
 8780 17ec 10       		.byte	0x10
 8781 17ed E6000000 		.4byte	0xe6
 8782 17f1 E9330000 		.4byte	.LLST6
 8783 17f5 E3330000 		.4byte	.LVUS6
 8784 17f9 1E       		.uleb128 0x1e
 8785 17fa 16000000 		.4byte	.LBB20
 8786 17fe 3C000000 		.4byte	.LBE20
 8787 1802 37180000 		.4byte	0x1837
 8788 1806 37       		.uleb128 0x37
 8789 1807 6900     		.ascii	"i\000"
 8790 1809 01       		.byte	0x1
 8791 180a C7       		.byte	0xc7
 8792 180b 11       		.byte	0x11
 8793 180c DA000000 		.4byte	0xda
 8794 1810 17340000 		.4byte	.LLST7
 8795 1814 15340000 		.4byte	.LVUS7
 8796 1818 21       		.uleb128 0x21
 8797 1819 34000000 		.4byte	.LVL9
 8798 181d 16       		.uleb128 0x16
 8799 181e 01       		.byte	0x1
 8800 181f 50       		.byte	0x50
 8801 1820 02       		.byte	0x2
 8802 1821 08       		.byte	0x8
 8803 1822 20       		.byte	0x20
 8804 1823 16       		.uleb128 0x16
 8805 1824 01       		.byte	0x1
 8806 1825 51       		.byte	0x51
 8807 1826 02       		.byte	0x2
 8808 1827 7B       		.byte	0x7b
 8809 1828 00       		.sleb128 0
 8810 1829 16       		.uleb128 0x16
 8811 182a 01       		.byte	0x1
 8812 182b 52       		.byte	0x52
 8813 182c 02       		.byte	0x2
 8814 182d 74       		.byte	0x74
 8815 182e 7F       		.sleb128 -1
 8816 182f 16       		.uleb128 0x16
 8817 1830 01       		.byte	0x1
 8818 1831 53       		.byte	0x53
 8819 1832 02       		.byte	0x2
 8820 1833 7A       		.byte	0x7a
 8821 1834 00       		.sleb128 0
 8822 1835 00       		.byte	0
 8823 1836 00       		.byte	0
 8824 1837 20       		.uleb128 0x20
 8825 1838 56000000 		.4byte	.LVL15
 8826 183c 57180000 		.4byte	0x1857
 8827 1840 16       		.uleb128 0x16
 8828 1841 01       		.byte	0x1
 8829 1842 51       		.byte	0x51
 8830 1843 02       		.byte	0x2
 8831 1844 7B       		.byte	0x7b
ARM GAS  /tmp/ccFy9xbE.s 			page 190


 8832 1845 00       		.sleb128 0
 8833 1846 16       		.uleb128 0x16
 8834 1847 01       		.byte	0x1
 8835 1848 52       		.byte	0x52
 8836 1849 06       		.byte	0x6
 8837 184a 74       		.byte	0x74
 8838 184b 00       		.sleb128 0
 8839 184c 20       		.byte	0x20
 8840 184d 79       		.byte	0x79
 8841 184e 00       		.sleb128 0
 8842 184f 22       		.byte	0x22
 8843 1850 16       		.uleb128 0x16
 8844 1851 01       		.byte	0x1
 8845 1852 53       		.byte	0x53
 8846 1853 02       		.byte	0x2
 8847 1854 7A       		.byte	0x7a
 8848 1855 00       		.sleb128 0
 8849 1856 00       		.byte	0
 8850 1857 21       		.uleb128 0x21
 8851 1858 7C000000 		.4byte	.LVL20
 8852 185c 16       		.uleb128 0x16
 8853 185d 01       		.byte	0x1
 8854 185e 50       		.byte	0x50
 8855 185f 02       		.byte	0x2
 8856 1860 08       		.byte	0x8
 8857 1861 20       		.byte	0x20
 8858 1862 16       		.uleb128 0x16
 8859 1863 01       		.byte	0x1
 8860 1864 51       		.byte	0x51
 8861 1865 02       		.byte	0x2
 8862 1866 7B       		.byte	0x7b
 8863 1867 00       		.sleb128 0
 8864 1868 16       		.uleb128 0x16
 8865 1869 01       		.byte	0x1
 8866 186a 52       		.byte	0x52
 8867 186b 02       		.byte	0x2
 8868 186c 75       		.byte	0x75
 8869 186d 7F       		.sleb128 -1
 8870 186e 16       		.uleb128 0x16
 8871 186f 01       		.byte	0x1
 8872 1870 53       		.byte	0x53
 8873 1871 02       		.byte	0x2
 8874 1872 7A       		.byte	0x7a
 8875 1873 00       		.sleb128 0
 8876 1874 00       		.byte	0
 8877 1875 00       		.byte	0
 8878 1876 38       		.uleb128 0x38
 8879 1877 3D010000 		.4byte	.LASF808
 8880 187b 01       		.byte	0x1
 8881 187c B7       		.byte	0xb7
 8882 187d 15       		.byte	0x15
 8883 187e 01       		.byte	0x1
 8884 187f 8E000000 		.4byte	0x8e
 8885 1883 01       		.byte	0x1
 8886 1884 9F180000 		.4byte	0x189f
 8887 1888 39       		.uleb128 0x39
 8888 1889 73747200 		.ascii	"str\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 191


 8889 188d 01       		.byte	0x1
 8890 188e B7       		.byte	0xb7
 8891 188f 28       		.byte	0x28
 8892 1890 9F180000 		.4byte	0x189f
 8893 1894 3A       		.uleb128 0x3a
 8894 1895 6900     		.ascii	"i\000"
 8895 1897 01       		.byte	0x1
 8896 1898 B8       		.byte	0xb8
 8897 1899 10       		.byte	0x10
 8898 189a 8E000000 		.4byte	0x8e
 8899 189e 00       		.byte	0
 8900 189f 09       		.uleb128 0x9
 8901 18a0 04       		.byte	0x4
 8902 18a1 38020000 		.4byte	0x238
 8903 18a5 38       		.uleb128 0x38
 8904 18a6 8A260000 		.4byte	.LASF809
 8905 18aa 01       		.byte	0x1
 8906 18ab B4       		.byte	0xb4
 8907 18ac 14       		.byte	0x14
 8908 18ad 01       		.byte	0x1
 8909 18ae 470B0000 		.4byte	0xb47
 8910 18b2 03       		.byte	0x3
 8911 18b3 C3180000 		.4byte	0x18c3
 8912 18b7 39       		.uleb128 0x39
 8913 18b8 636800   		.ascii	"ch\000"
 8914 18bb 01       		.byte	0x1
 8915 18bc B4       		.byte	0xb4
 8916 18bd 23       		.byte	0x23
 8917 18be 1F010000 		.4byte	0x11f
 8918 18c2 00       		.byte	0
 8919 18c3 38       		.uleb128 0x38
 8920 18c4 B0170000 		.4byte	.LASF810
 8921 18c8 01       		.byte	0x1
 8922 18c9 AB       		.byte	0xab
 8923 18ca 1C       		.byte	0x1c
 8924 18cb 01       		.byte	0x1
 8925 18cc 8E000000 		.4byte	0x8e
 8926 18d0 03       		.byte	0x3
 8927 18d1 F8180000 		.4byte	0x18f8
 8928 18d5 39       		.uleb128 0x39
 8929 18d6 73747200 		.ascii	"str\000"
 8930 18da 01       		.byte	0x1
 8931 18db AB       		.byte	0xab
 8932 18dc 33       		.byte	0x33
 8933 18dd 38020000 		.4byte	0x238
 8934 18e1 3B       		.uleb128 0x3b
 8935 18e2 152E0000 		.4byte	.LASF811
 8936 18e6 01       		.byte	0x1
 8937 18e7 AB       		.byte	0xab
 8938 18e8 3F       		.byte	0x3f
 8939 18e9 DA000000 		.4byte	0xda
 8940 18ed 3A       		.uleb128 0x3a
 8941 18ee 7300     		.ascii	"s\000"
 8942 18f0 01       		.byte	0x1
 8943 18f1 AC       		.byte	0xac
 8944 18f2 0F       		.byte	0xf
 8945 18f3 38020000 		.4byte	0x238
ARM GAS  /tmp/ccFy9xbE.s 			page 192


 8946 18f7 00       		.byte	0
 8947 18f8 3C       		.uleb128 0x3c
 8948 18f9 8A020000 		.4byte	.LASF831
 8949 18fd 01       		.byte	0x1
 8950 18fe 9D       		.byte	0x9d
 8951 18ff 14       		.byte	0x14
 8952 1900 01       		.byte	0x1
 8953 1901 03       		.byte	0x3
 8954 1902 37190000 		.4byte	0x1937
 8955 1906 3B       		.uleb128 0x3b
 8956 1907 36460000 		.4byte	.LASF812
 8957 190b 01       		.byte	0x1
 8958 190c 9D       		.byte	0x9d
 8959 190d 22       		.byte	0x22
 8960 190e 1F010000 		.4byte	0x11f
 8961 1912 3B       		.uleb128 0x3b
 8962 1913 721A0000 		.4byte	.LASF770
 8963 1917 01       		.byte	0x1
 8964 1918 9D       		.byte	0x9d
 8965 1919 33       		.byte	0x33
 8966 191a CC000000 		.4byte	0xcc
 8967 191e 39       		.uleb128 0x39
 8968 191f 69647800 		.ascii	"idx\000"
 8969 1923 01       		.byte	0x1
 8970 1924 9D       		.byte	0x9d
 8971 1925 42       		.byte	0x42
 8972 1926 DA000000 		.4byte	0xda
 8973 192a 3B       		.uleb128 0x3b
 8974 192b 13260000 		.4byte	.LASF777
 8975 192f 01       		.byte	0x1
 8976 1930 9E       		.byte	0x9e
 8977 1931 24       		.byte	0x24
 8978 1932 DA000000 		.4byte	0xda
 8979 1936 00       		.byte	0
 8980 1937 3D       		.uleb128 0x3d
 8981 1938 D20D0000 		.4byte	.LASF813
 8982 193c 01       		.byte	0x1
 8983 193d 92       		.byte	0x92
 8984 193e 14       		.byte	0x14
 8985 193f 01       		.byte	0x1
 8986 1940 00000000 		.4byte	.LFB2
 8987 1944 08000000 		.4byte	.LFE2
 8988 1948 02       		.byte	0x2
 8989 1949 7D       		.byte	0x7d
 8990 194a 00       		.sleb128 0
 8991 194b 01       		.byte	0x1
 8992 194c AB190000 		.4byte	0x19ab
 8993 1950 33       		.uleb128 0x33
 8994 1951 36460000 		.4byte	.LASF812
 8995 1955 01       		.byte	0x1
 8996 1956 92       		.byte	0x92
 8997 1957 23       		.byte	0x23
 8998 1958 1F010000 		.4byte	0x11f
 8999 195c 2F340000 		.4byte	.LLST80
 9000 1960 2B340000 		.4byte	.LVUS80
 9001 1964 33       		.uleb128 0x33
 9002 1965 721A0000 		.4byte	.LASF770
ARM GAS  /tmp/ccFy9xbE.s 			page 193


 9003 1969 01       		.byte	0x1
 9004 196a 92       		.byte	0x92
 9005 196b 34       		.byte	0x34
 9006 196c CC000000 		.4byte	0xcc
 9007 1970 54340000 		.4byte	.LLST81
 9008 1974 50340000 		.4byte	.LVUS81
 9009 1978 32       		.uleb128 0x32
 9010 1979 69647800 		.ascii	"idx\000"
 9011 197d 01       		.byte	0x1
 9012 197e 92       		.byte	0x92
 9013 197f 43       		.byte	0x43
 9014 1980 DA000000 		.4byte	0xda
 9015 1984 79340000 		.4byte	.LLST82
 9016 1988 75340000 		.4byte	.LVUS82
 9017 198c 33       		.uleb128 0x33
 9018 198d 13260000 		.4byte	.LASF777
 9019 1991 01       		.byte	0x1
 9020 1992 93       		.byte	0x93
 9021 1993 25       		.byte	0x25
 9022 1994 DA000000 		.4byte	0xda
 9023 1998 9E340000 		.4byte	.LLST83
 9024 199c 9A340000 		.4byte	.LVUS83
 9025 19a0 2E       		.uleb128 0x2e
 9026 19a1 08000000 		.4byte	.LVL315
 9027 19a5 01       		.byte	0x1
 9028 19a6 6A1B0000 		.4byte	0x1b6a
 9029 19aa 00       		.byte	0
 9030 19ab 3D       		.uleb128 0x3d
 9031 19ac F5340000 		.4byte	.LASF814
 9032 19b0 01       		.byte	0x1
 9033 19b1 89       		.byte	0x89
 9034 19b2 14       		.byte	0x14
 9035 19b3 01       		.byte	0x1
 9036 19b4 00000000 		.4byte	.LFB1
 9037 19b8 02000000 		.4byte	.LFE1
 9038 19bc 02       		.byte	0x2
 9039 19bd 7D       		.byte	0x7d
 9040 19be 00       		.sleb128 0
 9041 19bf 01       		.byte	0x1
 9042 19c0 FD190000 		.4byte	0x19fd
 9043 19c4 35       		.uleb128 0x35
 9044 19c5 36460000 		.4byte	.LASF812
 9045 19c9 01       		.byte	0x1
 9046 19ca 89       		.byte	0x89
 9047 19cb 23       		.byte	0x23
 9048 19cc 1F010000 		.4byte	0x11f
 9049 19d0 01       		.byte	0x1
 9050 19d1 50       		.byte	0x50
 9051 19d2 35       		.uleb128 0x35
 9052 19d3 721A0000 		.4byte	.LASF770
 9053 19d7 01       		.byte	0x1
 9054 19d8 89       		.byte	0x89
 9055 19d9 34       		.byte	0x34
 9056 19da CC000000 		.4byte	0xcc
 9057 19de 01       		.byte	0x1
 9058 19df 51       		.byte	0x51
 9059 19e0 34       		.uleb128 0x34
ARM GAS  /tmp/ccFy9xbE.s 			page 194


 9060 19e1 69647800 		.ascii	"idx\000"
 9061 19e5 01       		.byte	0x1
 9062 19e6 89       		.byte	0x89
 9063 19e7 43       		.byte	0x43
 9064 19e8 DA000000 		.4byte	0xda
 9065 19ec 01       		.byte	0x1
 9066 19ed 52       		.byte	0x52
 9067 19ee 35       		.uleb128 0x35
 9068 19ef 13260000 		.4byte	.LASF777
 9069 19f3 01       		.byte	0x1
 9070 19f4 8A       		.byte	0x8a
 9071 19f5 25       		.byte	0x25
 9072 19f6 DA000000 		.4byte	0xda
 9073 19fa 01       		.byte	0x1
 9074 19fb 53       		.byte	0x53
 9075 19fc 00       		.byte	0
 9076 19fd 3D       		.uleb128 0x3d
 9077 19fe 07030000 		.4byte	.LASF815
 9078 1a02 01       		.byte	0x1
 9079 1a03 81       		.byte	0x81
 9080 1a04 14       		.byte	0x14
 9081 1a05 01       		.byte	0x1
 9082 1a06 00000000 		.4byte	.LFB0
 9083 1a0a 08000000 		.4byte	.LFE0
 9084 1a0e 02       		.byte	0x2
 9085 1a0f 7D       		.byte	0x7d
 9086 1a10 00       		.sleb128 0
 9087 1a11 01       		.byte	0x1
 9088 1a12 4F1A0000 		.4byte	0x1a4f
 9089 1a16 35       		.uleb128 0x35
 9090 1a17 36460000 		.4byte	.LASF812
 9091 1a1b 01       		.byte	0x1
 9092 1a1c 81       		.byte	0x81
 9093 1a1d 25       		.byte	0x25
 9094 1a1e 1F010000 		.4byte	0x11f
 9095 1a22 01       		.byte	0x1
 9096 1a23 50       		.byte	0x50
 9097 1a24 35       		.uleb128 0x35
 9098 1a25 721A0000 		.4byte	.LASF770
 9099 1a29 01       		.byte	0x1
 9100 1a2a 81       		.byte	0x81
 9101 1a2b 36       		.byte	0x36
 9102 1a2c CC000000 		.4byte	0xcc
 9103 1a30 01       		.byte	0x1
 9104 1a31 51       		.byte	0x51
 9105 1a32 34       		.uleb128 0x34
 9106 1a33 69647800 		.ascii	"idx\000"
 9107 1a37 01       		.byte	0x1
 9108 1a38 81       		.byte	0x81
 9109 1a39 45       		.byte	0x45
 9110 1a3a DA000000 		.4byte	0xda
 9111 1a3e 01       		.byte	0x1
 9112 1a3f 52       		.byte	0x52
 9113 1a40 35       		.uleb128 0x35
 9114 1a41 13260000 		.4byte	.LASF777
 9115 1a45 01       		.byte	0x1
 9116 1a46 82       		.byte	0x82
ARM GAS  /tmp/ccFy9xbE.s 			page 195


 9117 1a47 27       		.byte	0x27
 9118 1a48 DA000000 		.4byte	0xda
 9119 1a4c 01       		.byte	0x1
 9120 1a4d 53       		.byte	0x53
 9121 1a4e 00       		.byte	0
 9122 1a4f 3E       		.uleb128 0x3e
 9123 1a50 F8180000 		.4byte	0x18f8
 9124 1a54 00000000 		.4byte	.LFB3
 9125 1a58 0A000000 		.4byte	.LFE3
 9126 1a5c 02       		.byte	0x2
 9127 1a5d 7D       		.byte	0x7d
 9128 1a5e 00       		.sleb128 0
 9129 1a5f DB1A0000 		.4byte	0x1adb
 9130 1a63 23       		.uleb128 0x23
 9131 1a64 06190000 		.4byte	0x1906
 9132 1a68 C5340000 		.4byte	.LLST84
 9133 1a6c BF340000 		.4byte	.LVUS84
 9134 1a70 23       		.uleb128 0x23
 9135 1a71 12190000 		.4byte	0x1912
 9136 1a75 F7340000 		.4byte	.LLST85
 9137 1a79 F1340000 		.4byte	.LVUS85
 9138 1a7d 23       		.uleb128 0x23
 9139 1a7e 1E190000 		.4byte	0x191e
 9140 1a82 29350000 		.4byte	.LLST86
 9141 1a86 23350000 		.4byte	.LVUS86
 9142 1a8a 23       		.uleb128 0x23
 9143 1a8b 2A190000 		.4byte	0x192a
 9144 1a8f 5B350000 		.4byte	.LLST87
 9145 1a93 55350000 		.4byte	.LVUS87
 9146 1a97 29       		.uleb128 0x29
 9147 1a98 F8180000 		.4byte	0x18f8
 9148 1a9c 02000000 		.4byte	.LBI33
 9149 1aa0 0000     		.2byte	.LVU684
 9150 1aa2 02000000 		.4byte	.LBB33
 9151 1aa6 08000000 		.4byte	.LBE33
 9152 1aaa 01       		.byte	0x1
 9153 1aab 9D       		.byte	0x9d
 9154 1aac 14       		.byte	0x14
 9155 1aad 23       		.uleb128 0x23
 9156 1aae 1E190000 		.4byte	0x191e
 9157 1ab2 8B350000 		.4byte	.LLST88
 9158 1ab6 87350000 		.4byte	.LVUS88
 9159 1aba 23       		.uleb128 0x23
 9160 1abb 2A190000 		.4byte	0x192a
 9161 1abf B0350000 		.4byte	.LLST89
 9162 1ac3 AC350000 		.4byte	.LVUS89
 9163 1ac7 23       		.uleb128 0x23
 9164 1ac8 12190000 		.4byte	0x1912
 9165 1acc D5350000 		.4byte	.LLST90
 9166 1ad0 D1350000 		.4byte	.LVUS90
 9167 1ad4 24       		.uleb128 0x24
 9168 1ad5 06190000 		.4byte	0x1906
 9169 1ad9 00       		.byte	0
 9170 1ada 00       		.byte	0
 9171 1adb 3F       		.uleb128 0x3f
 9172 1adc 01       		.byte	0x1
 9173 1add 01       		.byte	0x1
ARM GAS  /tmp/ccFy9xbE.s 			page 196


 9174 1ade C3090000 		.4byte	.LASF816
 9175 1ae2 C3090000 		.4byte	.LASF816
 9176 1ae6 3F       		.uleb128 0x3f
 9177 1ae7 01       		.byte	0x1
 9178 1ae8 01       		.byte	0x1
 9179 1ae9 4A100000 		.4byte	.LASF817
 9180 1aed 4A100000 		.4byte	.LASF817
 9181 1af1 3F       		.uleb128 0x3f
 9182 1af2 01       		.byte	0x1
 9183 1af3 01       		.byte	0x1
 9184 1af4 4B140000 		.4byte	.LASF818
 9185 1af8 4B140000 		.4byte	.LASF818
 9186 1afc 3F       		.uleb128 0x3f
 9187 1afd 01       		.byte	0x1
 9188 1afe 01       		.byte	0x1
 9189 1aff B7460000 		.4byte	.LASF819
 9190 1b03 B7460000 		.4byte	.LASF819
 9191 1b07 3F       		.uleb128 0x3f
 9192 1b08 01       		.byte	0x1
 9193 1b09 01       		.byte	0x1
 9194 1b0a B82A0000 		.4byte	.LASF820
 9195 1b0e B82A0000 		.4byte	.LASF820
 9196 1b12 3F       		.uleb128 0x3f
 9197 1b13 01       		.byte	0x1
 9198 1b14 01       		.byte	0x1
 9199 1b15 382C0000 		.4byte	.LASF821
 9200 1b19 382C0000 		.4byte	.LASF821
 9201 1b1d 3F       		.uleb128 0x3f
 9202 1b1e 01       		.byte	0x1
 9203 1b1f 01       		.byte	0x1
 9204 1b20 06390000 		.4byte	.LASF822
 9205 1b24 06390000 		.4byte	.LASF822
 9206 1b28 3F       		.uleb128 0x3f
 9207 1b29 01       		.byte	0x1
 9208 1b2a 01       		.byte	0x1
 9209 1b2b 1F160000 		.4byte	.LASF823
 9210 1b2f 1F160000 		.4byte	.LASF823
 9211 1b33 3F       		.uleb128 0x3f
 9212 1b34 01       		.byte	0x1
 9213 1b35 01       		.byte	0x1
 9214 1b36 C61A0000 		.4byte	.LASF824
 9215 1b3a C61A0000 		.4byte	.LASF824
 9216 1b3e 3F       		.uleb128 0x3f
 9217 1b3f 01       		.byte	0x1
 9218 1b40 01       		.byte	0x1
 9219 1b41 3B100000 		.4byte	.LASF825
 9220 1b45 3B100000 		.4byte	.LASF825
 9221 1b49 3F       		.uleb128 0x3f
 9222 1b4a 01       		.byte	0x1
 9223 1b4b 01       		.byte	0x1
 9224 1b4c 32260000 		.4byte	.LASF826
 9225 1b50 32260000 		.4byte	.LASF826
 9226 1b54 3F       		.uleb128 0x3f
 9227 1b55 01       		.byte	0x1
 9228 1b56 01       		.byte	0x1
 9229 1b57 FC0A0000 		.4byte	.LASF827
 9230 1b5b FC0A0000 		.4byte	.LASF827
ARM GAS  /tmp/ccFy9xbE.s 			page 197


 9231 1b5f 3F       		.uleb128 0x3f
 9232 1b60 01       		.byte	0x1
 9233 1b61 01       		.byte	0x1
 9234 1b62 60290000 		.4byte	.LASF828
 9235 1b66 60290000 		.4byte	.LASF828
 9236 1b6a 40       		.uleb128 0x40
 9237 1b6b 01       		.byte	0x1
 9238 1b6c 01       		.byte	0x1
 9239 1b6d 49380000 		.4byte	.LASF832
 9240 1b71 49380000 		.4byte	.LASF832
 9241 1b75 06       		.byte	0x6
 9242 1b76 30       		.byte	0x30
 9243 1b77 06       		.byte	0x6
 9244 1b78 00       		.byte	0
 9245              		.section	.debug_abbrev,"",%progbits
 9246              	.Ldebug_abbrev0:
 9247 0000 01       		.uleb128 0x1
 9248 0001 11       		.uleb128 0x11
 9249 0002 01       		.byte	0x1
 9250 0003 25       		.uleb128 0x25
 9251 0004 0E       		.uleb128 0xe
 9252 0005 13       		.uleb128 0x13
 9253 0006 0B       		.uleb128 0xb
 9254 0007 03       		.uleb128 0x3
 9255 0008 0E       		.uleb128 0xe
 9256 0009 1B       		.uleb128 0x1b
 9257 000a 0E       		.uleb128 0xe
 9258 000b 55       		.uleb128 0x55
 9259 000c 06       		.uleb128 0x6
 9260 000d 11       		.uleb128 0x11
 9261 000e 01       		.uleb128 0x1
 9262 000f 52       		.uleb128 0x52
 9263 0010 01       		.uleb128 0x1
 9264 0011 10       		.uleb128 0x10
 9265 0012 06       		.uleb128 0x6
 9266 0013 9942     		.uleb128 0x2119
 9267 0015 06       		.uleb128 0x6
 9268 0016 00       		.byte	0
 9269 0017 00       		.byte	0
 9270 0018 02       		.uleb128 0x2
 9271 0019 24       		.uleb128 0x24
 9272 001a 00       		.byte	0
 9273 001b 0B       		.uleb128 0xb
 9274 001c 0B       		.uleb128 0xb
 9275 001d 3E       		.uleb128 0x3e
 9276 001e 0B       		.uleb128 0xb
 9277 001f 03       		.uleb128 0x3
 9278 0020 0E       		.uleb128 0xe
 9279 0021 00       		.byte	0
 9280 0022 00       		.byte	0
 9281 0023 03       		.uleb128 0x3
 9282 0024 26       		.uleb128 0x26
 9283 0025 00       		.byte	0
 9284 0026 49       		.uleb128 0x49
 9285 0027 13       		.uleb128 0x13
 9286 0028 00       		.byte	0
 9287 0029 00       		.byte	0
ARM GAS  /tmp/ccFy9xbE.s 			page 198


 9288 002a 04       		.uleb128 0x4
 9289 002b 16       		.uleb128 0x16
 9290 002c 00       		.byte	0
 9291 002d 03       		.uleb128 0x3
 9292 002e 0E       		.uleb128 0xe
 9293 002f 3A       		.uleb128 0x3a
 9294 0030 0B       		.uleb128 0xb
 9295 0031 3B       		.uleb128 0x3b
 9296 0032 0B       		.uleb128 0xb
 9297 0033 39       		.uleb128 0x39
 9298 0034 0B       		.uleb128 0xb
 9299 0035 49       		.uleb128 0x49
 9300 0036 13       		.uleb128 0x13
 9301 0037 00       		.byte	0
 9302 0038 00       		.byte	0
 9303 0039 05       		.uleb128 0x5
 9304 003a 24       		.uleb128 0x24
 9305 003b 00       		.byte	0
 9306 003c 0B       		.uleb128 0xb
 9307 003d 0B       		.uleb128 0xb
 9308 003e 3E       		.uleb128 0x3e
 9309 003f 0B       		.uleb128 0xb
 9310 0040 03       		.uleb128 0x3
 9311 0041 08       		.uleb128 0x8
 9312 0042 00       		.byte	0
 9313 0043 00       		.byte	0
 9314 0044 06       		.uleb128 0x6
 9315 0045 13       		.uleb128 0x13
 9316 0046 01       		.byte	0x1
 9317 0047 03       		.uleb128 0x3
 9318 0048 0E       		.uleb128 0xe
 9319 0049 0B       		.uleb128 0xb
 9320 004a 0B       		.uleb128 0xb
 9321 004b 3A       		.uleb128 0x3a
 9322 004c 0B       		.uleb128 0xb
 9323 004d 3B       		.uleb128 0x3b
 9324 004e 0B       		.uleb128 0xb
 9325 004f 01       		.uleb128 0x1
 9326 0050 13       		.uleb128 0x13
 9327 0051 00       		.byte	0
 9328 0052 00       		.byte	0
 9329 0053 07       		.uleb128 0x7
 9330 0054 0D       		.uleb128 0xd
 9331 0055 00       		.byte	0
 9332 0056 03       		.uleb128 0x3
 9333 0057 0E       		.uleb128 0xe
 9334 0058 49       		.uleb128 0x49
 9335 0059 13       		.uleb128 0x13
 9336 005a 38       		.uleb128 0x38
 9337 005b 0A       		.uleb128 0xa
 9338 005c 34       		.uleb128 0x34
 9339 005d 0C       		.uleb128 0xc
 9340 005e 00       		.byte	0
 9341 005f 00       		.byte	0
 9342 0060 08       		.uleb128 0x8
 9343 0061 0F       		.uleb128 0xf
 9344 0062 00       		.byte	0
ARM GAS  /tmp/ccFy9xbE.s 			page 199


 9345 0063 0B       		.uleb128 0xb
 9346 0064 0B       		.uleb128 0xb
 9347 0065 00       		.byte	0
 9348 0066 00       		.byte	0
 9349 0067 09       		.uleb128 0x9
 9350 0068 0F       		.uleb128 0xf
 9351 0069 00       		.byte	0
 9352 006a 0B       		.uleb128 0xb
 9353 006b 0B       		.uleb128 0xb
 9354 006c 49       		.uleb128 0x49
 9355 006d 13       		.uleb128 0x13
 9356 006e 00       		.byte	0
 9357 006f 00       		.byte	0
 9358 0070 0A       		.uleb128 0xa
 9359 0071 15       		.uleb128 0x15
 9360 0072 01       		.byte	0x1
 9361 0073 27       		.uleb128 0x27
 9362 0074 0C       		.uleb128 0xc
 9363 0075 01       		.uleb128 0x1
 9364 0076 13       		.uleb128 0x13
 9365 0077 00       		.byte	0
 9366 0078 00       		.byte	0
 9367 0079 0B       		.uleb128 0xb
 9368 007a 05       		.uleb128 0x5
 9369 007b 00       		.byte	0
 9370 007c 49       		.uleb128 0x49
 9371 007d 13       		.uleb128 0x13
 9372 007e 00       		.byte	0
 9373 007f 00       		.byte	0
 9374 0080 0C       		.uleb128 0xc
 9375 0081 13       		.uleb128 0x13
 9376 0082 01       		.byte	0x1
 9377 0083 0B       		.uleb128 0xb
 9378 0084 0B       		.uleb128 0xb
 9379 0085 3A       		.uleb128 0x3a
 9380 0086 0B       		.uleb128 0xb
 9381 0087 3B       		.uleb128 0x3b
 9382 0088 0B       		.uleb128 0xb
 9383 0089 39       		.uleb128 0x39
 9384 008a 0B       		.uleb128 0xb
 9385 008b 01       		.uleb128 0x1
 9386 008c 13       		.uleb128 0x13
 9387 008d 00       		.byte	0
 9388 008e 00       		.byte	0
 9389 008f 0D       		.uleb128 0xd
 9390 0090 0D       		.uleb128 0xd
 9391 0091 00       		.byte	0
 9392 0092 03       		.uleb128 0x3
 9393 0093 08       		.uleb128 0x8
 9394 0094 3A       		.uleb128 0x3a
 9395 0095 0B       		.uleb128 0xb
 9396 0096 3B       		.uleb128 0x3b
 9397 0097 0B       		.uleb128 0xb
 9398 0098 39       		.uleb128 0x39
 9399 0099 0B       		.uleb128 0xb
 9400 009a 49       		.uleb128 0x49
 9401 009b 13       		.uleb128 0x13
ARM GAS  /tmp/ccFy9xbE.s 			page 200


 9402 009c 38       		.uleb128 0x38
 9403 009d 0A       		.uleb128 0xa
 9404 009e 00       		.byte	0
 9405 009f 00       		.byte	0
 9406 00a0 0E       		.uleb128 0xe
 9407 00a1 2E       		.uleb128 0x2e
 9408 00a2 01       		.byte	0x1
 9409 00a3 3F       		.uleb128 0x3f
 9410 00a4 0C       		.uleb128 0xc
 9411 00a5 03       		.uleb128 0x3
 9412 00a6 0E       		.uleb128 0xe
 9413 00a7 3A       		.uleb128 0x3a
 9414 00a8 0B       		.uleb128 0xb
 9415 00a9 3B       		.uleb128 0x3b
 9416 00aa 05       		.uleb128 0x5
 9417 00ab 39       		.uleb128 0x39
 9418 00ac 0B       		.uleb128 0xb
 9419 00ad 27       		.uleb128 0x27
 9420 00ae 0C       		.uleb128 0xc
 9421 00af 49       		.uleb128 0x49
 9422 00b0 13       		.uleb128 0x13
 9423 00b1 11       		.uleb128 0x11
 9424 00b2 01       		.uleb128 0x1
 9425 00b3 12       		.uleb128 0x12
 9426 00b4 01       		.uleb128 0x1
 9427 00b5 40       		.uleb128 0x40
 9428 00b6 06       		.uleb128 0x6
 9429 00b7 9742     		.uleb128 0x2117
 9430 00b9 0C       		.uleb128 0xc
 9431 00ba 01       		.uleb128 0x1
 9432 00bb 13       		.uleb128 0x13
 9433 00bc 00       		.byte	0
 9434 00bd 00       		.byte	0
 9435 00be 0F       		.uleb128 0xf
 9436 00bf 05       		.uleb128 0x5
 9437 00c0 00       		.byte	0
 9438 00c1 03       		.uleb128 0x3
 9439 00c2 08       		.uleb128 0x8
 9440 00c3 3A       		.uleb128 0x3a
 9441 00c4 0B       		.uleb128 0xb
 9442 00c5 3B       		.uleb128 0x3b
 9443 00c6 05       		.uleb128 0x5
 9444 00c7 39       		.uleb128 0x39
 9445 00c8 0B       		.uleb128 0xb
 9446 00c9 49       		.uleb128 0x49
 9447 00ca 13       		.uleb128 0x13
 9448 00cb 02       		.uleb128 0x2
 9449 00cc 06       		.uleb128 0x6
 9450 00cd B742     		.uleb128 0x2137
 9451 00cf 06       		.uleb128 0x6
 9452 00d0 00       		.byte	0
 9453 00d1 00       		.byte	0
 9454 00d2 10       		.uleb128 0x10
 9455 00d3 05       		.uleb128 0x5
 9456 00d4 00       		.byte	0
 9457 00d5 03       		.uleb128 0x3
 9458 00d6 0E       		.uleb128 0xe
ARM GAS  /tmp/ccFy9xbE.s 			page 201


 9459 00d7 3A       		.uleb128 0x3a
 9460 00d8 0B       		.uleb128 0xb
 9461 00d9 3B       		.uleb128 0x3b
 9462 00da 05       		.uleb128 0x5
 9463 00db 39       		.uleb128 0x39
 9464 00dc 0B       		.uleb128 0xb
 9465 00dd 49       		.uleb128 0x49
 9466 00de 13       		.uleb128 0x13
 9467 00df 02       		.uleb128 0x2
 9468 00e0 0A       		.uleb128 0xa
 9469 00e1 00       		.byte	0
 9470 00e2 00       		.byte	0
 9471 00e3 11       		.uleb128 0x11
 9472 00e4 18       		.uleb128 0x18
 9473 00e5 00       		.byte	0
 9474 00e6 00       		.byte	0
 9475 00e7 00       		.byte	0
 9476 00e8 12       		.uleb128 0x12
 9477 00e9 34       		.uleb128 0x34
 9478 00ea 00       		.byte	0
 9479 00eb 03       		.uleb128 0x3
 9480 00ec 08       		.uleb128 0x8
 9481 00ed 3A       		.uleb128 0x3a
 9482 00ee 0B       		.uleb128 0xb
 9483 00ef 3B       		.uleb128 0x3b
 9484 00f0 05       		.uleb128 0x5
 9485 00f1 39       		.uleb128 0x39
 9486 00f2 0B       		.uleb128 0xb
 9487 00f3 49       		.uleb128 0x49
 9488 00f4 13       		.uleb128 0x13
 9489 00f5 02       		.uleb128 0x2
 9490 00f6 0A       		.uleb128 0xa
 9491 00f7 00       		.byte	0
 9492 00f8 00       		.byte	0
 9493 00f9 13       		.uleb128 0x13
 9494 00fa 34       		.uleb128 0x34
 9495 00fb 00       		.byte	0
 9496 00fc 03       		.uleb128 0x3
 9497 00fd 0E       		.uleb128 0xe
 9498 00fe 3A       		.uleb128 0x3a
 9499 00ff 0B       		.uleb128 0xb
 9500 0100 3B       		.uleb128 0x3b
 9501 0101 05       		.uleb128 0x5
 9502 0102 39       		.uleb128 0x39
 9503 0103 0B       		.uleb128 0xb
 9504 0104 49       		.uleb128 0x49
 9505 0105 13       		.uleb128 0x13
 9506 0106 02       		.uleb128 0x2
 9507 0107 0A       		.uleb128 0xa
 9508 0108 00       		.byte	0
 9509 0109 00       		.byte	0
 9510 010a 14       		.uleb128 0x14
 9511 010b 34       		.uleb128 0x34
 9512 010c 00       		.byte	0
 9513 010d 03       		.uleb128 0x3
 9514 010e 08       		.uleb128 0x8
 9515 010f 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccFy9xbE.s 			page 202


 9516 0110 0B       		.uleb128 0xb
 9517 0111 3B       		.uleb128 0x3b
 9518 0112 05       		.uleb128 0x5
 9519 0113 39       		.uleb128 0x39
 9520 0114 0B       		.uleb128 0xb
 9521 0115 49       		.uleb128 0x49
 9522 0116 13       		.uleb128 0x13
 9523 0117 02       		.uleb128 0x2
 9524 0118 06       		.uleb128 0x6
 9525 0119 B742     		.uleb128 0x2137
 9526 011b 06       		.uleb128 0x6
 9527 011c 00       		.byte	0
 9528 011d 00       		.byte	0
 9529 011e 15       		.uleb128 0x15
 9530 011f 898201   		.uleb128 0x4109
 9531 0122 01       		.byte	0x1
 9532 0123 11       		.uleb128 0x11
 9533 0124 01       		.uleb128 0x1
 9534 0125 31       		.uleb128 0x31
 9535 0126 13       		.uleb128 0x13
 9536 0127 00       		.byte	0
 9537 0128 00       		.byte	0
 9538 0129 16       		.uleb128 0x16
 9539 012a 8A8201   		.uleb128 0x410a
 9540 012d 00       		.byte	0
 9541 012e 02       		.uleb128 0x2
 9542 012f 0A       		.uleb128 0xa
 9543 0130 9142     		.uleb128 0x2111
 9544 0132 0A       		.uleb128 0xa
 9545 0133 00       		.byte	0
 9546 0134 00       		.byte	0
 9547 0135 17       		.uleb128 0x17
 9548 0136 05       		.uleb128 0x5
 9549 0137 00       		.byte	0
 9550 0138 03       		.uleb128 0x3
 9551 0139 0E       		.uleb128 0xe
 9552 013a 3A       		.uleb128 0x3a
 9553 013b 0B       		.uleb128 0xb
 9554 013c 3B       		.uleb128 0x3b
 9555 013d 05       		.uleb128 0x5
 9556 013e 39       		.uleb128 0x39
 9557 013f 0B       		.uleb128 0xb
 9558 0140 49       		.uleb128 0x49
 9559 0141 13       		.uleb128 0x13
 9560 0142 02       		.uleb128 0x2
 9561 0143 06       		.uleb128 0x6
 9562 0144 B742     		.uleb128 0x2137
 9563 0146 06       		.uleb128 0x6
 9564 0147 00       		.byte	0
 9565 0148 00       		.byte	0
 9566 0149 18       		.uleb128 0x18
 9567 014a 01       		.uleb128 0x1
 9568 014b 01       		.byte	0x1
 9569 014c 49       		.uleb128 0x49
 9570 014d 13       		.uleb128 0x13
 9571 014e 01       		.uleb128 0x1
 9572 014f 13       		.uleb128 0x13
ARM GAS  /tmp/ccFy9xbE.s 			page 203


 9573 0150 00       		.byte	0
 9574 0151 00       		.byte	0
 9575 0152 19       		.uleb128 0x19
 9576 0153 21       		.uleb128 0x21
 9577 0154 00       		.byte	0
 9578 0155 49       		.uleb128 0x49
 9579 0156 13       		.uleb128 0x13
 9580 0157 2F       		.uleb128 0x2f
 9581 0158 0B       		.uleb128 0xb
 9582 0159 00       		.byte	0
 9583 015a 00       		.byte	0
 9584 015b 1A       		.uleb128 0x1a
 9585 015c 2E       		.uleb128 0x2e
 9586 015d 01       		.byte	0x1
 9587 015e 03       		.uleb128 0x3
 9588 015f 0E       		.uleb128 0xe
 9589 0160 3A       		.uleb128 0x3a
 9590 0161 0B       		.uleb128 0xb
 9591 0162 3B       		.uleb128 0x3b
 9592 0163 05       		.uleb128 0x5
 9593 0164 39       		.uleb128 0x39
 9594 0165 0B       		.uleb128 0xb
 9595 0166 27       		.uleb128 0x27
 9596 0167 0C       		.uleb128 0xc
 9597 0168 49       		.uleb128 0x49
 9598 0169 13       		.uleb128 0x13
 9599 016a 11       		.uleb128 0x11
 9600 016b 01       		.uleb128 0x1
 9601 016c 12       		.uleb128 0x12
 9602 016d 01       		.uleb128 0x1
 9603 016e 40       		.uleb128 0x40
 9604 016f 06       		.uleb128 0x6
 9605 0170 9642     		.uleb128 0x2116
 9606 0172 0C       		.uleb128 0xc
 9607 0173 01       		.uleb128 0x1
 9608 0174 13       		.uleb128 0x13
 9609 0175 00       		.byte	0
 9610 0176 00       		.byte	0
 9611 0177 1B       		.uleb128 0x1b
 9612 0178 34       		.uleb128 0x34
 9613 0179 00       		.byte	0
 9614 017a 03       		.uleb128 0x3
 9615 017b 0E       		.uleb128 0xe
 9616 017c 3A       		.uleb128 0x3a
 9617 017d 0B       		.uleb128 0xb
 9618 017e 3B       		.uleb128 0x3b
 9619 017f 05       		.uleb128 0x5
 9620 0180 39       		.uleb128 0x39
 9621 0181 0B       		.uleb128 0xb
 9622 0182 49       		.uleb128 0x49
 9623 0183 13       		.uleb128 0x13
 9624 0184 02       		.uleb128 0x2
 9625 0185 06       		.uleb128 0x6
 9626 0186 B742     		.uleb128 0x2137
 9627 0188 06       		.uleb128 0x6
 9628 0189 00       		.byte	0
 9629 018a 00       		.byte	0
ARM GAS  /tmp/ccFy9xbE.s 			page 204


 9630 018b 1C       		.uleb128 0x1c
 9631 018c 0B       		.uleb128 0xb
 9632 018d 01       		.byte	0x1
 9633 018e 55       		.uleb128 0x55
 9634 018f 06       		.uleb128 0x6
 9635 0190 01       		.uleb128 0x1
 9636 0191 13       		.uleb128 0x13
 9637 0192 00       		.byte	0
 9638 0193 00       		.byte	0
 9639 0194 1D       		.uleb128 0x1d
 9640 0195 34       		.uleb128 0x34
 9641 0196 00       		.byte	0
 9642 0197 03       		.uleb128 0x3
 9643 0198 0E       		.uleb128 0xe
 9644 0199 3A       		.uleb128 0x3a
 9645 019a 0B       		.uleb128 0xb
 9646 019b 3B       		.uleb128 0x3b
 9647 019c 05       		.uleb128 0x5
 9648 019d 39       		.uleb128 0x39
 9649 019e 0B       		.uleb128 0xb
 9650 019f 49       		.uleb128 0x49
 9651 01a0 13       		.uleb128 0x13
 9652 01a1 00       		.byte	0
 9653 01a2 00       		.byte	0
 9654 01a3 1E       		.uleb128 0x1e
 9655 01a4 0B       		.uleb128 0xb
 9656 01a5 01       		.byte	0x1
 9657 01a6 11       		.uleb128 0x11
 9658 01a7 01       		.uleb128 0x1
 9659 01a8 12       		.uleb128 0x12
 9660 01a9 01       		.uleb128 0x1
 9661 01aa 01       		.uleb128 0x1
 9662 01ab 13       		.uleb128 0x13
 9663 01ac 00       		.byte	0
 9664 01ad 00       		.byte	0
 9665 01ae 1F       		.uleb128 0x1f
 9666 01af 898201   		.uleb128 0x4109
 9667 01b2 01       		.byte	0x1
 9668 01b3 11       		.uleb128 0x11
 9669 01b4 01       		.uleb128 0x1
 9670 01b5 31       		.uleb128 0x31
 9671 01b6 13       		.uleb128 0x13
 9672 01b7 01       		.uleb128 0x1
 9673 01b8 13       		.uleb128 0x13
 9674 01b9 00       		.byte	0
 9675 01ba 00       		.byte	0
 9676 01bb 20       		.uleb128 0x20
 9677 01bc 898201   		.uleb128 0x4109
 9678 01bf 01       		.byte	0x1
 9679 01c0 11       		.uleb128 0x11
 9680 01c1 01       		.uleb128 0x1
 9681 01c2 01       		.uleb128 0x1
 9682 01c3 13       		.uleb128 0x13
 9683 01c4 00       		.byte	0
 9684 01c5 00       		.byte	0
 9685 01c6 21       		.uleb128 0x21
 9686 01c7 898201   		.uleb128 0x4109
ARM GAS  /tmp/ccFy9xbE.s 			page 205


 9687 01ca 01       		.byte	0x1
 9688 01cb 11       		.uleb128 0x11
 9689 01cc 01       		.uleb128 0x1
 9690 01cd 00       		.byte	0
 9691 01ce 00       		.byte	0
 9692 01cf 22       		.uleb128 0x22
 9693 01d0 1D       		.uleb128 0x1d
 9694 01d1 01       		.byte	0x1
 9695 01d2 31       		.uleb128 0x31
 9696 01d3 13       		.uleb128 0x13
 9697 01d4 55       		.uleb128 0x55
 9698 01d5 06       		.uleb128 0x6
 9699 01d6 58       		.uleb128 0x58
 9700 01d7 0B       		.uleb128 0xb
 9701 01d8 59       		.uleb128 0x59
 9702 01d9 05       		.uleb128 0x5
 9703 01da 57       		.uleb128 0x57
 9704 01db 0B       		.uleb128 0xb
 9705 01dc 01       		.uleb128 0x1
 9706 01dd 13       		.uleb128 0x13
 9707 01de 00       		.byte	0
 9708 01df 00       		.byte	0
 9709 01e0 23       		.uleb128 0x23
 9710 01e1 05       		.uleb128 0x5
 9711 01e2 00       		.byte	0
 9712 01e3 31       		.uleb128 0x31
 9713 01e4 13       		.uleb128 0x13
 9714 01e5 02       		.uleb128 0x2
 9715 01e6 06       		.uleb128 0x6
 9716 01e7 B742     		.uleb128 0x2137
 9717 01e9 06       		.uleb128 0x6
 9718 01ea 00       		.byte	0
 9719 01eb 00       		.byte	0
 9720 01ec 24       		.uleb128 0x24
 9721 01ed 05       		.uleb128 0x5
 9722 01ee 00       		.byte	0
 9723 01ef 31       		.uleb128 0x31
 9724 01f0 13       		.uleb128 0x13
 9725 01f1 00       		.byte	0
 9726 01f2 00       		.byte	0
 9727 01f3 25       		.uleb128 0x25
 9728 01f4 0B       		.uleb128 0xb
 9729 01f5 01       		.byte	0x1
 9730 01f6 55       		.uleb128 0x55
 9731 01f7 06       		.uleb128 0x6
 9732 01f8 00       		.byte	0
 9733 01f9 00       		.byte	0
 9734 01fa 26       		.uleb128 0x26
 9735 01fb 34       		.uleb128 0x34
 9736 01fc 00       		.byte	0
 9737 01fd 31       		.uleb128 0x31
 9738 01fe 13       		.uleb128 0x13
 9739 01ff 02       		.uleb128 0x2
 9740 0200 06       		.uleb128 0x6
 9741 0201 B742     		.uleb128 0x2137
 9742 0203 06       		.uleb128 0x6
 9743 0204 00       		.byte	0
ARM GAS  /tmp/ccFy9xbE.s 			page 206


 9744 0205 00       		.byte	0
 9745 0206 27       		.uleb128 0x27
 9746 0207 1D       		.uleb128 0x1d
 9747 0208 01       		.byte	0x1
 9748 0209 31       		.uleb128 0x31
 9749 020a 13       		.uleb128 0x13
 9750 020b 52       		.uleb128 0x52
 9751 020c 01       		.uleb128 0x1
 9752 020d B842     		.uleb128 0x2138
 9753 020f 05       		.uleb128 0x5
 9754 0210 11       		.uleb128 0x11
 9755 0211 01       		.uleb128 0x1
 9756 0212 12       		.uleb128 0x12
 9757 0213 01       		.uleb128 0x1
 9758 0214 58       		.uleb128 0x58
 9759 0215 0B       		.uleb128 0xb
 9760 0216 59       		.uleb128 0x59
 9761 0217 05       		.uleb128 0x5
 9762 0218 57       		.uleb128 0x57
 9763 0219 0B       		.uleb128 0xb
 9764 021a 01       		.uleb128 0x1
 9765 021b 13       		.uleb128 0x13
 9766 021c 00       		.byte	0
 9767 021d 00       		.byte	0
 9768 021e 28       		.uleb128 0x28
 9769 021f 1D       		.uleb128 0x1d
 9770 0220 01       		.byte	0x1
 9771 0221 31       		.uleb128 0x31
 9772 0222 13       		.uleb128 0x13
 9773 0223 11       		.uleb128 0x11
 9774 0224 01       		.uleb128 0x1
 9775 0225 12       		.uleb128 0x12
 9776 0226 01       		.uleb128 0x1
 9777 0227 58       		.uleb128 0x58
 9778 0228 0B       		.uleb128 0xb
 9779 0229 59       		.uleb128 0x59
 9780 022a 05       		.uleb128 0x5
 9781 022b 57       		.uleb128 0x57
 9782 022c 0B       		.uleb128 0xb
 9783 022d 01       		.uleb128 0x1
 9784 022e 13       		.uleb128 0x13
 9785 022f 00       		.byte	0
 9786 0230 00       		.byte	0
 9787 0231 29       		.uleb128 0x29
 9788 0232 1D       		.uleb128 0x1d
 9789 0233 01       		.byte	0x1
 9790 0234 31       		.uleb128 0x31
 9791 0235 13       		.uleb128 0x13
 9792 0236 52       		.uleb128 0x52
 9793 0237 01       		.uleb128 0x1
 9794 0238 B842     		.uleb128 0x2138
 9795 023a 05       		.uleb128 0x5
 9796 023b 11       		.uleb128 0x11
 9797 023c 01       		.uleb128 0x1
 9798 023d 12       		.uleb128 0x12
 9799 023e 01       		.uleb128 0x1
 9800 023f 58       		.uleb128 0x58
ARM GAS  /tmp/ccFy9xbE.s 			page 207


 9801 0240 0B       		.uleb128 0xb
 9802 0241 59       		.uleb128 0x59
 9803 0242 0B       		.uleb128 0xb
 9804 0243 57       		.uleb128 0x57
 9805 0244 0B       		.uleb128 0xb
 9806 0245 00       		.byte	0
 9807 0246 00       		.byte	0
 9808 0247 2A       		.uleb128 0x2a
 9809 0248 2E       		.uleb128 0x2e
 9810 0249 01       		.byte	0x1
 9811 024a 03       		.uleb128 0x3
 9812 024b 0E       		.uleb128 0xe
 9813 024c 3A       		.uleb128 0x3a
 9814 024d 0B       		.uleb128 0xb
 9815 024e 3B       		.uleb128 0x3b
 9816 024f 05       		.uleb128 0x5
 9817 0250 39       		.uleb128 0x39
 9818 0251 0B       		.uleb128 0xb
 9819 0252 27       		.uleb128 0x27
 9820 0253 0C       		.uleb128 0xc
 9821 0254 49       		.uleb128 0x49
 9822 0255 13       		.uleb128 0x13
 9823 0256 11       		.uleb128 0x11
 9824 0257 01       		.uleb128 0x1
 9825 0258 12       		.uleb128 0x12
 9826 0259 01       		.uleb128 0x1
 9827 025a 40       		.uleb128 0x40
 9828 025b 06       		.uleb128 0x6
 9829 025c 9742     		.uleb128 0x2117
 9830 025e 0C       		.uleb128 0xc
 9831 025f 01       		.uleb128 0x1
 9832 0260 13       		.uleb128 0x13
 9833 0261 00       		.byte	0
 9834 0262 00       		.byte	0
 9835 0263 2B       		.uleb128 0x2b
 9836 0264 17       		.uleb128 0x17
 9837 0265 01       		.byte	0x1
 9838 0266 0B       		.uleb128 0xb
 9839 0267 0B       		.uleb128 0xb
 9840 0268 3A       		.uleb128 0x3a
 9841 0269 0B       		.uleb128 0xb
 9842 026a 3B       		.uleb128 0x3b
 9843 026b 05       		.uleb128 0x5
 9844 026c 39       		.uleb128 0x39
 9845 026d 0B       		.uleb128 0xb
 9846 026e 01       		.uleb128 0x1
 9847 026f 13       		.uleb128 0x13
 9848 0270 00       		.byte	0
 9849 0271 00       		.byte	0
 9850 0272 2C       		.uleb128 0x2c
 9851 0273 0D       		.uleb128 0xd
 9852 0274 00       		.byte	0
 9853 0275 03       		.uleb128 0x3
 9854 0276 08       		.uleb128 0x8
 9855 0277 3A       		.uleb128 0x3a
 9856 0278 0B       		.uleb128 0xb
 9857 0279 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccFy9xbE.s 			page 208


 9858 027a 05       		.uleb128 0x5
 9859 027b 39       		.uleb128 0x39
 9860 027c 0B       		.uleb128 0xb
 9861 027d 49       		.uleb128 0x49
 9862 027e 13       		.uleb128 0x13
 9863 027f 00       		.byte	0
 9864 0280 00       		.byte	0
 9865 0281 2D       		.uleb128 0x2d
 9866 0282 898201   		.uleb128 0x4109
 9867 0285 00       		.byte	0
 9868 0286 11       		.uleb128 0x11
 9869 0287 01       		.uleb128 0x1
 9870 0288 31       		.uleb128 0x31
 9871 0289 13       		.uleb128 0x13
 9872 028a 00       		.byte	0
 9873 028b 00       		.byte	0
 9874 028c 2E       		.uleb128 0x2e
 9875 028d 898201   		.uleb128 0x4109
 9876 0290 00       		.byte	0
 9877 0291 11       		.uleb128 0x11
 9878 0292 01       		.uleb128 0x1
 9879 0293 9542     		.uleb128 0x2115
 9880 0295 0C       		.uleb128 0xc
 9881 0296 31       		.uleb128 0x31
 9882 0297 13       		.uleb128 0x13
 9883 0298 00       		.byte	0
 9884 0299 00       		.byte	0
 9885 029a 2F       		.uleb128 0x2f
 9886 029b 898201   		.uleb128 0x4109
 9887 029e 01       		.byte	0x1
 9888 029f 11       		.uleb128 0x11
 9889 02a0 01       		.uleb128 0x1
 9890 02a1 9342     		.uleb128 0x2113
 9891 02a3 0A       		.uleb128 0xa
 9892 02a4 01       		.uleb128 0x1
 9893 02a5 13       		.uleb128 0x13
 9894 02a6 00       		.byte	0
 9895 02a7 00       		.byte	0
 9896 02a8 30       		.uleb128 0x30
 9897 02a9 898201   		.uleb128 0x4109
 9898 02ac 01       		.byte	0x1
 9899 02ad 11       		.uleb128 0x11
 9900 02ae 01       		.uleb128 0x1
 9901 02af 9542     		.uleb128 0x2115
 9902 02b1 0C       		.uleb128 0xc
 9903 02b2 31       		.uleb128 0x31
 9904 02b3 13       		.uleb128 0x13
 9905 02b4 01       		.uleb128 0x1
 9906 02b5 13       		.uleb128 0x13
 9907 02b6 00       		.byte	0
 9908 02b7 00       		.byte	0
 9909 02b8 31       		.uleb128 0x31
 9910 02b9 2E       		.uleb128 0x2e
 9911 02ba 01       		.byte	0x1
 9912 02bb 03       		.uleb128 0x3
 9913 02bc 0E       		.uleb128 0xe
 9914 02bd 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccFy9xbE.s 			page 209


 9915 02be 0B       		.uleb128 0xb
 9916 02bf 3B       		.uleb128 0x3b
 9917 02c0 0B       		.uleb128 0xb
 9918 02c1 39       		.uleb128 0x39
 9919 02c2 0B       		.uleb128 0xb
 9920 02c3 27       		.uleb128 0x27
 9921 02c4 0C       		.uleb128 0xc
 9922 02c5 49       		.uleb128 0x49
 9923 02c6 13       		.uleb128 0x13
 9924 02c7 11       		.uleb128 0x11
 9925 02c8 01       		.uleb128 0x1
 9926 02c9 12       		.uleb128 0x12
 9927 02ca 01       		.uleb128 0x1
 9928 02cb 40       		.uleb128 0x40
 9929 02cc 06       		.uleb128 0x6
 9930 02cd 9742     		.uleb128 0x2117
 9931 02cf 0C       		.uleb128 0xc
 9932 02d0 01       		.uleb128 0x1
 9933 02d1 13       		.uleb128 0x13
 9934 02d2 00       		.byte	0
 9935 02d3 00       		.byte	0
 9936 02d4 32       		.uleb128 0x32
 9937 02d5 05       		.uleb128 0x5
 9938 02d6 00       		.byte	0
 9939 02d7 03       		.uleb128 0x3
 9940 02d8 08       		.uleb128 0x8
 9941 02d9 3A       		.uleb128 0x3a
 9942 02da 0B       		.uleb128 0xb
 9943 02db 3B       		.uleb128 0x3b
 9944 02dc 0B       		.uleb128 0xb
 9945 02dd 39       		.uleb128 0x39
 9946 02de 0B       		.uleb128 0xb
 9947 02df 49       		.uleb128 0x49
 9948 02e0 13       		.uleb128 0x13
 9949 02e1 02       		.uleb128 0x2
 9950 02e2 06       		.uleb128 0x6
 9951 02e3 B742     		.uleb128 0x2137
 9952 02e5 06       		.uleb128 0x6
 9953 02e6 00       		.byte	0
 9954 02e7 00       		.byte	0
 9955 02e8 33       		.uleb128 0x33
 9956 02e9 05       		.uleb128 0x5
 9957 02ea 00       		.byte	0
 9958 02eb 03       		.uleb128 0x3
 9959 02ec 0E       		.uleb128 0xe
 9960 02ed 3A       		.uleb128 0x3a
 9961 02ee 0B       		.uleb128 0xb
 9962 02ef 3B       		.uleb128 0x3b
 9963 02f0 0B       		.uleb128 0xb
 9964 02f1 39       		.uleb128 0x39
 9965 02f2 0B       		.uleb128 0xb
 9966 02f3 49       		.uleb128 0x49
 9967 02f4 13       		.uleb128 0x13
 9968 02f5 02       		.uleb128 0x2
 9969 02f6 06       		.uleb128 0x6
 9970 02f7 B742     		.uleb128 0x2137
 9971 02f9 06       		.uleb128 0x6
ARM GAS  /tmp/ccFy9xbE.s 			page 210


 9972 02fa 00       		.byte	0
 9973 02fb 00       		.byte	0
 9974 02fc 34       		.uleb128 0x34
 9975 02fd 05       		.uleb128 0x5
 9976 02fe 00       		.byte	0
 9977 02ff 03       		.uleb128 0x3
 9978 0300 08       		.uleb128 0x8
 9979 0301 3A       		.uleb128 0x3a
 9980 0302 0B       		.uleb128 0xb
 9981 0303 3B       		.uleb128 0x3b
 9982 0304 0B       		.uleb128 0xb
 9983 0305 39       		.uleb128 0x39
 9984 0306 0B       		.uleb128 0xb
 9985 0307 49       		.uleb128 0x49
 9986 0308 13       		.uleb128 0x13
 9987 0309 02       		.uleb128 0x2
 9988 030a 0A       		.uleb128 0xa
 9989 030b 00       		.byte	0
 9990 030c 00       		.byte	0
 9991 030d 35       		.uleb128 0x35
 9992 030e 05       		.uleb128 0x5
 9993 030f 00       		.byte	0
 9994 0310 03       		.uleb128 0x3
 9995 0311 0E       		.uleb128 0xe
 9996 0312 3A       		.uleb128 0x3a
 9997 0313 0B       		.uleb128 0xb
 9998 0314 3B       		.uleb128 0x3b
 9999 0315 0B       		.uleb128 0xb
 10000 0316 39       		.uleb128 0x39
 10001 0317 0B       		.uleb128 0xb
 10002 0318 49       		.uleb128 0x49
 10003 0319 13       		.uleb128 0x13
 10004 031a 02       		.uleb128 0x2
 10005 031b 0A       		.uleb128 0xa
 10006 031c 00       		.byte	0
 10007 031d 00       		.byte	0
 10008 031e 36       		.uleb128 0x36
 10009 031f 34       		.uleb128 0x34
 10010 0320 00       		.byte	0
 10011 0321 03       		.uleb128 0x3
 10012 0322 0E       		.uleb128 0xe
 10013 0323 3A       		.uleb128 0x3a
 10014 0324 0B       		.uleb128 0xb
 10015 0325 3B       		.uleb128 0x3b
 10016 0326 0B       		.uleb128 0xb
 10017 0327 39       		.uleb128 0x39
 10018 0328 0B       		.uleb128 0xb
 10019 0329 49       		.uleb128 0x49
 10020 032a 13       		.uleb128 0x13
 10021 032b 02       		.uleb128 0x2
 10022 032c 06       		.uleb128 0x6
 10023 032d B742     		.uleb128 0x2137
 10024 032f 06       		.uleb128 0x6
 10025 0330 00       		.byte	0
 10026 0331 00       		.byte	0
 10027 0332 37       		.uleb128 0x37
 10028 0333 34       		.uleb128 0x34
ARM GAS  /tmp/ccFy9xbE.s 			page 211


 10029 0334 00       		.byte	0
 10030 0335 03       		.uleb128 0x3
 10031 0336 08       		.uleb128 0x8
 10032 0337 3A       		.uleb128 0x3a
 10033 0338 0B       		.uleb128 0xb
 10034 0339 3B       		.uleb128 0x3b
 10035 033a 0B       		.uleb128 0xb
 10036 033b 39       		.uleb128 0x39
 10037 033c 0B       		.uleb128 0xb
 10038 033d 49       		.uleb128 0x49
 10039 033e 13       		.uleb128 0x13
 10040 033f 02       		.uleb128 0x2
 10041 0340 06       		.uleb128 0x6
 10042 0341 B742     		.uleb128 0x2137
 10043 0343 06       		.uleb128 0x6
 10044 0344 00       		.byte	0
 10045 0345 00       		.byte	0
 10046 0346 38       		.uleb128 0x38
 10047 0347 2E       		.uleb128 0x2e
 10048 0348 01       		.byte	0x1
 10049 0349 03       		.uleb128 0x3
 10050 034a 0E       		.uleb128 0xe
 10051 034b 3A       		.uleb128 0x3a
 10052 034c 0B       		.uleb128 0xb
 10053 034d 3B       		.uleb128 0x3b
 10054 034e 0B       		.uleb128 0xb
 10055 034f 39       		.uleb128 0x39
 10056 0350 0B       		.uleb128 0xb
 10057 0351 27       		.uleb128 0x27
 10058 0352 0C       		.uleb128 0xc
 10059 0353 49       		.uleb128 0x49
 10060 0354 13       		.uleb128 0x13
 10061 0355 20       		.uleb128 0x20
 10062 0356 0B       		.uleb128 0xb
 10063 0357 01       		.uleb128 0x1
 10064 0358 13       		.uleb128 0x13
 10065 0359 00       		.byte	0
 10066 035a 00       		.byte	0
 10067 035b 39       		.uleb128 0x39
 10068 035c 05       		.uleb128 0x5
 10069 035d 00       		.byte	0
 10070 035e 03       		.uleb128 0x3
 10071 035f 08       		.uleb128 0x8
 10072 0360 3A       		.uleb128 0x3a
 10073 0361 0B       		.uleb128 0xb
 10074 0362 3B       		.uleb128 0x3b
 10075 0363 0B       		.uleb128 0xb
 10076 0364 39       		.uleb128 0x39
 10077 0365 0B       		.uleb128 0xb
 10078 0366 49       		.uleb128 0x49
 10079 0367 13       		.uleb128 0x13
 10080 0368 00       		.byte	0
 10081 0369 00       		.byte	0
 10082 036a 3A       		.uleb128 0x3a
 10083 036b 34       		.uleb128 0x34
 10084 036c 00       		.byte	0
 10085 036d 03       		.uleb128 0x3
ARM GAS  /tmp/ccFy9xbE.s 			page 212


 10086 036e 08       		.uleb128 0x8
 10087 036f 3A       		.uleb128 0x3a
 10088 0370 0B       		.uleb128 0xb
 10089 0371 3B       		.uleb128 0x3b
 10090 0372 0B       		.uleb128 0xb
 10091 0373 39       		.uleb128 0x39
 10092 0374 0B       		.uleb128 0xb
 10093 0375 49       		.uleb128 0x49
 10094 0376 13       		.uleb128 0x13
 10095 0377 00       		.byte	0
 10096 0378 00       		.byte	0
 10097 0379 3B       		.uleb128 0x3b
 10098 037a 05       		.uleb128 0x5
 10099 037b 00       		.byte	0
 10100 037c 03       		.uleb128 0x3
 10101 037d 0E       		.uleb128 0xe
 10102 037e 3A       		.uleb128 0x3a
 10103 037f 0B       		.uleb128 0xb
 10104 0380 3B       		.uleb128 0x3b
 10105 0381 0B       		.uleb128 0xb
 10106 0382 39       		.uleb128 0x39
 10107 0383 0B       		.uleb128 0xb
 10108 0384 49       		.uleb128 0x49
 10109 0385 13       		.uleb128 0x13
 10110 0386 00       		.byte	0
 10111 0387 00       		.byte	0
 10112 0388 3C       		.uleb128 0x3c
 10113 0389 2E       		.uleb128 0x2e
 10114 038a 01       		.byte	0x1
 10115 038b 03       		.uleb128 0x3
 10116 038c 0E       		.uleb128 0xe
 10117 038d 3A       		.uleb128 0x3a
 10118 038e 0B       		.uleb128 0xb
 10119 038f 3B       		.uleb128 0x3b
 10120 0390 0B       		.uleb128 0xb
 10121 0391 39       		.uleb128 0x39
 10122 0392 0B       		.uleb128 0xb
 10123 0393 27       		.uleb128 0x27
 10124 0394 0C       		.uleb128 0xc
 10125 0395 20       		.uleb128 0x20
 10126 0396 0B       		.uleb128 0xb
 10127 0397 01       		.uleb128 0x1
 10128 0398 13       		.uleb128 0x13
 10129 0399 00       		.byte	0
 10130 039a 00       		.byte	0
 10131 039b 3D       		.uleb128 0x3d
 10132 039c 2E       		.uleb128 0x2e
 10133 039d 01       		.byte	0x1
 10134 039e 03       		.uleb128 0x3
 10135 039f 0E       		.uleb128 0xe
 10136 03a0 3A       		.uleb128 0x3a
 10137 03a1 0B       		.uleb128 0xb
 10138 03a2 3B       		.uleb128 0x3b
 10139 03a3 0B       		.uleb128 0xb
 10140 03a4 39       		.uleb128 0x39
 10141 03a5 0B       		.uleb128 0xb
 10142 03a6 27       		.uleb128 0x27
ARM GAS  /tmp/ccFy9xbE.s 			page 213


 10143 03a7 0C       		.uleb128 0xc
 10144 03a8 11       		.uleb128 0x11
 10145 03a9 01       		.uleb128 0x1
 10146 03aa 12       		.uleb128 0x12
 10147 03ab 01       		.uleb128 0x1
 10148 03ac 40       		.uleb128 0x40
 10149 03ad 0A       		.uleb128 0xa
 10150 03ae 9742     		.uleb128 0x2117
 10151 03b0 0C       		.uleb128 0xc
 10152 03b1 01       		.uleb128 0x1
 10153 03b2 13       		.uleb128 0x13
 10154 03b3 00       		.byte	0
 10155 03b4 00       		.byte	0
 10156 03b5 3E       		.uleb128 0x3e
 10157 03b6 2E       		.uleb128 0x2e
 10158 03b7 01       		.byte	0x1
 10159 03b8 31       		.uleb128 0x31
 10160 03b9 13       		.uleb128 0x13
 10161 03ba 11       		.uleb128 0x11
 10162 03bb 01       		.uleb128 0x1
 10163 03bc 12       		.uleb128 0x12
 10164 03bd 01       		.uleb128 0x1
 10165 03be 40       		.uleb128 0x40
 10166 03bf 0A       		.uleb128 0xa
 10167 03c0 01       		.uleb128 0x1
 10168 03c1 13       		.uleb128 0x13
 10169 03c2 00       		.byte	0
 10170 03c3 00       		.byte	0
 10171 03c4 3F       		.uleb128 0x3f
 10172 03c5 2E       		.uleb128 0x2e
 10173 03c6 00       		.byte	0
 10174 03c7 3F       		.uleb128 0x3f
 10175 03c8 0C       		.uleb128 0xc
 10176 03c9 3C       		.uleb128 0x3c
 10177 03ca 0C       		.uleb128 0xc
 10178 03cb 8740     		.uleb128 0x2007
 10179 03cd 0E       		.uleb128 0xe
 10180 03ce 03       		.uleb128 0x3
 10181 03cf 0E       		.uleb128 0xe
 10182 03d0 00       		.byte	0
 10183 03d1 00       		.byte	0
 10184 03d2 40       		.uleb128 0x40
 10185 03d3 2E       		.uleb128 0x2e
 10186 03d4 00       		.byte	0
 10187 03d5 3F       		.uleb128 0x3f
 10188 03d6 0C       		.uleb128 0xc
 10189 03d7 3C       		.uleb128 0x3c
 10190 03d8 0C       		.uleb128 0xc
 10191 03d9 8740     		.uleb128 0x2007
 10192 03db 0E       		.uleb128 0xe
 10193 03dc 03       		.uleb128 0x3
 10194 03dd 0E       		.uleb128 0xe
 10195 03de 3A       		.uleb128 0x3a
 10196 03df 0B       		.uleb128 0xb
 10197 03e0 3B       		.uleb128 0x3b
 10198 03e1 0B       		.uleb128 0xb
 10199 03e2 39       		.uleb128 0x39
ARM GAS  /tmp/ccFy9xbE.s 			page 214


 10200 03e3 0B       		.uleb128 0xb
 10201 03e4 00       		.byte	0
 10202 03e5 00       		.byte	0
 10203 03e6 00       		.byte	0
 10204              		.section	.debug_loc,"",%progbits
 10205              	.Ldebug_loc0:
 10206              	.LLST134:
 10207 0000 00000000 		.4byte	.LFB19
 10208 0004 02000000 		.4byte	.LCFI74
 10209 0008 0200     		.2byte	0x2
 10210 000a 7D       		.byte	0x7d
 10211 000b 00       		.sleb128 0
 10212 000c 02000000 		.4byte	.LCFI74
 10213 0010 04000000 		.4byte	.LCFI75
 10214 0014 0200     		.2byte	0x2
 10215 0016 7D       		.byte	0x7d
 10216 0017 08       		.sleb128 8
 10217 0018 04000000 		.4byte	.LCFI75
 10218 001c 06000000 		.4byte	.LCFI76
 10219 0020 0200     		.2byte	0x2
 10220 0022 7D       		.byte	0x7d
 10221 0023 14       		.sleb128 20
 10222 0024 06000000 		.4byte	.LCFI76
 10223 0028 24000000 		.4byte	.LCFI77
 10224 002c 0200     		.2byte	0x2
 10225 002e 7D       		.byte	0x7d
 10226 002f 30       		.sleb128 48
 10227 0030 24000000 		.4byte	.LCFI77
 10228 0034 28000000 		.4byte	.LCFI78
 10229 0038 0200     		.2byte	0x2
 10230 003a 7D       		.byte	0x7d
 10231 003b 14       		.sleb128 20
 10232 003c 28000000 		.4byte	.LCFI78
 10233 0040 2A000000 		.4byte	.LCFI79
 10234 0044 0200     		.2byte	0x2
 10235 0046 7D       		.byte	0x7d
 10236 0047 08       		.sleb128 8
 10237 0048 2A000000 		.4byte	.LCFI79
 10238 004c 30000000 		.4byte	.LFE19
 10239 0050 0200     		.2byte	0x2
 10240 0052 7D       		.byte	0x7d
 10241 0053 00       		.sleb128 0
 10242 0054 00000000 		.4byte	0
 10243 0058 00000000 		.4byte	0
 10244              	.LVUS135:
 10245 005c 00       		.uleb128 0
 10246 005d 00       		.uleb128 .LVU1264
 10247 005e 00       		.uleb128 .LVU1264
 10248 005f 00       		.uleb128 .LVU1270
 10249 0060 00       		.uleb128 .LVU1270
 10250 0061 00       		.uleb128 0
 10251              	.LLST135:
 10252 0062 00000000 		.4byte	.LVL562
 10253 0066 18000000 		.4byte	.LVL563
 10254 006a 0100     		.2byte	0x1
 10255 006c 50       		.byte	0x50
 10256 006d 18000000 		.4byte	.LVL563
ARM GAS  /tmp/ccFy9xbE.s 			page 215


 10257 0071 21000000 		.4byte	.LVL564-1
 10258 0075 0200     		.2byte	0x2
 10259 0077 91       		.byte	0x91
 10260 0078 50       		.sleb128 -48
 10261 0079 21000000 		.4byte	.LVL564-1
 10262 007d 30000000 		.4byte	.LFE19
 10263 0081 0400     		.2byte	0x4
 10264 0083 F3       		.byte	0xf3
 10265 0084 01       		.uleb128 0x1
 10266 0085 50       		.byte	0x50
 10267 0086 9F       		.byte	0x9f
 10268 0087 00000000 		.4byte	0
 10269 008b 00000000 		.4byte	0
 10270              	.LVUS136:
 10271 008f 00       		.uleb128 0
 10272 0090 00       		.uleb128 .LVU1270
 10273 0091 00       		.uleb128 .LVU1270
 10274 0092 00       		.uleb128 .LVU1273
 10275 0093 00       		.uleb128 .LVU1273
 10276 0094 00       		.uleb128 0
 10277              	.LLST136:
 10278 0095 00000000 		.4byte	.LVL562
 10279 0099 21000000 		.4byte	.LVL564-1
 10280 009d 0100     		.2byte	0x1
 10281 009f 51       		.byte	0x51
 10282 00a0 21000000 		.4byte	.LVL564-1
 10283 00a4 28000000 		.4byte	.LVL565
 10284 00a8 0100     		.2byte	0x1
 10285 00aa 55       		.byte	0x55
 10286 00ab 28000000 		.4byte	.LVL565
 10287 00af 30000000 		.4byte	.LFE19
 10288 00b3 0400     		.2byte	0x4
 10289 00b5 F3       		.byte	0xf3
 10290 00b6 01       		.uleb128 0x1
 10291 00b7 51       		.byte	0x51
 10292 00b8 9F       		.byte	0x9f
 10293 00b9 00000000 		.4byte	0
 10294 00bd 00000000 		.4byte	0
 10295              	.LVUS137:
 10296 00c1 00       		.uleb128 .LVU1270
 10297 00c2 00       		.uleb128 0
 10298              	.LLST137:
 10299 00c3 22000000 		.4byte	.LVL564
 10300 00c7 30000000 		.4byte	.LFE19
 10301 00cb 0100     		.2byte	0x1
 10302 00cd 50       		.byte	0x50
 10303 00ce 00000000 		.4byte	0
 10304 00d2 00000000 		.4byte	0
 10305              	.LLST129:
 10306 00d6 00000000 		.4byte	.LFB18
 10307 00da 0A000000 		.4byte	.LCFI71
 10308 00de 0200     		.2byte	0x2
 10309 00e0 7D       		.byte	0x7d
 10310 00e1 00       		.sleb128 0
 10311 00e2 0A000000 		.4byte	.LCFI71
 10312 00e6 0E000000 		.4byte	.LCFI72
 10313 00ea 0200     		.2byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 216


 10314 00ec 7D       		.byte	0x7d
 10315 00ed 08       		.sleb128 8
 10316 00ee 0E000000 		.4byte	.LCFI72
 10317 00f2 18000000 		.4byte	.LCFI73
 10318 00f6 0200     		.2byte	0x2
 10319 00f8 7D       		.byte	0x7d
 10320 00f9 10       		.sleb128 16
 10321 00fa 18000000 		.4byte	.LCFI73
 10322 00fe 20000000 		.4byte	.LFE18
 10323 0102 0200     		.2byte	0x2
 10324 0104 7D       		.byte	0x7d
 10325 0105 08       		.sleb128 8
 10326 0106 00000000 		.4byte	0
 10327 010a 00000000 		.4byte	0
 10328              	.LVUS130:
 10329 010e 00       		.uleb128 0
 10330 010f 00       		.uleb128 .LVU1249
 10331 0110 00       		.uleb128 .LVU1249
 10332 0111 00       		.uleb128 .LVU1252
 10333 0112 00       		.uleb128 .LVU1252
 10334 0113 00       		.uleb128 0
 10335              	.LLST130:
 10336 0114 00000000 		.4byte	.LVL556
 10337 0118 08000000 		.4byte	.LVL559
 10338 011c 0100     		.2byte	0x1
 10339 011e 50       		.byte	0x50
 10340 011f 08000000 		.4byte	.LVL559
 10341 0123 15000000 		.4byte	.LVL561-1
 10342 0127 0100     		.2byte	0x1
 10343 0129 51       		.byte	0x51
 10344 012a 15000000 		.4byte	.LVL561-1
 10345 012e 20000000 		.4byte	.LFE18
 10346 0132 0400     		.2byte	0x4
 10347 0134 F3       		.byte	0xf3
 10348 0135 01       		.uleb128 0x1
 10349 0136 50       		.byte	0x50
 10350 0137 9F       		.byte	0x9f
 10351 0138 00000000 		.4byte	0
 10352 013c 00000000 		.4byte	0
 10353              	.LVUS131:
 10354 0140 00       		.uleb128 0
 10355 0141 00       		.uleb128 .LVU1248
 10356 0142 00       		.uleb128 .LVU1248
 10357 0143 00       		.uleb128 .LVU1252
 10358 0144 00       		.uleb128 .LVU1252
 10359 0145 00       		.uleb128 0
 10360              	.LLST131:
 10361 0146 00000000 		.4byte	.LVL556
 10362 014a 06000000 		.4byte	.LVL558
 10363 014e 0100     		.2byte	0x1
 10364 0150 51       		.byte	0x51
 10365 0151 06000000 		.4byte	.LVL558
 10366 0155 15000000 		.4byte	.LVL561-1
 10367 0159 0100     		.2byte	0x1
 10368 015b 52       		.byte	0x52
 10369 015c 15000000 		.4byte	.LVL561-1
 10370 0160 20000000 		.4byte	.LFE18
ARM GAS  /tmp/ccFy9xbE.s 			page 217


 10371 0164 0400     		.2byte	0x4
 10372 0166 F3       		.byte	0xf3
 10373 0167 01       		.uleb128 0x1
 10374 0168 51       		.byte	0x51
 10375 0169 9F       		.byte	0x9f
 10376 016a 00000000 		.4byte	0
 10377 016e 00000000 		.4byte	0
 10378              	.LVUS132:
 10379 0172 00       		.uleb128 0
 10380 0173 00       		.uleb128 .LVU1247
 10381 0174 00       		.uleb128 .LVU1247
 10382 0175 00       		.uleb128 .LVU1252
 10383 0176 00       		.uleb128 .LVU1252
 10384 0177 00       		.uleb128 0
 10385              	.LLST132:
 10386 0178 00000000 		.4byte	.LVL556
 10387 017c 04000000 		.4byte	.LVL557
 10388 0180 0100     		.2byte	0x1
 10389 0182 52       		.byte	0x52
 10390 0183 04000000 		.4byte	.LVL557
 10391 0187 15000000 		.4byte	.LVL561-1
 10392 018b 0100     		.2byte	0x1
 10393 018d 5C       		.byte	0x5c
 10394 018e 15000000 		.4byte	.LVL561-1
 10395 0192 20000000 		.4byte	.LFE18
 10396 0196 0400     		.2byte	0x4
 10397 0198 F3       		.byte	0xf3
 10398 0199 01       		.uleb128 0x1
 10399 019a 52       		.byte	0x52
 10400 019b 9F       		.byte	0x9f
 10401 019c 00000000 		.4byte	0
 10402 01a0 00000000 		.4byte	0
 10403              	.LVUS133:
 10404 01a4 00       		.uleb128 0
 10405 01a5 00       		.uleb128 .LVU1251
 10406              	.LLST133:
 10407 01a6 00000000 		.4byte	.LVL556
 10408 01aa 10000000 		.4byte	.LVL560
 10409 01ae 0100     		.2byte	0x1
 10410 01b0 53       		.byte	0x53
 10411 01b1 00000000 		.4byte	0
 10412 01b5 00000000 		.4byte	0
 10413              	.LLST126:
 10414 01b9 00000000 		.4byte	.LFB17
 10415 01bd 02000000 		.4byte	.LCFI68
 10416 01c1 0200     		.2byte	0x2
 10417 01c3 7D       		.byte	0x7d
 10418 01c4 00       		.sleb128 0
 10419 01c5 02000000 		.4byte	.LCFI68
 10420 01c9 04000000 		.4byte	.LCFI69
 10421 01cd 0200     		.2byte	0x2
 10422 01cf 7D       		.byte	0x7d
 10423 01d0 08       		.sleb128 8
 10424 01d1 04000000 		.4byte	.LCFI69
 10425 01d5 18000000 		.4byte	.LCFI70
 10426 01d9 0200     		.2byte	0x2
 10427 01db 7D       		.byte	0x7d
ARM GAS  /tmp/ccFy9xbE.s 			page 218


 10428 01dc 18       		.sleb128 24
 10429 01dd 18000000 		.4byte	.LCFI70
 10430 01e1 20000000 		.4byte	.LFE17
 10431 01e5 0200     		.2byte	0x2
 10432 01e7 7D       		.byte	0x7d
 10433 01e8 08       		.sleb128 8
 10434 01e9 00000000 		.4byte	0
 10435 01ed 00000000 		.4byte	0
 10436              	.LVUS127:
 10437 01f1 00       		.uleb128 0
 10438 01f2 00       		.uleb128 .LVU1241
 10439 01f3 00       		.uleb128 .LVU1241
 10440 01f4 00       		.uleb128 .LVU1242
 10441 01f5 00       		.uleb128 .LVU1242
 10442 01f6 00       		.uleb128 0
 10443              	.LLST127:
 10444 01f7 00000000 		.4byte	.LVL552
 10445 01fb 12000000 		.4byte	.LVL554
 10446 01ff 0100     		.2byte	0x1
 10447 0201 50       		.byte	0x50
 10448 0202 12000000 		.4byte	.LVL554
 10449 0206 15000000 		.4byte	.LVL555-1
 10450 020a 0100     		.2byte	0x1
 10451 020c 53       		.byte	0x53
 10452 020d 15000000 		.4byte	.LVL555-1
 10453 0211 20000000 		.4byte	.LFE17
 10454 0215 0400     		.2byte	0x4
 10455 0217 F3       		.byte	0xf3
 10456 0218 01       		.uleb128 0x1
 10457 0219 50       		.byte	0x50
 10458 021a 9F       		.byte	0x9f
 10459 021b 00000000 		.4byte	0
 10460 021f 00000000 		.4byte	0
 10461              	.LVUS128:
 10462 0223 00       		.uleb128 0
 10463 0224 00       		.uleb128 .LVU1240
 10464              	.LLST128:
 10465 0225 00000000 		.4byte	.LVL552
 10466 0229 0E000000 		.4byte	.LVL553
 10467 022d 0100     		.2byte	0x1
 10468 022f 51       		.byte	0x51
 10469 0230 00000000 		.4byte	0
 10470 0234 00000000 		.4byte	0
 10471              	.LLST122:
 10472 0238 00000000 		.4byte	.LFB16
 10473 023c 02000000 		.4byte	.LCFI62
 10474 0240 0200     		.2byte	0x2
 10475 0242 7D       		.byte	0x7d
 10476 0243 00       		.sleb128 0
 10477 0244 02000000 		.4byte	.LCFI62
 10478 0248 04000000 		.4byte	.LCFI63
 10479 024c 0200     		.2byte	0x2
 10480 024e 7D       		.byte	0x7d
 10481 024f 08       		.sleb128 8
 10482 0250 04000000 		.4byte	.LCFI63
 10483 0254 06000000 		.4byte	.LCFI64
 10484 0258 0200     		.2byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 219


 10485 025a 7D       		.byte	0x7d
 10486 025b 10       		.sleb128 16
 10487 025c 06000000 		.4byte	.LCFI64
 10488 0260 1E000000 		.4byte	.LCFI65
 10489 0264 0200     		.2byte	0x2
 10490 0266 7D       		.byte	0x7d
 10491 0267 20       		.sleb128 32
 10492 0268 1E000000 		.4byte	.LCFI65
 10493 026c 22000000 		.4byte	.LCFI66
 10494 0270 0200     		.2byte	0x2
 10495 0272 7D       		.byte	0x7d
 10496 0273 10       		.sleb128 16
 10497 0274 22000000 		.4byte	.LCFI66
 10498 0278 24000000 		.4byte	.LCFI67
 10499 027c 0200     		.2byte	0x2
 10500 027e 7D       		.byte	0x7d
 10501 027f 08       		.sleb128 8
 10502 0280 24000000 		.4byte	.LCFI67
 10503 0284 2C000000 		.4byte	.LFE16
 10504 0288 0200     		.2byte	0x2
 10505 028a 7D       		.byte	0x7d
 10506 028b 00       		.sleb128 0
 10507 028c 00000000 		.4byte	0
 10508 0290 00000000 		.4byte	0
 10509              	.LVUS123:
 10510 0294 00       		.uleb128 0
 10511 0295 00       		.uleb128 .LVU1224
 10512 0296 00       		.uleb128 .LVU1224
 10513 0297 00       		.uleb128 .LVU1231
 10514 0298 00       		.uleb128 .LVU1231
 10515 0299 00       		.uleb128 0
 10516              	.LLST123:
 10517 029a 00000000 		.4byte	.LVL548
 10518 029e 0C000000 		.4byte	.LVL549
 10519 02a2 0100     		.2byte	0x1
 10520 02a4 50       		.byte	0x50
 10521 02a5 0C000000 		.4byte	.LVL549
 10522 02a9 1B000000 		.4byte	.LVL551-1
 10523 02ad 0100     		.2byte	0x1
 10524 02af 5C       		.byte	0x5c
 10525 02b0 1B000000 		.4byte	.LVL551-1
 10526 02b4 2C000000 		.4byte	.LFE16
 10527 02b8 0400     		.2byte	0x4
 10528 02ba F3       		.byte	0xf3
 10529 02bb 01       		.uleb128 0x1
 10530 02bc 50       		.byte	0x50
 10531 02bd 9F       		.byte	0x9f
 10532 02be 00000000 		.4byte	0
 10533 02c2 00000000 		.4byte	0
 10534              	.LVUS124:
 10535 02c6 00       		.uleb128 0
 10536 02c7 00       		.uleb128 .LVU1226
 10537 02c8 00       		.uleb128 .LVU1226
 10538 02c9 00       		.uleb128 .LVU1231
 10539 02ca 00       		.uleb128 .LVU1231
 10540 02cb 00       		.uleb128 0
 10541              	.LLST124:
ARM GAS  /tmp/ccFy9xbE.s 			page 220


 10542 02cc 00000000 		.4byte	.LVL548
 10543 02d0 10000000 		.4byte	.LVL550
 10544 02d4 0100     		.2byte	0x1
 10545 02d6 51       		.byte	0x51
 10546 02d7 10000000 		.4byte	.LVL550
 10547 02db 1B000000 		.4byte	.LVL551-1
 10548 02df 0100     		.2byte	0x1
 10549 02e1 52       		.byte	0x52
 10550 02e2 1B000000 		.4byte	.LVL551-1
 10551 02e6 2C000000 		.4byte	.LFE16
 10552 02ea 0400     		.2byte	0x4
 10553 02ec F3       		.byte	0xf3
 10554 02ed 01       		.uleb128 0x1
 10555 02ee 51       		.byte	0x51
 10556 02ef 9F       		.byte	0x9f
 10557 02f0 00000000 		.4byte	0
 10558 02f4 00000000 		.4byte	0
 10559              	.LVUS125:
 10560 02f8 00       		.uleb128 .LVU1231
 10561 02f9 00       		.uleb128 0
 10562              	.LLST125:
 10563 02fa 1C000000 		.4byte	.LVL551
 10564 02fe 2C000000 		.4byte	.LFE16
 10565 0302 0100     		.2byte	0x1
 10566 0304 50       		.byte	0x50
 10567 0305 00000000 		.4byte	0
 10568 0309 00000000 		.4byte	0
 10569              	.LLST119:
 10570 030d 00000000 		.4byte	.LFB15
 10571 0311 02000000 		.4byte	.LCFI56
 10572 0315 0200     		.2byte	0x2
 10573 0317 7D       		.byte	0x7d
 10574 0318 00       		.sleb128 0
 10575 0319 02000000 		.4byte	.LCFI56
 10576 031d 04000000 		.4byte	.LCFI57
 10577 0321 0200     		.2byte	0x2
 10578 0323 7D       		.byte	0x7d
 10579 0324 0C       		.sleb128 12
 10580 0325 04000000 		.4byte	.LCFI57
 10581 0329 06000000 		.4byte	.LCFI58
 10582 032d 0200     		.2byte	0x2
 10583 032f 7D       		.byte	0x7d
 10584 0330 14       		.sleb128 20
 10585 0331 06000000 		.4byte	.LCFI58
 10586 0335 1E000000 		.4byte	.LCFI59
 10587 0339 0200     		.2byte	0x2
 10588 033b 7D       		.byte	0x7d
 10589 033c 28       		.sleb128 40
 10590 033d 1E000000 		.4byte	.LCFI59
 10591 0341 22000000 		.4byte	.LCFI60
 10592 0345 0200     		.2byte	0x2
 10593 0347 7D       		.byte	0x7d
 10594 0348 14       		.sleb128 20
 10595 0349 22000000 		.4byte	.LCFI60
 10596 034d 24000000 		.4byte	.LCFI61
 10597 0351 0200     		.2byte	0x2
 10598 0353 7D       		.byte	0x7d
ARM GAS  /tmp/ccFy9xbE.s 			page 221


 10599 0354 0C       		.sleb128 12
 10600 0355 24000000 		.4byte	.LCFI61
 10601 0359 2C000000 		.4byte	.LFE15
 10602 035d 0200     		.2byte	0x2
 10603 035f 7D       		.byte	0x7d
 10604 0360 00       		.sleb128 0
 10605 0361 00000000 		.4byte	0
 10606 0365 00000000 		.4byte	0
 10607              	.LVUS120:
 10608 0369 00       		.uleb128 0
 10609 036a 00       		.uleb128 .LVU1210
 10610 036b 00       		.uleb128 .LVU1210
 10611 036c 00       		.uleb128 .LVU1215
 10612 036d 00       		.uleb128 .LVU1215
 10613 036e 00       		.uleb128 0
 10614              	.LLST120:
 10615 036f 00000000 		.4byte	.LVL545
 10616 0373 0E000000 		.4byte	.LVL546
 10617 0377 0100     		.2byte	0x1
 10618 0379 50       		.byte	0x50
 10619 037a 0E000000 		.4byte	.LVL546
 10620 037e 1B000000 		.4byte	.LVL547-1
 10621 0382 0100     		.2byte	0x1
 10622 0384 51       		.byte	0x51
 10623 0385 1B000000 		.4byte	.LVL547-1
 10624 0389 2C000000 		.4byte	.LFE15
 10625 038d 0400     		.2byte	0x4
 10626 038f F3       		.byte	0xf3
 10627 0390 01       		.uleb128 0x1
 10628 0391 50       		.byte	0x50
 10629 0392 9F       		.byte	0x9f
 10630 0393 00000000 		.4byte	0
 10631 0397 00000000 		.4byte	0
 10632              	.LVUS121:
 10633 039b 00       		.uleb128 .LVU1215
 10634 039c 00       		.uleb128 0
 10635              	.LLST121:
 10636 039d 1C000000 		.4byte	.LVL547
 10637 03a1 2C000000 		.4byte	.LFE15
 10638 03a5 0100     		.2byte	0x1
 10639 03a7 50       		.byte	0x50
 10640 03a8 00000000 		.4byte	0
 10641 03ac 00000000 		.4byte	0
 10642              	.LLST117:
 10643 03b0 00000000 		.4byte	.LFB14
 10644 03b4 02000000 		.4byte	.LCFI50
 10645 03b8 0200     		.2byte	0x2
 10646 03ba 7D       		.byte	0x7d
 10647 03bb 00       		.sleb128 0
 10648 03bc 02000000 		.4byte	.LCFI50
 10649 03c0 04000000 		.4byte	.LCFI51
 10650 03c4 0200     		.2byte	0x2
 10651 03c6 7D       		.byte	0x7d
 10652 03c7 10       		.sleb128 16
 10653 03c8 04000000 		.4byte	.LCFI51
 10654 03cc 06000000 		.4byte	.LCFI52
 10655 03d0 0200     		.2byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 222


 10656 03d2 7D       		.byte	0x7d
 10657 03d3 18       		.sleb128 24
 10658 03d4 06000000 		.4byte	.LCFI52
 10659 03d8 1E000000 		.4byte	.LCFI53
 10660 03dc 0200     		.2byte	0x2
 10661 03de 7D       		.byte	0x7d
 10662 03df 28       		.sleb128 40
 10663 03e0 1E000000 		.4byte	.LCFI53
 10664 03e4 22000000 		.4byte	.LCFI54
 10665 03e8 0200     		.2byte	0x2
 10666 03ea 7D       		.byte	0x7d
 10667 03eb 18       		.sleb128 24
 10668 03ec 22000000 		.4byte	.LCFI54
 10669 03f0 24000000 		.4byte	.LCFI55
 10670 03f4 0200     		.2byte	0x2
 10671 03f6 7D       		.byte	0x7d
 10672 03f7 10       		.sleb128 16
 10673 03f8 24000000 		.4byte	.LCFI55
 10674 03fc 2C000000 		.4byte	.LFE14
 10675 0400 0200     		.2byte	0x2
 10676 0402 7D       		.byte	0x7d
 10677 0403 00       		.sleb128 0
 10678 0404 00000000 		.4byte	0
 10679 0408 00000000 		.4byte	0
 10680              	.LVUS118:
 10681 040c 00       		.uleb128 .LVU1201
 10682 040d 00       		.uleb128 0
 10683              	.LLST118:
 10684 040e 1C000000 		.4byte	.LVL544
 10685 0412 2C000000 		.4byte	.LFE14
 10686 0416 0100     		.2byte	0x1
 10687 0418 50       		.byte	0x50
 10688 0419 00000000 		.4byte	0
 10689 041d 00000000 		.4byte	0
 10690              	.LLST91:
 10691 0421 00000000 		.4byte	.LFB13
 10692 0425 04000000 		.4byte	.LCFI46
 10693 0429 0200     		.2byte	0x2
 10694 042b 7D       		.byte	0x7d
 10695 042c 00       		.sleb128 0
 10696 042d 04000000 		.4byte	.LCFI46
 10697 0431 0C000000 		.4byte	.LCFI47
 10698 0435 0200     		.2byte	0x2
 10699 0437 7D       		.byte	0x7d
 10700 0438 24       		.sleb128 36
 10701 0439 0C000000 		.4byte	.LCFI47
 10702 043d AE010000 		.4byte	.LCFI48
 10703 0441 0300     		.2byte	0x3
 10704 0443 7D       		.byte	0x7d
 10705 0444 E800     		.sleb128 104
 10706 0446 AE010000 		.4byte	.LCFI48
 10707 044a B2010000 		.4byte	.LCFI49
 10708 044e 0200     		.2byte	0x2
 10709 0450 7D       		.byte	0x7d
 10710 0451 24       		.sleb128 36
 10711 0452 B2010000 		.4byte	.LCFI49
 10712 0456 6A060000 		.4byte	.LFE13
ARM GAS  /tmp/ccFy9xbE.s 			page 223


 10713 045a 0300     		.2byte	0x3
 10714 045c 7D       		.byte	0x7d
 10715 045d E800     		.sleb128 104
 10716 045f 00000000 		.4byte	0
 10717 0463 00000000 		.4byte	0
 10718              	.LVUS92:
 10719 0467 00       		.uleb128 0
 10720 0468 00       		.uleb128 .LVU697
 10721 0469 00       		.uleb128 .LVU697
 10722 046a 00       		.uleb128 .LVU702
 10723 046b 00       		.uleb128 .LVU702
 10724 046c 00       		.uleb128 .LVU703
 10725 046d 00       		.uleb128 .LVU1092
 10726 046e 00       		.uleb128 .LVU1095
 10727              	.LLST92:
 10728 046f 00000000 		.4byte	.LVL320
 10729 0473 14000000 		.4byte	.LVL322
 10730 0477 0100     		.2byte	0x1
 10731 0479 50       		.byte	0x50
 10732 047a 14000000 		.4byte	.LVL322
 10733 047e 1C000000 		.4byte	.LVL324
 10734 0482 0400     		.2byte	0x4
 10735 0484 F3       		.byte	0xf3
 10736 0485 01       		.uleb128 0x1
 10737 0486 50       		.byte	0x50
 10738 0487 9F       		.byte	0x9f
 10739 0488 1C000000 		.4byte	.LVL324
 10740 048c 28000000 		.4byte	.LVL325
 10741 0490 0100     		.2byte	0x1
 10742 0492 5B       		.byte	0x5b
 10743 0493 EA040000 		.4byte	.LVL485
 10744 0497 F0040000 		.4byte	.LVL487
 10745 049b 0100     		.2byte	0x1
 10746 049d 5B       		.byte	0x5b
 10747 049e 00000000 		.4byte	0
 10748 04a2 00000000 		.4byte	0
 10749              	.LVUS93:
 10750 04a6 00       		.uleb128 0
 10751 04a7 00       		.uleb128 .LVU703
 10752 04a8 00       		.uleb128 .LVU703
 10753 04a9 00       		.uleb128 .LVU961
 10754 04aa 00       		.uleb128 .LVU961
 10755 04ab 00       		.uleb128 .LVU965
 10756 04ac 00       		.uleb128 .LVU965
 10757 04ad 00       		.uleb128 .LVU1092
 10758 04ae 00       		.uleb128 .LVU1092
 10759 04af 00       		.uleb128 .LVU1095
 10760 04b0 00       		.uleb128 .LVU1095
 10761 04b1 00       		.uleb128 0
 10762              	.LLST93:
 10763 04b2 00000000 		.4byte	.LVL320
 10764 04b6 28000000 		.4byte	.LVL325
 10765 04ba 0100     		.2byte	0x1
 10766 04bc 51       		.byte	0x51
 10767 04bd 28000000 		.4byte	.LVL325
 10768 04c1 9A030000 		.4byte	.LVL424
 10769 04c5 0100     		.2byte	0x1
ARM GAS  /tmp/ccFy9xbE.s 			page 224


 10770 04c7 5A       		.byte	0x5a
 10771 04c8 9A030000 		.4byte	.LVL424
 10772 04cc A3030000 		.4byte	.LVL427-1
 10773 04d0 0100     		.2byte	0x1
 10774 04d2 51       		.byte	0x51
 10775 04d3 A3030000 		.4byte	.LVL427-1
 10776 04d7 EA040000 		.4byte	.LVL485
 10777 04db 0100     		.2byte	0x1
 10778 04dd 5A       		.byte	0x5a
 10779 04de EA040000 		.4byte	.LVL485
 10780 04e2 F0040000 		.4byte	.LVL487
 10781 04e6 0100     		.2byte	0x1
 10782 04e8 51       		.byte	0x51
 10783 04e9 F0040000 		.4byte	.LVL487
 10784 04ed 6A060000 		.4byte	.LFE13
 10785 04f1 0100     		.2byte	0x1
 10786 04f3 5A       		.byte	0x5a
 10787 04f4 00000000 		.4byte	0
 10788 04f8 00000000 		.4byte	0
 10789              	.LVUS94:
 10790 04fc 00       		.uleb128 0
 10791 04fd 00       		.uleb128 .LVU703
 10792 04fe 00       		.uleb128 .LVU703
 10793 04ff 00       		.uleb128 .LVU961
 10794 0500 00       		.uleb128 .LVU961
 10795 0501 00       		.uleb128 .LVU965
 10796 0502 00       		.uleb128 .LVU965
 10797 0503 00       		.uleb128 .LVU1092
 10798 0504 00       		.uleb128 .LVU1092
 10799 0505 00       		.uleb128 .LVU1095
 10800 0506 00       		.uleb128 .LVU1095
 10801 0507 00       		.uleb128 0
 10802              	.LLST94:
 10803 0508 00000000 		.4byte	.LVL320
 10804 050c 28000000 		.4byte	.LVL325
 10805 0510 0100     		.2byte	0x1
 10806 0512 52       		.byte	0x52
 10807 0513 28000000 		.4byte	.LVL325
 10808 0517 9A030000 		.4byte	.LVL424
 10809 051b 0100     		.2byte	0x1
 10810 051d 59       		.byte	0x59
 10811 051e 9A030000 		.4byte	.LVL424
 10812 0522 A3030000 		.4byte	.LVL427-1
 10813 0526 0100     		.2byte	0x1
 10814 0528 53       		.byte	0x53
 10815 0529 A3030000 		.4byte	.LVL427-1
 10816 052d EA040000 		.4byte	.LVL485
 10817 0531 0100     		.2byte	0x1
 10818 0533 59       		.byte	0x59
 10819 0534 EA040000 		.4byte	.LVL485
 10820 0538 F0040000 		.4byte	.LVL487
 10821 053c 0100     		.2byte	0x1
 10822 053e 52       		.byte	0x52
 10823 053f F0040000 		.4byte	.LVL487
 10824 0543 6A060000 		.4byte	.LFE13
 10825 0547 0100     		.2byte	0x1
 10826 0549 59       		.byte	0x59
ARM GAS  /tmp/ccFy9xbE.s 			page 225


 10827 054a 00000000 		.4byte	0
 10828 054e 00000000 		.4byte	0
 10829              	.LVUS95:
 10830 0552 00       		.uleb128 0
 10831 0553 00       		.uleb128 .LVU695
 10832 0554 00       		.uleb128 .LVU695
 10833 0555 00       		.uleb128 .LVU706
 10834 0556 00       		.uleb128 .LVU706
 10835 0557 01       		.uleb128 .LVU709
 10836 0558 01       		.uleb128 .LVU709
 10837 0559 01       		.uleb128 .LVU716
 10838 055a 01       		.uleb128 .LVU716
 10839 055b 00       		.uleb128 .LVU718
 10840 055c 00       		.uleb128 .LVU718
 10841 055d 00       		.uleb128 .LVU720
 10842 055e 00       		.uleb128 .LVU720
 10843 055f 01       		.uleb128 .LVU743
 10844 0560 01       		.uleb128 .LVU743
 10845 0561 00       		.uleb128 .LVU745
 10846 0562 00       		.uleb128 .LVU745
 10847 0563 01       		.uleb128 .LVU749
 10848 0564 01       		.uleb128 .LVU749
 10849 0565 00       		.uleb128 .LVU752
 10850 0566 00       		.uleb128 .LVU752
 10851 0567 01       		.uleb128 .LVU755
 10852 0568 01       		.uleb128 .LVU755
 10853 0569 00       		.uleb128 .LVU758
 10854 056a 00       		.uleb128 .LVU758
 10855 056b 01       		.uleb128 .LVU761
 10856 056c 01       		.uleb128 .LVU761
 10857 056d 00       		.uleb128 .LVU764
 10858 056e 00       		.uleb128 .LVU764
 10859 056f 01       		.uleb128 .LVU767
 10860 0570 01       		.uleb128 .LVU767
 10861 0571 00       		.uleb128 .LVU770
 10862 0572 00       		.uleb128 .LVU770
 10863 0573 01       		.uleb128 .LVU773
 10864 0574 01       		.uleb128 .LVU773
 10865 0575 00       		.uleb128 .LVU776
 10866 0576 00       		.uleb128 .LVU776
 10867 0577 00       		.uleb128 .LVU777
 10868 0578 00       		.uleb128 .LVU782
 10869 0579 00       		.uleb128 .LVU787
 10870 057a 00       		.uleb128 .LVU787
 10871 057b 00       		.uleb128 .LVU795
 10872 057c 00       		.uleb128 .LVU795
 10873 057d 01       		.uleb128 .LVU797
 10874 057e 01       		.uleb128 .LVU797
 10875 057f 00       		.uleb128 .LVU800
 10876 0580 00       		.uleb128 .LVU800
 10877 0581 00       		.uleb128 .LVU802
 10878 0582 00       		.uleb128 .LVU807
 10879 0583 01       		.uleb128 .LVU813
 10880 0584 01       		.uleb128 .LVU813
 10881 0585 00       		.uleb128 .LVU816
 10882 0586 00       		.uleb128 .LVU816
 10883 0587 00       		.uleb128 .LVU821
ARM GAS  /tmp/ccFy9xbE.s 			page 226


 10884 0588 00       		.uleb128 .LVU821
 10885 0589 01       		.uleb128 .LVU824
 10886 058a 01       		.uleb128 .LVU824
 10887 058b 01       		.uleb128 .LVU865
 10888 058c 01       		.uleb128 .LVU865
 10889 058d 00       		.uleb128 .LVU866
 10890 058e 00       		.uleb128 .LVU866
 10891 058f 03       		.uleb128 .LVU870
 10892 0590 03       		.uleb128 .LVU870
 10893 0591 00       		.uleb128 .LVU875
 10894 0592 00       		.uleb128 .LVU875
 10895 0593 01       		.uleb128 .LVU880
 10896 0594 01       		.uleb128 .LVU880
 10897 0595 00       		.uleb128 .LVU882
 10898 0596 00       		.uleb128 .LVU882
 10899 0597 02       		.uleb128 .LVU885
 10900 0598 02       		.uleb128 .LVU885
 10901 0599 00       		.uleb128 .LVU890
 10902 059a 00       		.uleb128 .LVU890
 10903 059b 00       		.uleb128 .LVU908
 10904 059c 00       		.uleb128 .LVU908
 10905 059d 01       		.uleb128 .LVU912
 10906 059e 01       		.uleb128 .LVU912
 10907 059f 00       		.uleb128 .LVU923
 10908 05a0 00       		.uleb128 .LVU923
 10909 05a1 01       		.uleb128 .LVU927
 10910 05a2 01       		.uleb128 .LVU927
 10911 05a3 00       		.uleb128 .LVU979
 10912 05a4 00       		.uleb128 .LVU979
 10913 05a5 01       		.uleb128 .LVU981
 10914 05a6 01       		.uleb128 .LVU981
 10915 05a7 00       		.uleb128 .LVU992
 10916 05a8 00       		.uleb128 .LVU992
 10917 05a9 01       		.uleb128 .LVU996
 10918 05aa 01       		.uleb128 .LVU996
 10919 05ab 00       		.uleb128 .LVU1015
 10920 05ac 00       		.uleb128 .LVU1015
 10921 05ad 01       		.uleb128 .LVU1018
 10922 05ae 01       		.uleb128 .LVU1018
 10923 05af 00       		.uleb128 .LVU1021
 10924 05b0 00       		.uleb128 .LVU1021
 10925 05b1 00       		.uleb128 .LVU1023
 10926 05b2 00       		.uleb128 .LVU1028
 10927 05b3 01       		.uleb128 .LVU1036
 10928 05b4 00       		.uleb128 .LVU1037
 10929 05b5 00       		.uleb128 .LVU1070
 10930 05b6 00       		.uleb128 .LVU1070
 10931 05b7 04       		.uleb128 .LVU1077
 10932 05b8 04       		.uleb128 .LVU1077
 10933 05b9 00       		.uleb128 .LVU1078
 10934 05ba 00       		.uleb128 .LVU1078
 10935 05bb 01       		.uleb128 .LVU1083
 10936 05bc 01       		.uleb128 .LVU1083
 10937 05bd 00       		.uleb128 .LVU1084
 10938 05be 00       		.uleb128 .LVU1084
 10939 05bf 00       		.uleb128 .LVU1085
 10940 05c0 00       		.uleb128 .LVU1085
ARM GAS  /tmp/ccFy9xbE.s 			page 227


 10941 05c1 01       		.uleb128 .LVU1089
 10942 05c2 01       		.uleb128 .LVU1089
 10943 05c3 00       		.uleb128 .LVU1090
 10944 05c4 00       		.uleb128 .LVU1090
 10945 05c5 00       		.uleb128 .LVU1094
 10946 05c6 00       		.uleb128 .LVU1094
 10947 05c7 00       		.uleb128 .LVU1095
 10948 05c8 00       		.uleb128 .LVU1095
 10949 05c9 00       		.uleb128 0
 10950              	.LLST95:
 10951 05ca 00000000 		.4byte	.LVL320
 10952 05ce 0E000000 		.4byte	.LVL321
 10953 05d2 0100     		.2byte	0x1
 10954 05d4 53       		.byte	0x53
 10955 05d5 0E000000 		.4byte	.LVL321
 10956 05d9 32000000 		.4byte	.LVL327
 10957 05dd 0100     		.2byte	0x1
 10958 05df 54       		.byte	0x54
 10959 05e0 32000000 		.4byte	.LVL327
 10960 05e4 38000000 		.4byte	.LVL329
 10961 05e8 0300     		.2byte	0x3
 10962 05ea 74       		.byte	0x74
 10963 05eb 7F       		.sleb128 -1
 10964 05ec 9F       		.byte	0x9f
 10965 05ed 38000000 		.4byte	.LVL329
 10966 05f1 44000000 		.4byte	.LVL331
 10967 05f5 0100     		.2byte	0x1
 10968 05f7 54       		.byte	0x54
 10969 05f8 44000000 		.4byte	.LVL331
 10970 05fc 46000000 		.4byte	.LVL332
 10971 0600 0300     		.2byte	0x3
 10972 0602 74       		.byte	0x74
 10973 0603 01       		.sleb128 1
 10974 0604 9F       		.byte	0x9f
 10975 0605 46000000 		.4byte	.LVL332
 10976 0609 4C000000 		.4byte	.LVL334
 10977 060d 0100     		.2byte	0x1
 10978 060f 53       		.byte	0x53
 10979 0610 4C000000 		.4byte	.LVL334
 10980 0614 C0000000 		.4byte	.LVL338
 10981 0618 0100     		.2byte	0x1
 10982 061a 54       		.byte	0x54
 10983 061b C0000000 		.4byte	.LVL338
 10984 061f C2000000 		.4byte	.LVL339
 10985 0623 0300     		.2byte	0x3
 10986 0625 74       		.byte	0x74
 10987 0626 01       		.sleb128 1
 10988 0627 9F       		.byte	0x9f
 10989 0628 C2000000 		.4byte	.LVL339
 10990 062c 7C010000 		.4byte	.LVL341
 10991 0630 0100     		.2byte	0x1
 10992 0632 54       		.byte	0x54
 10993 0633 7C010000 		.4byte	.LVL341
 10994 0637 7E010000 		.4byte	.LVL342
 10995 063b 0100     		.2byte	0x1
 10996 063d 53       		.byte	0x53
 10997 063e 7E010000 		.4byte	.LVL342
ARM GAS  /tmp/ccFy9xbE.s 			page 228


 10998 0642 82010000 		.4byte	.LVL343
 10999 0646 0100     		.2byte	0x1
 11000 0648 54       		.byte	0x54
 11001 0649 82010000 		.4byte	.LVL343
 11002 064d 84010000 		.4byte	.LVL344
 11003 0651 0100     		.2byte	0x1
 11004 0653 53       		.byte	0x53
 11005 0654 84010000 		.4byte	.LVL344
 11006 0658 88010000 		.4byte	.LVL345
 11007 065c 0100     		.2byte	0x1
 11008 065e 54       		.byte	0x54
 11009 065f 88010000 		.4byte	.LVL345
 11010 0663 8A010000 		.4byte	.LVL346
 11011 0667 0100     		.2byte	0x1
 11012 0669 53       		.byte	0x53
 11013 066a 8A010000 		.4byte	.LVL346
 11014 066e 8E010000 		.4byte	.LVL347
 11015 0672 0100     		.2byte	0x1
 11016 0674 54       		.byte	0x54
 11017 0675 8E010000 		.4byte	.LVL347
 11018 0679 90010000 		.4byte	.LVL348
 11019 067d 0100     		.2byte	0x1
 11020 067f 53       		.byte	0x53
 11021 0680 90010000 		.4byte	.LVL348
 11022 0684 94010000 		.4byte	.LVL349
 11023 0688 0100     		.2byte	0x1
 11024 068a 54       		.byte	0x54
 11025 068b 94010000 		.4byte	.LVL349
 11026 068f 96010000 		.4byte	.LVL350
 11027 0693 0100     		.2byte	0x1
 11028 0695 53       		.byte	0x53
 11029 0696 96010000 		.4byte	.LVL350
 11030 069a 98010000 		.4byte	.LVL351
 11031 069e 0100     		.2byte	0x1
 11032 06a0 54       		.byte	0x54
 11033 06a1 B2010000 		.4byte	.LVL353
 11034 06a5 BA010000 		.4byte	.LVL355
 11035 06a9 0100     		.2byte	0x1
 11036 06ab 54       		.byte	0x54
 11037 06ac BA010000 		.4byte	.LVL355
 11038 06b0 CE010000 		.4byte	.LVL356
 11039 06b4 0100     		.2byte	0x1
 11040 06b6 53       		.byte	0x53
 11041 06b7 CE010000 		.4byte	.LVL356
 11042 06bb D0010000 		.4byte	.LVL357
 11043 06bf 0100     		.2byte	0x1
 11044 06c1 54       		.byte	0x54
 11045 06c2 D0010000 		.4byte	.LVL357
 11046 06c6 DC010000 		.4byte	.LVL359
 11047 06ca 0300     		.2byte	0x3
 11048 06cc 74       		.byte	0x74
 11049 06cd 01       		.sleb128 1
 11050 06ce 9F       		.byte	0x9f
 11051 06cf DC010000 		.4byte	.LVL359
 11052 06d3 E2010000 		.4byte	.LVL360
 11053 06d7 0100     		.2byte	0x1
 11054 06d9 54       		.byte	0x54
ARM GAS  /tmp/ccFy9xbE.s 			page 229


 11055 06da E8010000 		.4byte	.LVL361
 11056 06de F0010000 		.4byte	.LVL363
 11057 06e2 0100     		.2byte	0x1
 11058 06e4 54       		.byte	0x54
 11059 06e5 F0010000 		.4byte	.LVL363
 11060 06e9 F4010000 		.4byte	.LVL364
 11061 06ed 0300     		.2byte	0x3
 11062 06ef 74       		.byte	0x74
 11063 06f0 01       		.sleb128 1
 11064 06f1 9F       		.byte	0x9f
 11065 06f2 F4010000 		.4byte	.LVL364
 11066 06f6 00020000 		.4byte	.LVL367
 11067 06fa 0100     		.2byte	0x1
 11068 06fc 54       		.byte	0x54
 11069 06fd 00020000 		.4byte	.LVL367
 11070 0701 06020000 		.4byte	.LVL369
 11071 0705 0300     		.2byte	0x3
 11072 0707 74       		.byte	0x74
 11073 0708 7F       		.sleb128 -1
 11074 0709 9F       		.byte	0x9f
 11075 070a 06020000 		.4byte	.LVL369
 11076 070e 92020000 		.4byte	.LVL382
 11077 0712 0100     		.2byte	0x1
 11078 0714 54       		.byte	0x54
 11079 0715 92020000 		.4byte	.LVL382
 11080 0719 94020000 		.4byte	.LVL383
 11081 071d 0300     		.2byte	0x3
 11082 071f 74       		.byte	0x74
 11083 0720 01       		.sleb128 1
 11084 0721 9F       		.byte	0x9f
 11085 0722 94020000 		.4byte	.LVL383
 11086 0726 96020000 		.4byte	.LVL384
 11087 072a 0100     		.2byte	0x1
 11088 072c 54       		.byte	0x54
 11089 072d 96020000 		.4byte	.LVL384
 11090 0731 A4020000 		.4byte	.LVL386
 11091 0735 0300     		.2byte	0x3
 11092 0737 74       		.byte	0x74
 11093 0738 01       		.sleb128 1
 11094 0739 9F       		.byte	0x9f
 11095 073a A4020000 		.4byte	.LVL386
 11096 073e AC020000 		.4byte	.LVL387
 11097 0742 0100     		.2byte	0x1
 11098 0744 54       		.byte	0x54
 11099 0745 AC020000 		.4byte	.LVL387
 11100 0749 AE020000 		.4byte	.LVL388
 11101 074d 0300     		.2byte	0x3
 11102 074f 74       		.byte	0x74
 11103 0750 01       		.sleb128 1
 11104 0751 9F       		.byte	0x9f
 11105 0752 AE020000 		.4byte	.LVL388
 11106 0756 B0020000 		.4byte	.LVL389
 11107 075a 0100     		.2byte	0x1
 11108 075c 54       		.byte	0x54
 11109 075d B0020000 		.4byte	.LVL389
 11110 0761 BE020000 		.4byte	.LVL391
 11111 0765 0300     		.2byte	0x3
ARM GAS  /tmp/ccFy9xbE.s 			page 230


 11112 0767 74       		.byte	0x74
 11113 0768 01       		.sleb128 1
 11114 0769 9F       		.byte	0x9f
 11115 076a BE020000 		.4byte	.LVL391
 11116 076e EA020000 		.4byte	.LVL396
 11117 0772 0100     		.2byte	0x1
 11118 0774 54       		.byte	0x54
 11119 0775 EA020000 		.4byte	.LVL396
 11120 0779 FC020000 		.4byte	.LVL399
 11121 077d 0300     		.2byte	0x3
 11122 077f 74       		.byte	0x74
 11123 0780 7F       		.sleb128 -1
 11124 0781 9F       		.byte	0x9f
 11125 0782 FC020000 		.4byte	.LVL399
 11126 0786 1A030000 		.4byte	.LVL404
 11127 078a 0100     		.2byte	0x1
 11128 078c 54       		.byte	0x54
 11129 078d 1A030000 		.4byte	.LVL404
 11130 0791 2C030000 		.4byte	.LVL407
 11131 0795 0300     		.2byte	0x3
 11132 0797 74       		.byte	0x74
 11133 0798 7F       		.sleb128 -1
 11134 0799 9F       		.byte	0x9f
 11135 079a 2C030000 		.4byte	.LVL407
 11136 079e D0030000 		.4byte	.LVL435
 11137 07a2 0100     		.2byte	0x1
 11138 07a4 54       		.byte	0x54
 11139 07a5 D0030000 		.4byte	.LVL435
 11140 07a9 D2030000 		.4byte	.LVL436
 11141 07ad 0300     		.2byte	0x3
 11142 07af 74       		.byte	0x74
 11143 07b0 7F       		.sleb128 -1
 11144 07b1 9F       		.byte	0x9f
 11145 07b2 D2030000 		.4byte	.LVL436
 11146 07b6 E6030000 		.4byte	.LVL441
 11147 07ba 0100     		.2byte	0x1
 11148 07bc 54       		.byte	0x54
 11149 07bd E6030000 		.4byte	.LVL441
 11150 07c1 FE030000 		.4byte	.LVL444
 11151 07c5 0300     		.2byte	0x3
 11152 07c7 74       		.byte	0x74
 11153 07c8 7F       		.sleb128 -1
 11154 07c9 9F       		.byte	0x9f
 11155 07ca FE030000 		.4byte	.LVL444
 11156 07ce 34040000 		.4byte	.LVL455
 11157 07d2 0100     		.2byte	0x1
 11158 07d4 54       		.byte	0x54
 11159 07d5 34040000 		.4byte	.LVL455
 11160 07d9 36040000 		.4byte	.LVL456
 11161 07dd 0100     		.2byte	0x1
 11162 07df 53       		.byte	0x53
 11163 07e0 36040000 		.4byte	.LVL456
 11164 07e4 42040000 		.4byte	.LVL458
 11165 07e8 0300     		.2byte	0x3
 11166 07ea 73       		.byte	0x73
 11167 07eb 01       		.sleb128 1
 11168 07ec 9F       		.byte	0x9f
ARM GAS  /tmp/ccFy9xbE.s 			page 231


 11169 07ed 42040000 		.4byte	.LVL458
 11170 07f1 48040000 		.4byte	.LVL459
 11171 07f5 0100     		.2byte	0x1
 11172 07f7 53       		.byte	0x53
 11173 07f8 50040000 		.4byte	.LVL460
 11174 07fc 5C040000 		.4byte	.LVL462
 11175 0800 0100     		.2byte	0x1
 11176 0802 53       		.byte	0x53
 11177 0803 5E040000 		.4byte	.LVL463
 11178 0807 C6040000 		.4byte	.LVL475
 11179 080b 0100     		.2byte	0x1
 11180 080d 54       		.byte	0x54
 11181 080e C6040000 		.4byte	.LVL475
 11182 0812 CC040000 		.4byte	.LVL477
 11183 0816 0300     		.2byte	0x3
 11184 0818 74       		.byte	0x74
 11185 0819 7F       		.sleb128 -1
 11186 081a 9F       		.byte	0x9f
 11187 081b CC040000 		.4byte	.LVL477
 11188 081f CE040000 		.4byte	.LVL478
 11189 0823 0100     		.2byte	0x1
 11190 0825 54       		.byte	0x54
 11191 0826 CE040000 		.4byte	.LVL478
 11192 082a D4040000 		.4byte	.LVL479
 11193 082e 0300     		.2byte	0x3
 11194 0830 74       		.byte	0x74
 11195 0831 01       		.sleb128 1
 11196 0832 9F       		.byte	0x9f
 11197 0833 D4040000 		.4byte	.LVL479
 11198 0837 D6040000 		.4byte	.LVL480
 11199 083b 0300     		.2byte	0x3
 11200 083d 74       		.byte	0x74
 11201 083e 02       		.sleb128 2
 11202 083f 9F       		.byte	0x9f
 11203 0840 D6040000 		.4byte	.LVL480
 11204 0844 D8040000 		.4byte	.LVL481
 11205 0848 0100     		.2byte	0x1
 11206 084a 54       		.byte	0x54
 11207 084b D8040000 		.4byte	.LVL481
 11208 084f DE040000 		.4byte	.LVL482
 11209 0853 0300     		.2byte	0x3
 11210 0855 74       		.byte	0x74
 11211 0856 01       		.sleb128 1
 11212 0857 9F       		.byte	0x9f
 11213 0858 DE040000 		.4byte	.LVL482
 11214 085c E0040000 		.4byte	.LVL483
 11215 0860 0300     		.2byte	0x3
 11216 0862 74       		.byte	0x74
 11217 0863 02       		.sleb128 2
 11218 0864 9F       		.byte	0x9f
 11219 0865 E0040000 		.4byte	.LVL483
 11220 0869 EC040000 		.4byte	.LVL486
 11221 086d 0100     		.2byte	0x1
 11222 086f 54       		.byte	0x54
 11223 0870 EC040000 		.4byte	.LVL486
 11224 0874 F0040000 		.4byte	.LVL487
 11225 0878 0400     		.2byte	0x4
ARM GAS  /tmp/ccFy9xbE.s 			page 232


 11226 087a F3       		.byte	0xf3
 11227 087b 01       		.uleb128 0x1
 11228 087c 53       		.byte	0x53
 11229 087d 9F       		.byte	0x9f
 11230 087e F0040000 		.4byte	.LVL487
 11231 0882 6A060000 		.4byte	.LFE13
 11232 0886 0100     		.2byte	0x1
 11233 0888 54       		.byte	0x54
 11234 0889 00000000 		.4byte	0
 11235 088d 00000000 		.4byte	0
 11236              	.LVUS96:
 11237 0891 00       		.uleb128 0
 11238 0892 00       		.uleb128 .LVU698
 11239 0893 00       		.uleb128 .LVU698
 11240 0894 02       		.uleb128 .LVU710
 11241 0895 02       		.uleb128 .LVU710
 11242 0896 00       		.uleb128 .LVU713
 11243 0897 00       		.uleb128 .LVU713
 11244 0898 00       		.uleb128 .LVU777
 11245 0899 00       		.uleb128 .LVU782
 11246 089a 02       		.uleb128 .LVU809
 11247 089b 02       		.uleb128 .LVU809
 11248 089c 00       		.uleb128 .LVU810
 11249 089d 00       		.uleb128 .LVU810
 11250 089e 00       		.uleb128 .LVU852
 11251 089f 00       		.uleb128 .LVU852
 11252 08a0 00       		.uleb128 .LVU854
 11253 08a1 00       		.uleb128 .LVU854
 11254 08a2 00       		.uleb128 .LVU855
 11255 08a3 00       		.uleb128 .LVU855
 11256 08a4 00       		.uleb128 .LVU895
 11257 08a5 00       		.uleb128 .LVU895
 11258 08a6 00       		.uleb128 .LVU899
 11259 08a7 01       		.uleb128 .LVU907
 11260 08a8 00       		.uleb128 .LVU909
 11261 08a9 00       		.uleb128 .LVU909
 11262 08aa 00       		.uleb128 .LVU917
 11263 08ab 00       		.uleb128 .LVU917
 11264 08ac 00       		.uleb128 .LVU921
 11265 08ad 00       		.uleb128 .LVU921
 11266 08ae 00       		.uleb128 .LVU924
 11267 08af 00       		.uleb128 .LVU924
 11268 08b0 00       		.uleb128 .LVU930
 11269 08b1 00       		.uleb128 .LVU930
 11270 08b2 00       		.uleb128 .LVU931
 11271 08b3 00       		.uleb128 .LVU931
 11272 08b4 00       		.uleb128 .LVU937
 11273 08b5 00       		.uleb128 .LVU937
 11274 08b6 00       		.uleb128 .LVU975
 11275 08b7 00       		.uleb128 .LVU975
 11276 08b8 00       		.uleb128 .LVU989
 11277 08b9 00       		.uleb128 .LVU989
 11278 08ba 00       		.uleb128 .LVU993
 11279 08bb 00       		.uleb128 .LVU993
 11280 08bc 01       		.uleb128 .LVU1002
 11281 08bd 01       		.uleb128 .LVU1002
 11282 08be 00       		.uleb128 .LVU1003
ARM GAS  /tmp/ccFy9xbE.s 			page 233


 11283 08bf 00       		.uleb128 .LVU1003
 11284 08c0 02       		.uleb128 .LVU1030
 11285 08c1 02       		.uleb128 .LVU1030
 11286 08c2 00       		.uleb128 .LVU1032
 11287 08c3 00       		.uleb128 .LVU1032
 11288 08c4 00       		.uleb128 .LVU1047
 11289 08c5 00       		.uleb128 .LVU1047
 11290 08c6 00       		.uleb128 .LVU1050
 11291 08c7 00       		.uleb128 .LVU1050
 11292 08c8 00       		.uleb128 .LVU1053
 11293 08c9 00       		.uleb128 .LVU1053
 11294 08ca 00       		.uleb128 .LVU1060
 11295 08cb 00       		.uleb128 .LVU1060
 11296 08cc 00       		.uleb128 .LVU1062
 11297 08cd 00       		.uleb128 .LVU1062
 11298 08ce 00       		.uleb128 .LVU1064
 11299 08cf 00       		.uleb128 .LVU1064
 11300 08d0 00       		.uleb128 .LVU1091
 11301 08d1 00       		.uleb128 .LVU1091
 11302 08d2 00       		.uleb128 .LVU1092
 11303 08d3 00       		.uleb128 .LVU1092
 11304 08d4 01       		.uleb128 .LVU1103
 11305 08d5 01       		.uleb128 .LVU1103
 11306 08d6 00       		.uleb128 .LVU1104
 11307 08d7 00       		.uleb128 .LVU1104
 11308 08d8 00       		.uleb128 .LVU1107
 11309 08d9 00       		.uleb128 .LVU1107
 11310 08da 00       		.uleb128 .LVU1129
 11311 08db 00       		.uleb128 .LVU1129
 11312 08dc 00       		.uleb128 .LVU1130
 11313 08dd 00       		.uleb128 .LVU1130
 11314 08de 00       		.uleb128 .LVU1131
 11315 08df 00       		.uleb128 .LVU1131
 11316 08e0 00       		.uleb128 .LVU1137
 11317 08e1 00       		.uleb128 .LVU1137
 11318 08e2 00       		.uleb128 .LVU1139
 11319 08e3 00       		.uleb128 .LVU1140
 11320 08e4 00       		.uleb128 .LVU1142
 11321 08e5 00       		.uleb128 .LVU1142
 11322 08e6 00       		.uleb128 .LVU1152
 11323 08e7 00       		.uleb128 .LVU1152
 11324 08e8 00       		.uleb128 .LVU1153
 11325 08e9 00       		.uleb128 .LVU1153
 11326 08ea 00       		.uleb128 .LVU1154
 11327 08eb 00       		.uleb128 .LVU1154
 11328 08ec 00       		.uleb128 .LVU1160
 11329 08ed 00       		.uleb128 .LVU1160
 11330 08ee 00       		.uleb128 .LVU1161
 11331 08ef 00       		.uleb128 .LVU1161
 11332 08f0 01       		.uleb128 .LVU1168
 11333 08f1 01       		.uleb128 .LVU1168
 11334 08f2 00       		.uleb128 .LVU1169
 11335 08f3 00       		.uleb128 .LVU1169
 11336 08f4 00       		.uleb128 .LVU1177
 11337 08f5 00       		.uleb128 .LVU1177
 11338 08f6 00       		.uleb128 .LVU1178
 11339 08f7 00       		.uleb128 .LVU1178
ARM GAS  /tmp/ccFy9xbE.s 			page 234


 11340 08f8 00       		.uleb128 .LVU1180
 11341 08f9 00       		.uleb128 .LVU1180
 11342 08fa 00       		.uleb128 .LVU1185
 11343 08fb 00       		.uleb128 .LVU1185
 11344 08fc 00       		.uleb128 0
 11345              	.LLST96:
 11346 08fd 00000000 		.4byte	.LVL320
 11347 0901 18000000 		.4byte	.LVL323
 11348 0905 0200     		.2byte	0x2
 11349 0907 91       		.byte	0x91
 11350 0908 00       		.sleb128 0
 11351 0909 18000000 		.4byte	.LVL323
 11352 090d 38000000 		.4byte	.LVL329
 11353 0911 0300     		.2byte	0x3
 11354 0913 56       		.byte	0x56
 11355 0914 93       		.byte	0x93
 11356 0915 04       		.uleb128 0x4
 11357 0916 38000000 		.4byte	.LVL329
 11358 091a 40000000 		.4byte	.LVL330
 11359 091e 0300     		.2byte	0x3
 11360 0920 56       		.byte	0x56
 11361 0921 93       		.byte	0x93
 11362 0922 04       		.uleb128 0x4
 11363 0923 40000000 		.4byte	.LVL330
 11364 0927 98010000 		.4byte	.LVL351
 11365 092b 0300     		.2byte	0x3
 11366 092d 56       		.byte	0x56
 11367 092e 93       		.byte	0x93
 11368 092f 04       		.uleb128 0x4
 11369 0930 B2010000 		.4byte	.LVL353
 11370 0934 E8010000 		.4byte	.LVL361
 11371 0938 0300     		.2byte	0x3
 11372 093a 56       		.byte	0x56
 11373 093b 93       		.byte	0x93
 11374 093c 04       		.uleb128 0x4
 11375 093d E8010000 		.4byte	.LVL361
 11376 0941 EC010000 		.4byte	.LVL362
 11377 0945 0500     		.2byte	0x5
 11378 0947 76       		.byte	0x76
 11379 0948 04       		.sleb128 4
 11380 0949 9F       		.byte	0x9f
 11381 094a 93       		.byte	0x93
 11382 094b 04       		.uleb128 0x4
 11383 094c EC010000 		.4byte	.LVL362
 11384 0950 6C020000 		.4byte	.LVL376
 11385 0954 0300     		.2byte	0x3
 11386 0956 56       		.byte	0x56
 11387 0957 93       		.byte	0x93
 11388 0958 04       		.uleb128 0x4
 11389 0959 6C020000 		.4byte	.LVL376
 11390 095d 74020000 		.4byte	.LVL377
 11391 0961 0500     		.2byte	0x5
 11392 0963 76       		.byte	0x76
 11393 0964 7C       		.sleb128 -4
 11394 0965 9F       		.byte	0x9f
 11395 0966 93       		.byte	0x93
 11396 0967 04       		.uleb128 0x4
ARM GAS  /tmp/ccFy9xbE.s 			page 235


 11397 0968 74020000 		.4byte	.LVL377
 11398 096c 78020000 		.4byte	.LVL378
 11399 0970 0500     		.2byte	0x5
 11400 0972 76       		.byte	0x76
 11401 0973 04       		.sleb128 4
 11402 0974 9F       		.byte	0x9f
 11403 0975 93       		.byte	0x93
 11404 0976 04       		.uleb128 0x4
 11405 0977 78020000 		.4byte	.LVL378
 11406 097b CA020000 		.4byte	.LVL392
 11407 097f 0300     		.2byte	0x3
 11408 0981 56       		.byte	0x56
 11409 0982 93       		.byte	0x93
 11410 0983 04       		.uleb128 0x4
 11411 0984 CA020000 		.4byte	.LVL392
 11412 0988 D4020000 		.4byte	.LVL393
 11413 098c 0500     		.2byte	0x5
 11414 098e 76       		.byte	0x76
 11415 098f 79       		.sleb128 -7
 11416 0990 9F       		.byte	0x9f
 11417 0991 93       		.byte	0x93
 11418 0992 04       		.uleb128 0x4
 11419 0993 E8020000 		.4byte	.LVL395
 11420 0997 F2020000 		.4byte	.LVL397
 11421 099b 0500     		.2byte	0x5
 11422 099d 76       		.byte	0x76
 11423 099e 08       		.sleb128 8
 11424 099f 9F       		.byte	0x9f
 11425 09a0 93       		.byte	0x93
 11426 09a1 04       		.uleb128 0x4
 11427 09a2 F2020000 		.4byte	.LVL397
 11428 09a6 04030000 		.4byte	.LVL401
 11429 09aa 0300     		.2byte	0x3
 11430 09ac 56       		.byte	0x56
 11431 09ad 93       		.byte	0x93
 11432 09ae 04       		.uleb128 0x4
 11433 09af 04030000 		.4byte	.LVL401
 11434 09b3 12030000 		.4byte	.LVL403
 11435 09b7 0500     		.2byte	0x5
 11436 09b9 76       		.byte	0x76
 11437 09ba 79       		.sleb128 -7
 11438 09bb 9F       		.byte	0x9f
 11439 09bc 93       		.byte	0x93
 11440 09bd 04       		.uleb128 0x4
 11441 09be 12030000 		.4byte	.LVL403
 11442 09c2 22030000 		.4byte	.LVL405
 11443 09c6 0500     		.2byte	0x5
 11444 09c8 76       		.byte	0x76
 11445 09c9 08       		.sleb128 8
 11446 09ca 9F       		.byte	0x9f
 11447 09cb 93       		.byte	0x93
 11448 09cc 04       		.uleb128 0x4
 11449 09cd 22030000 		.4byte	.LVL405
 11450 09d1 30030000 		.4byte	.LVL409
 11451 09d5 0300     		.2byte	0x3
 11452 09d7 56       		.byte	0x56
 11453 09d8 93       		.byte	0x93
ARM GAS  /tmp/ccFy9xbE.s 			page 236


 11454 09d9 04       		.uleb128 0x4
 11455 09da 30030000 		.4byte	.LVL409
 11456 09de 34030000 		.4byte	.LVL410
 11457 09e2 0500     		.2byte	0x5
 11458 09e4 73       		.byte	0x73
 11459 09e5 04       		.sleb128 4
 11460 09e6 9F       		.byte	0x9f
 11461 09e7 93       		.byte	0x93
 11462 09e8 04       		.uleb128 0x4
 11463 09e9 34030000 		.4byte	.LVL410
 11464 09ed 4A030000 		.4byte	.LVL412
 11465 09f1 0300     		.2byte	0x3
 11466 09f3 53       		.byte	0x53
 11467 09f4 93       		.byte	0x93
 11468 09f5 04       		.uleb128 0x4
 11469 09f6 4A030000 		.4byte	.LVL412
 11470 09fa C0030000 		.4byte	.LVL432
 11471 09fe 0400     		.2byte	0x4
 11472 0a00 91       		.byte	0x91
 11473 0a01 4C       		.sleb128 -52
 11474 0a02 93       		.byte	0x93
 11475 0a03 04       		.uleb128 0x4
 11476 0a04 C0030000 		.4byte	.LVL432
 11477 0a08 DA030000 		.4byte	.LVL439
 11478 0a0c 0300     		.2byte	0x3
 11479 0a0e 56       		.byte	0x56
 11480 0a0f 93       		.byte	0x93
 11481 0a10 04       		.uleb128 0x4
 11482 0a11 DA030000 		.4byte	.LVL439
 11483 0a15 F4030000 		.4byte	.LVL442
 11484 0a19 0500     		.2byte	0x5
 11485 0a1b 76       		.byte	0x76
 11486 0a1c 04       		.sleb128 4
 11487 0a1d 9F       		.byte	0x9f
 11488 0a1e 93       		.byte	0x93
 11489 0a1f 04       		.uleb128 0x4
 11490 0a20 F4030000 		.4byte	.LVL442
 11491 0a24 06040000 		.4byte	.LVL446
 11492 0a28 0300     		.2byte	0x3
 11493 0a2a 56       		.byte	0x56
 11494 0a2b 93       		.byte	0x93
 11495 0a2c 04       		.uleb128 0x4
 11496 0a2d 06040000 		.4byte	.LVL446
 11497 0a31 0A040000 		.4byte	.LVL447
 11498 0a35 0500     		.2byte	0x5
 11499 0a37 76       		.byte	0x76
 11500 0a38 04       		.sleb128 4
 11501 0a39 9F       		.byte	0x9f
 11502 0a3a 93       		.byte	0x93
 11503 0a3b 04       		.uleb128 0x4
 11504 0a3c 0A040000 		.4byte	.LVL447
 11505 0a40 50040000 		.4byte	.LVL460
 11506 0a44 0300     		.2byte	0x3
 11507 0a46 56       		.byte	0x56
 11508 0a47 93       		.byte	0x93
 11509 0a48 04       		.uleb128 0x4
 11510 0a49 50040000 		.4byte	.LVL460
ARM GAS  /tmp/ccFy9xbE.s 			page 237


 11511 0a4d 54040000 		.4byte	.LVL461
 11512 0a51 0500     		.2byte	0x5
 11513 0a53 76       		.byte	0x76
 11514 0a54 04       		.sleb128 4
 11515 0a55 9F       		.byte	0x9f
 11516 0a56 93       		.byte	0x93
 11517 0a57 04       		.uleb128 0x4
 11518 0a58 54040000 		.4byte	.LVL461
 11519 0a5c 72040000 		.4byte	.LVL467
 11520 0a60 0300     		.2byte	0x3
 11521 0a62 56       		.byte	0x56
 11522 0a63 93       		.byte	0x93
 11523 0a64 04       		.uleb128 0x4
 11524 0a65 72040000 		.4byte	.LVL467
 11525 0a69 74040000 		.4byte	.LVL468
 11526 0a6d 0300     		.2byte	0x3
 11527 0a6f 53       		.byte	0x53
 11528 0a70 93       		.byte	0x93
 11529 0a71 04       		.uleb128 0x4
 11530 0a72 74040000 		.4byte	.LVL468
 11531 0a76 80040000 		.4byte	.LVL470
 11532 0a7a 0400     		.2byte	0x4
 11533 0a7c 91       		.byte	0x91
 11534 0a7d 4C       		.sleb128 -52
 11535 0a7e 93       		.byte	0x93
 11536 0a7f 04       		.uleb128 0x4
 11537 0a80 80040000 		.4byte	.LVL470
 11538 0a84 98040000 		.4byte	.LVL471
 11539 0a88 0300     		.2byte	0x3
 11540 0a8a 56       		.byte	0x56
 11541 0a8b 93       		.byte	0x93
 11542 0a8c 04       		.uleb128 0x4
 11543 0a8d 98040000 		.4byte	.LVL471
 11544 0a91 A2040000 		.4byte	.LVL472
 11545 0a95 0500     		.2byte	0x5
 11546 0a97 76       		.byte	0x76
 11547 0a98 7C       		.sleb128 -4
 11548 0a99 9F       		.byte	0x9f
 11549 0a9a 93       		.byte	0x93
 11550 0a9b 04       		.uleb128 0x4
 11551 0a9c A2040000 		.4byte	.LVL472
 11552 0aa0 AE040000 		.4byte	.LVL473
 11553 0aa4 0500     		.2byte	0x5
 11554 0aa6 76       		.byte	0x76
 11555 0aa7 04       		.sleb128 4
 11556 0aa8 9F       		.byte	0x9f
 11557 0aa9 93       		.byte	0x93
 11558 0aaa 04       		.uleb128 0x4
 11559 0aab AE040000 		.4byte	.LVL473
 11560 0aaf E2040000 		.4byte	.LVL484
 11561 0ab3 0300     		.2byte	0x3
 11562 0ab5 56       		.byte	0x56
 11563 0ab6 93       		.byte	0x93
 11564 0ab7 04       		.uleb128 0x4
 11565 0ab8 E2040000 		.4byte	.LVL484
 11566 0abc EA040000 		.4byte	.LVL485
 11567 0ac0 0400     		.2byte	0x4
ARM GAS  /tmp/ccFy9xbE.s 			page 238


 11568 0ac2 91       		.byte	0x91
 11569 0ac3 4C       		.sleb128 -52
 11570 0ac4 93       		.byte	0x93
 11571 0ac5 04       		.uleb128 0x4
 11572 0ac6 EA040000 		.4byte	.LVL485
 11573 0aca 0E050000 		.4byte	.LVL492
 11574 0ace 0300     		.2byte	0x3
 11575 0ad0 56       		.byte	0x56
 11576 0ad1 93       		.byte	0x93
 11577 0ad2 04       		.uleb128 0x4
 11578 0ad3 0E050000 		.4byte	.LVL492
 11579 0ad7 12050000 		.4byte	.LVL493
 11580 0adb 0500     		.2byte	0x5
 11581 0add 76       		.byte	0x76
 11582 0ade 04       		.sleb128 4
 11583 0adf 9F       		.byte	0x9f
 11584 0ae0 93       		.byte	0x93
 11585 0ae1 04       		.uleb128 0x4
 11586 0ae2 12050000 		.4byte	.LVL493
 11587 0ae6 22050000 		.4byte	.LVL496
 11588 0aea 0300     		.2byte	0x3
 11589 0aec 56       		.byte	0x56
 11590 0aed 93       		.byte	0x93
 11591 0aee 04       		.uleb128 0x4
 11592 0aef 22050000 		.4byte	.LVL496
 11593 0af3 7A050000 		.4byte	.LVL510
 11594 0af7 0400     		.2byte	0x4
 11595 0af9 91       		.byte	0x91
 11596 0afa 4C       		.sleb128 -52
 11597 0afb 93       		.byte	0x93
 11598 0afc 04       		.uleb128 0x4
 11599 0afd 7A050000 		.4byte	.LVL510
 11600 0b01 80050000 		.4byte	.LVL511
 11601 0b05 0500     		.2byte	0x5
 11602 0b07 76       		.byte	0x76
 11603 0b08 04       		.sleb128 4
 11604 0b09 9F       		.byte	0x9f
 11605 0b0a 93       		.byte	0x93
 11606 0b0b 04       		.uleb128 0x4
 11607 0b0c 80050000 		.4byte	.LVL511
 11608 0b10 84050000 		.4byte	.LVL512
 11609 0b14 0500     		.2byte	0x5
 11610 0b16 76       		.byte	0x76
 11611 0b17 04       		.sleb128 4
 11612 0b18 9F       		.byte	0x9f
 11613 0b19 93       		.byte	0x93
 11614 0b1a 04       		.uleb128 0x4
 11615 0b1b 84050000 		.4byte	.LVL512
 11616 0b1f 90050000 		.4byte	.LVL514
 11617 0b23 0300     		.2byte	0x3
 11618 0b25 56       		.byte	0x56
 11619 0b26 93       		.byte	0x93
 11620 0b27 04       		.uleb128 0x4
 11621 0b28 90050000 		.4byte	.LVL514
 11622 0b2c 96050000 		.4byte	.LVL515
 11623 0b30 0500     		.2byte	0x5
 11624 0b32 76       		.byte	0x76
ARM GAS  /tmp/ccFy9xbE.s 			page 239


 11625 0b33 79       		.sleb128 -7
 11626 0b34 9F       		.byte	0x9f
 11627 0b35 93       		.byte	0x93
 11628 0b36 04       		.uleb128 0x4
 11629 0b37 98050000 		.4byte	.LVL516
 11630 0b3b 9C050000 		.4byte	.LVL517
 11631 0b3f 0500     		.2byte	0x5
 11632 0b41 76       		.byte	0x76
 11633 0b42 08       		.sleb128 8
 11634 0b43 9F       		.byte	0x9f
 11635 0b44 93       		.byte	0x93
 11636 0b45 04       		.uleb128 0x4
 11637 0b46 9C050000 		.4byte	.LVL517
 11638 0b4a CA050000 		.4byte	.LVL520
 11639 0b4e 0300     		.2byte	0x3
 11640 0b50 56       		.byte	0x56
 11641 0b51 93       		.byte	0x93
 11642 0b52 04       		.uleb128 0x4
 11643 0b53 CA050000 		.4byte	.LVL520
 11644 0b57 D4050000 		.4byte	.LVL521
 11645 0b5b 0500     		.2byte	0x5
 11646 0b5d 76       		.byte	0x76
 11647 0b5e 79       		.sleb128 -7
 11648 0b5f 9F       		.byte	0x9f
 11649 0b60 93       		.byte	0x93
 11650 0b61 04       		.uleb128 0x4
 11651 0b62 D4050000 		.4byte	.LVL521
 11652 0b66 E8050000 		.4byte	.LVL522
 11653 0b6a 0500     		.2byte	0x5
 11654 0b6c 76       		.byte	0x76
 11655 0b6d 08       		.sleb128 8
 11656 0b6e 9F       		.byte	0x9f
 11657 0b6f 93       		.byte	0x93
 11658 0b70 04       		.uleb128 0x4
 11659 0b71 E8050000 		.4byte	.LVL522
 11660 0b75 FC050000 		.4byte	.LVL526
 11661 0b79 0300     		.2byte	0x3
 11662 0b7b 56       		.byte	0x56
 11663 0b7c 93       		.byte	0x93
 11664 0b7d 04       		.uleb128 0x4
 11665 0b7e FC050000 		.4byte	.LVL526
 11666 0b82 0E060000 		.4byte	.LVL527
 11667 0b86 0500     		.2byte	0x5
 11668 0b88 76       		.byte	0x76
 11669 0b89 04       		.sleb128 4
 11670 0b8a 9F       		.byte	0x9f
 11671 0b8b 93       		.byte	0x93
 11672 0b8c 04       		.uleb128 0x4
 11673 0b8d 0E060000 		.4byte	.LVL527
 11674 0b91 20060000 		.4byte	.LVL531
 11675 0b95 0300     		.2byte	0x3
 11676 0b97 56       		.byte	0x56
 11677 0b98 93       		.byte	0x93
 11678 0b99 04       		.uleb128 0x4
 11679 0b9a 20060000 		.4byte	.LVL531
 11680 0b9e 24060000 		.4byte	.LVL532
 11681 0ba2 0500     		.2byte	0x5
ARM GAS  /tmp/ccFy9xbE.s 			page 240


 11682 0ba4 76       		.byte	0x76
 11683 0ba5 04       		.sleb128 4
 11684 0ba6 9F       		.byte	0x9f
 11685 0ba7 93       		.byte	0x93
 11686 0ba8 04       		.uleb128 0x4
 11687 0ba9 24060000 		.4byte	.LVL532
 11688 0bad 4A060000 		.4byte	.LVL535
 11689 0bb1 0300     		.2byte	0x3
 11690 0bb3 56       		.byte	0x56
 11691 0bb4 93       		.byte	0x93
 11692 0bb5 04       		.uleb128 0x4
 11693 0bb6 4A060000 		.4byte	.LVL535
 11694 0bba 54060000 		.4byte	.LVL536
 11695 0bbe 0500     		.2byte	0x5
 11696 0bc0 76       		.byte	0x76
 11697 0bc1 04       		.sleb128 4
 11698 0bc2 9F       		.byte	0x9f
 11699 0bc3 93       		.byte	0x93
 11700 0bc4 04       		.uleb128 0x4
 11701 0bc5 54060000 		.4byte	.LVL536
 11702 0bc9 58060000 		.4byte	.LVL537
 11703 0bcd 0300     		.2byte	0x3
 11704 0bcf 53       		.byte	0x53
 11705 0bd0 93       		.byte	0x93
 11706 0bd1 04       		.uleb128 0x4
 11707 0bd2 58060000 		.4byte	.LVL537
 11708 0bd6 66060000 		.4byte	.LVL541
 11709 0bda 0400     		.2byte	0x4
 11710 0bdc 91       		.byte	0x91
 11711 0bdd 4C       		.sleb128 -52
 11712 0bde 93       		.byte	0x93
 11713 0bdf 04       		.uleb128 0x4
 11714 0be0 66060000 		.4byte	.LVL541
 11715 0be4 6A060000 		.4byte	.LFE13
 11716 0be8 0300     		.2byte	0x3
 11717 0bea 56       		.byte	0x56
 11718 0beb 93       		.byte	0x93
 11719 0bec 04       		.uleb128 0x4
 11720 0bed 00000000 		.4byte	0
 11721 0bf1 00000000 		.4byte	0
 11722              	.LVUS97:
 11723 0bf5 02       		.uleb128 .LVU717
 11724 0bf6 00       		.uleb128 .LVU719
 11725 0bf7 00       		.uleb128 .LVU720
 11726 0bf8 00       		.uleb128 .LVU776
 11727 0bf9 00       		.uleb128 .LVU782
 11728 0bfa 00       		.uleb128 .LVU823
 11729 0bfb 00       		.uleb128 .LVU825
 11730 0bfc 02       		.uleb128 .LVU869
 11731 0bfd 02       		.uleb128 .LVU869
 11732 0bfe 00       		.uleb128 .LVU874
 11733 0bff 00       		.uleb128 .LVU874
 11734 0c00 01       		.uleb128 .LVU884
 11735 0c01 01       		.uleb128 .LVU884
 11736 0c02 00       		.uleb128 .LVU889
 11737 0c03 00       		.uleb128 .LVU889
 11738 0c04 00       		.uleb128 .LVU910
ARM GAS  /tmp/ccFy9xbE.s 			page 241


 11739 0c05 00       		.uleb128 .LVU913
 11740 0c06 00       		.uleb128 .LVU925
 11741 0c07 00       		.uleb128 .LVU928
 11742 0c08 00       		.uleb128 .LVU955
 11743 0c09 00       		.uleb128 .LVU975
 11744 0c0a 00       		.uleb128 .LVU980
 11745 0c0b 00       		.uleb128 .LVU982
 11746 0c0c 02       		.uleb128 .LVU984
 11747 0c0d 02       		.uleb128 .LVU984
 11748 0c0e 00       		.uleb128 .LVU988
 11749 0c0f 00       		.uleb128 .LVU988
 11750 0c10 00       		.uleb128 .LVU990
 11751 0c11 00       		.uleb128 .LVU990
 11752 0c12 00       		.uleb128 .LVU994
 11753 0c13 00       		.uleb128 .LVU997
 11754 0c14 00       		.uleb128 .LVU1005
 11755 0c15 00       		.uleb128 .LVU1015
 11756 0c16 00       		.uleb128 .LVU1072
 11757 0c17 00       		.uleb128 .LVU1078
 11758 0c18 00       		.uleb128 .LVU1082
 11759 0c19 00       		.uleb128 .LVU1082
 11760 0c1a 00       		.uleb128 .LVU1085
 11761 0c1b 00       		.uleb128 .LVU1085
 11762 0c1c 00       		.uleb128 .LVU1088
 11763 0c1d 00       		.uleb128 .LVU1088
 11764 0c1e 00       		.uleb128 .LVU1092
 11765 0c1f 00       		.uleb128 .LVU1095
 11766 0c20 00       		.uleb128 .LVU1097
 11767 0c21 00       		.uleb128 .LVU1115
 11768 0c22 00       		.uleb128 .LVU1120
 11769 0c23 00       		.uleb128 .LVU1129
 11770 0c24 00       		.uleb128 .LVU1131
 11771 0c25 00       		.uleb128 .LVU1133
 11772 0c26 00       		.uleb128 .LVU1148
 11773 0c27 00       		.uleb128 .LVU1150
 11774 0c28 00       		.uleb128 .LVU1155
 11775 0c29 00       		.uleb128 .LVU1157
 11776 0c2a 00       		.uleb128 .LVU1162
 11777 0c2b 00       		.uleb128 .LVU1164
 11778 0c2c 00       		.uleb128 .LVU1175
 11779 0c2d 00       		.uleb128 .LVU1177
 11780 0c2e 00       		.uleb128 0
 11781              	.LLST97:
 11782 0c2f 44000000 		.4byte	.LVL331
 11783 0c33 4A000000 		.4byte	.LVL333
 11784 0c37 0200     		.2byte	0x2
 11785 0c39 30       		.byte	0x30
 11786 0c3a 9F       		.byte	0x9f
 11787 0c3b 4C000000 		.4byte	.LVL334
 11788 0c3f 96010000 		.4byte	.LVL350
 11789 0c43 0100     		.2byte	0x1
 11790 0c45 5C       		.byte	0x5c
 11791 0c46 B2010000 		.4byte	.LVL353
 11792 0c4a 05020000 		.4byte	.LVL369-1
 11793 0c4e 0100     		.2byte	0x1
 11794 0c50 5C       		.byte	0x5c
 11795 0c51 0C020000 		.4byte	.LVL370
ARM GAS  /tmp/ccFy9xbE.s 			page 242


 11796 0c55 96020000 		.4byte	.LVL384
 11797 0c59 0100     		.2byte	0x1
 11798 0c5b 5C       		.byte	0x5c
 11799 0c5c 96020000 		.4byte	.LVL384
 11800 0c60 A2020000 		.4byte	.LVL385
 11801 0c64 0700     		.2byte	0x7
 11802 0c66 7C       		.byte	0x7c
 11803 0c67 00       		.sleb128 0
 11804 0c68 0A       		.byte	0xa
 11805 0c69 0001     		.2byte	0x100
 11806 0c6b 21       		.byte	0x21
 11807 0c6c 9F       		.byte	0x9f
 11808 0c6d A2020000 		.4byte	.LVL385
 11809 0c71 B0020000 		.4byte	.LVL389
 11810 0c75 0100     		.2byte	0x1
 11811 0c77 5C       		.byte	0x5c
 11812 0c78 B0020000 		.4byte	.LVL389
 11813 0c7c BC020000 		.4byte	.LVL390
 11814 0c80 0600     		.2byte	0x6
 11815 0c82 7C       		.byte	0x7c
 11816 0c83 00       		.sleb128 0
 11817 0c84 08       		.byte	0x8
 11818 0c85 80       		.byte	0x80
 11819 0c86 21       		.byte	0x21
 11820 0c87 9F       		.byte	0x9f
 11821 0c88 BC020000 		.4byte	.LVL390
 11822 0c8c F9020000 		.4byte	.LVL398-1
 11823 0c90 0100     		.2byte	0x1
 11824 0c92 5C       		.byte	0x5c
 11825 0c93 FE020000 		.4byte	.LVL400
 11826 0c97 29030000 		.4byte	.LVL406-1
 11827 0c9b 0100     		.2byte	0x1
 11828 0c9d 5C       		.byte	0x5c
 11829 0c9e 2E030000 		.4byte	.LVL408
 11830 0ca2 88030000 		.4byte	.LVL419
 11831 0ca6 0100     		.2byte	0x1
 11832 0ca8 5C       		.byte	0x5c
 11833 0ca9 C0030000 		.4byte	.LVL432
 11834 0cad D1030000 		.4byte	.LVL436-1
 11835 0cb1 0100     		.2byte	0x1
 11836 0cb3 5C       		.byte	0x5c
 11837 0cb4 D4030000 		.4byte	.LVL437
 11838 0cb8 D4030000 		.4byte	.LVL437
 11839 0cbc 0100     		.2byte	0x1
 11840 0cbe 5C       		.byte	0x5c
 11841 0cbf D4030000 		.4byte	.LVL437
 11842 0cc3 D8030000 		.4byte	.LVL438
 11843 0cc7 0600     		.2byte	0x6
 11844 0cc9 7C       		.byte	0x7c
 11845 0cca 00       		.sleb128 0
 11846 0ccb 08       		.byte	0x8
 11847 0ccc 21       		.byte	0x21
 11848 0ccd 21       		.byte	0x21
 11849 0cce 9F       		.byte	0x9f
 11850 0ccf D8030000 		.4byte	.LVL438
 11851 0cd3 E2030000 		.4byte	.LVL440
 11852 0cd7 0100     		.2byte	0x1
ARM GAS  /tmp/ccFy9xbE.s 			page 243


 11853 0cd9 53       		.byte	0x53
 11854 0cda E2030000 		.4byte	.LVL440
 11855 0cde FB030000 		.4byte	.LVL443-1
 11856 0ce2 0300     		.2byte	0x3
 11857 0ce4 91       		.byte	0x91
 11858 0ce5 AC7F     		.sleb128 -84
 11859 0ce7 00040000 		.4byte	.LVL445
 11860 0ceb 17040000 		.4byte	.LVL449-1
 11861 0cef 0100     		.2byte	0x1
 11862 0cf1 5C       		.byte	0x5c
 11863 0cf2 34040000 		.4byte	.LVL455
 11864 0cf6 C9040000 		.4byte	.LVL476-1
 11865 0cfa 0100     		.2byte	0x1
 11866 0cfc 5C       		.byte	0x5c
 11867 0cfd CE040000 		.4byte	.LVL478
 11868 0d01 D4040000 		.4byte	.LVL479
 11869 0d05 0600     		.2byte	0x6
 11870 0d07 7C       		.byte	0x7c
 11871 0d08 00       		.sleb128 0
 11872 0d09 08       		.byte	0x8
 11873 0d0a 80       		.byte	0x80
 11874 0d0b 21       		.byte	0x21
 11875 0d0c 9F       		.byte	0x9f
 11876 0d0d D4040000 		.4byte	.LVL479
 11877 0d11 D8040000 		.4byte	.LVL481
 11878 0d15 0100     		.2byte	0x1
 11879 0d17 5C       		.byte	0x5c
 11880 0d18 D8040000 		.4byte	.LVL481
 11881 0d1c DE040000 		.4byte	.LVL482
 11882 0d20 0700     		.2byte	0x7
 11883 0d22 7C       		.byte	0x7c
 11884 0d23 00       		.sleb128 0
 11885 0d24 0A       		.byte	0xa
 11886 0d25 0001     		.2byte	0x100
 11887 0d27 21       		.byte	0x21
 11888 0d28 9F       		.byte	0x9f
 11889 0d29 DE040000 		.4byte	.LVL482
 11890 0d2d EA040000 		.4byte	.LVL485
 11891 0d31 0100     		.2byte	0x1
 11892 0d33 5C       		.byte	0x5c
 11893 0d34 F0040000 		.4byte	.LVL487
 11894 0d38 FC040000 		.4byte	.LVL488
 11895 0d3c 0100     		.2byte	0x1
 11896 0d3e 5C       		.byte	0x5c
 11897 0d3f 46050000 		.4byte	.LVL500
 11898 0d43 58050000 		.4byte	.LVL502
 11899 0d47 0100     		.2byte	0x1
 11900 0d49 5C       		.byte	0x5c
 11901 0d4a 7A050000 		.4byte	.LVL510
 11902 0d4e 84050000 		.4byte	.LVL512
 11903 0d52 0100     		.2byte	0x1
 11904 0d54 5C       		.byte	0x5c
 11905 0d55 88050000 		.4byte	.LVL513
 11906 0d59 C3050000 		.4byte	.LVL518-1
 11907 0d5d 0100     		.2byte	0x1
 11908 0d5f 5C       		.byte	0x5c
 11909 0d60 C8050000 		.4byte	.LVL519
ARM GAS  /tmp/ccFy9xbE.s 			page 244


 11910 0d64 EF050000 		.4byte	.LVL523-1
 11911 0d68 0100     		.2byte	0x1
 11912 0d6a 5C       		.byte	0x5c
 11913 0d6b F4050000 		.4byte	.LVL524
 11914 0d6f 15060000 		.4byte	.LVL528-1
 11915 0d73 0100     		.2byte	0x1
 11916 0d75 5C       		.byte	0x5c
 11917 0d76 1A060000 		.4byte	.LVL529
 11918 0d7a 45060000 		.4byte	.LVL534-1
 11919 0d7e 0100     		.2byte	0x1
 11920 0d80 5C       		.byte	0x5c
 11921 0d81 4A060000 		.4byte	.LVL535
 11922 0d85 6A060000 		.4byte	.LFE13
 11923 0d89 0100     		.2byte	0x1
 11924 0d8b 5C       		.byte	0x5c
 11925 0d8c 00000000 		.4byte	0
 11926 0d90 00000000 		.4byte	0
 11927              	.LVUS98:
 11928 0d94 02       		.uleb128 .LVU726
 11929 0d95 00       		.uleb128 .LVU734
 11930 0d96 00       		.uleb128 .LVU734
 11931 0d97 00       		.uleb128 .LVU746
 11932 0d98 00       		.uleb128 .LVU782
 11933 0d99 00       		.uleb128 .LVU795
 11934 0d9a 00       		.uleb128 .LVU795
 11935 0d9b 00       		.uleb128 .LVU812
 11936 0d9c 00       		.uleb128 .LVU812
 11937 0d9d 00       		.uleb128 .LVU858
 11938 0d9e 00       		.uleb128 .LVU858
 11939 0d9f 00       		.uleb128 .LVU864
 11940 0da0 00       		.uleb128 .LVU864
 11941 0da1 00       		.uleb128 .LVU957
 11942 0da2 00       		.uleb128 .LVU957
 11943 0da3 00       		.uleb128 .LVU970
 11944 0da4 00       		.uleb128 .LVU975
 11945 0da5 01       		.uleb128 .LVU983
 11946 0da6 01       		.uleb128 .LVU983
 11947 0da7 00       		.uleb128 .LVU997
 11948 0da8 00       		.uleb128 .LVU997
 11949 0da9 00       		.uleb128 .LVU1012
 11950 0daa 00       		.uleb128 .LVU1015
 11951 0dab 00       		.uleb128 .LVU1092
 11952 0dac 00       		.uleb128 .LVU1095
 11953 0dad 00       		.uleb128 .LVU1097
 11954 0dae 00       		.uleb128 .LVU1115
 11955 0daf 00       		.uleb128 .LVU1173
 11956 0db0 00       		.uleb128 .LVU1173
 11957 0db1 00       		.uleb128 .LVU1175
 11958 0db2 00       		.uleb128 .LVU1177
 11959 0db3 00       		.uleb128 .LVU1187
 11960              	.LLST98:
 11961 0db4 6E000000 		.4byte	.LVL335
 11962 0db8 80000000 		.4byte	.LVL336
 11963 0dbc 0200     		.2byte	0x2
 11964 0dbe 30       		.byte	0x30
 11965 0dbf 9F       		.byte	0x9f
 11966 0dc0 80000000 		.4byte	.LVL336
ARM GAS  /tmp/ccFy9xbE.s 			page 245


 11967 0dc4 78010000 		.4byte	.LVL340
 11968 0dc8 0100     		.2byte	0x1
 11969 0dca 55       		.byte	0x55
 11970 0dcb B2010000 		.4byte	.LVL353
 11971 0dcf CE010000 		.4byte	.LVL356
 11972 0dd3 0100     		.2byte	0x1
 11973 0dd5 55       		.byte	0x55
 11974 0dd6 CE010000 		.4byte	.LVL356
 11975 0dda F0010000 		.4byte	.LVL363
 11976 0dde 0200     		.2byte	0x2
 11977 0de0 30       		.byte	0x30
 11978 0de1 9F       		.byte	0x9f
 11979 0de2 F0010000 		.4byte	.LVL363
 11980 0de6 8A020000 		.4byte	.LVL380
 11981 0dea 0100     		.2byte	0x1
 11982 0dec 55       		.byte	0x55
 11983 0ded 8A020000 		.4byte	.LVL380
 11984 0df1 92020000 		.4byte	.LVL382
 11985 0df5 0200     		.2byte	0x2
 11986 0df7 30       		.byte	0x30
 11987 0df8 9F       		.byte	0x9f
 11988 0df9 92020000 		.4byte	.LVL382
 11989 0dfd 90030000 		.4byte	.LVL421
 11990 0e01 0100     		.2byte	0x1
 11991 0e03 55       		.byte	0x55
 11992 0e04 90030000 		.4byte	.LVL421
 11993 0e08 BA030000 		.4byte	.LVL430
 11994 0e0c 0200     		.2byte	0x2
 11995 0e0e 91       		.byte	0x91
 11996 0e0f 44       		.sleb128 -60
 11997 0e10 C0030000 		.4byte	.LVL432
 11998 0e14 D4030000 		.4byte	.LVL437
 11999 0e18 0100     		.2byte	0x1
 12000 0e1a 55       		.byte	0x55
 12001 0e1b D4030000 		.4byte	.LVL437
 12002 0e1f 00040000 		.4byte	.LVL445
 12003 0e23 0200     		.2byte	0x2
 12004 0e25 38       		.byte	0x38
 12005 0e26 9F       		.byte	0x9f
 12006 0e27 00040000 		.4byte	.LVL445
 12007 0e2b 30040000 		.4byte	.LVL453
 12008 0e2f 0100     		.2byte	0x1
 12009 0e31 55       		.byte	0x55
 12010 0e32 34040000 		.4byte	.LVL455
 12011 0e36 EA040000 		.4byte	.LVL485
 12012 0e3a 0100     		.2byte	0x1
 12013 0e3c 55       		.byte	0x55
 12014 0e3d F0040000 		.4byte	.LVL487
 12015 0e41 FC040000 		.4byte	.LVL488
 12016 0e45 0100     		.2byte	0x1
 12017 0e47 55       		.byte	0x55
 12018 0e48 46050000 		.4byte	.LVL500
 12019 0e4c 34060000 		.4byte	.LVL533
 12020 0e50 0100     		.2byte	0x1
 12021 0e52 55       		.byte	0x55
 12022 0e53 34060000 		.4byte	.LVL533
 12023 0e57 45060000 		.4byte	.LVL534-1
ARM GAS  /tmp/ccFy9xbE.s 			page 246


 12024 0e5b 0300     		.2byte	0x3
 12025 0e5d 91       		.byte	0x91
 12026 0e5e A87F     		.sleb128 -88
 12027 0e60 4A060000 		.4byte	.LVL535
 12028 0e64 68060000 		.4byte	.LVL542
 12029 0e68 0100     		.2byte	0x1
 12030 0e6a 55       		.byte	0x55
 12031 0e6b 00000000 		.4byte	0
 12032 0e6f 00000000 		.4byte	0
 12033              	.LVUS99:
 12034 0e73 01       		.uleb128 .LVU735
 12035 0e74 00       		.uleb128 .LVU738
 12036 0e75 00       		.uleb128 .LVU738
 12037 0e76 00       		.uleb128 .LVU746
 12038 0e77 00       		.uleb128 .LVU782
 12039 0e78 00       		.uleb128 .LVU795
 12040 0e79 00       		.uleb128 .LVU817
 12041 0e7a 00       		.uleb128 .LVU858
 12042 0e7b 00       		.uleb128 .LVU867
 12043 0e7c 00       		.uleb128 .LVU962
 12044 0e7d 00       		.uleb128 .LVU962
 12045 0e7e 00       		.uleb128 .LVU963
 12046 0e7f 00       		.uleb128 .LVU963
 12047 0e80 00       		.uleb128 .LVU968
 12048 0e81 00       		.uleb128 .LVU975
 12049 0e82 00       		.uleb128 .LVU1004
 12050 0e83 00       		.uleb128 .LVU1015
 12051 0e84 00       		.uleb128 .LVU1035
 12052 0e85 00       		.uleb128 .LVU1035
 12053 0e86 00       		.uleb128 .LVU1092
 12054 0e87 00       		.uleb128 .LVU1095
 12055 0e88 00       		.uleb128 .LVU1107
 12056 0e89 00       		.uleb128 .LVU1115
 12057 0e8a 00       		.uleb128 .LVU1131
 12058 0e8b 00       		.uleb128 .LVU1133
 12059 0e8c 00       		.uleb128 0
 12060              	.LLST99:
 12061 0e8d 80000000 		.4byte	.LVL336
 12062 0e91 88000000 		.4byte	.LVL337
 12063 0e95 0200     		.2byte	0x2
 12064 0e97 30       		.byte	0x30
 12065 0e98 9F       		.byte	0x9f
 12066 0e99 88000000 		.4byte	.LVL337
 12067 0e9d 78010000 		.4byte	.LVL340
 12068 0ea1 0100     		.2byte	0x1
 12069 0ea3 57       		.byte	0x57
 12070 0ea4 B2010000 		.4byte	.LVL353
 12071 0ea8 CE010000 		.4byte	.LVL356
 12072 0eac 0200     		.2byte	0x2
 12073 0eae 30       		.byte	0x30
 12074 0eaf 9F       		.byte	0x9f
 12075 0eb0 F6010000 		.4byte	.LVL365
 12076 0eb4 8A020000 		.4byte	.LVL380
 12077 0eb8 0100     		.2byte	0x1
 12078 0eba 57       		.byte	0x57
 12079 0ebb 96020000 		.4byte	.LVL384
 12080 0ebf 9E030000 		.4byte	.LVL425
ARM GAS  /tmp/ccFy9xbE.s 			page 247


 12081 0ec3 0100     		.2byte	0x1
 12082 0ec5 57       		.byte	0x57
 12083 0ec6 9E030000 		.4byte	.LVL425
 12084 0eca A2030000 		.4byte	.LVL426
 12085 0ece 0100     		.2byte	0x1
 12086 0ed0 5C       		.byte	0x5c
 12087 0ed1 A2030000 		.4byte	.LVL426
 12088 0ed5 B0030000 		.4byte	.LVL429
 12089 0ed9 0100     		.2byte	0x1
 12090 0edb 57       		.byte	0x57
 12091 0edc C0030000 		.4byte	.LVL432
 12092 0ee0 16040000 		.4byte	.LVL448
 12093 0ee4 0100     		.2byte	0x1
 12094 0ee6 57       		.byte	0x57
 12095 0ee7 34040000 		.4byte	.LVL455
 12096 0eeb 5C040000 		.4byte	.LVL462
 12097 0eef 0200     		.2byte	0x2
 12098 0ef1 30       		.byte	0x30
 12099 0ef2 9F       		.byte	0x9f
 12100 0ef3 5C040000 		.4byte	.LVL462
 12101 0ef7 EA040000 		.4byte	.LVL485
 12102 0efb 0100     		.2byte	0x1
 12103 0efd 57       		.byte	0x57
 12104 0efe F0040000 		.4byte	.LVL487
 12105 0f02 22050000 		.4byte	.LVL496
 12106 0f06 0100     		.2byte	0x1
 12107 0f08 57       		.byte	0x57
 12108 0f09 46050000 		.4byte	.LVL500
 12109 0f0d 84050000 		.4byte	.LVL512
 12110 0f11 0100     		.2byte	0x1
 12111 0f13 57       		.byte	0x57
 12112 0f14 88050000 		.4byte	.LVL513
 12113 0f18 6A060000 		.4byte	.LFE13
 12114 0f1c 0100     		.2byte	0x1
 12115 0f1e 57       		.byte	0x57
 12116 0f1f 00000000 		.4byte	0
 12117 0f23 00000000 		.4byte	0
 12118              	.LVUS100:
 12119 0f27 00       		.uleb128 .LVU724
 12120 0f28 00       		.uleb128 .LVU746
 12121 0f29 02       		.uleb128 .LVU750
 12122 0f2a 00       		.uleb128 .LVU752
 12123 0f2b 02       		.uleb128 .LVU756
 12124 0f2c 00       		.uleb128 .LVU758
 12125 0f2d 02       		.uleb128 .LVU762
 12126 0f2e 00       		.uleb128 .LVU764
 12127 0f2f 02       		.uleb128 .LVU768
 12128 0f30 00       		.uleb128 .LVU770
 12129 0f31 02       		.uleb128 .LVU774
 12130 0f32 00       		.uleb128 .LVU776
 12131 0f33 00       		.uleb128 .LVU782
 12132 0f34 00       		.uleb128 .LVU1092
 12133 0f35 00       		.uleb128 .LVU1095
 12134 0f36 00       		.uleb128 0
 12135              	.LLST100:
 12136 0f37 6E000000 		.4byte	.LVL335
 12137 0f3b 78010000 		.4byte	.LVL340
ARM GAS  /tmp/ccFy9xbE.s 			page 248


 12138 0f3f 0200     		.2byte	0x2
 12139 0f41 30       		.byte	0x30
 12140 0f42 9F       		.byte	0x9f
 12141 0f43 7C010000 		.4byte	.LVL341
 12142 0f47 7E010000 		.4byte	.LVL342
 12143 0f4b 0200     		.2byte	0x2
 12144 0f4d 31       		.byte	0x31
 12145 0f4e 9F       		.byte	0x9f
 12146 0f4f 82010000 		.4byte	.LVL343
 12147 0f53 84010000 		.4byte	.LVL344
 12148 0f57 0200     		.2byte	0x2
 12149 0f59 31       		.byte	0x31
 12150 0f5a 9F       		.byte	0x9f
 12151 0f5b 88010000 		.4byte	.LVL345
 12152 0f5f 8A010000 		.4byte	.LVL346
 12153 0f63 0200     		.2byte	0x2
 12154 0f65 31       		.byte	0x31
 12155 0f66 9F       		.byte	0x9f
 12156 0f67 8E010000 		.4byte	.LVL347
 12157 0f6b 90010000 		.4byte	.LVL348
 12158 0f6f 0200     		.2byte	0x2
 12159 0f71 31       		.byte	0x31
 12160 0f72 9F       		.byte	0x9f
 12161 0f73 94010000 		.4byte	.LVL349
 12162 0f77 96010000 		.4byte	.LVL350
 12163 0f7b 0200     		.2byte	0x2
 12164 0f7d 31       		.byte	0x31
 12165 0f7e 9F       		.byte	0x9f
 12166 0f7f B2010000 		.4byte	.LVL353
 12167 0f83 EA040000 		.4byte	.LVL485
 12168 0f87 0200     		.2byte	0x2
 12169 0f89 30       		.byte	0x30
 12170 0f8a 9F       		.byte	0x9f
 12171 0f8b F0040000 		.4byte	.LVL487
 12172 0f8f 6A060000 		.4byte	.LFE13
 12173 0f93 0200     		.2byte	0x2
 12174 0f95 30       		.byte	0x30
 12175 0f96 9F       		.byte	0x9f
 12176 0f97 00000000 		.4byte	0
 12177 0f9b 00000000 		.4byte	0
 12178              	.LVUS101:
 12179 0f9f 02       		.uleb128 .LVU700
 12180 0fa0 00       		.uleb128 .LVU703
 12181 0fa1 00       		.uleb128 .LVU704
 12182 0fa2 00       		.uleb128 .LVU707
 12183 0fa3 00       		.uleb128 .LVU707
 12184 0fa4 02       		.uleb128 .LVU710
 12185 0fa5 00       		.uleb128 .LVU819
 12186 0fa6 00       		.uleb128 .LVU822
 12187 0fa7 00       		.uleb128 .LVU822
 12188 0fa8 00       		.uleb128 .LVU825
 12189 0fa9 00       		.uleb128 .LVU910
 12190 0faa 00       		.uleb128 .LVU913
 12191 0fab 00       		.uleb128 .LVU925
 12192 0fac 00       		.uleb128 .LVU928
 12193 0fad 00       		.uleb128 .LVU958
 12194 0fae 00       		.uleb128 .LVU968
ARM GAS  /tmp/ccFy9xbE.s 			page 249


 12195 0faf 00       		.uleb128 .LVU977
 12196 0fb0 00       		.uleb128 .LVU978
 12197 0fb1 00       		.uleb128 .LVU978
 12198 0fb2 00       		.uleb128 .LVU982
 12199 0fb3 00       		.uleb128 .LVU994
 12200 0fb4 00       		.uleb128 .LVU997
 12201 0fb5 00       		.uleb128 .LVU1004
 12202 0fb6 00       		.uleb128 .LVU1012
 12203 0fb7 00       		.uleb128 .LVU1012
 12204 0fb8 00       		.uleb128 .LVU1015
 12205 0fb9 00       		.uleb128 .LVU1072
 12206 0fba 00       		.uleb128 .LVU1078
 12207 0fbb 00       		.uleb128 .LVU1092
 12208 0fbc 00       		.uleb128 .LVU1095
 12209 0fbd 00       		.uleb128 .LVU1098
 12210 0fbe 00       		.uleb128 .LVU1099
 12211 0fbf 00       		.uleb128 .LVU1099
 12212 0fc0 00       		.uleb128 .LVU1102
 12213 0fc1 00       		.uleb128 .LVU1102
 12214 0fc2 00       		.uleb128 .LVU1105
 12215 0fc3 00       		.uleb128 .LVU1105
 12216 0fc4 00       		.uleb128 .LVU1107
 12217 0fc5 00       		.uleb128 .LVU1109
 12218 0fc6 00       		.uleb128 .LVU1115
 12219 0fc7 00       		.uleb128 .LVU1121
 12220 0fc8 00       		.uleb128 .LVU1122
 12221 0fc9 00       		.uleb128 .LVU1122
 12222 0fca 00       		.uleb128 .LVU1129
 12223 0fcb 00       		.uleb128 .LVU1131
 12224 0fcc 00       		.uleb128 .LVU1133
 12225 0fcd 00       		.uleb128 .LVU1148
 12226 0fce 00       		.uleb128 .LVU1150
 12227 0fcf 00       		.uleb128 .LVU1155
 12228 0fd0 00       		.uleb128 .LVU1157
 12229 0fd1 00       		.uleb128 .LVU1162
 12230 0fd2 00       		.uleb128 .LVU1164
 12231 0fd3 00       		.uleb128 .LVU1175
 12232 0fd4 00       		.uleb128 .LVU1177
 12233              	.LLST101:
 12234 0fd5 18000000 		.4byte	.LVL323
 12235 0fd9 28000000 		.4byte	.LVL325
 12236 0fdd 0200     		.2byte	0x2
 12237 0fdf 30       		.byte	0x30
 12238 0fe0 9F       		.byte	0x9f
 12239 0fe1 2C000000 		.4byte	.LVL326
 12240 0fe5 36000000 		.4byte	.LVL328
 12241 0fe9 0100     		.2byte	0x1
 12242 0feb 51       		.byte	0x51
 12243 0fec 36000000 		.4byte	.LVL328
 12244 0ff0 38000000 		.4byte	.LVL329
 12245 0ff4 0100     		.2byte	0x1
 12246 0ff6 58       		.byte	0x58
 12247 0ff7 FA010000 		.4byte	.LVL366
 12248 0ffb 04020000 		.4byte	.LVL368
 12249 0fff 0100     		.2byte	0x1
 12250 1001 53       		.byte	0x53
 12251 1002 04020000 		.4byte	.LVL368
ARM GAS  /tmp/ccFy9xbE.s 			page 250


 12252 1006 0C020000 		.4byte	.LVL370
 12253 100a 0100     		.2byte	0x1
 12254 100c 58       		.byte	0x58
 12255 100d FA020000 		.4byte	.LVL398
 12256 1011 FE020000 		.4byte	.LVL400
 12257 1015 0100     		.2byte	0x1
 12258 1017 50       		.byte	0x50
 12259 1018 2A030000 		.4byte	.LVL406
 12260 101c 2E030000 		.4byte	.LVL408
 12261 1020 0100     		.2byte	0x1
 12262 1022 50       		.byte	0x50
 12263 1023 92030000 		.4byte	.LVL422
 12264 1027 B0030000 		.4byte	.LVL429
 12265 102b 0100     		.2byte	0x1
 12266 102d 58       		.byte	0x58
 12267 102e C4030000 		.4byte	.LVL433
 12268 1032 CE030000 		.4byte	.LVL434
 12269 1036 0100     		.2byte	0x1
 12270 1038 53       		.byte	0x53
 12271 1039 CE030000 		.4byte	.LVL434
 12272 103d D4030000 		.4byte	.LVL437
 12273 1041 0100     		.2byte	0x1
 12274 1043 58       		.byte	0x58
 12275 1044 FC030000 		.4byte	.LVL443
 12276 1048 00040000 		.4byte	.LVL445
 12277 104c 0100     		.2byte	0x1
 12278 104e 50       		.byte	0x50
 12279 104f 16040000 		.4byte	.LVL448
 12280 1053 30040000 		.4byte	.LVL453
 12281 1057 0100     		.2byte	0x1
 12282 1059 57       		.byte	0x57
 12283 105a 30040000 		.4byte	.LVL453
 12284 105e 34040000 		.4byte	.LVL455
 12285 1062 0100     		.2byte	0x1
 12286 1064 58       		.byte	0x58
 12287 1065 CA040000 		.4byte	.LVL476
 12288 1069 CE040000 		.4byte	.LVL478
 12289 106d 0100     		.2byte	0x1
 12290 106f 50       		.byte	0x50
 12291 1070 EA040000 		.4byte	.LVL485
 12292 1074 F0040000 		.4byte	.LVL487
 12293 1078 0200     		.2byte	0x2
 12294 107a 30       		.byte	0x30
 12295 107b 9F       		.byte	0x9f
 12296 107c FE040000 		.4byte	.LVL489
 12297 1080 02050000 		.4byte	.LVL490
 12298 1084 0300     		.2byte	0x3
 12299 1086 72       		.byte	0x72
 12300 1087 01       		.sleb128 1
 12301 1088 9F       		.byte	0x9f
 12302 1089 02050000 		.4byte	.LVL490
 12303 108d 0E050000 		.4byte	.LVL492
 12304 1091 0100     		.2byte	0x1
 12305 1093 58       		.byte	0x58
 12306 1094 0E050000 		.4byte	.LVL492
 12307 1098 1E050000 		.4byte	.LVL494
 12308 109c 0100     		.2byte	0x1
ARM GAS  /tmp/ccFy9xbE.s 			page 251


 12309 109e 55       		.byte	0x55
 12310 109f 1E050000 		.4byte	.LVL494
 12311 10a3 22050000 		.4byte	.LVL496
 12312 10a7 0100     		.2byte	0x1
 12313 10a9 58       		.byte	0x58
 12314 10aa 26050000 		.4byte	.LVL497
 12315 10ae 46050000 		.4byte	.LVL500
 12316 10b2 0100     		.2byte	0x1
 12317 10b4 56       		.byte	0x56
 12318 10b5 5A050000 		.4byte	.LVL503
 12319 10b9 5E050000 		.4byte	.LVL504
 12320 10bd 0300     		.2byte	0x3
 12321 10bf 72       		.byte	0x72
 12322 10c0 01       		.sleb128 1
 12323 10c1 9F       		.byte	0x9f
 12324 10c2 5E050000 		.4byte	.LVL504
 12325 10c6 7A050000 		.4byte	.LVL510
 12326 10ca 0100     		.2byte	0x1
 12327 10cc 58       		.byte	0x58
 12328 10cd 84050000 		.4byte	.LVL512
 12329 10d1 88050000 		.4byte	.LVL513
 12330 10d5 0100     		.2byte	0x1
 12331 10d7 57       		.byte	0x57
 12332 10d8 C4050000 		.4byte	.LVL518
 12333 10dc C8050000 		.4byte	.LVL519
 12334 10e0 0100     		.2byte	0x1
 12335 10e2 50       		.byte	0x50
 12336 10e3 F0050000 		.4byte	.LVL523
 12337 10e7 F4050000 		.4byte	.LVL524
 12338 10eb 0100     		.2byte	0x1
 12339 10ed 50       		.byte	0x50
 12340 10ee 16060000 		.4byte	.LVL528
 12341 10f2 1A060000 		.4byte	.LVL529
 12342 10f6 0100     		.2byte	0x1
 12343 10f8 50       		.byte	0x50
 12344 10f9 46060000 		.4byte	.LVL534
 12345 10fd 4A060000 		.4byte	.LVL535
 12346 1101 0100     		.2byte	0x1
 12347 1103 50       		.byte	0x50
 12348 1104 00000000 		.4byte	0
 12349 1108 00000000 		.4byte	0
 12350              	.LVUS106:
 12351 110c 01       		.uleb128 .LVU833
 12352 110d 00       		.uleb128 .LVU837
 12353 110e 00       		.uleb128 .LVU837
 12354 110f 00       		.uleb128 .LVU840
 12355 1110 00       		.uleb128 .LVU1037
 12356 1111 00       		.uleb128 .LVU1044
 12357 1112 00       		.uleb128 .LVU1157
 12358 1113 00       		.uleb128 .LVU1158
 12359 1114 00       		.uleb128 .LVU1165
 12360 1115 00       		.uleb128 .LVU1167
 12361              	.LLST106:
 12362 1116 22020000 		.4byte	.LVL371
 12363 111a 2A020000 		.4byte	.LVL373
 12364 111e 0200     		.2byte	0x2
 12365 1120 3A       		.byte	0x3a
ARM GAS  /tmp/ccFy9xbE.s 			page 252


 12366 1121 9F       		.byte	0x9f
 12367 1122 2A020000 		.4byte	.LVL373
 12368 1126 34020000 		.4byte	.LVL374
 12369 112a 0100     		.2byte	0x1
 12370 112c 5E       		.byte	0x5e
 12371 112d 5E040000 		.4byte	.LVL463
 12372 1131 6C040000 		.4byte	.LVL465
 12373 1135 0200     		.2byte	0x2
 12374 1137 40       		.byte	0x40
 12375 1138 9F       		.byte	0x9f
 12376 1139 F4050000 		.4byte	.LVL524
 12377 113d FA050000 		.4byte	.LVL525
 12378 1141 0200     		.2byte	0x2
 12379 1143 40       		.byte	0x40
 12380 1144 9F       		.byte	0x9f
 12381 1145 1E060000 		.4byte	.LVL530
 12382 1149 20060000 		.4byte	.LVL531
 12383 114d 0200     		.2byte	0x2
 12384 114f 32       		.byte	0x32
 12385 1150 9F       		.byte	0x9f
 12386 1151 00000000 		.4byte	0
 12387 1155 00000000 		.4byte	0
 12388              	.LVUS108:
 12389 1159 00       		.uleb128 .LVU1064
 12390 115a 00       		.uleb128 .LVU1066
 12391              	.LLST108:
 12392 115b AE040000 		.4byte	.LVL473
 12393 115f B0040000 		.4byte	.LVL474
 12394 1163 0100     		.2byte	0x1
 12395 1165 53       		.byte	0x53
 12396 1166 00000000 		.4byte	0
 12397 116a 00000000 		.4byte	0
 12398              	.LVUS107:
 12399 116e 00       		.uleb128 .LVU855
 12400 116f 00       		.uleb128 .LVU857
 12401 1170 00       		.uleb128 .LVU857
 12402 1171 00       		.uleb128 .LVU858
 12403              	.LLST107:
 12404 1172 78020000 		.4byte	.LVL378
 12405 1176 7C020000 		.4byte	.LVL379
 12406 117a 0100     		.2byte	0x1
 12407 117c 53       		.byte	0x53
 12408 117d 7C020000 		.4byte	.LVL379
 12409 1181 8A020000 		.4byte	.LVL380
 12410 1185 0200     		.2byte	0x2
 12411 1187 7D       		.byte	0x7d
 12412 1188 00       		.sleb128 0
 12413 1189 00000000 		.4byte	0
 12414 118d 00000000 		.4byte	0
 12415              	.LVUS114:
 12416 1191 02       		.uleb128 .LVU999
 12417 1192 02       		.uleb128 .LVU1007
 12418 1193 02       		.uleb128 .LVU1007
 12419 1194 00       		.uleb128 .LVU1008
 12420 1195 00       		.uleb128 .LVU1008
 12421 1196 00       		.uleb128 .LVU1009
 12422 1197 00       		.uleb128 .LVU1009
ARM GAS  /tmp/ccFy9xbE.s 			page 253


 12423 1198 00       		.uleb128 .LVU1010
 12424 1199 00       		.uleb128 .LVU1010
 12425 119a 01       		.uleb128 .LVU1011
 12426 119b 01       		.uleb128 .LVU1011
 12427 119c 00       		.uleb128 .LVU1012
 12428 119d 00       		.uleb128 .LVU1095
 12429 119e 01       		.uleb128 .LVU1096
 12430 119f 01       		.uleb128 .LVU1096
 12431 11a0 00       		.uleb128 .LVU1107
 12432 11a1 00       		.uleb128 .LVU1131
 12433 11a2 00       		.uleb128 .LVU1133
 12434 11a3 00       		.uleb128 .LVU1185
 12435 11a4 00       		.uleb128 0
 12436              	.LLST114:
 12437 11a5 00040000 		.4byte	.LVL445
 12438 11a9 18040000 		.4byte	.LVL449
 12439 11ad 0200     		.2byte	0x2
 12440 11af 31       		.byte	0x31
 12441 11b0 9F       		.byte	0x9f
 12442 11b1 18040000 		.4byte	.LVL449
 12443 11b5 20040000 		.4byte	.LVL450
 12444 11b9 0200     		.2byte	0x2
 12445 11bb 32       		.byte	0x32
 12446 11bc 9F       		.byte	0x9f
 12447 11bd 20040000 		.4byte	.LVL450
 12448 11c1 24040000 		.4byte	.LVL451
 12449 11c5 0800     		.2byte	0x8
 12450 11c7 77       		.byte	0x77
 12451 11c8 00       		.sleb128 0
 12452 11c9 78       		.byte	0x78
 12453 11ca 00       		.sleb128 0
 12454 11cb 1C       		.byte	0x1c
 12455 11cc 23       		.byte	0x23
 12456 11cd 01       		.uleb128 0x1
 12457 11ce 9F       		.byte	0x9f
 12458 11cf 24040000 		.4byte	.LVL451
 12459 11d3 2B040000 		.4byte	.LVL452-1
 12460 11d7 0800     		.2byte	0x8
 12461 11d9 72       		.byte	0x72
 12462 11da 00       		.sleb128 0
 12463 11db 78       		.byte	0x78
 12464 11dc 00       		.sleb128 0
 12465 11dd 1C       		.byte	0x1c
 12466 11de 23       		.byte	0x23
 12467 11df 01       		.uleb128 0x1
 12468 11e0 9F       		.byte	0x9f
 12469 11e1 2B040000 		.4byte	.LVL452-1
 12470 11e5 2C040000 		.4byte	.LVL452
 12471 11e9 0600     		.2byte	0x6
 12472 11eb 77       		.byte	0x77
 12473 11ec 00       		.sleb128 0
 12474 11ed 78       		.byte	0x78
 12475 11ee 00       		.sleb128 0
 12476 11ef 1C       		.byte	0x1c
 12477 11f0 9F       		.byte	0x9f
 12478 11f1 2C040000 		.4byte	.LVL452
 12479 11f5 30040000 		.4byte	.LVL453
ARM GAS  /tmp/ccFy9xbE.s 			page 254


 12480 11f9 0800     		.2byte	0x8
 12481 11fb 77       		.byte	0x77
 12482 11fc 00       		.sleb128 0
 12483 11fd 78       		.byte	0x78
 12484 11fe 00       		.sleb128 0
 12485 11ff 1C       		.byte	0x1c
 12486 1200 23       		.byte	0x23
 12487 1201 01       		.uleb128 0x1
 12488 1202 9F       		.byte	0x9f
 12489 1203 F0040000 		.4byte	.LVL487
 12490 1207 F0040000 		.4byte	.LVL487
 12491 120b 0200     		.2byte	0x2
 12492 120d 31       		.byte	0x31
 12493 120e 9F       		.byte	0x9f
 12494 120f F0040000 		.4byte	.LVL487
 12495 1213 22050000 		.4byte	.LVL496
 12496 1217 0200     		.2byte	0x2
 12497 1219 32       		.byte	0x32
 12498 121a 9F       		.byte	0x9f
 12499 121b 84050000 		.4byte	.LVL512
 12500 121f 88050000 		.4byte	.LVL513
 12501 1223 0200     		.2byte	0x2
 12502 1225 32       		.byte	0x32
 12503 1226 9F       		.byte	0x9f
 12504 1227 66060000 		.4byte	.LVL541
 12505 122b 6A060000 		.4byte	.LFE13
 12506 122f 0200     		.2byte	0x2
 12507 1231 32       		.byte	0x32
 12508 1232 9F       		.byte	0x9f
 12509 1233 00000000 		.4byte	0
 12510 1237 00000000 		.4byte	0
 12511              	.LVUS109:
 12512 123b 00       		.uleb128 .LVU954
 12513 123c 00       		.uleb128 .LVU955
 12514 123d 00       		.uleb128 .LVU955
 12515 123e 00       		.uleb128 .LVU956
 12516 123f 00       		.uleb128 .LVU1127
 12517 1240 00       		.uleb128 .LVU1129
 12518 1241 00       		.uleb128 .LVU1183
 12519 1242 00       		.uleb128 .LVU1185
 12520              	.LLST109:
 12521 1243 82030000 		.4byte	.LVL418
 12522 1247 88030000 		.4byte	.LVL419
 12523 124b 0500     		.2byte	0x5
 12524 124d 91       		.byte	0x91
 12525 124e 4C       		.sleb128 -52
 12526 124f 06       		.byte	0x6
 12527 1250 34       		.byte	0x34
 12528 1251 1C       		.byte	0x1c
 12529 1252 88030000 		.4byte	.LVL419
 12530 1256 8E030000 		.4byte	.LVL420
 12531 125a 0200     		.2byte	0x2
 12532 125c 91       		.byte	0x91
 12533 125d 44       		.sleb128 -60
 12534 125e 6E050000 		.4byte	.LVL508
 12535 1262 7A050000 		.4byte	.LVL510
 12536 1266 0200     		.2byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 255


 12537 1268 91       		.byte	0x91
 12538 1269 44       		.sleb128 -60
 12539 126a 5E060000 		.4byte	.LVL539
 12540 126e 66060000 		.4byte	.LVL541
 12541 1272 0500     		.2byte	0x5
 12542 1274 91       		.byte	0x91
 12543 1275 4C       		.sleb128 -52
 12544 1276 06       		.byte	0x6
 12545 1277 34       		.byte	0x34
 12546 1278 1C       		.byte	0x1c
 12547 1279 00000000 		.4byte	0
 12548 127d 00000000 		.4byte	0
 12549              	.LVUS110:
 12550 1281 00       		.uleb128 .LVU1119
 12551 1282 00       		.uleb128 .LVU1120
 12552 1283 00       		.uleb128 .LVU1125
 12553 1284 00       		.uleb128 .LVU1126
 12554 1285 00       		.uleb128 .LVU1126
 12555 1286 00       		.uleb128 .LVU1127
 12556 1287 00       		.uleb128 .LVU1127
 12557 1288 00       		.uleb128 .LVU1128
 12558 1289 00       		.uleb128 .LVU1128
 12559 128a 00       		.uleb128 .LVU1129
 12560 128b 00       		.uleb128 .LVU1181
 12561 128c 00       		.uleb128 .LVU1183
 12562 128d 00       		.uleb128 .LVU1183
 12563 128e 00       		.uleb128 .LVU1184
 12564 128f 00       		.uleb128 .LVU1184
 12565 1290 00       		.uleb128 .LVU1185
 12566              	.LLST110:
 12567 1291 4E050000 		.4byte	.LVL501
 12568 1295 58050000 		.4byte	.LVL502
 12569 1299 0100     		.2byte	0x1
 12570 129b 53       		.byte	0x53
 12571 129c 6A050000 		.4byte	.LVL506
 12572 12a0 6C050000 		.4byte	.LVL507
 12573 12a4 0300     		.2byte	0x3
 12574 12a6 75       		.byte	0x75
 12575 12a7 02       		.sleb128 2
 12576 12a8 9F       		.byte	0x9f
 12577 12a9 6C050000 		.4byte	.LVL507
 12578 12ad 6E050000 		.4byte	.LVL508
 12579 12b1 0300     		.2byte	0x3
 12580 12b3 73       		.byte	0x73
 12581 12b4 01       		.sleb128 1
 12582 12b5 9F       		.byte	0x9f
 12583 12b6 6E050000 		.4byte	.LVL508
 12584 12ba 70050000 		.4byte	.LVL509
 12585 12be 0100     		.2byte	0x1
 12586 12c0 53       		.byte	0x53
 12587 12c1 70050000 		.4byte	.LVL509
 12588 12c5 7A050000 		.4byte	.LVL510
 12589 12c9 0200     		.2byte	0x2
 12590 12cb 91       		.byte	0x91
 12591 12cc 48       		.sleb128 -56
 12592 12cd 5C060000 		.4byte	.LVL538
 12593 12d1 5E060000 		.4byte	.LVL539
ARM GAS  /tmp/ccFy9xbE.s 			page 256


 12594 12d5 0100     		.2byte	0x1
 12595 12d7 53       		.byte	0x53
 12596 12d8 5E060000 		.4byte	.LVL539
 12597 12dc 64060000 		.4byte	.LVL540
 12598 12e0 0200     		.2byte	0x2
 12599 12e2 91       		.byte	0x91
 12600 12e3 48       		.sleb128 -56
 12601 12e4 64060000 		.4byte	.LVL540
 12602 12e8 66060000 		.4byte	.LVL541
 12603 12ec 0100     		.2byte	0x1
 12604 12ee 53       		.byte	0x53
 12605 12ef 00000000 		.4byte	0
 12606 12f3 00000000 		.4byte	0
 12607              	.LVUS111:
 12608 12f7 00       		.uleb128 .LVU934
 12609 12f8 00       		.uleb128 .LVU937
 12610 12f9 00       		.uleb128 .LVU1047
 12611 12fa 00       		.uleb128 .LVU1052
 12612 12fb 00       		.uleb128 .LVU1052
 12613 12fc 00       		.uleb128 .LVU1053
 12614 12fd 00       		.uleb128 .LVU1178
 12615 12fe 00       		.uleb128 .LVU1180
 12616 12ff 00       		.uleb128 .LVU1180
 12617 1300 00       		.uleb128 .LVU1181
 12618              	.LLST111:
 12619 1301 3E030000 		.4byte	.LVL411
 12620 1305 4A030000 		.4byte	.LVL412
 12621 1309 0300     		.2byte	0x3
 12622 130b 09       		.byte	0x9
 12623 130c FF       		.byte	0xff
 12624 130d 9F       		.byte	0x9f
 12625 130e 72040000 		.4byte	.LVL467
 12626 1312 7E040000 		.4byte	.LVL469
 12627 1316 0100     		.2byte	0x1
 12628 1318 57       		.byte	0x57
 12629 1319 7E040000 		.4byte	.LVL469
 12630 131d 80040000 		.4byte	.LVL470
 12631 1321 0100     		.2byte	0x1
 12632 1323 52       		.byte	0x52
 12633 1324 54060000 		.4byte	.LVL536
 12634 1328 58060000 		.4byte	.LVL537
 12635 132c 0300     		.2byte	0x3
 12636 132e 09       		.byte	0x9
 12637 132f FF       		.byte	0xff
 12638 1330 9F       		.byte	0x9f
 12639 1331 58060000 		.4byte	.LVL537
 12640 1335 5C060000 		.4byte	.LVL538
 12641 1339 0100     		.2byte	0x1
 12642 133b 57       		.byte	0x57
 12643 133c 00000000 		.4byte	0
 12644 1340 00000000 		.4byte	0
 12645              	.LVUS112:
 12646 1344 00       		.uleb128 .LVU934
 12647 1345 00       		.uleb128 .LVU937
 12648 1346 00       		.uleb128 .LVU937
 12649 1347 00       		.uleb128 .LVU938
 12650 1348 00       		.uleb128 .LVU938
ARM GAS  /tmp/ccFy9xbE.s 			page 257


 12651 1349 00       		.uleb128 .LVU939
 12652 134a 00       		.uleb128 .LVU939
 12653 134b 02       		.uleb128 .LVU942
 12654 134c 02       		.uleb128 .LVU942
 12655 134d 00       		.uleb128 .LVU944
 12656 134e 00       		.uleb128 .LVU944
 12657 134f 00       		.uleb128 .LVU946
 12658 1350 00       		.uleb128 .LVU1047
 12659 1351 00       		.uleb128 .LVU1052
 12660 1352 00       		.uleb128 .LVU1052
 12661 1353 00       		.uleb128 .LVU1053
 12662 1354 00       		.uleb128 .LVU1091
 12663 1355 00       		.uleb128 .LVU1092
 12664 1356 00       		.uleb128 .LVU1178
 12665 1357 00       		.uleb128 .LVU1181
 12666              	.LLST112:
 12667 1358 3E030000 		.4byte	.LVL411
 12668 135c 4A030000 		.4byte	.LVL412
 12669 1360 0100     		.2byte	0x1
 12670 1362 52       		.byte	0x52
 12671 1363 4A030000 		.4byte	.LVL412
 12672 1367 4E030000 		.4byte	.LVL413
 12673 136b 0200     		.2byte	0x2
 12674 136d 76       		.byte	0x76
 12675 136e 00       		.sleb128 0
 12676 136f 4E030000 		.4byte	.LVL413
 12677 1373 52030000 		.4byte	.LVL414
 12678 1377 0500     		.2byte	0x5
 12679 1379 91       		.byte	0x91
 12680 137a 4C       		.sleb128 -52
 12681 137b 06       		.byte	0x6
 12682 137c 34       		.byte	0x34
 12683 137d 1C       		.byte	0x1c
 12684 137e 52030000 		.4byte	.LVL414
 12685 1382 58030000 		.4byte	.LVL415
 12686 1386 0100     		.2byte	0x1
 12687 1388 56       		.byte	0x56
 12688 1389 58030000 		.4byte	.LVL415
 12689 138d 5C030000 		.4byte	.LVL416
 12690 1391 0300     		.2byte	0x3
 12691 1393 76       		.byte	0x76
 12692 1394 01       		.sleb128 1
 12693 1395 9F       		.byte	0x9f
 12694 1396 5C030000 		.4byte	.LVL416
 12695 139a 66030000 		.4byte	.LVL417
 12696 139e 0100     		.2byte	0x1
 12697 13a0 56       		.byte	0x56
 12698 13a1 72040000 		.4byte	.LVL467
 12699 13a5 7E040000 		.4byte	.LVL469
 12700 13a9 0100     		.2byte	0x1
 12701 13ab 52       		.byte	0x52
 12702 13ac 7E040000 		.4byte	.LVL469
 12703 13b0 80040000 		.4byte	.LVL470
 12704 13b4 0200     		.2byte	0x2
 12705 13b6 76       		.byte	0x76
 12706 13b7 00       		.sleb128 0
 12707 13b8 E2040000 		.4byte	.LVL484
ARM GAS  /tmp/ccFy9xbE.s 			page 258


 12708 13bc EA040000 		.4byte	.LVL485
 12709 13c0 0100     		.2byte	0x1
 12710 13c2 56       		.byte	0x56
 12711 13c3 54060000 		.4byte	.LVL536
 12712 13c7 5C060000 		.4byte	.LVL538
 12713 13cb 0100     		.2byte	0x1
 12714 13cd 52       		.byte	0x52
 12715 13ce 00000000 		.4byte	0
 12716 13d2 00000000 		.4byte	0
 12717              	.LVUS113:
 12718 13d6 03       		.uleb128 .LVU985
 12719 13d7 00       		.uleb128 .LVU997
 12720              	.LLST113:
 12721 13d8 D4030000 		.4byte	.LVL437
 12722 13dc 00040000 		.4byte	.LVL445
 12723 13e0 0200     		.2byte	0x2
 12724 13e2 30       		.byte	0x30
 12725 13e3 9F       		.byte	0x9f
 12726 13e4 00000000 		.4byte	0
 12727 13e8 00000000 		.4byte	0
 12728              	.LVUS102:
 12729 13ec 03       		.uleb128 .LVU727
 12730 13ed 05       		.uleb128 .LVU729
 12731              	.LLST102:
 12732 13ee 6E000000 		.4byte	.LVL335
 12733 13f2 6E000000 		.4byte	.LVL335
 12734 13f6 0100     		.2byte	0x1
 12735 13f8 50       		.byte	0x50
 12736 13f9 00000000 		.4byte	0
 12737 13fd 00000000 		.4byte	0
 12738              	.LVUS103:
 12739 1401 01       		.uleb128 .LVU788
 12740 1402 03       		.uleb128 .LVU790
 12741              	.LLST103:
 12742 1403 BA010000 		.4byte	.LVL355
 12743 1407 BA010000 		.4byte	.LVL355
 12744 140b 0100     		.2byte	0x1
 12745 140d 50       		.byte	0x50
 12746 140e 00000000 		.4byte	0
 12747 1412 00000000 		.4byte	0
 12748              	.LVUS104:
 12749 1416 00       		.uleb128 .LVU796
 12750 1417 00       		.uleb128 .LVU798
 12751 1418 00       		.uleb128 .LVU802
 12752 1419 00       		.uleb128 .LVU807
 12753              	.LLST104:
 12754 141a D0010000 		.4byte	.LVL357
 12755 141e D4010000 		.4byte	.LVL358
 12756 1422 0100     		.2byte	0x1
 12757 1424 55       		.byte	0x55
 12758 1425 E2010000 		.4byte	.LVL360
 12759 1429 E8010000 		.4byte	.LVL361
 12760 142d 0100     		.2byte	0x1
 12761 142f 55       		.byte	0x55
 12762 1430 00000000 		.4byte	0
 12763 1434 00000000 		.4byte	0
 12764              	.LVUS105:
ARM GAS  /tmp/ccFy9xbE.s 			page 259


 12765 1438 01       		.uleb128 .LVU803
 12766 1439 03       		.uleb128 .LVU805
 12767              	.LLST105:
 12768 143a E2010000 		.4byte	.LVL360
 12769 143e E2010000 		.4byte	.LVL360
 12770 1442 0100     		.2byte	0x1
 12771 1444 50       		.byte	0x50
 12772 1445 00000000 		.4byte	0
 12773 1449 00000000 		.4byte	0
 12774              	.LVUS115:
 12775 144d 00       		.uleb128 .LVU1017
 12776 144e 00       		.uleb128 .LVU1019
 12777 144f 00       		.uleb128 .LVU1023
 12778 1450 00       		.uleb128 .LVU1028
 12779              	.LLST115:
 12780 1451 36040000 		.4byte	.LVL456
 12781 1455 3A040000 		.4byte	.LVL457
 12782 1459 0100     		.2byte	0x1
 12783 145b 57       		.byte	0x57
 12784 145c 48040000 		.4byte	.LVL459
 12785 1460 50040000 		.4byte	.LVL460
 12786 1464 0100     		.2byte	0x1
 12787 1466 57       		.byte	0x57
 12788 1467 00000000 		.4byte	0
 12789 146b 00000000 		.4byte	0
 12790              	.LVUS116:
 12791 146f 01       		.uleb128 .LVU1024
 12792 1470 03       		.uleb128 .LVU1026
 12793              	.LLST116:
 12794 1471 48040000 		.4byte	.LVL459
 12795 1475 48040000 		.4byte	.LVL459
 12796 1479 0100     		.2byte	0x1
 12797 147b 50       		.byte	0x50
 12798 147c 00000000 		.4byte	0
 12799 1480 00000000 		.4byte	0
 12800              	.LLST46:
 12801 1484 00000000 		.4byte	.LFB12
 12802 1488 04000000 		.4byte	.LCFI18
 12803 148c 0200     		.2byte	0x2
 12804 148e 7D       		.byte	0x7d
 12805 148f 00       		.sleb128 0
 12806 1490 04000000 		.4byte	.LCFI18
 12807 1494 08000000 		.4byte	.LCFI19
 12808 1498 0200     		.2byte	0x2
 12809 149a 7D       		.byte	0x7d
 12810 149b 24       		.sleb128 36
 12811 149c 08000000 		.4byte	.LCFI19
 12812 14a0 0A000000 		.4byte	.LCFI20
 12813 14a4 0200     		.2byte	0x2
 12814 14a6 7D       		.byte	0x7d
 12815 14a7 34       		.sleb128 52
 12816 14a8 0A000000 		.4byte	.LCFI20
 12817 14ac 84020000 		.4byte	.LCFI21
 12818 14b0 0300     		.2byte	0x3
 12819 14b2 7D       		.byte	0x7d
 12820 14b3 8001     		.sleb128 128
 12821 14b5 84020000 		.4byte	.LCFI21
ARM GAS  /tmp/ccFy9xbE.s 			page 260


 12822 14b9 88020000 		.4byte	.LCFI22
 12823 14bd 0200     		.2byte	0x2
 12824 14bf 7D       		.byte	0x7d
 12825 14c0 34       		.sleb128 52
 12826 14c1 88020000 		.4byte	.LCFI22
 12827 14c5 8C020000 		.4byte	.LCFI23
 12828 14c9 0200     		.2byte	0x2
 12829 14cb 7D       		.byte	0x7d
 12830 14cc 24       		.sleb128 36
 12831 14cd 8C020000 		.4byte	.LCFI23
 12832 14d1 90020000 		.4byte	.LCFI24
 12833 14d5 0200     		.2byte	0x2
 12834 14d7 7D       		.byte	0x7d
 12835 14d8 00       		.sleb128 0
 12836 14d9 90020000 		.4byte	.LCFI24
 12837 14dd F4030000 		.4byte	.LCFI25
 12838 14e1 0300     		.2byte	0x3
 12839 14e3 7D       		.byte	0x7d
 12840 14e4 8001     		.sleb128 128
 12841 14e6 F4030000 		.4byte	.LCFI25
 12842 14ea F8030000 		.4byte	.LCFI26
 12843 14ee 0200     		.2byte	0x2
 12844 14f0 7D       		.byte	0x7d
 12845 14f1 34       		.sleb128 52
 12846 14f2 F8030000 		.4byte	.LCFI26
 12847 14f6 FC030000 		.4byte	.LCFI27
 12848 14fa 0200     		.2byte	0x2
 12849 14fc 7D       		.byte	0x7d
 12850 14fd 24       		.sleb128 36
 12851 14fe FC030000 		.4byte	.LCFI27
 12852 1502 62040000 		.4byte	.LFE12
 12853 1506 0300     		.2byte	0x3
 12854 1508 7D       		.byte	0x7d
 12855 1509 8001     		.sleb128 128
 12856 150b 00000000 		.4byte	0
 12857 150f 00000000 		.4byte	0
 12858              	.LVUS47:
 12859 1513 00       		.uleb128 0
 12860 1514 00       		.uleb128 .LVU268
 12861 1515 00       		.uleb128 .LVU268
 12862 1516 00       		.uleb128 .LVU373
 12863 1517 00       		.uleb128 .LVU373
 12864 1518 00       		.uleb128 .LVU375
 12865 1519 00       		.uleb128 .LVU375
 12866 151a 00       		.uleb128 .LVU375
 12867 151b 00       		.uleb128 .LVU375
 12868 151c 00       		.uleb128 0
 12869              	.LLST47:
 12870 151d 00000000 		.4byte	.LVL96
 12871 1521 24000000 		.4byte	.LVL99
 12872 1525 0100     		.2byte	0x1
 12873 1527 50       		.byte	0x50
 12874 1528 24000000 		.4byte	.LVL99
 12875 152c 82020000 		.4byte	.LVL160
 12876 1530 0100     		.2byte	0x1
 12877 1532 57       		.byte	0x57
 12878 1533 82020000 		.4byte	.LVL160
ARM GAS  /tmp/ccFy9xbE.s 			page 261


 12879 1537 8F020000 		.4byte	.LVL162-1
 12880 153b 0100     		.2byte	0x1
 12881 153d 50       		.byte	0x50
 12882 153e 8F020000 		.4byte	.LVL162-1
 12883 1542 90020000 		.4byte	.LVL162
 12884 1546 0400     		.2byte	0x4
 12885 1548 F3       		.byte	0xf3
 12886 1549 01       		.uleb128 0x1
 12887 154a 50       		.byte	0x50
 12888 154b 9F       		.byte	0x9f
 12889 154c 90020000 		.4byte	.LVL162
 12890 1550 62040000 		.4byte	.LFE12
 12891 1554 0100     		.2byte	0x1
 12892 1556 57       		.byte	0x57
 12893 1557 00000000 		.4byte	0
 12894 155b 00000000 		.4byte	0
 12895              	.LVUS48:
 12896 155f 00       		.uleb128 0
 12897 1560 00       		.uleb128 .LVU269
 12898 1561 00       		.uleb128 .LVU269
 12899 1562 00       		.uleb128 .LVU370
 12900 1563 00       		.uleb128 .LVU370
 12901 1564 00       		.uleb128 .LVU375
 12902 1565 00       		.uleb128 .LVU375
 12903 1566 00       		.uleb128 .LVU375
 12904 1567 00       		.uleb128 .LVU375
 12905 1568 00       		.uleb128 0
 12906              	.LLST48:
 12907 1569 00000000 		.4byte	.LVL96
 12908 156d 26000000 		.4byte	.LVL100
 12909 1571 0100     		.2byte	0x1
 12910 1573 51       		.byte	0x51
 12911 1574 26000000 		.4byte	.LVL100
 12912 1578 78020000 		.4byte	.LVL157
 12913 157c 0100     		.2byte	0x1
 12914 157e 54       		.byte	0x54
 12915 157f 78020000 		.4byte	.LVL157
 12916 1583 8F020000 		.4byte	.LVL162-1
 12917 1587 0100     		.2byte	0x1
 12918 1589 51       		.byte	0x51
 12919 158a 8F020000 		.4byte	.LVL162-1
 12920 158e 90020000 		.4byte	.LVL162
 12921 1592 0400     		.2byte	0x4
 12922 1594 F3       		.byte	0xf3
 12923 1595 01       		.uleb128 0x1
 12924 1596 51       		.byte	0x51
 12925 1597 9F       		.byte	0x9f
 12926 1598 90020000 		.4byte	.LVL162
 12927 159c 62040000 		.4byte	.LFE12
 12928 15a0 0100     		.2byte	0x1
 12929 15a2 54       		.byte	0x54
 12930 15a3 00000000 		.4byte	0
 12931 15a7 00000000 		.4byte	0
 12932              	.LVUS49:
 12933 15ab 00       		.uleb128 0
 12934 15ac 00       		.uleb128 .LVU267
 12935 15ad 00       		.uleb128 .LVU267
ARM GAS  /tmp/ccFy9xbE.s 			page 262


 12936 15ae 00       		.uleb128 .LVU374
 12937 15af 00       		.uleb128 .LVU374
 12938 15b0 00       		.uleb128 .LVU375
 12939 15b1 00       		.uleb128 .LVU375
 12940 15b2 00       		.uleb128 .LVU404
 12941 15b3 00       		.uleb128 .LVU404
 12942 15b4 00       		.uleb128 .LVU407
 12943 15b5 00       		.uleb128 .LVU407
 12944 15b6 00       		.uleb128 .LVU414
 12945 15b7 00       		.uleb128 .LVU414
 12946 15b8 00       		.uleb128 .LVU419
 12947 15b9 00       		.uleb128 .LVU419
 12948 15ba 00       		.uleb128 .LVU422
 12949 15bb 00       		.uleb128 .LVU422
 12950 15bc 00       		.uleb128 .LVU423
 12951 15bd 00       		.uleb128 .LVU423
 12952 15be 00       		.uleb128 .LVU423
 12953 15bf 00       		.uleb128 .LVU423
 12954 15c0 00       		.uleb128 .LVU426
 12955 15c1 00       		.uleb128 .LVU426
 12956 15c2 00       		.uleb128 0
 12957              	.LLST49:
 12958 15c3 00000000 		.4byte	.LVL96
 12959 15c7 22000000 		.4byte	.LVL98
 12960 15cb 0100     		.2byte	0x1
 12961 15cd 52       		.byte	0x52
 12962 15ce 22000000 		.4byte	.LVL98
 12963 15d2 8C020000 		.4byte	.LVL161
 12964 15d6 0300     		.2byte	0x3
 12965 15d8 91       		.byte	0x91
 12966 15d9 B07F     		.sleb128 -80
 12967 15db 8C020000 		.4byte	.LVL161
 12968 15df 90020000 		.4byte	.LVL162
 12969 15e3 0300     		.2byte	0x3
 12970 15e5 7D       		.byte	0x7d
 12971 15e6 B07F     		.sleb128 -80
 12972 15e8 90020000 		.4byte	.LVL162
 12973 15ec 7A030000 		.4byte	.LVL177
 12974 15f0 0300     		.2byte	0x3
 12975 15f2 91       		.byte	0x91
 12976 15f3 B07F     		.sleb128 -80
 12977 15f5 7A030000 		.4byte	.LVL177
 12978 15f9 88030000 		.4byte	.LVL178
 12979 15fd 0100     		.2byte	0x1
 12980 15ff 50       		.byte	0x50
 12981 1600 88030000 		.4byte	.LVL178
 12982 1604 CA030000 		.4byte	.LVL181
 12983 1608 0100     		.2byte	0x1
 12984 160a 56       		.byte	0x56
 12985 160b CA030000 		.4byte	.LVL181
 12986 160f DC030000 		.4byte	.LVL182
 12987 1613 0100     		.2byte	0x1
 12988 1615 50       		.byte	0x50
 12989 1616 DC030000 		.4byte	.LVL182
 12990 161a EA030000 		.4byte	.LVL183
 12991 161e 0100     		.2byte	0x1
 12992 1620 56       		.byte	0x56
ARM GAS  /tmp/ccFy9xbE.s 			page 263


 12993 1621 EA030000 		.4byte	.LVL183
 12994 1625 EB030000 		.4byte	.LVL184-1
 12995 1629 0100     		.2byte	0x1
 12996 162b 52       		.byte	0x52
 12997 162c EB030000 		.4byte	.LVL184-1
 12998 1630 EC030000 		.4byte	.LVL184
 12999 1634 0300     		.2byte	0x3
 13000 1636 76       		.byte	0x76
 13001 1637 7F       		.sleb128 -1
 13002 1638 9F       		.byte	0x9f
 13003 1639 EC030000 		.4byte	.LVL184
 13004 163d FC030000 		.4byte	.LVL186
 13005 1641 0100     		.2byte	0x1
 13006 1643 56       		.byte	0x56
 13007 1644 FC030000 		.4byte	.LVL186
 13008 1648 62040000 		.4byte	.LFE12
 13009 164c 0300     		.2byte	0x3
 13010 164e 91       		.byte	0x91
 13011 164f B07F     		.sleb128 -80
 13012 1651 00000000 		.4byte	0
 13013 1655 00000000 		.4byte	0
 13014              	.LVUS50:
 13015 1659 00       		.uleb128 0
 13016 165a 00       		.uleb128 .LVU265
 13017 165b 00       		.uleb128 .LVU265
 13018 165c 00       		.uleb128 .LVU373
 13019 165d 00       		.uleb128 .LVU373
 13020 165e 00       		.uleb128 .LVU375
 13021 165f 00       		.uleb128 .LVU375
 13022 1660 00       		.uleb128 .LVU375
 13023 1661 00       		.uleb128 .LVU375
 13024 1662 00       		.uleb128 0
 13025              	.LLST50:
 13026 1663 00000000 		.4byte	.LVL96
 13027 1667 12000000 		.4byte	.LVL97
 13028 166b 0100     		.2byte	0x1
 13029 166d 53       		.byte	0x53
 13030 166e 12000000 		.4byte	.LVL97
 13031 1672 82020000 		.4byte	.LVL160
 13032 1676 0100     		.2byte	0x1
 13033 1678 55       		.byte	0x55
 13034 1679 82020000 		.4byte	.LVL160
 13035 167d 8F020000 		.4byte	.LVL162-1
 13036 1681 0100     		.2byte	0x1
 13037 1683 53       		.byte	0x53
 13038 1684 8F020000 		.4byte	.LVL162-1
 13039 1688 90020000 		.4byte	.LVL162
 13040 168c 0400     		.2byte	0x4
 13041 168e F3       		.byte	0xf3
 13042 168f 01       		.uleb128 0x1
 13043 1690 53       		.byte	0x53
 13044 1691 9F       		.byte	0x9f
 13045 1692 90020000 		.4byte	.LVL162
 13046 1696 62040000 		.4byte	.LFE12
 13047 169a 0100     		.2byte	0x1
 13048 169c 55       		.byte	0x55
 13049 169d 00000000 		.4byte	0
ARM GAS  /tmp/ccFy9xbE.s 			page 264


 13050 16a1 00000000 		.4byte	0
 13051              	.LVUS51:
 13052 16a5 00       		.uleb128 0
 13053 16a6 00       		.uleb128 .LVU276
 13054 16a7 00       		.uleb128 .LVU276
 13055 16a8 00       		.uleb128 .LVU367
 13056 16a9 00       		.uleb128 .LVU367
 13057 16aa 00       		.uleb128 .LVU373
 13058 16ab 00       		.uleb128 .LVU375
 13059 16ac 00       		.uleb128 .LVU402
 13060 16ad 00       		.uleb128 .LVU426
 13061 16ae 00       		.uleb128 .LVU437
 13062 16af 00       		.uleb128 .LVU437
 13063 16b0 00       		.uleb128 .LVU439
 13064 16b1 00       		.uleb128 .LVU439
 13065 16b2 00       		.uleb128 .LVU448
 13066 16b3 00       		.uleb128 .LVU449
 13067 16b4 00       		.uleb128 0
 13068              	.LLST51:
 13069 16b5 00000000 		.4byte	.LVL96
 13070 16b9 74000000 		.4byte	.LVL106
 13071 16bd 0200     		.2byte	0x2
 13072 16bf 91       		.byte	0x91
 13073 16c0 00       		.sleb128 0
 13074 16c1 74000000 		.4byte	.LVL106
 13075 16c5 6A020000 		.4byte	.LVL155
 13076 16c9 0300     		.2byte	0x3
 13077 16cb 91       		.byte	0x91
 13078 16cc A07F     		.sleb128 -96
 13079 16ce 6A020000 		.4byte	.LVL155
 13080 16d2 82020000 		.4byte	.LVL160
 13081 16d6 0200     		.2byte	0x2
 13082 16d8 91       		.byte	0x91
 13083 16d9 00       		.sleb128 0
 13084 16da 90020000 		.4byte	.LVL162
 13085 16de 52030000 		.4byte	.LVL174
 13086 16e2 0300     		.2byte	0x3
 13087 16e4 91       		.byte	0x91
 13088 16e5 A07F     		.sleb128 -96
 13089 16e7 FC030000 		.4byte	.LVL186
 13090 16eb 1C040000 		.4byte	.LVL191
 13091 16ef 0300     		.2byte	0x3
 13092 16f1 91       		.byte	0x91
 13093 16f2 A07F     		.sleb128 -96
 13094 16f4 1C040000 		.4byte	.LVL191
 13095 16f8 26040000 		.4byte	.LVL192
 13096 16fc 0200     		.2byte	0x2
 13097 16fe 91       		.byte	0x91
 13098 16ff 00       		.sleb128 0
 13099 1700 26040000 		.4byte	.LVL192
 13100 1704 44040000 		.4byte	.LVL196
 13101 1708 0300     		.2byte	0x3
 13102 170a 91       		.byte	0x91
 13103 170b A07F     		.sleb128 -96
 13104 170d 46040000 		.4byte	.LVL197
 13105 1711 62040000 		.4byte	.LFE12
 13106 1715 0300     		.2byte	0x3
ARM GAS  /tmp/ccFy9xbE.s 			page 265


 13107 1717 91       		.byte	0x91
 13108 1718 A07F     		.sleb128 -96
 13109 171a 00000000 		.4byte	0
 13110 171e 00000000 		.4byte	0
 13111              	.LVUS52:
 13112 1722 00       		.uleb128 0
 13113 1723 00       		.uleb128 .LVU287
 13114 1724 00       		.uleb128 .LVU287
 13115 1725 00       		.uleb128 .LVU293
 13116 1726 00       		.uleb128 .LVU293
 13117 1727 00       		.uleb128 .LVU367
 13118 1728 00       		.uleb128 .LVU367
 13119 1729 00       		.uleb128 .LVU372
 13120 172a 00       		.uleb128 .LVU375
 13121 172b 00       		.uleb128 .LVU437
 13122 172c 00       		.uleb128 .LVU437
 13123 172d 00       		.uleb128 .LVU440
 13124 172e 00       		.uleb128 .LVU440
 13125 172f 00       		.uleb128 .LVU450
 13126 1730 00       		.uleb128 .LVU450
 13127 1731 00       		.uleb128 .LVU451
 13128 1732 00       		.uleb128 .LVU451
 13129 1733 00       		.uleb128 .LVU457
 13130              	.LLST52:
 13131 1734 00000000 		.4byte	.LVL96
 13132 1738 94000000 		.4byte	.LVL107
 13133 173c 0200     		.2byte	0x2
 13134 173e 91       		.byte	0x91
 13135 173f 08       		.sleb128 8
 13136 1740 94000000 		.4byte	.LVL107
 13137 1744 97000000 		.4byte	.LVL108-1
 13138 1748 0100     		.2byte	0x1
 13139 174a 53       		.byte	0x53
 13140 174b 97000000 		.4byte	.LVL108-1
 13141 174f 6A020000 		.4byte	.LVL155
 13142 1753 0300     		.2byte	0x3
 13143 1755 91       		.byte	0x91
 13144 1756 A87F     		.sleb128 -88
 13145 1758 6A020000 		.4byte	.LVL155
 13146 175c 7E020000 		.4byte	.LVL159
 13147 1760 0200     		.2byte	0x2
 13148 1762 91       		.byte	0x91
 13149 1763 08       		.sleb128 8
 13150 1764 90020000 		.4byte	.LVL162
 13151 1768 1C040000 		.4byte	.LVL191
 13152 176c 0300     		.2byte	0x3
 13153 176e 91       		.byte	0x91
 13154 176f A87F     		.sleb128 -88
 13155 1771 1C040000 		.4byte	.LVL191
 13156 1775 28040000 		.4byte	.LVL193
 13157 1779 0200     		.2byte	0x2
 13158 177b 91       		.byte	0x91
 13159 177c 08       		.sleb128 8
 13160 177d 28040000 		.4byte	.LVL193
 13161 1781 4A040000 		.4byte	.LVL198
 13162 1785 0300     		.2byte	0x3
 13163 1787 91       		.byte	0x91
ARM GAS  /tmp/ccFy9xbE.s 			page 266


 13164 1788 A87F     		.sleb128 -88
 13165 178a 4A040000 		.4byte	.LVL198
 13166 178e 4C040000 		.4byte	.LVL199
 13167 1792 0100     		.2byte	0x1
 13168 1794 53       		.byte	0x53
 13169 1795 4C040000 		.4byte	.LVL199
 13170 1799 60040000 		.4byte	.LVL203
 13171 179d 0300     		.2byte	0x3
 13172 179f 91       		.byte	0x91
 13173 17a0 A87F     		.sleb128 -88
 13174 17a2 00000000 		.4byte	0
 13175 17a6 00000000 		.4byte	0
 13176              	.LVUS53:
 13177 17aa 00       		.uleb128 0
 13178 17ab 00       		.uleb128 .LVU366
 13179 17ac 00       		.uleb128 .LVU367
 13180 17ad 00       		.uleb128 .LVU371
 13181 17ae 00       		.uleb128 .LVU375
 13182 17af 00       		.uleb128 0
 13183              	.LLST53:
 13184 17b0 00000000 		.4byte	.LVL96
 13185 17b4 4C020000 		.4byte	.LVL154
 13186 17b8 0200     		.2byte	0x2
 13187 17ba 91       		.byte	0x91
 13188 17bb 0C       		.sleb128 12
 13189 17bc 6A020000 		.4byte	.LVL155
 13190 17c0 7A020000 		.4byte	.LVL158
 13191 17c4 0200     		.2byte	0x2
 13192 17c6 91       		.byte	0x91
 13193 17c7 0C       		.sleb128 12
 13194 17c8 90020000 		.4byte	.LVL162
 13195 17cc 62040000 		.4byte	.LFE12
 13196 17d0 0200     		.2byte	0x2
 13197 17d2 91       		.byte	0x91
 13198 17d3 0C       		.sleb128 12
 13199 17d4 00000000 		.4byte	0
 13200 17d8 00000000 		.4byte	0
 13201              	.LVUS54:
 13202 17dc 00       		.uleb128 0
 13203 17dd 00       		.uleb128 .LVU357
 13204 17de 00       		.uleb128 .LVU357
 13205 17df 00       		.uleb128 .LVU367
 13206 17e0 00       		.uleb128 .LVU367
 13207 17e1 00       		.uleb128 .LVU369
 13208 17e2 00       		.uleb128 .LVU375
 13209 17e3 00       		.uleb128 .LVU386
 13210 17e4 00       		.uleb128 .LVU386
 13211 17e5 00       		.uleb128 .LVU437
 13212 17e6 00       		.uleb128 .LVU437
 13213 17e7 00       		.uleb128 .LVU440
 13214 17e8 00       		.uleb128 .LVU440
 13215 17e9 00       		.uleb128 .LVU444
 13216 17ea 00       		.uleb128 .LVU444
 13217 17eb 00       		.uleb128 .LVU449
 13218 17ec 00       		.uleb128 .LVU449
 13219 17ed 00       		.uleb128 .LVU451
 13220 17ee 00       		.uleb128 .LVU451
ARM GAS  /tmp/ccFy9xbE.s 			page 267


 13221 17ef 00       		.uleb128 .LVU454
 13222 17f0 00       		.uleb128 .LVU454
 13223 17f1 00       		.uleb128 .LVU456
 13224 17f2 00       		.uleb128 .LVU456
 13225 17f3 00       		.uleb128 0
 13226              	.LLST54:
 13227 17f4 00000000 		.4byte	.LVL96
 13228 17f8 2A020000 		.4byte	.LVL151
 13229 17fc 0200     		.2byte	0x2
 13230 17fe 91       		.byte	0x91
 13231 17ff 10       		.sleb128 16
 13232 1800 2A020000 		.4byte	.LVL151
 13233 1804 6A020000 		.4byte	.LVL155
 13234 1808 0100     		.2byte	0x1
 13235 180a 56       		.byte	0x56
 13236 180b 6A020000 		.4byte	.LVL155
 13237 180f 74020000 		.4byte	.LVL156
 13238 1813 0200     		.2byte	0x2
 13239 1815 91       		.byte	0x91
 13240 1816 10       		.sleb128 16
 13241 1817 90020000 		.4byte	.LVL162
 13242 181b 10030000 		.4byte	.LVL168
 13243 181f 0200     		.2byte	0x2
 13244 1821 91       		.byte	0x91
 13245 1822 10       		.sleb128 16
 13246 1823 10030000 		.4byte	.LVL168
 13247 1827 1C040000 		.4byte	.LVL191
 13248 182b 0300     		.2byte	0x3
 13249 182d 91       		.byte	0x91
 13250 182e 9C7F     		.sleb128 -100
 13251 1830 1C040000 		.4byte	.LVL191
 13252 1834 28040000 		.4byte	.LVL193
 13253 1838 0200     		.2byte	0x2
 13254 183a 91       		.byte	0x91
 13255 183b 10       		.sleb128 16
 13256 183c 28040000 		.4byte	.LVL193
 13257 1840 30040000 		.4byte	.LVL194
 13258 1844 0100     		.2byte	0x1
 13259 1846 56       		.byte	0x56
 13260 1847 30040000 		.4byte	.LVL194
 13261 184b 46040000 		.4byte	.LVL197
 13262 184f 0300     		.2byte	0x3
 13263 1851 91       		.byte	0x91
 13264 1852 9C7F     		.sleb128 -100
 13265 1854 46040000 		.4byte	.LVL197
 13266 1858 4C040000 		.4byte	.LVL199
 13267 185c 0200     		.2byte	0x2
 13268 185e 91       		.byte	0x91
 13269 185f 10       		.sleb128 16
 13270 1860 4C040000 		.4byte	.LVL199
 13271 1864 52040000 		.4byte	.LVL201
 13272 1868 0100     		.2byte	0x1
 13273 186a 56       		.byte	0x56
 13274 186b 52040000 		.4byte	.LVL201
 13275 186f 5C040000 		.4byte	.LVL202
 13276 1873 0300     		.2byte	0x3
 13277 1875 91       		.byte	0x91
ARM GAS  /tmp/ccFy9xbE.s 			page 268


 13278 1876 9C7F     		.sleb128 -100
 13279 1878 5C040000 		.4byte	.LVL202
 13280 187c 62040000 		.4byte	.LFE12
 13281 1880 0200     		.2byte	0x2
 13282 1882 91       		.byte	0x91
 13283 1883 10       		.sleb128 16
 13284 1884 00000000 		.4byte	0
 13285 1888 00000000 		.4byte	0
 13286              	.LVUS55:
 13287 188c 01       		.uleb128 .LVU274
 13288 188d 00       		.uleb128 .LVU367
 13289 188e 00       		.uleb128 .LVU375
 13290 188f 00       		.uleb128 .LVU403
 13291 1890 00       		.uleb128 .LVU403
 13292 1891 00       		.uleb128 .LVU426
 13293 1892 00       		.uleb128 .LVU426
 13294 1893 00       		.uleb128 0
 13295              	.LLST55:
 13296 1894 5E000000 		.4byte	.LVL104
 13297 1898 6A020000 		.4byte	.LVL155
 13298 189c 1000     		.2byte	0x10
 13299 189e F5       		.byte	0xf5
 13300 189f 0A       		.uleb128 0xa
 13301 18a0 2D       		.uleb128 0x2d
 13302 18a1 F4       		.byte	0xf4
 13303 18a2 2D       		.uleb128 0x2d
 13304 18a3 08       		.byte	0x8
 13305 18a4 00000000 		.4byte	0
 13306 18a8 00000000 		.4byte	0
 13307 18ac 2D       		.byte	0x2d
 13308 18ad 9F       		.byte	0x9f
 13309 18ae 90020000 		.4byte	.LVL162
 13310 18b2 5A030000 		.4byte	.LVL175
 13311 18b6 1000     		.2byte	0x10
 13312 18b8 F5       		.byte	0xf5
 13313 18b9 0A       		.uleb128 0xa
 13314 18ba 2D       		.uleb128 0x2d
 13315 18bb F4       		.byte	0xf4
 13316 18bc 2D       		.uleb128 0x2d
 13317 18bd 08       		.byte	0x8
 13318 18be 00000000 		.4byte	0
 13319 18c2 00000000 		.4byte	0
 13320 18c6 2D       		.byte	0x2d
 13321 18c7 9F       		.byte	0x9f
 13322 18c8 5A030000 		.4byte	.LVL175
 13323 18cc FC030000 		.4byte	.LVL186
 13324 18d0 1200     		.2byte	0x12
 13325 18d2 91       		.byte	0x91
 13326 18d3 00       		.sleb128 0
 13327 18d4 F6       		.byte	0xf6
 13328 18d5 08       		.byte	0x8
 13329 18d6 2D       		.uleb128 0x2d
 13330 18d7 F4       		.byte	0xf4
 13331 18d8 2D       		.uleb128 0x2d
 13332 18d9 08       		.byte	0x8
 13333 18da 00000000 		.4byte	0
 13334 18de 00000000 		.4byte	0
ARM GAS  /tmp/ccFy9xbE.s 			page 269


 13335 18e2 2D       		.byte	0x2d
 13336 18e3 9F       		.byte	0x9f
 13337 18e4 FC030000 		.4byte	.LVL186
 13338 18e8 62040000 		.4byte	.LFE12
 13339 18ec 1000     		.2byte	0x10
 13340 18ee F5       		.byte	0xf5
 13341 18ef 0A       		.uleb128 0xa
 13342 18f0 2D       		.uleb128 0x2d
 13343 18f1 F4       		.byte	0xf4
 13344 18f2 2D       		.uleb128 0x2d
 13345 18f3 08       		.byte	0x8
 13346 18f4 00000000 		.4byte	0
 13347 18f8 00000000 		.4byte	0
 13348 18fc 2D       		.byte	0x2d
 13349 18fd 9F       		.byte	0x9f
 13350 18fe 00000000 		.4byte	0
 13351 1902 00000000 		.4byte	0
 13352              	.LVUS56:
 13353 1906 00       		.uleb128 .LVU337
 13354 1907 00       		.uleb128 .LVU340
 13355 1908 00       		.uleb128 .LVU340
 13356 1909 00       		.uleb128 .LVU367
 13357 190a 00       		.uleb128 .LVU375
 13358 190b 00       		.uleb128 .LVU382
 13359 190c 00       		.uleb128 .LVU382
 13360 190d 00       		.uleb128 .LVU383
 13361 190e 00       		.uleb128 .LVU383
 13362 190f 00       		.uleb128 .LVU426
 13363 1910 00       		.uleb128 .LVU426
 13364 1911 00       		.uleb128 .LVU437
 13365 1912 00       		.uleb128 .LVU440
 13366 1913 00       		.uleb128 0
 13367              	.LLST56:
 13368 1914 C6010000 		.4byte	.LVL142
 13369 1918 D6010000 		.4byte	.LVL144
 13370 191c 0600     		.2byte	0x6
 13371 191e 58       		.byte	0x58
 13372 191f 93       		.byte	0x93
 13373 1920 04       		.uleb128 0x4
 13374 1921 59       		.byte	0x59
 13375 1922 93       		.byte	0x93
 13376 1923 04       		.uleb128 0x4
 13377 1924 D6010000 		.4byte	.LVL144
 13378 1928 6A020000 		.4byte	.LVL155
 13379 192c 0500     		.2byte	0x5
 13380 192e 91       		.byte	0x91
 13381 192f B87F     		.sleb128 -72
 13382 1931 93       		.byte	0x93
 13383 1932 08       		.uleb128 0x8
 13384 1933 90020000 		.4byte	.LVL162
 13385 1937 A6020000 		.4byte	.LVL166
 13386 193b 0600     		.2byte	0x6
 13387 193d 58       		.byte	0x58
 13388 193e 93       		.byte	0x93
 13389 193f 04       		.uleb128 0x4
 13390 1940 59       		.byte	0x59
 13391 1941 93       		.byte	0x93
ARM GAS  /tmp/ccFy9xbE.s 			page 270


 13392 1942 04       		.uleb128 0x4
 13393 1943 A6020000 		.4byte	.LVL166
 13394 1947 04030000 		.4byte	.LVL167
 13395 194b 0600     		.2byte	0x6
 13396 194d 50       		.byte	0x50
 13397 194e 93       		.byte	0x93
 13398 194f 04       		.uleb128 0x4
 13399 1950 51       		.byte	0x51
 13400 1951 93       		.byte	0x93
 13401 1952 04       		.uleb128 0x4
 13402 1953 04030000 		.4byte	.LVL167
 13403 1957 FC030000 		.4byte	.LVL186
 13404 195b 0500     		.2byte	0x5
 13405 195d 91       		.byte	0x91
 13406 195e B87F     		.sleb128 -72
 13407 1960 93       		.byte	0x93
 13408 1961 08       		.uleb128 0x8
 13409 1962 FC030000 		.4byte	.LVL186
 13410 1966 1C040000 		.4byte	.LVL191
 13411 196a 0500     		.2byte	0x5
 13412 196c 91       		.byte	0x91
 13413 196d B87F     		.sleb128 -72
 13414 196f 93       		.byte	0x93
 13415 1970 08       		.uleb128 0x8
 13416 1971 28040000 		.4byte	.LVL193
 13417 1975 62040000 		.4byte	.LFE12
 13418 1979 0500     		.2byte	0x5
 13419 197b 91       		.byte	0x91
 13420 197c B87F     		.sleb128 -72
 13421 197e 93       		.byte	0x93
 13422 197f 08       		.uleb128 0x8
 13423 1980 00000000 		.4byte	0
 13424 1984 00000000 		.4byte	0
 13425              	.LVUS57:
 13426 1988 00       		.uleb128 .LVU310
 13427 1989 00       		.uleb128 .LVU312
 13428 198a 00       		.uleb128 .LVU312
 13429 198b 00       		.uleb128 .LVU315
 13430 198c 00       		.uleb128 .LVU315
 13431 198d 00       		.uleb128 .LVU342
 13432 198e 00       		.uleb128 .LVU375
 13433 198f 00       		.uleb128 .LVU383
 13434              	.LLST57:
 13435 1990 04010000 		.4byte	.LVL120
 13436 1994 06010000 		.4byte	.LVL121
 13437 1998 0100     		.2byte	0x1
 13438 199a 50       		.byte	0x50
 13439 199b 06010000 		.4byte	.LVL121
 13440 199f 1E010000 		.4byte	.LVL124
 13441 19a3 0100     		.2byte	0x1
 13442 19a5 56       		.byte	0x56
 13443 19a6 1E010000 		.4byte	.LVL124
 13444 19aa D8010000 		.4byte	.LVL145
 13445 19ae 0400     		.2byte	0x4
 13446 19b0 76       		.byte	0x76
 13447 19b1 8178     		.sleb128 -1023
 13448 19b3 9F       		.byte	0x9f
ARM GAS  /tmp/ccFy9xbE.s 			page 271


 13449 19b4 90020000 		.4byte	.LVL162
 13450 19b8 04030000 		.4byte	.LVL167
 13451 19bc 0400     		.2byte	0x4
 13452 19be 76       		.byte	0x76
 13453 19bf 8178     		.sleb128 -1023
 13454 19c1 9F       		.byte	0x9f
 13455 19c2 00000000 		.4byte	0
 13456 19c6 00000000 		.4byte	0
 13457              	.LVUS58:
 13458 19ca 00       		.uleb128 .LVU304
 13459 19cb 00       		.uleb128 .LVU306
 13460 19cc 00       		.uleb128 .LVU306
 13461 19cd 02       		.uleb128 .LVU359
 13462 19ce 02       		.uleb128 .LVU359
 13463 19cf 00       		.uleb128 .LVU367
 13464 19d0 00       		.uleb128 .LVU375
 13465 19d1 00       		.uleb128 .LVU379
 13466 19d2 00       		.uleb128 .LVU379
 13467 19d3 00       		.uleb128 .LVU381
 13468 19d4 00       		.uleb128 .LVU381
 13469 19d5 00       		.uleb128 .LVU383
 13470 19d6 00       		.uleb128 .LVU383
 13471 19d7 00       		.uleb128 .LVU386
 13472 19d8 00       		.uleb128 .LVU386
 13473 19d9 00       		.uleb128 .LVU399
 13474 19da 00       		.uleb128 .LVU426
 13475 19db 00       		.uleb128 .LVU437
 13476 19dc 00       		.uleb128 .LVU440
 13477 19dd 00       		.uleb128 .LVU447
 13478 19de 00       		.uleb128 .LVU449
 13479 19df 00       		.uleb128 .LVU451
 13480 19e0 00       		.uleb128 .LVU451
 13481 19e1 00       		.uleb128 .LVU456
 13482 19e2 00       		.uleb128 .LVU456
 13483 19e3 00       		.uleb128 0
 13484              	.LLST58:
 13485 19e4 E2000000 		.4byte	.LVL115
 13486 19e8 E5000000 		.4byte	.LVL116-1
 13487 19ec 0100     		.2byte	0x1
 13488 19ee 50       		.byte	0x50
 13489 19ef E5000000 		.4byte	.LVL116-1
 13490 19f3 2A020000 		.4byte	.LVL151
 13491 19f7 0300     		.2byte	0x3
 13492 19f9 91       		.byte	0x91
 13493 19fa B47F     		.sleb128 -76
 13494 19fc 2A020000 		.4byte	.LVL151
 13495 1a00 6A020000 		.4byte	.LVL155
 13496 1a04 0200     		.2byte	0x2
 13497 1a06 30       		.byte	0x30
 13498 1a07 9F       		.byte	0x9f
 13499 1a08 90020000 		.4byte	.LVL162
 13500 1a0c 9C020000 		.4byte	.LVL163
 13501 1a10 0300     		.2byte	0x3
 13502 1a12 91       		.byte	0x91
 13503 1a13 B47F     		.sleb128 -76
 13504 1a15 9C020000 		.4byte	.LVL163
 13505 1a19 9E020000 		.4byte	.LVL164
ARM GAS  /tmp/ccFy9xbE.s 			page 272


 13506 1a1d 0100     		.2byte	0x1
 13507 1a1f 53       		.byte	0x53
 13508 1a20 9E020000 		.4byte	.LVL164
 13509 1a24 04030000 		.4byte	.LVL167
 13510 1a28 0300     		.2byte	0x3
 13511 1a2a 91       		.byte	0x91
 13512 1a2b B47F     		.sleb128 -76
 13513 1a2d 04030000 		.4byte	.LVL167
 13514 1a31 10030000 		.4byte	.LVL168
 13515 1a35 0100     		.2byte	0x1
 13516 1a37 56       		.byte	0x56
 13517 1a38 10030000 		.4byte	.LVL168
 13518 1a3c 42030000 		.4byte	.LVL172
 13519 1a40 0300     		.2byte	0x3
 13520 1a42 91       		.byte	0x91
 13521 1a43 B47F     		.sleb128 -76
 13522 1a45 FC030000 		.4byte	.LVL186
 13523 1a49 1C040000 		.4byte	.LVL191
 13524 1a4d 0300     		.2byte	0x3
 13525 1a4f 91       		.byte	0x91
 13526 1a50 B47F     		.sleb128 -76
 13527 1a52 28040000 		.4byte	.LVL193
 13528 1a56 36040000 		.4byte	.LVL195
 13529 1a5a 0200     		.2byte	0x2
 13530 1a5c 30       		.byte	0x30
 13531 1a5d 9F       		.byte	0x9f
 13532 1a5e 46040000 		.4byte	.LVL197
 13533 1a62 4C040000 		.4byte	.LVL199
 13534 1a66 0100     		.2byte	0x1
 13535 1a68 56       		.byte	0x56
 13536 1a69 4C040000 		.4byte	.LVL199
 13537 1a6d 5C040000 		.4byte	.LVL202
 13538 1a71 0200     		.2byte	0x2
 13539 1a73 30       		.byte	0x30
 13540 1a74 9F       		.byte	0x9f
 13541 1a75 5C040000 		.4byte	.LVL202
 13542 1a79 62040000 		.4byte	.LFE12
 13543 1a7d 0100     		.2byte	0x1
 13544 1a7f 56       		.byte	0x56
 13545 1a80 00000000 		.4byte	0
 13546 1a84 00000000 		.4byte	0
 13547              	.LVUS59:
 13548 1a88 00       		.uleb128 .LVU317
 13549 1a89 00       		.uleb128 .LVU319
 13550 1a8a 00       		.uleb128 .LVU319
 13551 1a8b 00       		.uleb128 .LVU367
 13552 1a8c 00       		.uleb128 .LVU375
 13553 1a8d 00       		.uleb128 .LVU425
 13554 1a8e 00       		.uleb128 .LVU426
 13555 1a8f 00       		.uleb128 .LVU437
 13556 1a90 00       		.uleb128 .LVU440
 13557 1a91 00       		.uleb128 0
 13558              	.LLST59:
 13559 1a92 3C010000 		.4byte	.LVL127
 13560 1a96 3F010000 		.4byte	.LVL128-1
 13561 1a9a 0600     		.2byte	0x6
 13562 1a9c 52       		.byte	0x52
ARM GAS  /tmp/ccFy9xbE.s 			page 273


 13563 1a9d 93       		.byte	0x93
 13564 1a9e 04       		.uleb128 0x4
 13565 1a9f 53       		.byte	0x53
 13566 1aa0 93       		.byte	0x93
 13567 1aa1 04       		.uleb128 0x4
 13568 1aa2 3F010000 		.4byte	.LVL128-1
 13569 1aa6 6A020000 		.4byte	.LVL155
 13570 1aaa 0800     		.2byte	0x8
 13571 1aac 90       		.byte	0x90
 13572 1aad 50       		.uleb128 0x50
 13573 1aae 93       		.byte	0x93
 13574 1aaf 04       		.uleb128 0x4
 13575 1ab0 90       		.byte	0x90
 13576 1ab1 51       		.uleb128 0x51
 13577 1ab2 93       		.byte	0x93
 13578 1ab3 04       		.uleb128 0x4
 13579 1ab4 90020000 		.4byte	.LVL162
 13580 1ab8 F8030000 		.4byte	.LVL185
 13581 1abc 0800     		.2byte	0x8
 13582 1abe 90       		.byte	0x90
 13583 1abf 50       		.uleb128 0x50
 13584 1ac0 93       		.byte	0x93
 13585 1ac1 04       		.uleb128 0x4
 13586 1ac2 90       		.byte	0x90
 13587 1ac3 51       		.uleb128 0x51
 13588 1ac4 93       		.byte	0x93
 13589 1ac5 04       		.uleb128 0x4
 13590 1ac6 FC030000 		.4byte	.LVL186
 13591 1aca 1C040000 		.4byte	.LVL191
 13592 1ace 0800     		.2byte	0x8
 13593 1ad0 90       		.byte	0x90
 13594 1ad1 50       		.uleb128 0x50
 13595 1ad2 93       		.byte	0x93
 13596 1ad3 04       		.uleb128 0x4
 13597 1ad4 90       		.byte	0x90
 13598 1ad5 51       		.uleb128 0x51
 13599 1ad6 93       		.byte	0x93
 13600 1ad7 04       		.uleb128 0x4
 13601 1ad8 28040000 		.4byte	.LVL193
 13602 1adc 62040000 		.4byte	.LFE12
 13603 1ae0 0800     		.2byte	0x8
 13604 1ae2 90       		.byte	0x90
 13605 1ae3 50       		.uleb128 0x50
 13606 1ae4 93       		.byte	0x93
 13607 1ae5 04       		.uleb128 0x4
 13608 1ae6 90       		.byte	0x90
 13609 1ae7 51       		.uleb128 0x51
 13610 1ae8 93       		.byte	0x93
 13611 1ae9 04       		.uleb128 0x4
 13612 1aea 00000000 		.4byte	0
 13613 1aee 00000000 		.4byte	0
 13614              	.LVUS60:
 13615 1af2 00       		.uleb128 .LVU320
 13616 1af3 00       		.uleb128 .LVU330
 13617              	.LLST60:
 13618 1af4 44010000 		.4byte	.LVL129
 13619 1af8 8A010000 		.4byte	.LVL136
ARM GAS  /tmp/ccFy9xbE.s 			page 274


 13620 1afc 0600     		.2byte	0x6
 13621 1afe 58       		.byte	0x58
 13622 1aff 93       		.byte	0x93
 13623 1b00 04       		.uleb128 0x4
 13624 1b01 59       		.byte	0x59
 13625 1b02 93       		.byte	0x93
 13626 1b03 04       		.uleb128 0x4
 13627 1b04 00000000 		.4byte	0
 13628 1b08 00000000 		.4byte	0
 13629              	.LVUS61:
 13630 1b0c 00       		.uleb128 .LVU344
 13631 1b0d 00       		.uleb128 .LVU346
 13632 1b0e 00       		.uleb128 .LVU346
 13633 1b0f 01       		.uleb128 .LVU358
 13634 1b10 01       		.uleb128 .LVU358
 13635 1b11 00       		.uleb128 .LVU367
 13636 1b12 00       		.uleb128 .LVU383
 13637 1b13 00       		.uleb128 .LVU399
 13638 1b14 00       		.uleb128 .LVU426
 13639 1b15 00       		.uleb128 .LVU427
 13640 1b16 00       		.uleb128 .LVU427
 13641 1b17 00       		.uleb128 .LVU437
 13642 1b18 00       		.uleb128 .LVU440
 13643 1b19 00       		.uleb128 .LVU447
 13644 1b1a 00       		.uleb128 .LVU449
 13645 1b1b 00       		.uleb128 .LVU451
 13646 1b1c 00       		.uleb128 .LVU451
 13647 1b1d 00       		.uleb128 .LVU456
 13648 1b1e 00       		.uleb128 .LVU456
 13649 1b1f 00       		.uleb128 0
 13650              	.LLST61:
 13651 1b20 E6010000 		.4byte	.LVL146
 13652 1b24 E8010000 		.4byte	.LVL147
 13653 1b28 0100     		.2byte	0x1
 13654 1b2a 53       		.byte	0x53
 13655 1b2b E8010000 		.4byte	.LVL147
 13656 1b2f 2A020000 		.4byte	.LVL151
 13657 1b33 0200     		.2byte	0x2
 13658 1b35 91       		.byte	0x91
 13659 1b36 40       		.sleb128 -64
 13660 1b37 2A020000 		.4byte	.LVL151
 13661 1b3b 6A020000 		.4byte	.LVL155
 13662 1b3f 0200     		.2byte	0x2
 13663 1b41 30       		.byte	0x30
 13664 1b42 9F       		.byte	0x9f
 13665 1b43 04030000 		.4byte	.LVL167
 13666 1b47 42030000 		.4byte	.LVL172
 13667 1b4b 0200     		.2byte	0x2
 13668 1b4d 91       		.byte	0x91
 13669 1b4e 40       		.sleb128 -64
 13670 1b4f FC030000 		.4byte	.LVL186
 13671 1b53 FE030000 		.4byte	.LVL187
 13672 1b57 0100     		.2byte	0x1
 13673 1b59 53       		.byte	0x53
 13674 1b5a FE030000 		.4byte	.LVL187
 13675 1b5e 1C040000 		.4byte	.LVL191
 13676 1b62 0200     		.2byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 275


 13677 1b64 91       		.byte	0x91
 13678 1b65 40       		.sleb128 -64
 13679 1b66 28040000 		.4byte	.LVL193
 13680 1b6a 36040000 		.4byte	.LVL195
 13681 1b6e 0200     		.2byte	0x2
 13682 1b70 30       		.byte	0x30
 13683 1b71 9F       		.byte	0x9f
 13684 1b72 46040000 		.4byte	.LVL197
 13685 1b76 4C040000 		.4byte	.LVL199
 13686 1b7a 0200     		.2byte	0x2
 13687 1b7c 91       		.byte	0x91
 13688 1b7d 40       		.sleb128 -64
 13689 1b7e 4C040000 		.4byte	.LVL199
 13690 1b82 5C040000 		.4byte	.LVL202
 13691 1b86 0200     		.2byte	0x2
 13692 1b88 30       		.byte	0x30
 13693 1b89 9F       		.byte	0x9f
 13694 1b8a 5C040000 		.4byte	.LVL202
 13695 1b8e 62040000 		.4byte	.LFE12
 13696 1b92 0200     		.2byte	0x2
 13697 1b94 91       		.byte	0x91
 13698 1b95 40       		.sleb128 -64
 13699 1b96 00000000 		.4byte	0
 13700 1b9a 00000000 		.4byte	0
 13701              	.LVUS62:
 13702 1b9e 03       		.uleb128 .LVU360
 13703 1b9f 00       		.uleb128 .LVU362
 13704 1ba0 00       		.uleb128 .LVU362
 13705 1ba1 00       		.uleb128 .LVU367
 13706 1ba2 01       		.uleb128 .LVU387
 13707 1ba3 00       		.uleb128 .LVU391
 13708 1ba4 00       		.uleb128 .LVU391
 13709 1ba5 00       		.uleb128 .LVU399
 13710 1ba6 00       		.uleb128 .LVU426
 13711 1ba7 00       		.uleb128 .LVU428
 13712 1ba8 00       		.uleb128 .LVU428
 13713 1ba9 01       		.uleb128 .LVU431
 13714 1baa 01       		.uleb128 .LVU431
 13715 1bab 00       		.uleb128 .LVU437
 13716 1bac 00       		.uleb128 .LVU440
 13717 1bad 00       		.uleb128 .LVU447
 13718 1bae 00       		.uleb128 .LVU451
 13719 1baf 00       		.uleb128 .LVU452
 13720 1bb0 00       		.uleb128 .LVU452
 13721 1bb1 00       		.uleb128 .LVU456
 13722              	.LLST62:
 13723 1bb2 2A020000 		.4byte	.LVL151
 13724 1bb6 32020000 		.4byte	.LVL152
 13725 1bba 0300     		.2byte	0x3
 13726 1bbc 91       		.byte	0x91
 13727 1bbd AC7F     		.sleb128 -84
 13728 1bbf 32020000 		.4byte	.LVL152
 13729 1bc3 6A020000 		.4byte	.LVL155
 13730 1bc7 0200     		.2byte	0x2
 13731 1bc9 30       		.byte	0x30
 13732 1bca 9F       		.byte	0x9f
 13733 1bcb 10030000 		.4byte	.LVL168
ARM GAS  /tmp/ccFy9xbE.s 			page 276


 13734 1bcf 1C030000 		.4byte	.LVL169
 13735 1bd3 0300     		.2byte	0x3
 13736 1bd5 91       		.byte	0x91
 13737 1bd6 AC7F     		.sleb128 -84
 13738 1bd8 1C030000 		.4byte	.LVL169
 13739 1bdc 42030000 		.4byte	.LVL172
 13740 1be0 0100     		.2byte	0x1
 13741 1be2 56       		.byte	0x56
 13742 1be3 FC030000 		.4byte	.LVL186
 13743 1be7 00040000 		.4byte	.LVL188
 13744 1beb 0100     		.2byte	0x1
 13745 1bed 52       		.byte	0x52
 13746 1bee 00040000 		.4byte	.LVL188
 13747 1bf2 08040000 		.4byte	.LVL189
 13748 1bf6 0300     		.2byte	0x3
 13749 1bf8 91       		.byte	0x91
 13750 1bf9 AC7F     		.sleb128 -84
 13751 1bfb 08040000 		.4byte	.LVL189
 13752 1bff 1C040000 		.4byte	.LVL191
 13753 1c03 0100     		.2byte	0x1
 13754 1c05 56       		.byte	0x56
 13755 1c06 28040000 		.4byte	.LVL193
 13756 1c0a 36040000 		.4byte	.LVL195
 13757 1c0e 0200     		.2byte	0x2
 13758 1c10 30       		.byte	0x30
 13759 1c11 9F       		.byte	0x9f
 13760 1c12 4C040000 		.4byte	.LVL199
 13761 1c16 4E040000 		.4byte	.LVL200
 13762 1c1a 0100     		.2byte	0x1
 13763 1c1c 53       		.byte	0x53
 13764 1c1d 4E040000 		.4byte	.LVL200
 13765 1c21 5C040000 		.4byte	.LVL202
 13766 1c25 0300     		.2byte	0x3
 13767 1c27 91       		.byte	0x91
 13768 1c28 AC7F     		.sleb128 -84
 13769 1c2a 00000000 		.4byte	0
 13770 1c2e 00000000 		.4byte	0
 13771              	.LVUS63:
 13772 1c32 02       		.uleb128 .LVU364
 13773 1c33 00       		.uleb128 .LVU367
 13774 1c34 01       		.uleb128 .LVU400
 13775 1c35 00       		.uleb128 .LVU426
 13776 1c36 00       		.uleb128 .LVU440
 13777 1c37 00       		.uleb128 .LVU449
 13778              	.LLST63:
 13779 1c38 32020000 		.4byte	.LVL152
 13780 1c3c 6A020000 		.4byte	.LVL155
 13781 1c40 0300     		.2byte	0x3
 13782 1c42 91       		.byte	0x91
 13783 1c43 B07F     		.sleb128 -80
 13784 1c45 42030000 		.4byte	.LVL172
 13785 1c49 FC030000 		.4byte	.LVL186
 13786 1c4d 0300     		.2byte	0x3
 13787 1c4f 91       		.byte	0x91
 13788 1c50 B07F     		.sleb128 -80
 13789 1c52 28040000 		.4byte	.LVL193
 13790 1c56 46040000 		.4byte	.LVL197
ARM GAS  /tmp/ccFy9xbE.s 			page 277


 13791 1c5a 0300     		.2byte	0x3
 13792 1c5c 91       		.byte	0x91
 13793 1c5d B07F     		.sleb128 -80
 13794 1c5f 00000000 		.4byte	0
 13795 1c63 00000000 		.4byte	0
 13796              	.LLST64:
 13797 1c67 00000000 		.4byte	.LFB11
 13798 1c6b 04000000 		.4byte	.LCFI28
 13799 1c6f 0200     		.2byte	0x2
 13800 1c71 7D       		.byte	0x7d
 13801 1c72 00       		.sleb128 0
 13802 1c73 04000000 		.4byte	.LCFI28
 13803 1c77 08000000 		.4byte	.LCFI29
 13804 1c7b 0200     		.2byte	0x2
 13805 1c7d 7D       		.byte	0x7d
 13806 1c7e 24       		.sleb128 36
 13807 1c7f 08000000 		.4byte	.LCFI29
 13808 1c83 0A000000 		.4byte	.LCFI30
 13809 1c87 0200     		.2byte	0x2
 13810 1c89 7D       		.byte	0x7d
 13811 1c8a 34       		.sleb128 52
 13812 1c8b 0A000000 		.4byte	.LCFI30
 13813 1c8f E6010000 		.4byte	.LCFI31
 13814 1c93 0300     		.2byte	0x3
 13815 1c95 7D       		.byte	0x7d
 13816 1c96 8801     		.sleb128 136
 13817 1c98 E6010000 		.4byte	.LCFI31
 13818 1c9c EA010000 		.4byte	.LCFI32
 13819 1ca0 0200     		.2byte	0x2
 13820 1ca2 7D       		.byte	0x7d
 13821 1ca3 34       		.sleb128 52
 13822 1ca4 EA010000 		.4byte	.LCFI32
 13823 1ca8 EE010000 		.4byte	.LCFI33
 13824 1cac 0200     		.2byte	0x2
 13825 1cae 7D       		.byte	0x7d
 13826 1caf 24       		.sleb128 36
 13827 1cb0 EE010000 		.4byte	.LCFI33
 13828 1cb4 18020000 		.4byte	.LCFI34
 13829 1cb8 0300     		.2byte	0x3
 13830 1cba 7D       		.byte	0x7d
 13831 1cbb 8801     		.sleb128 136
 13832 1cbd 18020000 		.4byte	.LCFI34
 13833 1cc1 1C020000 		.4byte	.LCFI35
 13834 1cc5 0200     		.2byte	0x2
 13835 1cc7 7D       		.byte	0x7d
 13836 1cc8 34       		.sleb128 52
 13837 1cc9 1C020000 		.4byte	.LCFI35
 13838 1ccd 20020000 		.4byte	.LCFI36
 13839 1cd1 0200     		.2byte	0x2
 13840 1cd3 7D       		.byte	0x7d
 13841 1cd4 24       		.sleb128 36
 13842 1cd5 20020000 		.4byte	.LCFI36
 13843 1cd9 24020000 		.4byte	.LCFI37
 13844 1cdd 0200     		.2byte	0x2
 13845 1cdf 7D       		.byte	0x7d
 13846 1ce0 00       		.sleb128 0
 13847 1ce1 24020000 		.4byte	.LCFI37
ARM GAS  /tmp/ccFy9xbE.s 			page 278


 13848 1ce5 3E020000 		.4byte	.LCFI38
 13849 1ce9 0300     		.2byte	0x3
 13850 1ceb 7D       		.byte	0x7d
 13851 1cec 8801     		.sleb128 136
 13852 1cee 3E020000 		.4byte	.LCFI38
 13853 1cf2 42020000 		.4byte	.LCFI39
 13854 1cf6 0200     		.2byte	0x2
 13855 1cf8 7D       		.byte	0x7d
 13856 1cf9 34       		.sleb128 52
 13857 1cfa 42020000 		.4byte	.LCFI39
 13858 1cfe 46020000 		.4byte	.LCFI40
 13859 1d02 0200     		.2byte	0x2
 13860 1d04 7D       		.byte	0x7d
 13861 1d05 24       		.sleb128 36
 13862 1d06 46020000 		.4byte	.LCFI40
 13863 1d0a 4A020000 		.4byte	.LCFI41
 13864 1d0e 0200     		.2byte	0x2
 13865 1d10 7D       		.byte	0x7d
 13866 1d11 00       		.sleb128 0
 13867 1d12 4A020000 		.4byte	.LCFI41
 13868 1d16 80020000 		.4byte	.LCFI42
 13869 1d1a 0300     		.2byte	0x3
 13870 1d1c 7D       		.byte	0x7d
 13871 1d1d 8801     		.sleb128 136
 13872 1d1f 80020000 		.4byte	.LCFI42
 13873 1d23 84020000 		.4byte	.LCFI43
 13874 1d27 0200     		.2byte	0x2
 13875 1d29 7D       		.byte	0x7d
 13876 1d2a 34       		.sleb128 52
 13877 1d2b 84020000 		.4byte	.LCFI43
 13878 1d2f 88020000 		.4byte	.LCFI44
 13879 1d33 0200     		.2byte	0x2
 13880 1d35 7D       		.byte	0x7d
 13881 1d36 24       		.sleb128 36
 13882 1d37 88020000 		.4byte	.LCFI44
 13883 1d3b 8C020000 		.4byte	.LCFI45
 13884 1d3f 0200     		.2byte	0x2
 13885 1d41 7D       		.byte	0x7d
 13886 1d42 00       		.sleb128 0
 13887 1d43 8C020000 		.4byte	.LCFI45
 13888 1d47 20040000 		.4byte	.LFE11
 13889 1d4b 0300     		.2byte	0x3
 13890 1d4d 7D       		.byte	0x7d
 13891 1d4e 8801     		.sleb128 136
 13892 1d50 00000000 		.4byte	0
 13893 1d54 00000000 		.4byte	0
 13894              	.LVUS65:
 13895 1d58 00       		.uleb128 0
 13896 1d59 00       		.uleb128 .LVU470
 13897 1d5a 00       		.uleb128 .LVU470
 13898 1d5b 00       		.uleb128 .LVU564
 13899 1d5c 00       		.uleb128 .LVU564
 13900 1d5d 00       		.uleb128 .LVU565
 13901 1d5e 00       		.uleb128 .LVU565
 13902 1d5f 00       		.uleb128 .LVU572
 13903 1d60 00       		.uleb128 .LVU572
 13904 1d61 00       		.uleb128 .LVU573
ARM GAS  /tmp/ccFy9xbE.s 			page 279


 13905 1d62 00       		.uleb128 .LVU573
 13906 1d63 00       		.uleb128 .LVU589
 13907 1d64 00       		.uleb128 .LVU589
 13908 1d65 00       		.uleb128 .LVU590
 13909 1d66 00       		.uleb128 .LVU590
 13910 1d67 00       		.uleb128 0
 13911              	.LLST65:
 13912 1d68 00000000 		.4byte	.LVL204
 13913 1d6c 24000000 		.4byte	.LVL207
 13914 1d70 0100     		.2byte	0x1
 13915 1d72 50       		.byte	0x50
 13916 1d73 24000000 		.4byte	.LVL207
 13917 1d77 20020000 		.4byte	.LVL263
 13918 1d7b 0300     		.2byte	0x3
 13919 1d7d 91       		.byte	0x91
 13920 1d7e 907F     		.sleb128 -112
 13921 1d80 20020000 		.4byte	.LVL263
 13922 1d84 24020000 		.4byte	.LVL264
 13923 1d88 0300     		.2byte	0x3
 13924 1d8a 7D       		.byte	0x7d
 13925 1d8b 907F     		.sleb128 -112
 13926 1d8d 24020000 		.4byte	.LVL264
 13927 1d91 46020000 		.4byte	.LVL269
 13928 1d95 0300     		.2byte	0x3
 13929 1d97 91       		.byte	0x91
 13930 1d98 907F     		.sleb128 -112
 13931 1d9a 46020000 		.4byte	.LVL269
 13932 1d9e 4A020000 		.4byte	.LVL270
 13933 1da2 0300     		.2byte	0x3
 13934 1da4 7D       		.byte	0x7d
 13935 1da5 907F     		.sleb128 -112
 13936 1da7 4A020000 		.4byte	.LVL270
 13937 1dab 88020000 		.4byte	.LVL280
 13938 1daf 0300     		.2byte	0x3
 13939 1db1 91       		.byte	0x91
 13940 1db2 907F     		.sleb128 -112
 13941 1db4 88020000 		.4byte	.LVL280
 13942 1db8 8C020000 		.4byte	.LVL281
 13943 1dbc 0300     		.2byte	0x3
 13944 1dbe 7D       		.byte	0x7d
 13945 1dbf 907F     		.sleb128 -112
 13946 1dc1 8C020000 		.4byte	.LVL281
 13947 1dc5 20040000 		.4byte	.LFE11
 13948 1dc9 0300     		.2byte	0x3
 13949 1dcb 91       		.byte	0x91
 13950 1dcc 907F     		.sleb128 -112
 13951 1dce 00000000 		.4byte	0
 13952 1dd2 00000000 		.4byte	0
 13953              	.LVUS66:
 13954 1dd6 00       		.uleb128 0
 13955 1dd7 00       		.uleb128 .LVU471
 13956 1dd8 00       		.uleb128 .LVU471
 13957 1dd9 00       		.uleb128 .LVU564
 13958 1dda 00       		.uleb128 .LVU564
 13959 1ddb 00       		.uleb128 .LVU565
 13960 1ddc 00       		.uleb128 .LVU565
 13961 1ddd 00       		.uleb128 .LVU572
ARM GAS  /tmp/ccFy9xbE.s 			page 280


 13962 1dde 00       		.uleb128 .LVU572
 13963 1ddf 00       		.uleb128 .LVU573
 13964 1de0 00       		.uleb128 .LVU573
 13965 1de1 00       		.uleb128 .LVU589
 13966 1de2 00       		.uleb128 .LVU589
 13967 1de3 00       		.uleb128 .LVU590
 13968 1de4 00       		.uleb128 .LVU590
 13969 1de5 00       		.uleb128 0
 13970              	.LLST66:
 13971 1de6 00000000 		.4byte	.LVL204
 13972 1dea 28000000 		.4byte	.LVL208
 13973 1dee 0100     		.2byte	0x1
 13974 1df0 51       		.byte	0x51
 13975 1df1 28000000 		.4byte	.LVL208
 13976 1df5 20020000 		.4byte	.LVL263
 13977 1df9 0300     		.2byte	0x3
 13978 1dfb 91       		.byte	0x91
 13979 1dfc 947F     		.sleb128 -108
 13980 1dfe 20020000 		.4byte	.LVL263
 13981 1e02 24020000 		.4byte	.LVL264
 13982 1e06 0300     		.2byte	0x3
 13983 1e08 7D       		.byte	0x7d
 13984 1e09 947F     		.sleb128 -108
 13985 1e0b 24020000 		.4byte	.LVL264
 13986 1e0f 46020000 		.4byte	.LVL269
 13987 1e13 0300     		.2byte	0x3
 13988 1e15 91       		.byte	0x91
 13989 1e16 947F     		.sleb128 -108
 13990 1e18 46020000 		.4byte	.LVL269
 13991 1e1c 4A020000 		.4byte	.LVL270
 13992 1e20 0300     		.2byte	0x3
 13993 1e22 7D       		.byte	0x7d
 13994 1e23 947F     		.sleb128 -108
 13995 1e25 4A020000 		.4byte	.LVL270
 13996 1e29 88020000 		.4byte	.LVL280
 13997 1e2d 0300     		.2byte	0x3
 13998 1e2f 91       		.byte	0x91
 13999 1e30 947F     		.sleb128 -108
 14000 1e32 88020000 		.4byte	.LVL280
 14001 1e36 8C020000 		.4byte	.LVL281
 14002 1e3a 0300     		.2byte	0x3
 14003 1e3c 7D       		.byte	0x7d
 14004 1e3d 947F     		.sleb128 -108
 14005 1e3f 8C020000 		.4byte	.LVL281
 14006 1e43 20040000 		.4byte	.LFE11
 14007 1e47 0300     		.2byte	0x3
 14008 1e49 91       		.byte	0x91
 14009 1e4a 947F     		.sleb128 -108
 14010 1e4c 00000000 		.4byte	0
 14011 1e50 00000000 		.4byte	0
 14012              	.LVUS67:
 14013 1e54 00       		.uleb128 0
 14014 1e55 00       		.uleb128 .LVU468
 14015 1e56 00       		.uleb128 .LVU468
 14016 1e57 00       		.uleb128 .LVU564
 14017 1e58 00       		.uleb128 .LVU564
 14018 1e59 00       		.uleb128 .LVU565
ARM GAS  /tmp/ccFy9xbE.s 			page 281


 14019 1e5a 00       		.uleb128 .LVU565
 14020 1e5b 00       		.uleb128 .LVU565
 14021 1e5c 00       		.uleb128 .LVU565
 14022 1e5d 00       		.uleb128 .LVU570
 14023 1e5e 00       		.uleb128 .LVU570
 14024 1e5f 00       		.uleb128 .LVU573
 14025 1e60 00       		.uleb128 .LVU573
 14026 1e61 00       		.uleb128 .LVU573
 14027 1e62 00       		.uleb128 .LVU573
 14028 1e63 00       		.uleb128 .LVU589
 14029 1e64 00       		.uleb128 .LVU589
 14030 1e65 00       		.uleb128 .LVU590
 14031 1e66 00       		.uleb128 .LVU590
 14032 1e67 00       		.uleb128 .LVU590
 14033 1e68 00       		.uleb128 .LVU590
 14034 1e69 00       		.uleb128 0
 14035              	.LLST67:
 14036 1e6a 00000000 		.4byte	.LVL204
 14037 1e6e 1C000000 		.4byte	.LVL206
 14038 1e72 0100     		.2byte	0x1
 14039 1e74 52       		.byte	0x52
 14040 1e75 1C000000 		.4byte	.LVL206
 14041 1e79 20020000 		.4byte	.LVL263
 14042 1e7d 0100     		.2byte	0x1
 14043 1e7f 5A       		.byte	0x5a
 14044 1e80 20020000 		.4byte	.LVL263
 14045 1e84 23020000 		.4byte	.LVL264-1
 14046 1e88 0100     		.2byte	0x1
 14047 1e8a 52       		.byte	0x52
 14048 1e8b 23020000 		.4byte	.LVL264-1
 14049 1e8f 24020000 		.4byte	.LVL264
 14050 1e93 0400     		.2byte	0x4
 14051 1e95 F3       		.byte	0xf3
 14052 1e96 01       		.uleb128 0x1
 14053 1e97 52       		.byte	0x52
 14054 1e98 9F       		.byte	0x9f
 14055 1e99 24020000 		.4byte	.LVL264
 14056 1e9d 3A020000 		.4byte	.LVL268
 14057 1ea1 0100     		.2byte	0x1
 14058 1ea3 5A       		.byte	0x5a
 14059 1ea4 3A020000 		.4byte	.LVL268
 14060 1ea8 49020000 		.4byte	.LVL270-1
 14061 1eac 0100     		.2byte	0x1
 14062 1eae 52       		.byte	0x52
 14063 1eaf 49020000 		.4byte	.LVL270-1
 14064 1eb3 4A020000 		.4byte	.LVL270
 14065 1eb7 0400     		.2byte	0x4
 14066 1eb9 F3       		.byte	0xf3
 14067 1eba 01       		.uleb128 0x1
 14068 1ebb 52       		.byte	0x52
 14069 1ebc 9F       		.byte	0x9f
 14070 1ebd 4A020000 		.4byte	.LVL270
 14071 1ec1 88020000 		.4byte	.LVL280
 14072 1ec5 0100     		.2byte	0x1
 14073 1ec7 5A       		.byte	0x5a
 14074 1ec8 88020000 		.4byte	.LVL280
 14075 1ecc 8B020000 		.4byte	.LVL281-1
ARM GAS  /tmp/ccFy9xbE.s 			page 282


 14076 1ed0 0100     		.2byte	0x1
 14077 1ed2 52       		.byte	0x52
 14078 1ed3 8B020000 		.4byte	.LVL281-1
 14079 1ed7 8C020000 		.4byte	.LVL281
 14080 1edb 0400     		.2byte	0x4
 14081 1edd F3       		.byte	0xf3
 14082 1ede 01       		.uleb128 0x1
 14083 1edf 52       		.byte	0x52
 14084 1ee0 9F       		.byte	0x9f
 14085 1ee1 8C020000 		.4byte	.LVL281
 14086 1ee5 20040000 		.4byte	.LFE11
 14087 1ee9 0100     		.2byte	0x1
 14088 1eeb 5A       		.byte	0x5a
 14089 1eec 00000000 		.4byte	0
 14090 1ef0 00000000 		.4byte	0
 14091              	.LVUS68:
 14092 1ef4 00       		.uleb128 0
 14093 1ef5 00       		.uleb128 .LVU466
 14094 1ef6 00       		.uleb128 .LVU466
 14095 1ef7 00       		.uleb128 .LVU564
 14096 1ef8 00       		.uleb128 .LVU564
 14097 1ef9 00       		.uleb128 .LVU565
 14098 1efa 00       		.uleb128 .LVU565
 14099 1efb 00       		.uleb128 .LVU565
 14100 1efc 00       		.uleb128 .LVU565
 14101 1efd 00       		.uleb128 .LVU570
 14102 1efe 00       		.uleb128 .LVU570
 14103 1eff 00       		.uleb128 .LVU573
 14104 1f00 00       		.uleb128 .LVU573
 14105 1f01 00       		.uleb128 .LVU573
 14106 1f02 00       		.uleb128 .LVU573
 14107 1f03 00       		.uleb128 .LVU589
 14108 1f04 00       		.uleb128 .LVU589
 14109 1f05 00       		.uleb128 .LVU590
 14110 1f06 00       		.uleb128 .LVU590
 14111 1f07 00       		.uleb128 .LVU590
 14112 1f08 00       		.uleb128 .LVU590
 14113 1f09 00       		.uleb128 0
 14114              	.LLST68:
 14115 1f0a 00000000 		.4byte	.LVL204
 14116 1f0e 12000000 		.4byte	.LVL205
 14117 1f12 0100     		.2byte	0x1
 14118 1f14 53       		.byte	0x53
 14119 1f15 12000000 		.4byte	.LVL205
 14120 1f19 20020000 		.4byte	.LVL263
 14121 1f1d 0100     		.2byte	0x1
 14122 1f1f 5B       		.byte	0x5b
 14123 1f20 20020000 		.4byte	.LVL263
 14124 1f24 23020000 		.4byte	.LVL264-1
 14125 1f28 0100     		.2byte	0x1
 14126 1f2a 53       		.byte	0x53
 14127 1f2b 23020000 		.4byte	.LVL264-1
 14128 1f2f 24020000 		.4byte	.LVL264
 14129 1f33 0400     		.2byte	0x4
 14130 1f35 F3       		.byte	0xf3
 14131 1f36 01       		.uleb128 0x1
 14132 1f37 53       		.byte	0x53
ARM GAS  /tmp/ccFy9xbE.s 			page 283


 14133 1f38 9F       		.byte	0x9f
 14134 1f39 24020000 		.4byte	.LVL264
 14135 1f3d 3A020000 		.4byte	.LVL268
 14136 1f41 0100     		.2byte	0x1
 14137 1f43 5B       		.byte	0x5b
 14138 1f44 3A020000 		.4byte	.LVL268
 14139 1f48 49020000 		.4byte	.LVL270-1
 14140 1f4c 0100     		.2byte	0x1
 14141 1f4e 53       		.byte	0x53
 14142 1f4f 49020000 		.4byte	.LVL270-1
 14143 1f53 4A020000 		.4byte	.LVL270
 14144 1f57 0400     		.2byte	0x4
 14145 1f59 F3       		.byte	0xf3
 14146 1f5a 01       		.uleb128 0x1
 14147 1f5b 53       		.byte	0x53
 14148 1f5c 9F       		.byte	0x9f
 14149 1f5d 4A020000 		.4byte	.LVL270
 14150 1f61 88020000 		.4byte	.LVL280
 14151 1f65 0100     		.2byte	0x1
 14152 1f67 5B       		.byte	0x5b
 14153 1f68 88020000 		.4byte	.LVL280
 14154 1f6c 8B020000 		.4byte	.LVL281-1
 14155 1f70 0100     		.2byte	0x1
 14156 1f72 53       		.byte	0x53
 14157 1f73 8B020000 		.4byte	.LVL281-1
 14158 1f77 8C020000 		.4byte	.LVL281
 14159 1f7b 0400     		.2byte	0x4
 14160 1f7d F3       		.byte	0xf3
 14161 1f7e 01       		.uleb128 0x1
 14162 1f7f 53       		.byte	0x53
 14163 1f80 9F       		.byte	0x9f
 14164 1f81 8C020000 		.4byte	.LVL281
 14165 1f85 20040000 		.4byte	.LFE11
 14166 1f89 0100     		.2byte	0x1
 14167 1f8b 5B       		.byte	0x5b
 14168 1f8c 00000000 		.4byte	0
 14169 1f90 00000000 		.4byte	0
 14170              	.LVUS69:
 14171 1f94 00       		.uleb128 0
 14172 1f95 00       		.uleb128 .LVU483
 14173 1f96 00       		.uleb128 .LVU483
 14174 1f97 00       		.uleb128 .LVU557
 14175 1f98 00       		.uleb128 .LVU557
 14176 1f99 00       		.uleb128 .LVU562
 14177 1f9a 00       		.uleb128 .LVU565
 14178 1f9b 00       		.uleb128 .LVU569
 14179 1f9c 00       		.uleb128 .LVU573
 14180 1f9d 00       		.uleb128 .LVU579
 14181 1f9e 00       		.uleb128 .LVU579
 14182 1f9f 00       		.uleb128 .LVU583
 14183 1fa0 00       		.uleb128 .LVU583
 14184 1fa1 00       		.uleb128 .LVU588
 14185 1fa2 00       		.uleb128 .LVU590
 14186 1fa3 00       		.uleb128 .LVU594
 14187 1fa4 00       		.uleb128 .LVU595
 14188 1fa5 00       		.uleb128 0
 14189              	.LLST69:
ARM GAS  /tmp/ccFy9xbE.s 			page 284


 14190 1fa6 00000000 		.4byte	.LVL204
 14191 1faa 98000000 		.4byte	.LVL216
 14192 1fae 0200     		.2byte	0x2
 14193 1fb0 91       		.byte	0x91
 14194 1fb1 00       		.sleb128 0
 14195 1fb2 98000000 		.4byte	.LVL216
 14196 1fb6 EE010000 		.4byte	.LVL259
 14197 1fba 0600     		.2byte	0x6
 14198 1fbc 58       		.byte	0x58
 14199 1fbd 93       		.byte	0x93
 14200 1fbe 04       		.uleb128 0x4
 14201 1fbf 59       		.byte	0x59
 14202 1fc0 93       		.byte	0x93
 14203 1fc1 04       		.uleb128 0x4
 14204 1fc2 EE010000 		.4byte	.LVL259
 14205 1fc6 0E020000 		.4byte	.LVL262
 14206 1fca 0200     		.2byte	0x2
 14207 1fcc 91       		.byte	0x91
 14208 1fcd 00       		.sleb128 0
 14209 1fce 24020000 		.4byte	.LVL264
 14210 1fd2 34020000 		.4byte	.LVL267
 14211 1fd6 0200     		.2byte	0x2
 14212 1fd8 91       		.byte	0x91
 14213 1fd9 00       		.sleb128 0
 14214 1fda 4A020000 		.4byte	.LVL270
 14215 1fde 5E020000 		.4byte	.LVL272
 14216 1fe2 0200     		.2byte	0x2
 14217 1fe4 91       		.byte	0x91
 14218 1fe5 00       		.sleb128 0
 14219 1fe6 5E020000 		.4byte	.LVL272
 14220 1fea 68020000 		.4byte	.LVL275
 14221 1fee 0600     		.2byte	0x6
 14222 1ff0 58       		.byte	0x58
 14223 1ff1 93       		.byte	0x93
 14224 1ff2 04       		.uleb128 0x4
 14225 1ff3 59       		.byte	0x59
 14226 1ff4 93       		.byte	0x93
 14227 1ff5 04       		.uleb128 0x4
 14228 1ff6 68020000 		.4byte	.LVL275
 14229 1ffa 7E020000 		.4byte	.LVL279
 14230 1ffe 0200     		.2byte	0x2
 14231 2000 91       		.byte	0x91
 14232 2001 00       		.sleb128 0
 14233 2002 8C020000 		.4byte	.LVL281
 14234 2006 9C020000 		.4byte	.LVL284
 14235 200a 0200     		.2byte	0x2
 14236 200c 91       		.byte	0x91
 14237 200d 00       		.sleb128 0
 14238 200e A4020000 		.4byte	.LVL285
 14239 2012 20040000 		.4byte	.LFE11
 14240 2016 0600     		.2byte	0x6
 14241 2018 58       		.byte	0x58
 14242 2019 93       		.byte	0x93
 14243 201a 04       		.uleb128 0x4
 14244 201b 59       		.byte	0x59
 14245 201c 93       		.byte	0x93
 14246 201d 04       		.uleb128 0x4
ARM GAS  /tmp/ccFy9xbE.s 			page 285


 14247 201e 00000000 		.4byte	0
 14248 2022 00000000 		.4byte	0
 14249              	.LVUS70:
 14250 2026 00       		.uleb128 0
 14251 2027 00       		.uleb128 .LVU485
 14252 2028 00       		.uleb128 .LVU485
 14253 2029 00       		.uleb128 .LVU490
 14254 202a 00       		.uleb128 .LVU490
 14255 202b 01       		.uleb128 .LVU492
 14256 202c 01       		.uleb128 .LVU492
 14257 202d 00       		.uleb128 .LVU493
 14258 202e 00       		.uleb128 .LVU557
 14259 202f 00       		.uleb128 .LVU561
 14260 2030 00       		.uleb128 .LVU565
 14261 2031 00       		.uleb128 .LVU567
 14262 2032 00       		.uleb128 .LVU573
 14263 2033 00       		.uleb128 .LVU580
 14264 2034 00       		.uleb128 .LVU583
 14265 2035 00       		.uleb128 .LVU585
 14266 2036 00       		.uleb128 .LVU590
 14267 2037 00       		.uleb128 .LVU592
 14268 2038 00       		.uleb128 .LVU637
 14269 2039 00       		.uleb128 .LVU639
 14270 203a 00       		.uleb128 .LVU668
 14271 203b 00       		.uleb128 .LVU669
 14272              	.LLST70:
 14273 203c 00000000 		.4byte	.LVL204
 14274 2040 A2000000 		.4byte	.LVL217
 14275 2044 0200     		.2byte	0x2
 14276 2046 91       		.byte	0x91
 14277 2047 08       		.sleb128 8
 14278 2048 A2000000 		.4byte	.LVL217
 14279 204c B4000000 		.4byte	.LVL220
 14280 2050 0100     		.2byte	0x1
 14281 2052 56       		.byte	0x56
 14282 2053 B4000000 		.4byte	.LVL220
 14283 2057 B8000000 		.4byte	.LVL221
 14284 205b 0300     		.2byte	0x3
 14285 205d 76       		.byte	0x76
 14286 205e 01       		.sleb128 1
 14287 205f 9F       		.byte	0x9f
 14288 2060 B8000000 		.4byte	.LVL221
 14289 2064 CC000000 		.4byte	.LVL222
 14290 2068 0100     		.2byte	0x1
 14291 206a 56       		.byte	0x56
 14292 206b EE010000 		.4byte	.LVL259
 14293 206f 02020000 		.4byte	.LVL261
 14294 2073 0200     		.2byte	0x2
 14295 2075 91       		.byte	0x91
 14296 2076 08       		.sleb128 8
 14297 2077 24020000 		.4byte	.LVL264
 14298 207b 2C020000 		.4byte	.LVL265
 14299 207f 0200     		.2byte	0x2
 14300 2081 91       		.byte	0x91
 14301 2082 08       		.sleb128 8
 14302 2083 4A020000 		.4byte	.LVL270
 14303 2087 60020000 		.4byte	.LVL273
ARM GAS  /tmp/ccFy9xbE.s 			page 286


 14304 208b 0200     		.2byte	0x2
 14305 208d 91       		.byte	0x91
 14306 208e 08       		.sleb128 8
 14307 208f 68020000 		.4byte	.LVL275
 14308 2093 6E020000 		.4byte	.LVL276
 14309 2097 0200     		.2byte	0x2
 14310 2099 91       		.byte	0x91
 14311 209a 08       		.sleb128 8
 14312 209b 8C020000 		.4byte	.LVL281
 14313 209f 94020000 		.4byte	.LVL282
 14314 20a3 0200     		.2byte	0x2
 14315 20a5 91       		.byte	0x91
 14316 20a6 08       		.sleb128 8
 14317 20a7 7A030000 		.4byte	.LVL299
 14318 20ab 8E030000 		.4byte	.LVL300
 14319 20af 0200     		.2byte	0x2
 14320 20b1 91       		.byte	0x91
 14321 20b2 08       		.sleb128 8
 14322 20b3 EE030000 		.4byte	.LVL312
 14323 20b7 08040000 		.4byte	.LVL313
 14324 20bb 0100     		.2byte	0x1
 14325 20bd 56       		.byte	0x56
 14326 20be 00000000 		.4byte	0
 14327 20c2 00000000 		.4byte	0
 14328              	.LVUS71:
 14329 20c6 00       		.uleb128 0
 14330 20c7 00       		.uleb128 .LVU545
 14331 20c8 00       		.uleb128 .LVU545
 14332 20c9 00       		.uleb128 .LVU552
 14333 20ca 00       		.uleb128 .LVU557
 14334 20cb 00       		.uleb128 .LVU559
 14335 20cc 00       		.uleb128 .LVU565
 14336 20cd 00       		.uleb128 .LVU568
 14337 20ce 00       		.uleb128 .LVU573
 14338 20cf 00       		.uleb128 .LVU587
 14339 20d0 00       		.uleb128 .LVU590
 14340 20d1 00       		.uleb128 .LVU593
 14341 20d2 00       		.uleb128 .LVU595
 14342 20d3 00       		.uleb128 .LVU625
 14343 20d4 00       		.uleb128 .LVU625
 14344 20d5 00       		.uleb128 .LVU631
 14345 20d6 00       		.uleb128 .LVU631
 14346 20d7 00       		.uleb128 .LVU639
 14347 20d8 00       		.uleb128 .LVU639
 14348 20d9 00       		.uleb128 .LVU646
 14349 20da 00       		.uleb128 .LVU646
 14350 20db 00       		.uleb128 .LVU664
 14351 20dc 00       		.uleb128 .LVU664
 14352 20dd 00       		.uleb128 .LVU667
 14353 20de 00       		.uleb128 .LVU667
 14354 20df 00       		.uleb128 0
 14355              	.LLST71:
 14356 20e0 00000000 		.4byte	.LVL204
 14357 20e4 B0010000 		.4byte	.LVL252
 14358 20e8 0200     		.2byte	0x2
 14359 20ea 91       		.byte	0x91
 14360 20eb 0C       		.sleb128 12
ARM GAS  /tmp/ccFy9xbE.s 			page 287


 14361 20ec B0010000 		.4byte	.LVL252
 14362 20f0 CA010000 		.4byte	.LVL255
 14363 20f4 0300     		.2byte	0x3
 14364 20f6 91       		.byte	0x91
 14365 20f7 8C7F     		.sleb128 -116
 14366 20f9 EE010000 		.4byte	.LVL259
 14367 20fd F6010000 		.4byte	.LVL260
 14368 2101 0200     		.2byte	0x2
 14369 2103 91       		.byte	0x91
 14370 2104 0C       		.sleb128 12
 14371 2105 24020000 		.4byte	.LVL264
 14372 2109 30020000 		.4byte	.LVL266
 14373 210d 0200     		.2byte	0x2
 14374 210f 91       		.byte	0x91
 14375 2110 0C       		.sleb128 12
 14376 2111 4A020000 		.4byte	.LVL270
 14377 2115 78020000 		.4byte	.LVL278
 14378 2119 0200     		.2byte	0x2
 14379 211b 91       		.byte	0x91
 14380 211c 0C       		.sleb128 12
 14381 211d 8C020000 		.4byte	.LVL281
 14382 2121 98020000 		.4byte	.LVL283
 14383 2125 0200     		.2byte	0x2
 14384 2127 91       		.byte	0x91
 14385 2128 0C       		.sleb128 12
 14386 2129 A4020000 		.4byte	.LVL285
 14387 212d 06030000 		.4byte	.LVL294
 14388 2131 0200     		.2byte	0x2
 14389 2133 91       		.byte	0x91
 14390 2134 0C       		.sleb128 12
 14391 2135 06030000 		.4byte	.LVL294
 14392 2139 60030000 		.4byte	.LVL296
 14393 213d 0300     		.2byte	0x3
 14394 213f 91       		.byte	0x91
 14395 2140 8C7F     		.sleb128 -116
 14396 2142 60030000 		.4byte	.LVL296
 14397 2146 8E030000 		.4byte	.LVL300
 14398 214a 0200     		.2byte	0x2
 14399 214c 91       		.byte	0x91
 14400 214d 0C       		.sleb128 12
 14401 214e 8E030000 		.4byte	.LVL300
 14402 2152 AE030000 		.4byte	.LVL303
 14403 2156 0300     		.2byte	0x3
 14404 2158 91       		.byte	0x91
 14405 2159 8C7F     		.sleb128 -116
 14406 215b AE030000 		.4byte	.LVL303
 14407 215f E2030000 		.4byte	.LVL310
 14408 2163 0200     		.2byte	0x2
 14409 2165 91       		.byte	0x91
 14410 2166 0C       		.sleb128 12
 14411 2167 E2030000 		.4byte	.LVL310
 14412 216b E6030000 		.4byte	.LVL311
 14413 216f 0300     		.2byte	0x3
 14414 2171 91       		.byte	0x91
 14415 2172 8C7F     		.sleb128 -116
 14416 2174 E6030000 		.4byte	.LVL311
 14417 2178 20040000 		.4byte	.LFE11
ARM GAS  /tmp/ccFy9xbE.s 			page 288


 14418 217c 0200     		.2byte	0x2
 14419 217e 91       		.byte	0x91
 14420 217f 0C       		.sleb128 12
 14421 2180 00000000 		.4byte	0
 14422 2184 00000000 		.4byte	0
 14423              	.LVUS72:
 14424 2188 00       		.uleb128 0
 14425 2189 00       		.uleb128 .LVU557
 14426 218a 00       		.uleb128 .LVU557
 14427 218b 00       		.uleb128 .LVU564
 14428 218c 00       		.uleb128 .LVU564
 14429 218d 00       		.uleb128 .LVU565
 14430 218e 00       		.uleb128 .LVU565
 14431 218f 00       		.uleb128 .LVU572
 14432 2190 00       		.uleb128 .LVU572
 14433 2191 00       		.uleb128 .LVU573
 14434 2192 00       		.uleb128 .LVU573
 14435 2193 00       		.uleb128 .LVU586
 14436 2194 00       		.uleb128 .LVU590
 14437 2195 00       		.uleb128 0
 14438              	.LLST72:
 14439 2196 00000000 		.4byte	.LVL204
 14440 219a EE010000 		.4byte	.LVL259
 14441 219e 0200     		.2byte	0x2
 14442 21a0 91       		.byte	0x91
 14443 21a1 10       		.sleb128 16
 14444 21a2 EE010000 		.4byte	.LVL259
 14445 21a6 20020000 		.4byte	.LVL263
 14446 21aa 0200     		.2byte	0x2
 14447 21ac 91       		.byte	0x91
 14448 21ad 10       		.sleb128 16
 14449 21ae 20020000 		.4byte	.LVL263
 14450 21b2 24020000 		.4byte	.LVL264
 14451 21b6 0200     		.2byte	0x2
 14452 21b8 7D       		.byte	0x7d
 14453 21b9 10       		.sleb128 16
 14454 21ba 24020000 		.4byte	.LVL264
 14455 21be 46020000 		.4byte	.LVL269
 14456 21c2 0200     		.2byte	0x2
 14457 21c4 91       		.byte	0x91
 14458 21c5 10       		.sleb128 16
 14459 21c6 46020000 		.4byte	.LVL269
 14460 21ca 4A020000 		.4byte	.LVL270
 14461 21ce 0200     		.2byte	0x2
 14462 21d0 7D       		.byte	0x7d
 14463 21d1 10       		.sleb128 16
 14464 21d2 4A020000 		.4byte	.LVL270
 14465 21d6 70020000 		.4byte	.LVL277
 14466 21da 0200     		.2byte	0x2
 14467 21dc 91       		.byte	0x91
 14468 21dd 10       		.sleb128 16
 14469 21de 8C020000 		.4byte	.LVL281
 14470 21e2 20040000 		.4byte	.LFE11
 14471 21e6 0200     		.2byte	0x2
 14472 21e8 91       		.byte	0x91
 14473 21e9 10       		.sleb128 16
 14474 21ea 00000000 		.4byte	0
ARM GAS  /tmp/ccFy9xbE.s 			page 289


 14475 21ee 00000000 		.4byte	0
 14476              	.LVUS73:
 14477 21f2 03       		.uleb128 .LVU461
 14478 21f3 00       		.uleb128 .LVU487
 14479 21f4 00       		.uleb128 .LVU487
 14480 21f5 00       		.uleb128 .LVU493
 14481 21f6 01       		.uleb128 .LVU529
 14482 21f7 01       		.uleb128 .LVU550
 14483 21f8 01       		.uleb128 .LVU550
 14484 21f9 00       		.uleb128 .LVU551
 14485 21fa 00       		.uleb128 .LVU552
 14486 21fb 00       		.uleb128 .LVU554
 14487 21fc 00       		.uleb128 .LVU554
 14488 21fd 00       		.uleb128 .LVU555
 14489 21fe 00       		.uleb128 .LVU557
 14490 21ff 00       		.uleb128 .LVU580
 14491 2200 00       		.uleb128 .LVU583
 14492 2201 00       		.uleb128 .LVU595
 14493 2202 00       		.uleb128 .LVU597
 14494 2203 00       		.uleb128 .LVU607
 14495 2204 01       		.uleb128 .LVU608
 14496 2205 00       		.uleb128 .LVU612
 14497 2206 00       		.uleb128 .LVU612
 14498 2207 00       		.uleb128 .LVU613
 14499 2208 00       		.uleb128 .LVU613
 14500 2209 00       		.uleb128 .LVU619
 14501 220a 00       		.uleb128 .LVU625
 14502 220b 00       		.uleb128 .LVU631
 14503 220c 00       		.uleb128 .LVU637
 14504 220d 00       		.uleb128 .LVU639
 14505 220e 00       		.uleb128 .LVU639
 14506 220f 01       		.uleb128 .LVU644
 14507 2210 01       		.uleb128 .LVU644
 14508 2211 00       		.uleb128 .LVU645
 14509 2212 00       		.uleb128 .LVU645
 14510 2213 00       		.uleb128 .LVU646
 14511 2214 00       		.uleb128 .LVU646
 14512 2215 00       		.uleb128 .LVU650
 14513 2216 00       		.uleb128 .LVU650
 14514 2217 02       		.uleb128 .LVU666
 14515 2218 02       		.uleb128 .LVU666
 14516 2219 00       		.uleb128 .LVU667
 14517 221a 00       		.uleb128 .LVU668
 14518 221b 00       		.uleb128 .LVU669
 14519 221c 00       		.uleb128 .LVU669
 14520 221d 00       		.uleb128 0
 14521              	.LLST73:
 14522 221e 00000000 		.4byte	.LVL204
 14523 2222 B0000000 		.4byte	.LVL218
 14524 2226 0200     		.2byte	0x2
 14525 2228 30       		.byte	0x30
 14526 2229 9F       		.byte	0x9f
 14527 222a B0000000 		.4byte	.LVL218
 14528 222e CC000000 		.4byte	.LVL222
 14529 2232 0100     		.2byte	0x1
 14530 2234 54       		.byte	0x54
 14531 2235 78010000 		.4byte	.LVL248
ARM GAS  /tmp/ccFy9xbE.s 			page 290


 14532 2239 BC010000 		.4byte	.LVL253
 14533 223d 0100     		.2byte	0x1
 14534 223f 54       		.byte	0x54
 14535 2240 BC010000 		.4byte	.LVL253
 14536 2244 BE010000 		.4byte	.LVL254
 14537 2248 0300     		.2byte	0x3
 14538 224a 74       		.byte	0x74
 14539 224b 01       		.sleb128 1
 14540 224c 9F       		.byte	0x9f
 14541 224d CA010000 		.4byte	.LVL255
 14542 2251 D8010000 		.4byte	.LVL256
 14543 2255 0100     		.2byte	0x1
 14544 2257 54       		.byte	0x54
 14545 2258 D8010000 		.4byte	.LVL256
 14546 225c E3010000 		.4byte	.LVL257-1
 14547 2260 0300     		.2byte	0x3
 14548 2262 91       		.byte	0x91
 14549 2263 FC7E     		.sleb128 -132
 14550 2265 EE010000 		.4byte	.LVL259
 14551 2269 60020000 		.4byte	.LVL273
 14552 226d 0200     		.2byte	0x2
 14553 226f 30       		.byte	0x30
 14554 2270 9F       		.byte	0x9f
 14555 2271 68020000 		.4byte	.LVL275
 14556 2275 A4020000 		.4byte	.LVL285
 14557 2279 0200     		.2byte	0x2
 14558 227b 30       		.byte	0x30
 14559 227c 9F       		.byte	0x9f
 14560 227d B0020000 		.4byte	.LVL286
 14561 2281 D2020000 		.4byte	.LVL289
 14562 2285 0100     		.2byte	0x1
 14563 2287 51       		.byte	0x51
 14564 2288 D2020000 		.4byte	.LVL289
 14565 228c DC020000 		.4byte	.LVL291
 14566 2290 0100     		.2byte	0x1
 14567 2292 54       		.byte	0x54
 14568 2293 DC020000 		.4byte	.LVL291
 14569 2297 DE020000 		.4byte	.LVL292
 14570 229b 0100     		.2byte	0x1
 14571 229d 51       		.byte	0x51
 14572 229e DE020000 		.4byte	.LVL292
 14573 22a2 EC020000 		.4byte	.LVL293
 14574 22a6 0300     		.2byte	0x3
 14575 22a8 08       		.byte	0x8
 14576 22a9 20       		.byte	0x20
 14577 22aa 9F       		.byte	0x9f
 14578 22ab 06030000 		.4byte	.LVL294
 14579 22af 60030000 		.4byte	.LVL296
 14580 22b3 0100     		.2byte	0x1
 14581 22b5 54       		.byte	0x54
 14582 22b6 7A030000 		.4byte	.LVL299
 14583 22ba 8E030000 		.4byte	.LVL300
 14584 22be 0200     		.2byte	0x2
 14585 22c0 30       		.byte	0x30
 14586 22c1 9F       		.byte	0x9f
 14587 22c2 8E030000 		.4byte	.LVL300
 14588 22c6 9C030000 		.4byte	.LVL301
ARM GAS  /tmp/ccFy9xbE.s 			page 291


 14589 22ca 0100     		.2byte	0x1
 14590 22cc 54       		.byte	0x54
 14591 22cd 9C030000 		.4byte	.LVL301
 14592 22d1 A4030000 		.4byte	.LVL302
 14593 22d5 0300     		.2byte	0x3
 14594 22d7 74       		.byte	0x74
 14595 22d8 01       		.sleb128 1
 14596 22d9 9F       		.byte	0x9f
 14597 22da A4030000 		.4byte	.LVL302
 14598 22de AE030000 		.4byte	.LVL303
 14599 22e2 0100     		.2byte	0x1
 14600 22e4 54       		.byte	0x54
 14601 22e5 AE030000 		.4byte	.LVL303
 14602 22e9 C0030000 		.4byte	.LVL306
 14603 22ed 0100     		.2byte	0x1
 14604 22ef 51       		.byte	0x51
 14605 22f0 C0030000 		.4byte	.LVL306
 14606 22f4 E2030000 		.4byte	.LVL310
 14607 22f8 0100     		.2byte	0x1
 14608 22fa 54       		.byte	0x54
 14609 22fb E2030000 		.4byte	.LVL310
 14610 22ff E6030000 		.4byte	.LVL311
 14611 2303 0300     		.2byte	0x3
 14612 2305 74       		.byte	0x74
 14613 2306 01       		.sleb128 1
 14614 2307 9F       		.byte	0x9f
 14615 2308 EE030000 		.4byte	.LVL312
 14616 230c 08040000 		.4byte	.LVL313
 14617 2310 0200     		.2byte	0x2
 14618 2312 30       		.byte	0x30
 14619 2313 9F       		.byte	0x9f
 14620 2314 08040000 		.4byte	.LVL313
 14621 2318 20040000 		.4byte	.LFE11
 14622 231c 0100     		.2byte	0x1
 14623 231e 51       		.byte	0x51
 14624 231f 00000000 		.4byte	0
 14625 2323 00000000 		.4byte	0
 14626              	.LVUS74:
 14627 2327 04       		.uleb128 .LVU462
 14628 2328 00       		.uleb128 .LVU506
 14629 2329 00       		.uleb128 .LVU506
 14630 232a 00       		.uleb128 .LVU508
 14631 232b 00       		.uleb128 .LVU508
 14632 232c 00       		.uleb128 .LVU523
 14633 232d 00       		.uleb128 .LVU523
 14634 232e 00       		.uleb128 .LVU526
 14635 232f 00       		.uleb128 .LVU557
 14636 2330 00       		.uleb128 .LVU580
 14637 2331 00       		.uleb128 .LVU580
 14638 2332 00       		.uleb128 .LVU583
 14639 2333 00       		.uleb128 .LVU583
 14640 2334 00       		.uleb128 .LVU595
 14641 2335 00       		.uleb128 .LVU595
 14642 2336 00       		.uleb128 .LVU613
 14643 2337 00       		.uleb128 .LVU631
 14644 2338 00       		.uleb128 .LVU637
 14645 2339 00       		.uleb128 .LVU637
ARM GAS  /tmp/ccFy9xbE.s 			page 292


 14646 233a 00       		.uleb128 .LVU639
 14647 233b 00       		.uleb128 .LVU646
 14648 233c 00       		.uleb128 .LVU664
 14649 233d 00       		.uleb128 .LVU667
 14650 233e 00       		.uleb128 .LVU668
 14651 233f 00       		.uleb128 .LVU668
 14652 2340 00       		.uleb128 .LVU669
 14653 2341 00       		.uleb128 .LVU669
 14654 2342 00       		.uleb128 0
 14655              	.LLST74:
 14656 2343 00000000 		.4byte	.LVL204
 14657 2347 14010000 		.4byte	.LVL233
 14658 234b 0A00     		.2byte	0xa
 14659 234d 9E       		.byte	0x9e
 14660 234e 08       		.uleb128 0x8
 14661 234f 00000000 		.4byte	0
 14662 2353 00000000 		.4byte	0
 14663 2357 14010000 		.4byte	.LVL233
 14664 235b 16010000 		.4byte	.LVL234
 14665 235f 0600     		.2byte	0x6
 14666 2361 52       		.byte	0x52
 14667 2362 93       		.byte	0x93
 14668 2363 04       		.uleb128 0x4
 14669 2364 53       		.byte	0x53
 14670 2365 93       		.byte	0x93
 14671 2366 04       		.uleb128 0x4
 14672 2367 16010000 		.4byte	.LVL234
 14673 236b 58010000 		.4byte	.LVL244
 14674 236f 0300     		.2byte	0x3
 14675 2371 91       		.byte	0x91
 14676 2372 A07F     		.sleb128 -96
 14677 2374 58010000 		.4byte	.LVL244
 14678 2378 70010000 		.4byte	.LVL247
 14679 237c 0600     		.2byte	0x6
 14680 237e 56       		.byte	0x56
 14681 237f 93       		.byte	0x93
 14682 2380 04       		.uleb128 0x4
 14683 2381 57       		.byte	0x57
 14684 2382 93       		.byte	0x93
 14685 2383 04       		.uleb128 0x4
 14686 2384 EE010000 		.4byte	.LVL259
 14687 2388 60020000 		.4byte	.LVL273
 14688 238c 0A00     		.2byte	0xa
 14689 238e 9E       		.byte	0x9e
 14690 238f 08       		.uleb128 0x8
 14691 2390 00000000 		.4byte	0
 14692 2394 00000000 		.4byte	0
 14693 2398 60020000 		.4byte	.LVL273
 14694 239c 68020000 		.4byte	.LVL275
 14695 23a0 0600     		.2byte	0x6
 14696 23a2 56       		.byte	0x56
 14697 23a3 93       		.byte	0x93
 14698 23a4 04       		.uleb128 0x4
 14699 23a5 57       		.byte	0x57
 14700 23a6 93       		.byte	0x93
 14701 23a7 04       		.uleb128 0x4
 14702 23a8 68020000 		.4byte	.LVL275
ARM GAS  /tmp/ccFy9xbE.s 			page 293


 14703 23ac A4020000 		.4byte	.LVL285
 14704 23b0 0A00     		.2byte	0xa
 14705 23b2 9E       		.byte	0x9e
 14706 23b3 08       		.uleb128 0x8
 14707 23b4 00000000 		.4byte	0
 14708 23b8 00000000 		.4byte	0
 14709 23bc A4020000 		.4byte	.LVL285
 14710 23c0 DE020000 		.4byte	.LVL292
 14711 23c4 0300     		.2byte	0x3
 14712 23c6 91       		.byte	0x91
 14713 23c7 A07F     		.sleb128 -96
 14714 23c9 60030000 		.4byte	.LVL296
 14715 23cd 7A030000 		.4byte	.LVL299
 14716 23d1 0300     		.2byte	0x3
 14717 23d3 91       		.byte	0x91
 14718 23d4 A07F     		.sleb128 -96
 14719 23d6 7A030000 		.4byte	.LVL299
 14720 23da 8E030000 		.4byte	.LVL300
 14721 23de 0A00     		.2byte	0xa
 14722 23e0 9E       		.byte	0x9e
 14723 23e1 08       		.uleb128 0x8
 14724 23e2 00000000 		.4byte	0
 14725 23e6 00000000 		.4byte	0
 14726 23ea AE030000 		.4byte	.LVL303
 14727 23ee E2030000 		.4byte	.LVL310
 14728 23f2 0300     		.2byte	0x3
 14729 23f4 91       		.byte	0x91
 14730 23f5 A07F     		.sleb128 -96
 14731 23f7 E6030000 		.4byte	.LVL311
 14732 23fb EE030000 		.4byte	.LVL312
 14733 23ff 0300     		.2byte	0x3
 14734 2401 91       		.byte	0x91
 14735 2402 A07F     		.sleb128 -96
 14736 2404 EE030000 		.4byte	.LVL312
 14737 2408 08040000 		.4byte	.LVL313
 14738 240c 0A00     		.2byte	0xa
 14739 240e 9E       		.byte	0x9e
 14740 240f 08       		.uleb128 0x8
 14741 2410 00000000 		.4byte	0
 14742 2414 00000000 		.4byte	0
 14743 2418 08040000 		.4byte	.LVL313
 14744 241c 20040000 		.4byte	.LFE11
 14745 2420 0300     		.2byte	0x3
 14746 2422 91       		.byte	0x91
 14747 2423 A07F     		.sleb128 -96
 14748 2425 00000000 		.4byte	0
 14749 2429 00000000 		.4byte	0
 14750              	.LVUS75:
 14751 242d 01       		.uleb128 .LVU480
 14752 242e 00       		.uleb128 .LVU483
 14753 242f 00       		.uleb128 .LVU483
 14754 2430 00       		.uleb128 .LVU557
 14755 2431 00       		.uleb128 .LVU573
 14756 2432 01       		.uleb128 .LVU574
 14757 2433 01       		.uleb128 .LVU574
 14758 2434 00       		.uleb128 .LVU580
 14759 2435 00       		.uleb128 .LVU580
ARM GAS  /tmp/ccFy9xbE.s 			page 294


 14760 2436 00       		.uleb128 .LVU583
 14761 2437 00       		.uleb128 .LVU595
 14762 2438 00       		.uleb128 0
 14763              	.LLST75:
 14764 2439 84000000 		.4byte	.LVL214
 14765 243d 98000000 		.4byte	.LVL216
 14766 2441 0200     		.2byte	0x2
 14767 2443 30       		.byte	0x30
 14768 2444 9F       		.byte	0x9f
 14769 2445 98000000 		.4byte	.LVL216
 14770 2449 EE010000 		.4byte	.LVL259
 14771 244d 0300     		.2byte	0x3
 14772 244f 91       		.byte	0x91
 14773 2450 9C7F     		.sleb128 -100
 14774 2452 4A020000 		.4byte	.LVL270
 14775 2456 4A020000 		.4byte	.LVL270
 14776 245a 0200     		.2byte	0x2
 14777 245c 30       		.byte	0x30
 14778 245d 9F       		.byte	0x9f
 14779 245e 4A020000 		.4byte	.LVL270
 14780 2462 60020000 		.4byte	.LVL273
 14781 2466 0200     		.2byte	0x2
 14782 2468 31       		.byte	0x31
 14783 2469 9F       		.byte	0x9f
 14784 246a 60020000 		.4byte	.LVL273
 14785 246e 68020000 		.4byte	.LVL275
 14786 2472 0300     		.2byte	0x3
 14787 2474 91       		.byte	0x91
 14788 2475 9C7F     		.sleb128 -100
 14789 2477 A4020000 		.4byte	.LVL285
 14790 247b 20040000 		.4byte	.LFE11
 14791 247f 0300     		.2byte	0x3
 14792 2481 91       		.byte	0x91
 14793 2482 9C7F     		.sleb128 -100
 14794 2484 00000000 		.4byte	0
 14795 2488 00000000 		.4byte	0
 14796              	.LVUS76:
 14797 248c 00       		.uleb128 .LVU495
 14798 248d 00       		.uleb128 .LVU497
 14799 248e 00       		.uleb128 .LVU497
 14800 248f 00       		.uleb128 .LVU538
 14801 2490 01       		.uleb128 .LVU541
 14802 2491 00       		.uleb128 .LVU545
 14803 2492 00       		.uleb128 .LVU580
 14804 2493 00       		.uleb128 .LVU583
 14805 2494 00       		.uleb128 .LVU595
 14806 2495 00       		.uleb128 .LVU613
 14807 2496 00       		.uleb128 .LVU631
 14808 2497 00       		.uleb128 .LVU637
 14809 2498 00       		.uleb128 .LVU646
 14810 2499 00       		.uleb128 .LVU664
 14811 249a 00       		.uleb128 .LVU667
 14812 249b 00       		.uleb128 .LVU668
 14813 249c 00       		.uleb128 .LVU669
 14814 249d 00       		.uleb128 0
 14815              	.LLST76:
 14816 249e D6000000 		.4byte	.LVL224
ARM GAS  /tmp/ccFy9xbE.s 			page 295


 14817 24a2 D9000000 		.4byte	.LVL225-1
 14818 24a6 0100     		.2byte	0x1
 14819 24a8 50       		.byte	0x50
 14820 24a9 D9000000 		.4byte	.LVL225-1
 14821 24ad 98010000 		.4byte	.LVL250
 14822 24b1 0100     		.2byte	0x1
 14823 24b3 55       		.byte	0x55
 14824 24b4 A0010000 		.4byte	.LVL251
 14825 24b8 B0010000 		.4byte	.LVL252
 14826 24bc 0100     		.2byte	0x1
 14827 24be 55       		.byte	0x55
 14828 24bf 60020000 		.4byte	.LVL273
 14829 24c3 68020000 		.4byte	.LVL275
 14830 24c7 0100     		.2byte	0x1
 14831 24c9 55       		.byte	0x55
 14832 24ca A4020000 		.4byte	.LVL285
 14833 24ce DE020000 		.4byte	.LVL292
 14834 24d2 0100     		.2byte	0x1
 14835 24d4 55       		.byte	0x55
 14836 24d5 60030000 		.4byte	.LVL296
 14837 24d9 7A030000 		.4byte	.LVL299
 14838 24dd 0100     		.2byte	0x1
 14839 24df 55       		.byte	0x55
 14840 24e0 AE030000 		.4byte	.LVL303
 14841 24e4 E2030000 		.4byte	.LVL310
 14842 24e8 0100     		.2byte	0x1
 14843 24ea 55       		.byte	0x55
 14844 24eb E6030000 		.4byte	.LVL311
 14845 24ef EE030000 		.4byte	.LVL312
 14846 24f3 0100     		.2byte	0x1
 14847 24f5 55       		.byte	0x55
 14848 24f6 08040000 		.4byte	.LVL313
 14849 24fa 20040000 		.4byte	.LFE11
 14850 24fe 0100     		.2byte	0x1
 14851 2500 55       		.byte	0x55
 14852 2501 00000000 		.4byte	0
 14853 2505 00000000 		.4byte	0
 14854              	.LVUS77:
 14855 2509 00       		.uleb128 .LVU499
 14856 250a 00       		.uleb128 .LVU501
 14857 250b 00       		.uleb128 .LVU501
 14858 250c 00       		.uleb128 .LVU556
 14859 250d 00       		.uleb128 .LVU580
 14860 250e 00       		.uleb128 .LVU583
 14861 250f 00       		.uleb128 .LVU595
 14862 2510 00       		.uleb128 .LVU637
 14863 2511 00       		.uleb128 .LVU639
 14864 2512 00       		.uleb128 .LVU668
 14865 2513 00       		.uleb128 .LVU669
 14866 2514 00       		.uleb128 0
 14867              	.LLST77:
 14868 2515 F6000000 		.4byte	.LVL228
 14869 2519 F9000000 		.4byte	.LVL229-1
 14870 251d 0600     		.2byte	0x6
 14871 251f 52       		.byte	0x52
 14872 2520 93       		.byte	0x93
 14873 2521 04       		.uleb128 0x4
ARM GAS  /tmp/ccFy9xbE.s 			page 296


 14874 2522 53       		.byte	0x53
 14875 2523 93       		.byte	0x93
 14876 2524 04       		.uleb128 0x4
 14877 2525 F9000000 		.4byte	.LVL229-1
 14878 2529 EA010000 		.4byte	.LVL258
 14879 252d 0800     		.2byte	0x8
 14880 252f 90       		.byte	0x90
 14881 2530 52       		.uleb128 0x52
 14882 2531 93       		.byte	0x93
 14883 2532 04       		.uleb128 0x4
 14884 2533 90       		.byte	0x90
 14885 2534 53       		.uleb128 0x53
 14886 2535 93       		.byte	0x93
 14887 2536 04       		.uleb128 0x4
 14888 2537 60020000 		.4byte	.LVL273
 14889 253b 68020000 		.4byte	.LVL275
 14890 253f 0800     		.2byte	0x8
 14891 2541 90       		.byte	0x90
 14892 2542 52       		.uleb128 0x52
 14893 2543 93       		.byte	0x93
 14894 2544 04       		.uleb128 0x4
 14895 2545 90       		.byte	0x90
 14896 2546 53       		.uleb128 0x53
 14897 2547 93       		.byte	0x93
 14898 2548 04       		.uleb128 0x4
 14899 2549 A4020000 		.4byte	.LVL285
 14900 254d 7A030000 		.4byte	.LVL299
 14901 2551 0800     		.2byte	0x8
 14902 2553 90       		.byte	0x90
 14903 2554 52       		.uleb128 0x52
 14904 2555 93       		.byte	0x93
 14905 2556 04       		.uleb128 0x4
 14906 2557 90       		.byte	0x90
 14907 2558 53       		.uleb128 0x53
 14908 2559 93       		.byte	0x93
 14909 255a 04       		.uleb128 0x4
 14910 255b 8E030000 		.4byte	.LVL300
 14911 255f EE030000 		.4byte	.LVL312
 14912 2563 0800     		.2byte	0x8
 14913 2565 90       		.byte	0x90
 14914 2566 52       		.uleb128 0x52
 14915 2567 93       		.byte	0x93
 14916 2568 04       		.uleb128 0x4
 14917 2569 90       		.byte	0x90
 14918 256a 53       		.uleb128 0x53
 14919 256b 93       		.byte	0x93
 14920 256c 04       		.uleb128 0x4
 14921 256d 08040000 		.4byte	.LVL313
 14922 2571 20040000 		.4byte	.LFE11
 14923 2575 0800     		.2byte	0x8
 14924 2577 90       		.byte	0x90
 14925 2578 52       		.uleb128 0x52
 14926 2579 93       		.byte	0x93
 14927 257a 04       		.uleb128 0x4
 14928 257b 90       		.byte	0x90
 14929 257c 53       		.uleb128 0x53
 14930 257d 93       		.byte	0x93
ARM GAS  /tmp/ccFy9xbE.s 			page 297


 14931 257e 04       		.uleb128 0x4
 14932 257f 00000000 		.4byte	0
 14933 2583 00000000 		.4byte	0
 14934              	.LVUS78:
 14935 2587 00       		.uleb128 .LVU502
 14936 2588 00       		.uleb128 .LVU504
 14937 2589 00       		.uleb128 .LVU504
 14938 258a 01       		.uleb128 .LVU514
 14939 258b 01       		.uleb128 .LVU514
 14940 258c 00       		.uleb128 .LVU516
 14941 258d 00       		.uleb128 .LVU516
 14942 258e 00       		.uleb128 .LVU523
 14943 258f 00       		.uleb128 .LVU595
 14944 2590 00       		.uleb128 .LVU601
 14945 2591 01       		.uleb128 .LVU604
 14946 2592 00       		.uleb128 .LVU607
 14947 2593 00       		.uleb128 .LVU607
 14948 2594 00       		.uleb128 .LVU613
 14949 2595 00       		.uleb128 .LVU631
 14950 2596 00       		.uleb128 .LVU637
 14951 2597 00       		.uleb128 .LVU646
 14952 2598 00       		.uleb128 .LVU648
 14953 2599 00       		.uleb128 .LVU648
 14954 259a 00       		.uleb128 .LVU664
 14955 259b 00       		.uleb128 .LVU667
 14956 259c 00       		.uleb128 .LVU668
 14957 259d 00       		.uleb128 .LVU669
 14958 259e 00       		.uleb128 0
 14959              	.LLST78:
 14960 259f FC000000 		.4byte	.LVL230
 14961 25a3 FF000000 		.4byte	.LVL231-1
 14962 25a7 0100     		.2byte	0x1
 14963 25a9 50       		.byte	0x50
 14964 25aa FF000000 		.4byte	.LVL231-1
 14965 25ae 34010000 		.4byte	.LVL239
 14966 25b2 0100     		.2byte	0x1
 14967 25b4 57       		.byte	0x57
 14968 25b5 34010000 		.4byte	.LVL239
 14969 25b9 38010000 		.4byte	.LVL241
 14970 25bd 0200     		.2byte	0x2
 14971 25bf 30       		.byte	0x30
 14972 25c0 9F       		.byte	0x9f
 14973 25c1 38010000 		.4byte	.LVL241
 14974 25c5 58010000 		.4byte	.LVL244
 14975 25c9 0100     		.2byte	0x1
 14976 25cb 57       		.byte	0x57
 14977 25cc A4020000 		.4byte	.LVL285
 14978 25d0 C4020000 		.4byte	.LVL287
 14979 25d4 0100     		.2byte	0x1
 14980 25d6 57       		.byte	0x57
 14981 25d7 CC020000 		.4byte	.LVL288
 14982 25db D2020000 		.4byte	.LVL289
 14983 25df 0100     		.2byte	0x1
 14984 25e1 53       		.byte	0x53
 14985 25e2 D2020000 		.4byte	.LVL289
 14986 25e6 DE020000 		.4byte	.LVL292
 14987 25ea 0100     		.2byte	0x1
ARM GAS  /tmp/ccFy9xbE.s 			page 298


 14988 25ec 57       		.byte	0x57
 14989 25ed 60030000 		.4byte	.LVL296
 14990 25f1 7A030000 		.4byte	.LVL299
 14991 25f5 0100     		.2byte	0x1
 14992 25f7 57       		.byte	0x57
 14993 25f8 AE030000 		.4byte	.LVL303
 14994 25fc BA030000 		.4byte	.LVL305
 14995 2600 0100     		.2byte	0x1
 14996 2602 53       		.byte	0x53
 14997 2603 BA030000 		.4byte	.LVL305
 14998 2607 E2030000 		.4byte	.LVL310
 14999 260b 0100     		.2byte	0x1
 15000 260d 57       		.byte	0x57
 15001 260e E6030000 		.4byte	.LVL311
 15002 2612 EE030000 		.4byte	.LVL312
 15003 2616 0100     		.2byte	0x1
 15004 2618 57       		.byte	0x57
 15005 2619 08040000 		.4byte	.LVL313
 15006 261d 20040000 		.4byte	.LFE11
 15007 2621 0100     		.2byte	0x1
 15008 2623 53       		.byte	0x53
 15009 2624 00000000 		.4byte	0
 15010 2628 00000000 		.4byte	0
 15011              	.LVUS79:
 15012 262c 00       		.uleb128 .LVU597
 15013 262d 00       		.uleb128 .LVU607
 15014 262e 01       		.uleb128 .LVU608
 15015 262f 00       		.uleb128 .LVU610
 15016 2630 00       		.uleb128 .LVU610
 15017 2631 00       		.uleb128 .LVU613
 15018 2632 00       		.uleb128 .LVU646
 15019 2633 00       		.uleb128 .LVU647
 15020 2634 00       		.uleb128 .LVU647
 15021 2635 00       		.uleb128 .LVU650
 15022 2636 00       		.uleb128 .LVU652
 15023 2637 00       		.uleb128 .LVU653
 15024 2638 00       		.uleb128 .LVU669
 15025 2639 00       		.uleb128 0
 15026              	.LLST79:
 15027 263a B0020000 		.4byte	.LVL286
 15028 263e D2020000 		.4byte	.LVL289
 15029 2642 0100     		.2byte	0x1
 15030 2644 5C       		.byte	0x5c
 15031 2645 D2020000 		.4byte	.LVL289
 15032 2649 D8020000 		.4byte	.LVL290
 15033 264d 0100     		.2byte	0x1
 15034 264f 56       		.byte	0x56
 15035 2650 D8020000 		.4byte	.LVL290
 15036 2654 DE020000 		.4byte	.LVL292
 15037 2658 0100     		.2byte	0x1
 15038 265a 5C       		.byte	0x5c
 15039 265b AE030000 		.4byte	.LVL303
 15040 265f B2030000 		.4byte	.LVL304
 15041 2663 0100     		.2byte	0x1
 15042 2665 5C       		.byte	0x5c
 15043 2666 B2030000 		.4byte	.LVL304
 15044 266a C0030000 		.4byte	.LVL306
ARM GAS  /tmp/ccFy9xbE.s 			page 299


 15045 266e 0300     		.2byte	0x3
 15046 2670 76       		.byte	0x76
 15047 2671 7E       		.sleb128 -2
 15048 2672 9F       		.byte	0x9f
 15049 2673 C2030000 		.4byte	.LVL307
 15050 2677 C6030000 		.4byte	.LVL308
 15051 267b 0B00     		.2byte	0xb
 15052 267d 71       		.byte	0x71
 15053 267e 00       		.sleb128 0
 15054 267f 74       		.byte	0x74
 15055 2680 00       		.sleb128 0
 15056 2681 1C       		.byte	0x1c
 15057 2682 76       		.byte	0x76
 15058 2683 00       		.sleb128 0
 15059 2684 22       		.byte	0x22
 15060 2685 32       		.byte	0x32
 15061 2686 1C       		.byte	0x1c
 15062 2687 9F       		.byte	0x9f
 15063 2688 08040000 		.4byte	.LVL313
 15064 268c 20040000 		.4byte	.LFE11
 15065 2690 0300     		.2byte	0x3
 15066 2692 76       		.byte	0x76
 15067 2693 7E       		.sleb128 -2
 15068 2694 9F       		.byte	0x9f
 15069 2695 00000000 		.4byte	0
 15070 2699 00000000 		.4byte	0
 15071              	.LLST33:
 15072 269d 00000000 		.4byte	.LFB10
 15073 26a1 04000000 		.4byte	.LCFI12
 15074 26a5 0200     		.2byte	0x2
 15075 26a7 7D       		.byte	0x7d
 15076 26a8 00       		.sleb128 0
 15077 26a9 04000000 		.4byte	.LCFI12
 15078 26ad 08000000 		.4byte	.LCFI13
 15079 26b1 0200     		.2byte	0x2
 15080 26b3 7D       		.byte	0x7d
 15081 26b4 24       		.sleb128 36
 15082 26b5 08000000 		.4byte	.LCFI13
 15083 26b9 0A000000 		.4byte	.LCFI14
 15084 26bd 0200     		.2byte	0x2
 15085 26bf 7D       		.byte	0x7d
 15086 26c0 34       		.sleb128 52
 15087 26c1 0A000000 		.4byte	.LCFI14
 15088 26c5 6C000000 		.4byte	.LCFI15
 15089 26c9 0300     		.2byte	0x3
 15090 26cb 7D       		.byte	0x7d
 15091 26cc 8001     		.sleb128 128
 15092 26ce 6C000000 		.4byte	.LCFI15
 15093 26d2 70000000 		.4byte	.LCFI16
 15094 26d6 0200     		.2byte	0x2
 15095 26d8 7D       		.byte	0x7d
 15096 26d9 34       		.sleb128 52
 15097 26da 70000000 		.4byte	.LCFI16
 15098 26de 74000000 		.4byte	.LCFI17
 15099 26e2 0200     		.2byte	0x2
 15100 26e4 7D       		.byte	0x7d
 15101 26e5 24       		.sleb128 36
ARM GAS  /tmp/ccFy9xbE.s 			page 300


 15102 26e6 74000000 		.4byte	.LCFI17
 15103 26ea C6000000 		.4byte	.LFE10
 15104 26ee 0300     		.2byte	0x3
 15105 26f0 7D       		.byte	0x7d
 15106 26f1 8001     		.sleb128 128
 15107 26f3 00000000 		.4byte	0
 15108 26f7 00000000 		.4byte	0
 15109              	.LVUS34:
 15110 26fb 00       		.uleb128 0
 15111 26fc 00       		.uleb128 .LVU236
 15112 26fd 00       		.uleb128 .LVU236
 15113 26fe 00       		.uleb128 .LVU239
 15114 26ff 00       		.uleb128 .LVU239
 15115 2700 00       		.uleb128 .LVU240
 15116 2701 00       		.uleb128 .LVU240
 15117 2702 00       		.uleb128 .LVU243
 15118 2703 00       		.uleb128 .LVU243
 15119 2704 00       		.uleb128 0
 15120              	.LLST34:
 15121 2705 00000000 		.4byte	.LVL80
 15122 2709 40000000 		.4byte	.LVL85
 15123 270d 0100     		.2byte	0x1
 15124 270f 50       		.byte	0x50
 15125 2710 40000000 		.4byte	.LVL85
 15126 2714 70000000 		.4byte	.LVL87
 15127 2718 0200     		.2byte	0x2
 15128 271a 90       		.byte	0x90
 15129 271b 50       		.uleb128 0x50
 15130 271c 70000000 		.4byte	.LVL87
 15131 2720 74000000 		.4byte	.LVL88
 15132 2724 0400     		.2byte	0x4
 15133 2726 F3       		.byte	0xf3
 15134 2727 01       		.uleb128 0x1
 15135 2728 50       		.byte	0x50
 15136 2729 9F       		.byte	0x9f
 15137 272a 74000000 		.4byte	.LVL88
 15138 272e 90000000 		.4byte	.LVL89
 15139 2732 0100     		.2byte	0x1
 15140 2734 50       		.byte	0x50
 15141 2735 90000000 		.4byte	.LVL89
 15142 2739 C6000000 		.4byte	.LFE10
 15143 273d 0200     		.2byte	0x2
 15144 273f 90       		.byte	0x90
 15145 2740 50       		.uleb128 0x50
 15146 2741 00000000 		.4byte	0
 15147 2745 00000000 		.4byte	0
 15148              	.LVUS35:
 15149 2749 00       		.uleb128 0
 15150 274a 00       		.uleb128 .LVU236
 15151 274b 00       		.uleb128 .LVU236
 15152 274c 00       		.uleb128 .LVU240
 15153 274d 00       		.uleb128 .LVU240
 15154 274e 00       		.uleb128 .LVU243
 15155 274f 00       		.uleb128 .LVU243
 15156 2750 00       		.uleb128 0
 15157              	.LLST35:
 15158 2751 00000000 		.4byte	.LVL80
ARM GAS  /tmp/ccFy9xbE.s 			page 301


 15159 2755 40000000 		.4byte	.LVL85
 15160 2759 0100     		.2byte	0x1
 15161 275b 51       		.byte	0x51
 15162 275c 40000000 		.4byte	.LVL85
 15163 2760 74000000 		.4byte	.LVL88
 15164 2764 0200     		.2byte	0x2
 15165 2766 90       		.byte	0x90
 15166 2767 51       		.uleb128 0x51
 15167 2768 74000000 		.4byte	.LVL88
 15168 276c 90000000 		.4byte	.LVL89
 15169 2770 0100     		.2byte	0x1
 15170 2772 51       		.byte	0x51
 15171 2773 90000000 		.4byte	.LVL89
 15172 2777 C6000000 		.4byte	.LFE10
 15173 277b 0200     		.2byte	0x2
 15174 277d 90       		.byte	0x90
 15175 277e 51       		.uleb128 0x51
 15176 277f 00000000 		.4byte	0
 15177 2783 00000000 		.4byte	0
 15178              	.LVUS36:
 15179 2787 00       		.uleb128 0
 15180 2788 00       		.uleb128 .LVU230
 15181 2789 00       		.uleb128 .LVU230
 15182 278a 00       		.uleb128 .LVU239
 15183 278b 00       		.uleb128 .LVU239
 15184 278c 00       		.uleb128 .LVU240
 15185 278d 00       		.uleb128 .LVU240
 15186 278e 00       		.uleb128 0
 15187              	.LLST36:
 15188 278f 00000000 		.4byte	.LVL80
 15189 2793 30000000 		.4byte	.LVL82
 15190 2797 0100     		.2byte	0x1
 15191 2799 52       		.byte	0x52
 15192 279a 30000000 		.4byte	.LVL82
 15193 279e 70000000 		.4byte	.LVL87
 15194 27a2 0200     		.2byte	0x2
 15195 27a4 90       		.byte	0x90
 15196 27a5 52       		.uleb128 0x52
 15197 27a6 70000000 		.4byte	.LVL87
 15198 27aa 74000000 		.4byte	.LVL88
 15199 27ae 0400     		.2byte	0x4
 15200 27b0 F3       		.byte	0xf3
 15201 27b1 01       		.uleb128 0x1
 15202 27b2 52       		.byte	0x52
 15203 27b3 9F       		.byte	0x9f
 15204 27b4 74000000 		.4byte	.LVL88
 15205 27b8 C6000000 		.4byte	.LFE10
 15206 27bc 0200     		.2byte	0x2
 15207 27be 90       		.byte	0x90
 15208 27bf 52       		.uleb128 0x52
 15209 27c0 00000000 		.4byte	0
 15210 27c4 00000000 		.4byte	0
 15211              	.LVUS37:
 15212 27c8 00       		.uleb128 0
 15213 27c9 00       		.uleb128 .LVU223
 15214 27ca 00       		.uleb128 .LVU223
 15215 27cb 00       		.uleb128 0
ARM GAS  /tmp/ccFy9xbE.s 			page 302


 15216              	.LLST37:
 15217 27cc 00000000 		.4byte	.LVL80
 15218 27d0 18000000 		.4byte	.LVL81
 15219 27d4 0100     		.2byte	0x1
 15220 27d6 53       		.byte	0x53
 15221 27d7 18000000 		.4byte	.LVL81
 15222 27db C6000000 		.4byte	.LFE10
 15223 27df 0100     		.2byte	0x1
 15224 27e1 5B       		.byte	0x5b
 15225 27e2 00000000 		.4byte	0
 15226 27e6 00000000 		.4byte	0
 15227              	.LVUS38:
 15228 27ea 00       		.uleb128 0
 15229 27eb 00       		.uleb128 .LVU236
 15230 27ec 00       		.uleb128 .LVU240
 15231 27ed 00       		.uleb128 .LVU243
 15232 27ee 00       		.uleb128 .LVU243
 15233 27ef 00       		.uleb128 .LVU253
 15234 27f0 01       		.uleb128 .LVU255
 15235 27f1 00       		.uleb128 0
 15236              	.LLST38:
 15237 27f2 00000000 		.4byte	.LVL80
 15238 27f6 40000000 		.4byte	.LVL85
 15239 27fa 0200     		.2byte	0x2
 15240 27fc 91       		.byte	0x91
 15241 27fd 00       		.sleb128 0
 15242 27fe 74000000 		.4byte	.LVL88
 15243 2802 90000000 		.4byte	.LVL89
 15244 2806 0200     		.2byte	0x2
 15245 2808 91       		.byte	0x91
 15246 2809 00       		.sleb128 0
 15247 280a 90000000 		.4byte	.LVL89
 15248 280e B4000000 		.4byte	.LVL94
 15249 2812 0600     		.2byte	0x6
 15250 2814 54       		.byte	0x54
 15251 2815 93       		.byte	0x93
 15252 2816 04       		.uleb128 0x4
 15253 2817 55       		.byte	0x55
 15254 2818 93       		.byte	0x93
 15255 2819 04       		.uleb128 0x4
 15256 281a B8000000 		.4byte	.LVL95
 15257 281e C6000000 		.4byte	.LFE10
 15258 2822 0600     		.2byte	0x6
 15259 2824 50       		.byte	0x50
 15260 2825 93       		.byte	0x93
 15261 2826 04       		.uleb128 0x4
 15262 2827 51       		.byte	0x51
 15263 2828 93       		.byte	0x93
 15264 2829 04       		.uleb128 0x4
 15265 282a 00000000 		.4byte	0
 15266 282e 00000000 		.4byte	0
 15267              	.LVUS39:
 15268 2832 00       		.uleb128 0
 15269 2833 00       		.uleb128 .LVU240
 15270 2834 00       		.uleb128 .LVU240
 15271 2835 00       		.uleb128 0
 15272              	.LLST39:
ARM GAS  /tmp/ccFy9xbE.s 			page 303


 15273 2836 00000000 		.4byte	.LVL80
 15274 283a 74000000 		.4byte	.LVL88
 15275 283e 0200     		.2byte	0x2
 15276 2840 91       		.byte	0x91
 15277 2841 08       		.sleb128 8
 15278 2842 74000000 		.4byte	.LVL88
 15279 2846 C6000000 		.4byte	.LFE10
 15280 284a 0200     		.2byte	0x2
 15281 284c 91       		.byte	0x91
 15282 284d 08       		.sleb128 8
 15283 284e 00000000 		.4byte	0
 15284 2852 00000000 		.4byte	0
 15285              	.LVUS40:
 15286 2856 00       		.uleb128 0
 15287 2857 00       		.uleb128 .LVU240
 15288 2858 00       		.uleb128 .LVU240
 15289 2859 00       		.uleb128 0
 15290              	.LLST40:
 15291 285a 00000000 		.4byte	.LVL80
 15292 285e 74000000 		.4byte	.LVL88
 15293 2862 0200     		.2byte	0x2
 15294 2864 91       		.byte	0x91
 15295 2865 10       		.sleb128 16
 15296 2866 74000000 		.4byte	.LVL88
 15297 286a C6000000 		.4byte	.LFE10
 15298 286e 0200     		.2byte	0x2
 15299 2870 91       		.byte	0x91
 15300 2871 10       		.sleb128 16
 15301 2872 00000000 		.4byte	0
 15302 2876 00000000 		.4byte	0
 15303              	.LVUS41:
 15304 287a 00       		.uleb128 0
 15305 287b 00       		.uleb128 .LVU240
 15306 287c 00       		.uleb128 .LVU240
 15307 287d 00       		.uleb128 0
 15308              	.LLST41:
 15309 287e 00000000 		.4byte	.LVL80
 15310 2882 74000000 		.4byte	.LVL88
 15311 2886 0200     		.2byte	0x2
 15312 2888 91       		.byte	0x91
 15313 2889 18       		.sleb128 24
 15314 288a 74000000 		.4byte	.LVL88
 15315 288e C6000000 		.4byte	.LFE10
 15316 2892 0200     		.2byte	0x2
 15317 2894 91       		.byte	0x91
 15318 2895 18       		.sleb128 24
 15319 2896 00000000 		.4byte	0
 15320 289a 00000000 		.4byte	0
 15321              	.LVUS42:
 15322 289e 00       		.uleb128 0
 15323 289f 00       		.uleb128 .LVU240
 15324 28a0 00       		.uleb128 .LVU240
 15325 28a1 00       		.uleb128 0
 15326              	.LLST42:
 15327 28a2 00000000 		.4byte	.LVL80
 15328 28a6 74000000 		.4byte	.LVL88
 15329 28aa 0200     		.2byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 304


 15330 28ac 91       		.byte	0x91
 15331 28ad 1C       		.sleb128 28
 15332 28ae 74000000 		.4byte	.LVL88
 15333 28b2 C6000000 		.4byte	.LFE10
 15334 28b6 0200     		.2byte	0x2
 15335 28b8 91       		.byte	0x91
 15336 28b9 1C       		.sleb128 28
 15337 28ba 00000000 		.4byte	0
 15338 28be 00000000 		.4byte	0
 15339              	.LVUS43:
 15340 28c2 00       		.uleb128 0
 15341 28c3 00       		.uleb128 .LVU231
 15342 28c4 00       		.uleb128 .LVU231
 15343 28c5 00       		.uleb128 .LVU234
 15344 28c6 00       		.uleb128 .LVU234
 15345 28c7 00       		.uleb128 .LVU236
 15346              	.LLST43:
 15347 28c8 00000000 		.4byte	.LVL80
 15348 28cc 34000000 		.4byte	.LVL83
 15349 28d0 0200     		.2byte	0x2
 15350 28d2 91       		.byte	0x91
 15351 28d3 20       		.sleb128 32
 15352 28d4 34000000 		.4byte	.LVL83
 15353 28d8 38000000 		.4byte	.LVL84
 15354 28dc 0100     		.2byte	0x1
 15355 28de 53       		.byte	0x53
 15356 28df 38000000 		.4byte	.LVL84
 15357 28e3 40000000 		.4byte	.LVL85
 15358 28e7 0200     		.2byte	0x2
 15359 28e9 91       		.byte	0x91
 15360 28ea 20       		.sleb128 32
 15361 28eb 00000000 		.4byte	0
 15362 28ef 00000000 		.4byte	0
 15363              	.LVUS44:
 15364 28f3 03       		.uleb128 .LVU220
 15365 28f4 00       		.uleb128 .LVU236
 15366 28f5 00       		.uleb128 .LVU236
 15367 28f6 00       		.uleb128 .LVU240
 15368 28f7 00       		.uleb128 .LVU240
 15369 28f8 00       		.uleb128 .LVU243
 15370 28f9 00       		.uleb128 .LVU243
 15371 28fa 00       		.uleb128 .LVU247
 15372 28fb 00       		.uleb128 .LVU247
 15373 28fc 01       		.uleb128 .LVU249
 15374 28fd 01       		.uleb128 .LVU249
 15375 28fe 00       		.uleb128 0
 15376              	.LLST44:
 15377 28ff 00000000 		.4byte	.LVL80
 15378 2903 40000000 		.4byte	.LVL85
 15379 2907 0200     		.2byte	0x2
 15380 2909 30       		.byte	0x30
 15381 290a 9F       		.byte	0x9f
 15382 290b 40000000 		.4byte	.LVL85
 15383 290f 74000000 		.4byte	.LVL88
 15384 2913 0100     		.2byte	0x1
 15385 2915 56       		.byte	0x56
 15386 2916 74000000 		.4byte	.LVL88
ARM GAS  /tmp/ccFy9xbE.s 			page 305


 15387 291a 90000000 		.4byte	.LVL89
 15388 291e 0200     		.2byte	0x2
 15389 2920 30       		.byte	0x30
 15390 2921 9F       		.byte	0x9f
 15391 2922 90000000 		.4byte	.LVL89
 15392 2926 9E000000 		.4byte	.LVL91
 15393 292a 0100     		.2byte	0x1
 15394 292c 56       		.byte	0x56
 15395 292d 9E000000 		.4byte	.LVL91
 15396 2931 A0000000 		.4byte	.LVL92
 15397 2935 0300     		.2byte	0x3
 15398 2937 76       		.byte	0x76
 15399 2938 7F       		.sleb128 -1
 15400 2939 9F       		.byte	0x9f
 15401 293a A0000000 		.4byte	.LVL92
 15402 293e C6000000 		.4byte	.LFE10
 15403 2942 0100     		.2byte	0x1
 15404 2944 56       		.byte	0x56
 15405 2945 00000000 		.4byte	0
 15406 2949 00000000 		.4byte	0
 15407              	.LVUS45:
 15408 294d 00       		.uleb128 .LVU248
 15409 294e 00       		.uleb128 .LVU250
 15410 294f 00       		.uleb128 .LVU250
 15411 2950 00       		.uleb128 0
 15412              	.LLST45:
 15413 2951 A0000000 		.4byte	.LVL92
 15414 2955 AA000000 		.4byte	.LVL93
 15415 2959 0100     		.2byte	0x1
 15416 295b 52       		.byte	0x52
 15417 295c AA000000 		.4byte	.LVL93
 15418 2960 C6000000 		.4byte	.LFE10
 15419 2964 0300     		.2byte	0x3
 15420 2966 72       		.byte	0x72
 15421 2967 50       		.sleb128 -48
 15422 2968 9F       		.byte	0x9f
 15423 2969 00000000 		.4byte	0
 15424 296d 00000000 		.4byte	0
 15425              	.LLST20:
 15426 2971 00000000 		.4byte	.LFB9
 15427 2975 04000000 		.4byte	.LCFI8
 15428 2979 0200     		.2byte	0x2
 15429 297b 7D       		.byte	0x7d
 15430 297c 00       		.sleb128 0
 15431 297d 04000000 		.4byte	.LCFI8
 15432 2981 06000000 		.4byte	.LCFI9
 15433 2985 0200     		.2byte	0x2
 15434 2987 7D       		.byte	0x7d
 15435 2988 24       		.sleb128 36
 15436 2989 06000000 		.4byte	.LCFI9
 15437 298d 46000000 		.4byte	.LCFI10
 15438 2991 0300     		.2byte	0x3
 15439 2993 7D       		.byte	0x7d
 15440 2994 F000     		.sleb128 112
 15441 2996 46000000 		.4byte	.LCFI10
 15442 299a 4A000000 		.4byte	.LCFI11
 15443 299e 0200     		.2byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 306


 15444 29a0 7D       		.byte	0x7d
 15445 29a1 24       		.sleb128 36
 15446 29a2 4A000000 		.4byte	.LCFI11
 15447 29a6 98000000 		.4byte	.LFE9
 15448 29aa 0300     		.2byte	0x3
 15449 29ac 7D       		.byte	0x7d
 15450 29ad F000     		.sleb128 112
 15451 29af 00000000 		.4byte	0
 15452 29b3 00000000 		.4byte	0
 15453              	.LVUS21:
 15454 29b7 00       		.uleb128 0
 15455 29b8 00       		.uleb128 .LVU195
 15456 29b9 00       		.uleb128 .LVU195
 15457 29ba 00       		.uleb128 .LVU196
 15458 29bb 00       		.uleb128 .LVU196
 15459 29bc 00       		.uleb128 0
 15460              	.LLST21:
 15461 29bd 00000000 		.4byte	.LVL67
 15462 29c1 43000000 		.4byte	.LVL71-1
 15463 29c5 0100     		.2byte	0x1
 15464 29c7 50       		.byte	0x50
 15465 29c8 43000000 		.4byte	.LVL71-1
 15466 29cc 4A000000 		.4byte	.LVL72
 15467 29d0 0400     		.2byte	0x4
 15468 29d2 F3       		.byte	0xf3
 15469 29d3 01       		.uleb128 0x1
 15470 29d4 50       		.byte	0x50
 15471 29d5 9F       		.byte	0x9f
 15472 29d6 4A000000 		.4byte	.LVL72
 15473 29da 98000000 		.4byte	.LFE9
 15474 29de 0100     		.2byte	0x1
 15475 29e0 50       		.byte	0x50
 15476 29e1 00000000 		.4byte	0
 15477 29e5 00000000 		.4byte	0
 15478              	.LVUS22:
 15479 29e9 00       		.uleb128 0
 15480 29ea 00       		.uleb128 .LVU195
 15481 29eb 00       		.uleb128 .LVU195
 15482 29ec 00       		.uleb128 .LVU196
 15483 29ed 00       		.uleb128 .LVU196
 15484 29ee 00       		.uleb128 0
 15485              	.LLST22:
 15486 29ef 00000000 		.4byte	.LVL67
 15487 29f3 43000000 		.4byte	.LVL71-1
 15488 29f7 0100     		.2byte	0x1
 15489 29f9 51       		.byte	0x51
 15490 29fa 43000000 		.4byte	.LVL71-1
 15491 29fe 4A000000 		.4byte	.LVL72
 15492 2a02 0400     		.2byte	0x4
 15493 2a04 F3       		.byte	0xf3
 15494 2a05 01       		.uleb128 0x1
 15495 2a06 51       		.byte	0x51
 15496 2a07 9F       		.byte	0x9f
 15497 2a08 4A000000 		.4byte	.LVL72
 15498 2a0c 98000000 		.4byte	.LFE9
 15499 2a10 0100     		.2byte	0x1
 15500 2a12 51       		.byte	0x51
ARM GAS  /tmp/ccFy9xbE.s 			page 307


 15501 2a13 00000000 		.4byte	0
 15502 2a17 00000000 		.4byte	0
 15503              	.LVUS23:
 15504 2a1b 00       		.uleb128 0
 15505 2a1c 00       		.uleb128 .LVU195
 15506 2a1d 00       		.uleb128 .LVU195
 15507 2a1e 00       		.uleb128 .LVU196
 15508 2a1f 00       		.uleb128 .LVU196
 15509 2a20 00       		.uleb128 0
 15510              	.LLST23:
 15511 2a21 00000000 		.4byte	.LVL67
 15512 2a25 43000000 		.4byte	.LVL71-1
 15513 2a29 0100     		.2byte	0x1
 15514 2a2b 52       		.byte	0x52
 15515 2a2c 43000000 		.4byte	.LVL71-1
 15516 2a30 4A000000 		.4byte	.LVL72
 15517 2a34 0400     		.2byte	0x4
 15518 2a36 F3       		.byte	0xf3
 15519 2a37 01       		.uleb128 0x1
 15520 2a38 52       		.byte	0x52
 15521 2a39 9F       		.byte	0x9f
 15522 2a3a 4A000000 		.4byte	.LVL72
 15523 2a3e 98000000 		.4byte	.LFE9
 15524 2a42 0100     		.2byte	0x1
 15525 2a44 52       		.byte	0x52
 15526 2a45 00000000 		.4byte	0
 15527 2a49 00000000 		.4byte	0
 15528              	.LVUS24:
 15529 2a4d 00       		.uleb128 0
 15530 2a4e 00       		.uleb128 .LVU195
 15531 2a4f 00       		.uleb128 .LVU195
 15532 2a50 00       		.uleb128 .LVU196
 15533 2a51 00       		.uleb128 .LVU196
 15534 2a52 00       		.uleb128 0
 15535              	.LLST24:
 15536 2a53 00000000 		.4byte	.LVL67
 15537 2a57 43000000 		.4byte	.LVL71-1
 15538 2a5b 0100     		.2byte	0x1
 15539 2a5d 53       		.byte	0x53
 15540 2a5e 43000000 		.4byte	.LVL71-1
 15541 2a62 4A000000 		.4byte	.LVL72
 15542 2a66 0400     		.2byte	0x4
 15543 2a68 F3       		.byte	0xf3
 15544 2a69 01       		.uleb128 0x1
 15545 2a6a 53       		.byte	0x53
 15546 2a6b 9F       		.byte	0x9f
 15547 2a6c 4A000000 		.4byte	.LVL72
 15548 2a70 98000000 		.4byte	.LFE9
 15549 2a74 0100     		.2byte	0x1
 15550 2a76 53       		.byte	0x53
 15551 2a77 00000000 		.4byte	0
 15552 2a7b 00000000 		.4byte	0
 15553              	.LVUS25:
 15554 2a7f 00       		.uleb128 0
 15555 2a80 00       		.uleb128 .LVU193
 15556 2a81 00       		.uleb128 .LVU196
 15557 2a82 00       		.uleb128 .LVU199
ARM GAS  /tmp/ccFy9xbE.s 			page 308


 15558 2a83 00       		.uleb128 .LVU199
 15559 2a84 00       		.uleb128 .LVU211
 15560 2a85 01       		.uleb128 .LVU213
 15561 2a86 00       		.uleb128 0
 15562              	.LLST25:
 15563 2a87 00000000 		.4byte	.LVL67
 15564 2a8b 28000000 		.4byte	.LVL70
 15565 2a8f 0200     		.2byte	0x2
 15566 2a91 91       		.byte	0x91
 15567 2a92 00       		.sleb128 0
 15568 2a93 4A000000 		.4byte	.LVL72
 15569 2a97 66000000 		.4byte	.LVL73
 15570 2a9b 0200     		.2byte	0x2
 15571 2a9d 91       		.byte	0x91
 15572 2a9e 00       		.sleb128 0
 15573 2a9f 66000000 		.4byte	.LVL73
 15574 2aa3 8C000000 		.4byte	.LVL78
 15575 2aa7 0100     		.2byte	0x1
 15576 2aa9 54       		.byte	0x54
 15577 2aaa 90000000 		.4byte	.LVL79
 15578 2aae 98000000 		.4byte	.LFE9
 15579 2ab2 0100     		.2byte	0x1
 15580 2ab4 5E       		.byte	0x5e
 15581 2ab5 00000000 		.4byte	0
 15582 2ab9 00000000 		.4byte	0
 15583              	.LVUS26:
 15584 2abd 00       		.uleb128 0
 15585 2abe 00       		.uleb128 .LVU196
 15586 2abf 00       		.uleb128 .LVU196
 15587 2ac0 00       		.uleb128 0
 15588              	.LLST26:
 15589 2ac1 00000000 		.4byte	.LVL67
 15590 2ac5 4A000000 		.4byte	.LVL72
 15591 2ac9 0200     		.2byte	0x2
 15592 2acb 91       		.byte	0x91
 15593 2acc 04       		.sleb128 4
 15594 2acd 4A000000 		.4byte	.LVL72
 15595 2ad1 98000000 		.4byte	.LFE9
 15596 2ad5 0200     		.2byte	0x2
 15597 2ad7 91       		.byte	0x91
 15598 2ad8 04       		.sleb128 4
 15599 2ad9 00000000 		.4byte	0
 15600 2add 00000000 		.4byte	0
 15601              	.LVUS27:
 15602 2ae1 00       		.uleb128 0
 15603 2ae2 00       		.uleb128 .LVU196
 15604 2ae3 00       		.uleb128 .LVU196
 15605 2ae4 00       		.uleb128 0
 15606              	.LLST27:
 15607 2ae5 00000000 		.4byte	.LVL67
 15608 2ae9 4A000000 		.4byte	.LVL72
 15609 2aed 0200     		.2byte	0x2
 15610 2aef 91       		.byte	0x91
 15611 2af0 08       		.sleb128 8
 15612 2af1 4A000000 		.4byte	.LVL72
 15613 2af5 98000000 		.4byte	.LFE9
 15614 2af9 0200     		.2byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 309


 15615 2afb 91       		.byte	0x91
 15616 2afc 08       		.sleb128 8
 15617 2afd 00000000 		.4byte	0
 15618 2b01 00000000 		.4byte	0
 15619              	.LVUS28:
 15620 2b05 00       		.uleb128 0
 15621 2b06 00       		.uleb128 .LVU196
 15622 2b07 00       		.uleb128 .LVU196
 15623 2b08 00       		.uleb128 0
 15624              	.LLST28:
 15625 2b09 00000000 		.4byte	.LVL67
 15626 2b0d 4A000000 		.4byte	.LVL72
 15627 2b11 0200     		.2byte	0x2
 15628 2b13 91       		.byte	0x91
 15629 2b14 0C       		.sleb128 12
 15630 2b15 4A000000 		.4byte	.LVL72
 15631 2b19 98000000 		.4byte	.LFE9
 15632 2b1d 0200     		.2byte	0x2
 15633 2b1f 91       		.byte	0x91
 15634 2b20 0C       		.sleb128 12
 15635 2b21 00000000 		.4byte	0
 15636 2b25 00000000 		.4byte	0
 15637              	.LVUS29:
 15638 2b29 00       		.uleb128 0
 15639 2b2a 00       		.uleb128 .LVU196
 15640 2b2b 00       		.uleb128 .LVU196
 15641 2b2c 00       		.uleb128 0
 15642              	.LLST29:
 15643 2b2d 00000000 		.4byte	.LVL67
 15644 2b31 4A000000 		.4byte	.LVL72
 15645 2b35 0200     		.2byte	0x2
 15646 2b37 91       		.byte	0x91
 15647 2b38 10       		.sleb128 16
 15648 2b39 4A000000 		.4byte	.LVL72
 15649 2b3d 98000000 		.4byte	.LFE9
 15650 2b41 0200     		.2byte	0x2
 15651 2b43 91       		.byte	0x91
 15652 2b44 10       		.sleb128 16
 15653 2b45 00000000 		.4byte	0
 15654 2b49 00000000 		.4byte	0
 15655              	.LVUS30:
 15656 2b4d 00       		.uleb128 0
 15657 2b4e 00       		.uleb128 .LVU187
 15658 2b4f 00       		.uleb128 .LVU187
 15659 2b50 00       		.uleb128 .LVU192
 15660 2b51 00       		.uleb128 .LVU192
 15661 2b52 00       		.uleb128 .LVU193
 15662              	.LLST30:
 15663 2b53 00000000 		.4byte	.LVL67
 15664 2b57 1A000000 		.4byte	.LVL68
 15665 2b5b 0200     		.2byte	0x2
 15666 2b5d 91       		.byte	0x91
 15667 2b5e 14       		.sleb128 20
 15668 2b5f 1A000000 		.4byte	.LVL68
 15669 2b63 24000000 		.4byte	.LVL69
 15670 2b67 0100     		.2byte	0x1
 15671 2b69 56       		.byte	0x56
ARM GAS  /tmp/ccFy9xbE.s 			page 310


 15672 2b6a 24000000 		.4byte	.LVL69
 15673 2b6e 28000000 		.4byte	.LVL70
 15674 2b72 0100     		.2byte	0x1
 15675 2b74 5A       		.byte	0x5a
 15676 2b75 00000000 		.4byte	0
 15677 2b79 00000000 		.4byte	0
 15678              	.LVUS31:
 15679 2b7d 03       		.uleb128 .LVU181
 15680 2b7e 00       		.uleb128 .LVU193
 15681 2b7f 00       		.uleb128 .LVU193
 15682 2b80 00       		.uleb128 .LVU196
 15683 2b81 00       		.uleb128 .LVU196
 15684 2b82 00       		.uleb128 .LVU199
 15685 2b83 00       		.uleb128 .LVU199
 15686 2b84 00       		.uleb128 .LVU203
 15687 2b85 00       		.uleb128 .LVU203
 15688 2b86 01       		.uleb128 .LVU206
 15689 2b87 01       		.uleb128 .LVU206
 15690 2b88 00       		.uleb128 0
 15691              	.LLST31:
 15692 2b89 00000000 		.4byte	.LVL67
 15693 2b8d 28000000 		.4byte	.LVL70
 15694 2b91 0200     		.2byte	0x2
 15695 2b93 30       		.byte	0x30
 15696 2b94 9F       		.byte	0x9f
 15697 2b95 28000000 		.4byte	.LVL70
 15698 2b99 4A000000 		.4byte	.LVL72
 15699 2b9d 0100     		.2byte	0x1
 15700 2b9f 56       		.byte	0x56
 15701 2ba0 4A000000 		.4byte	.LVL72
 15702 2ba4 66000000 		.4byte	.LVL73
 15703 2ba8 0200     		.2byte	0x2
 15704 2baa 30       		.byte	0x30
 15705 2bab 9F       		.byte	0x9f
 15706 2bac 66000000 		.4byte	.LVL73
 15707 2bb0 68000000 		.4byte	.LVL74
 15708 2bb4 0100     		.2byte	0x1
 15709 2bb6 56       		.byte	0x56
 15710 2bb7 68000000 		.4byte	.LVL74
 15711 2bbb 74000000 		.4byte	.LVL75
 15712 2bbf 0300     		.2byte	0x3
 15713 2bc1 76       		.byte	0x76
 15714 2bc2 7F       		.sleb128 -1
 15715 2bc3 9F       		.byte	0x9f
 15716 2bc4 74000000 		.4byte	.LVL75
 15717 2bc8 98000000 		.4byte	.LFE9
 15718 2bcc 0100     		.2byte	0x1
 15719 2bce 56       		.byte	0x56
 15720 2bcf 00000000 		.4byte	0
 15721 2bd3 00000000 		.4byte	0
 15722              	.LVUS32:
 15723 2bd7 00       		.uleb128 .LVU205
 15724 2bd8 00       		.uleb128 .LVU207
 15725 2bd9 00       		.uleb128 .LVU207
 15726 2bda 00       		.uleb128 .LVU208
 15727 2bdb 00       		.uleb128 .LVU208
 15728 2bdc 00       		.uleb128 .LVU211
ARM GAS  /tmp/ccFy9xbE.s 			page 311


 15729              	.LLST32:
 15730 2bdd 74000000 		.4byte	.LVL75
 15731 2be1 80000000 		.4byte	.LVL76
 15732 2be5 0100     		.2byte	0x1
 15733 2be7 57       		.byte	0x57
 15734 2be8 80000000 		.4byte	.LVL76
 15735 2bec 86000000 		.4byte	.LVL77
 15736 2bf0 0300     		.2byte	0x3
 15737 2bf2 77       		.byte	0x77
 15738 2bf3 50       		.sleb128 -48
 15739 2bf4 9F       		.byte	0x9f
 15740 2bf5 86000000 		.4byte	.LVL77
 15741 2bf9 8C000000 		.4byte	.LVL78
 15742 2bfd 0900     		.2byte	0x9
 15743 2bff 74       		.byte	0x74
 15744 2c00 00       		.sleb128 0
 15745 2c01 75       		.byte	0x75
 15746 2c02 00       		.sleb128 0
 15747 2c03 7E       		.byte	0x7e
 15748 2c04 00       		.sleb128 0
 15749 2c05 1E       		.byte	0x1e
 15750 2c06 1C       		.byte	0x1c
 15751 2c07 9F       		.byte	0x9f
 15752 2c08 00000000 		.4byte	0
 15753 2c0c 00000000 		.4byte	0
 15754              	.LLST8:
 15755 2c10 00000000 		.4byte	.LFB8
 15756 2c14 04000000 		.4byte	.LCFI1
 15757 2c18 0200     		.2byte	0x2
 15758 2c1a 7D       		.byte	0x7d
 15759 2c1b 00       		.sleb128 0
 15760 2c1c 04000000 		.4byte	.LCFI1
 15761 2c20 B4000000 		.4byte	.LCFI2
 15762 2c24 0200     		.2byte	0x2
 15763 2c26 7D       		.byte	0x7d
 15764 2c27 24       		.sleb128 36
 15765 2c28 B4000000 		.4byte	.LCFI2
 15766 2c2c B8000000 		.4byte	.LCFI3
 15767 2c30 0200     		.2byte	0x2
 15768 2c32 7D       		.byte	0x7d
 15769 2c33 00       		.sleb128 0
 15770 2c34 B8000000 		.4byte	.LCFI3
 15771 2c38 FC000000 		.4byte	.LCFI4
 15772 2c3c 0200     		.2byte	0x2
 15773 2c3e 7D       		.byte	0x7d
 15774 2c3f 24       		.sleb128 36
 15775 2c40 FC000000 		.4byte	.LCFI4
 15776 2c44 00010000 		.4byte	.LCFI5
 15777 2c48 0200     		.2byte	0x2
 15778 2c4a 7D       		.byte	0x7d
 15779 2c4b 00       		.sleb128 0
 15780 2c4c 00010000 		.4byte	.LCFI5
 15781 2c50 50010000 		.4byte	.LCFI6
 15782 2c54 0200     		.2byte	0x2
 15783 2c56 7D       		.byte	0x7d
 15784 2c57 24       		.sleb128 36
 15785 2c58 50010000 		.4byte	.LCFI6
ARM GAS  /tmp/ccFy9xbE.s 			page 312


 15786 2c5c 54010000 		.4byte	.LCFI7
 15787 2c60 0200     		.2byte	0x2
 15788 2c62 7D       		.byte	0x7d
 15789 2c63 00       		.sleb128 0
 15790 2c64 54010000 		.4byte	.LCFI7
 15791 2c68 CE010000 		.4byte	.LFE8
 15792 2c6c 0200     		.2byte	0x2
 15793 2c6e 7D       		.byte	0x7d
 15794 2c6f 24       		.sleb128 36
 15795 2c70 00000000 		.4byte	0
 15796 2c74 00000000 		.4byte	0
 15797              	.LVUS9:
 15798 2c78 00       		.uleb128 0
 15799 2c79 00       		.uleb128 .LVU98
 15800 2c7a 00       		.uleb128 .LVU98
 15801 2c7b 00       		.uleb128 .LVU98
 15802 2c7c 00       		.uleb128 .LVU98
 15803 2c7d 00       		.uleb128 .LVU122
 15804 2c7e 00       		.uleb128 .LVU122
 15805 2c7f 00       		.uleb128 .LVU122
 15806 2c80 00       		.uleb128 .LVU122
 15807 2c81 00       		.uleb128 .LVU143
 15808 2c82 00       		.uleb128 .LVU143
 15809 2c83 00       		.uleb128 .LVU143
 15810 2c84 00       		.uleb128 .LVU143
 15811 2c85 00       		.uleb128 0
 15812              	.LLST9:
 15813 2c86 00000000 		.4byte	.LVL22
 15814 2c8a B7000000 		.4byte	.LVL32-1
 15815 2c8e 0100     		.2byte	0x1
 15816 2c90 50       		.byte	0x50
 15817 2c91 B7000000 		.4byte	.LVL32-1
 15818 2c95 B8000000 		.4byte	.LVL32
 15819 2c99 0400     		.2byte	0x4
 15820 2c9b F3       		.byte	0xf3
 15821 2c9c 01       		.uleb128 0x1
 15822 2c9d 50       		.byte	0x50
 15823 2c9e 9F       		.byte	0x9f
 15824 2c9f B8000000 		.4byte	.LVL32
 15825 2ca3 FF000000 		.4byte	.LVL41-1
 15826 2ca7 0100     		.2byte	0x1
 15827 2ca9 50       		.byte	0x50
 15828 2caa FF000000 		.4byte	.LVL41-1
 15829 2cae 00010000 		.4byte	.LVL41
 15830 2cb2 0400     		.2byte	0x4
 15831 2cb4 F3       		.byte	0xf3
 15832 2cb5 01       		.uleb128 0x1
 15833 2cb6 50       		.byte	0x50
 15834 2cb7 9F       		.byte	0x9f
 15835 2cb8 00010000 		.4byte	.LVL41
 15836 2cbc 53010000 		.4byte	.LVL49-1
 15837 2cc0 0100     		.2byte	0x1
 15838 2cc2 50       		.byte	0x50
 15839 2cc3 53010000 		.4byte	.LVL49-1
 15840 2cc7 54010000 		.4byte	.LVL49
 15841 2ccb 0400     		.2byte	0x4
 15842 2ccd F3       		.byte	0xf3
ARM GAS  /tmp/ccFy9xbE.s 			page 313


 15843 2cce 01       		.uleb128 0x1
 15844 2ccf 50       		.byte	0x50
 15845 2cd0 9F       		.byte	0x9f
 15846 2cd1 54010000 		.4byte	.LVL49
 15847 2cd5 CE010000 		.4byte	.LFE8
 15848 2cd9 0100     		.2byte	0x1
 15849 2cdb 50       		.byte	0x50
 15850 2cdc 00000000 		.4byte	0
 15851 2ce0 00000000 		.4byte	0
 15852              	.LVUS10:
 15853 2ce4 00       		.uleb128 0
 15854 2ce5 00       		.uleb128 .LVU98
 15855 2ce6 00       		.uleb128 .LVU98
 15856 2ce7 00       		.uleb128 .LVU98
 15857 2ce8 00       		.uleb128 .LVU98
 15858 2ce9 00       		.uleb128 .LVU122
 15859 2cea 00       		.uleb128 .LVU122
 15860 2ceb 00       		.uleb128 .LVU122
 15861 2cec 00       		.uleb128 .LVU122
 15862 2ced 00       		.uleb128 .LVU143
 15863 2cee 00       		.uleb128 .LVU143
 15864 2cef 00       		.uleb128 .LVU143
 15865 2cf0 00       		.uleb128 .LVU143
 15866 2cf1 00       		.uleb128 0
 15867              	.LLST10:
 15868 2cf2 00000000 		.4byte	.LVL22
 15869 2cf6 B7000000 		.4byte	.LVL32-1
 15870 2cfa 0100     		.2byte	0x1
 15871 2cfc 51       		.byte	0x51
 15872 2cfd B7000000 		.4byte	.LVL32-1
 15873 2d01 B8000000 		.4byte	.LVL32
 15874 2d05 0400     		.2byte	0x4
 15875 2d07 F3       		.byte	0xf3
 15876 2d08 01       		.uleb128 0x1
 15877 2d09 51       		.byte	0x51
 15878 2d0a 9F       		.byte	0x9f
 15879 2d0b B8000000 		.4byte	.LVL32
 15880 2d0f FF000000 		.4byte	.LVL41-1
 15881 2d13 0100     		.2byte	0x1
 15882 2d15 51       		.byte	0x51
 15883 2d16 FF000000 		.4byte	.LVL41-1
 15884 2d1a 00010000 		.4byte	.LVL41
 15885 2d1e 0400     		.2byte	0x4
 15886 2d20 F3       		.byte	0xf3
 15887 2d21 01       		.uleb128 0x1
 15888 2d22 51       		.byte	0x51
 15889 2d23 9F       		.byte	0x9f
 15890 2d24 00010000 		.4byte	.LVL41
 15891 2d28 53010000 		.4byte	.LVL49-1
 15892 2d2c 0100     		.2byte	0x1
 15893 2d2e 51       		.byte	0x51
 15894 2d2f 53010000 		.4byte	.LVL49-1
 15895 2d33 54010000 		.4byte	.LVL49
 15896 2d37 0400     		.2byte	0x4
 15897 2d39 F3       		.byte	0xf3
 15898 2d3a 01       		.uleb128 0x1
 15899 2d3b 51       		.byte	0x51
ARM GAS  /tmp/ccFy9xbE.s 			page 314


 15900 2d3c 9F       		.byte	0x9f
 15901 2d3d 54010000 		.4byte	.LVL49
 15902 2d41 CE010000 		.4byte	.LFE8
 15903 2d45 0100     		.2byte	0x1
 15904 2d47 51       		.byte	0x51
 15905 2d48 00000000 		.4byte	0
 15906 2d4c 00000000 		.4byte	0
 15907              	.LVUS11:
 15908 2d50 00       		.uleb128 0
 15909 2d51 00       		.uleb128 .LVU98
 15910 2d52 00       		.uleb128 .LVU98
 15911 2d53 00       		.uleb128 .LVU98
 15912 2d54 00       		.uleb128 .LVU98
 15913 2d55 00       		.uleb128 .LVU122
 15914 2d56 00       		.uleb128 .LVU122
 15915 2d57 00       		.uleb128 .LVU122
 15916 2d58 00       		.uleb128 .LVU122
 15917 2d59 00       		.uleb128 .LVU143
 15918 2d5a 00       		.uleb128 .LVU143
 15919 2d5b 00       		.uleb128 .LVU143
 15920 2d5c 00       		.uleb128 .LVU143
 15921 2d5d 00       		.uleb128 0
 15922              	.LLST11:
 15923 2d5e 00000000 		.4byte	.LVL22
 15924 2d62 B7000000 		.4byte	.LVL32-1
 15925 2d66 0100     		.2byte	0x1
 15926 2d68 52       		.byte	0x52
 15927 2d69 B7000000 		.4byte	.LVL32-1
 15928 2d6d B8000000 		.4byte	.LVL32
 15929 2d71 0400     		.2byte	0x4
 15930 2d73 F3       		.byte	0xf3
 15931 2d74 01       		.uleb128 0x1
 15932 2d75 52       		.byte	0x52
 15933 2d76 9F       		.byte	0x9f
 15934 2d77 B8000000 		.4byte	.LVL32
 15935 2d7b FF000000 		.4byte	.LVL41-1
 15936 2d7f 0100     		.2byte	0x1
 15937 2d81 52       		.byte	0x52
 15938 2d82 FF000000 		.4byte	.LVL41-1
 15939 2d86 00010000 		.4byte	.LVL41
 15940 2d8a 0400     		.2byte	0x4
 15941 2d8c F3       		.byte	0xf3
 15942 2d8d 01       		.uleb128 0x1
 15943 2d8e 52       		.byte	0x52
 15944 2d8f 9F       		.byte	0x9f
 15945 2d90 00010000 		.4byte	.LVL41
 15946 2d94 53010000 		.4byte	.LVL49-1
 15947 2d98 0100     		.2byte	0x1
 15948 2d9a 52       		.byte	0x52
 15949 2d9b 53010000 		.4byte	.LVL49-1
 15950 2d9f 54010000 		.4byte	.LVL49
 15951 2da3 0400     		.2byte	0x4
 15952 2da5 F3       		.byte	0xf3
 15953 2da6 01       		.uleb128 0x1
 15954 2da7 52       		.byte	0x52
 15955 2da8 9F       		.byte	0x9f
 15956 2da9 54010000 		.4byte	.LVL49
ARM GAS  /tmp/ccFy9xbE.s 			page 315


 15957 2dad CE010000 		.4byte	.LFE8
 15958 2db1 0100     		.2byte	0x1
 15959 2db3 52       		.byte	0x52
 15960 2db4 00000000 		.4byte	0
 15961 2db8 00000000 		.4byte	0
 15962              	.LVUS12:
 15963 2dbc 00       		.uleb128 0
 15964 2dbd 00       		.uleb128 .LVU98
 15965 2dbe 00       		.uleb128 .LVU98
 15966 2dbf 00       		.uleb128 .LVU98
 15967 2dc0 00       		.uleb128 .LVU98
 15968 2dc1 00       		.uleb128 .LVU122
 15969 2dc2 00       		.uleb128 .LVU122
 15970 2dc3 00       		.uleb128 .LVU122
 15971 2dc4 00       		.uleb128 .LVU122
 15972 2dc5 00       		.uleb128 .LVU143
 15973 2dc6 00       		.uleb128 .LVU143
 15974 2dc7 00       		.uleb128 .LVU143
 15975 2dc8 00       		.uleb128 .LVU143
 15976 2dc9 00       		.uleb128 0
 15977              	.LLST12:
 15978 2dca 00000000 		.4byte	.LVL22
 15979 2dce B7000000 		.4byte	.LVL32-1
 15980 2dd2 0100     		.2byte	0x1
 15981 2dd4 53       		.byte	0x53
 15982 2dd5 B7000000 		.4byte	.LVL32-1
 15983 2dd9 B8000000 		.4byte	.LVL32
 15984 2ddd 0400     		.2byte	0x4
 15985 2ddf F3       		.byte	0xf3
 15986 2de0 01       		.uleb128 0x1
 15987 2de1 53       		.byte	0x53
 15988 2de2 9F       		.byte	0x9f
 15989 2de3 B8000000 		.4byte	.LVL32
 15990 2de7 FF000000 		.4byte	.LVL41-1
 15991 2deb 0100     		.2byte	0x1
 15992 2ded 53       		.byte	0x53
 15993 2dee FF000000 		.4byte	.LVL41-1
 15994 2df2 00010000 		.4byte	.LVL41
 15995 2df6 0400     		.2byte	0x4
 15996 2df8 F3       		.byte	0xf3
 15997 2df9 01       		.uleb128 0x1
 15998 2dfa 53       		.byte	0x53
 15999 2dfb 9F       		.byte	0x9f
 16000 2dfc 00010000 		.4byte	.LVL41
 16001 2e00 53010000 		.4byte	.LVL49-1
 16002 2e04 0100     		.2byte	0x1
 16003 2e06 53       		.byte	0x53
 16004 2e07 53010000 		.4byte	.LVL49-1
 16005 2e0b 54010000 		.4byte	.LVL49
 16006 2e0f 0400     		.2byte	0x4
 16007 2e11 F3       		.byte	0xf3
 16008 2e12 01       		.uleb128 0x1
 16009 2e13 53       		.byte	0x53
 16010 2e14 9F       		.byte	0x9f
 16011 2e15 54010000 		.4byte	.LVL49
 16012 2e19 CE010000 		.4byte	.LFE8
 16013 2e1d 0100     		.2byte	0x1
ARM GAS  /tmp/ccFy9xbE.s 			page 316


 16014 2e1f 53       		.byte	0x53
 16015 2e20 00000000 		.4byte	0
 16016 2e24 00000000 		.4byte	0
 16017              	.LVUS13:
 16018 2e28 00       		.uleb128 0
 16019 2e29 00       		.uleb128 .LVU92
 16020 2e2a 00       		.uleb128 .LVU98
 16021 2e2b 00       		.uleb128 .LVU108
 16022 2e2c 00       		.uleb128 .LVU122
 16023 2e2d 00       		.uleb128 .LVU128
 16024 2e2e 00       		.uleb128 .LVU143
 16025 2e2f 00       		.uleb128 .LVU164
 16026 2e30 00       		.uleb128 .LVU166
 16027 2e31 00       		.uleb128 .LVU168
 16028 2e32 00       		.uleb128 .LVU170
 16029 2e33 00       		.uleb128 0
 16030              	.LLST13:
 16031 2e34 00000000 		.4byte	.LVL22
 16032 2e38 A4000000 		.4byte	.LVL29
 16033 2e3c 0200     		.2byte	0x2
 16034 2e3e 91       		.byte	0x91
 16035 2e3f 00       		.sleb128 0
 16036 2e40 B8000000 		.4byte	.LVL32
 16037 2e44 D0000000 		.4byte	.LVL36
 16038 2e48 0200     		.2byte	0x2
 16039 2e4a 91       		.byte	0x91
 16040 2e4b 00       		.sleb128 0
 16041 2e4c 00010000 		.4byte	.LVL41
 16042 2e50 2A010000 		.4byte	.LVL43
 16043 2e54 0200     		.2byte	0x2
 16044 2e56 91       		.byte	0x91
 16045 2e57 00       		.sleb128 0
 16046 2e58 54010000 		.4byte	.LVL49
 16047 2e5c A8010000 		.4byte	.LVL58
 16048 2e60 0200     		.2byte	0x2
 16049 2e62 91       		.byte	0x91
 16050 2e63 00       		.sleb128 0
 16051 2e64 AC010000 		.4byte	.LVL60
 16052 2e68 B2010000 		.4byte	.LVL61
 16053 2e6c 0200     		.2byte	0x2
 16054 2e6e 91       		.byte	0x91
 16055 2e6f 00       		.sleb128 0
 16056 2e70 B6010000 		.4byte	.LVL63
 16057 2e74 CE010000 		.4byte	.LFE8
 16058 2e78 0200     		.2byte	0x2
 16059 2e7a 91       		.byte	0x91
 16060 2e7b 00       		.sleb128 0
 16061 2e7c 00000000 		.4byte	0
 16062 2e80 00000000 		.4byte	0
 16063              	.LVUS14:
 16064 2e84 00       		.uleb128 0
 16065 2e85 00       		.uleb128 .LVU60
 16066 2e86 00       		.uleb128 .LVU60
 16067 2e87 01       		.uleb128 .LVU90
 16068 2e88 00       		.uleb128 .LVU92
 16069 2e89 00       		.uleb128 .LVU97
 16070 2e8a 00       		.uleb128 .LVU97
ARM GAS  /tmp/ccFy9xbE.s 			page 317


 16071 2e8b 00       		.uleb128 .LVU98
 16072 2e8c 00       		.uleb128 .LVU98
 16073 2e8d 00       		.uleb128 .LVU99
 16074 2e8e 00       		.uleb128 .LVU99
 16075 2e8f 01       		.uleb128 .LVU105
 16076 2e90 00       		.uleb128 .LVU106
 16077 2e91 00       		.uleb128 .LVU108
 16078 2e92 00       		.uleb128 .LVU111
 16079 2e93 00       		.uleb128 .LVU115
 16080 2e94 01       		.uleb128 .LVU116
 16081 2e95 00       		.uleb128 .LVU118
 16082 2e96 00       		.uleb128 .LVU118
 16083 2e97 00       		.uleb128 .LVU121
 16084 2e98 00       		.uleb128 .LVU121
 16085 2e99 00       		.uleb128 .LVU122
 16086 2e9a 00       		.uleb128 .LVU122
 16087 2e9b 00       		.uleb128 .LVU125
 16088 2e9c 00       		.uleb128 .LVU125
 16089 2e9d 00       		.uleb128 .LVU128
 16090 2e9e 01       		.uleb128 .LVU133
 16091 2e9f 00       		.uleb128 .LVU135
 16092 2ea0 00       		.uleb128 .LVU135
 16093 2ea1 00       		.uleb128 .LVU136
 16094 2ea2 01       		.uleb128 .LVU137
 16095 2ea3 00       		.uleb128 .LVU139
 16096 2ea4 00       		.uleb128 .LVU139
 16097 2ea5 00       		.uleb128 .LVU142
 16098 2ea6 00       		.uleb128 .LVU142
 16099 2ea7 00       		.uleb128 .LVU143
 16100 2ea8 00       		.uleb128 .LVU143
 16101 2ea9 01       		.uleb128 .LVU146
 16102 2eaa 01       		.uleb128 .LVU146
 16103 2eab 00       		.uleb128 .LVU148
 16104 2eac 00       		.uleb128 .LVU148
 16105 2ead 00       		.uleb128 .LVU153
 16106 2eae 00       		.uleb128 .LVU153
 16107 2eaf 00       		.uleb128 .LVU154
 16108 2eb0 00       		.uleb128 .LVU154
 16109 2eb1 00       		.uleb128 .LVU157
 16110 2eb2 00       		.uleb128 .LVU157
 16111 2eb3 01       		.uleb128 .LVU163
 16112 2eb4 01       		.uleb128 .LVU163
 16113 2eb5 00       		.uleb128 .LVU165
 16114 2eb6 00       		.uleb128 .LVU165
 16115 2eb7 01       		.uleb128 .LVU167
 16116 2eb8 01       		.uleb128 .LVU167
 16117 2eb9 00       		.uleb128 .LVU169
 16118 2eba 00       		.uleb128 .LVU169
 16119 2ebb 00       		.uleb128 .LVU170
 16120 2ebc 00       		.uleb128 .LVU170
 16121 2ebd 00       		.uleb128 .LVU171
 16122 2ebe 00       		.uleb128 .LVU171
 16123 2ebf 00       		.uleb128 .LVU172
 16124 2ec0 00       		.uleb128 .LVU174
 16125 2ec1 00       		.uleb128 0
 16126              	.LLST14:
 16127 2ec2 00000000 		.4byte	.LVL22
ARM GAS  /tmp/ccFy9xbE.s 			page 318


 16128 2ec6 20000000 		.4byte	.LVL23
 16129 2eca 0200     		.2byte	0x2
 16130 2ecc 91       		.byte	0x91
 16131 2ecd 04       		.sleb128 4
 16132 2ece 20000000 		.4byte	.LVL23
 16133 2ed2 96000000 		.4byte	.LVL28
 16134 2ed6 0100     		.2byte	0x1
 16135 2ed8 54       		.byte	0x54
 16136 2ed9 A4000000 		.4byte	.LVL29
 16137 2edd B4000000 		.4byte	.LVL31
 16138 2ee1 0100     		.2byte	0x1
 16139 2ee3 54       		.byte	0x54
 16140 2ee4 B4000000 		.4byte	.LVL31
 16141 2ee8 B7000000 		.4byte	.LVL32-1
 16142 2eec 0200     		.2byte	0x2
 16143 2eee 7D       		.byte	0x7d
 16144 2eef 04       		.sleb128 4
 16145 2ef0 B8000000 		.4byte	.LVL32
 16146 2ef4 BC000000 		.4byte	.LVL33
 16147 2ef8 0100     		.2byte	0x1
 16148 2efa 54       		.byte	0x54
 16149 2efb BC000000 		.4byte	.LVL33
 16150 2eff C8000000 		.4byte	.LVL34
 16151 2f03 0200     		.2byte	0x2
 16152 2f05 30       		.byte	0x30
 16153 2f06 9F       		.byte	0x9f
 16154 2f07 CE000000 		.4byte	.LVL35
 16155 2f0b D0000000 		.4byte	.LVL36
 16156 2f0f 0200     		.2byte	0x2
 16157 2f11 31       		.byte	0x31
 16158 2f12 9F       		.byte	0x9f
 16159 2f13 DE000000 		.4byte	.LVL37
 16160 2f17 E8000000 		.4byte	.LVL38
 16161 2f1b 0100     		.2byte	0x1
 16162 2f1d 54       		.byte	0x54
 16163 2f1e E8000000 		.4byte	.LVL38
 16164 2f22 F0000000 		.4byte	.LVL39
 16165 2f26 0300     		.2byte	0x3
 16166 2f28 74       		.byte	0x74
 16167 2f29 01       		.sleb128 1
 16168 2f2a 9F       		.byte	0x9f
 16169 2f2b F0000000 		.4byte	.LVL39
 16170 2f2f FC000000 		.4byte	.LVL40
 16171 2f33 0100     		.2byte	0x1
 16172 2f35 54       		.byte	0x54
 16173 2f36 FC000000 		.4byte	.LVL40
 16174 2f3a FF000000 		.4byte	.LVL41-1
 16175 2f3e 0200     		.2byte	0x2
 16176 2f40 7D       		.byte	0x7d
 16177 2f41 04       		.sleb128 4
 16178 2f42 00010000 		.4byte	.LVL41
 16179 2f46 12010000 		.4byte	.LVL42
 16180 2f4a 0200     		.2byte	0x2
 16181 2f4c 91       		.byte	0x91
 16182 2f4d 04       		.sleb128 4
 16183 2f4e 12010000 		.4byte	.LVL42
 16184 2f52 2A010000 		.4byte	.LVL43
ARM GAS  /tmp/ccFy9xbE.s 			page 319


 16185 2f56 0100     		.2byte	0x1
 16186 2f58 54       		.byte	0x54
 16187 2f59 32010000 		.4byte	.LVL44
 16188 2f5d 3A010000 		.4byte	.LVL45
 16189 2f61 0300     		.2byte	0x3
 16190 2f63 74       		.byte	0x74
 16191 2f64 01       		.sleb128 1
 16192 2f65 9F       		.byte	0x9f
 16193 2f66 3A010000 		.4byte	.LVL45
 16194 2f6a 3C010000 		.4byte	.LVL46
 16195 2f6e 0100     		.2byte	0x1
 16196 2f70 54       		.byte	0x54
 16197 2f71 3C010000 		.4byte	.LVL46
 16198 2f75 44010000 		.4byte	.LVL47
 16199 2f79 0300     		.2byte	0x3
 16200 2f7b 74       		.byte	0x74
 16201 2f7c 01       		.sleb128 1
 16202 2f7d 9F       		.byte	0x9f
 16203 2f7e 44010000 		.4byte	.LVL47
 16204 2f82 50010000 		.4byte	.LVL48
 16205 2f86 0100     		.2byte	0x1
 16206 2f88 54       		.byte	0x54
 16207 2f89 50010000 		.4byte	.LVL48
 16208 2f8d 53010000 		.4byte	.LVL49-1
 16209 2f91 0200     		.2byte	0x2
 16210 2f93 7D       		.byte	0x7d
 16211 2f94 04       		.sleb128 4
 16212 2f95 54010000 		.4byte	.LVL49
 16213 2f99 68010000 		.4byte	.LVL50
 16214 2f9d 0100     		.2byte	0x1
 16215 2f9f 54       		.byte	0x54
 16216 2fa0 68010000 		.4byte	.LVL50
 16217 2fa4 6C010000 		.4byte	.LVL51
 16218 2fa8 0300     		.2byte	0x3
 16219 2faa 74       		.byte	0x74
 16220 2fab 7F       		.sleb128 -1
 16221 2fac 9F       		.byte	0x9f
 16222 2fad 6C010000 		.4byte	.LVL51
 16223 2fb1 82010000 		.4byte	.LVL52
 16224 2fb5 0100     		.2byte	0x1
 16225 2fb7 5C       		.byte	0x5c
 16226 2fb8 82010000 		.4byte	.LVL52
 16227 2fbc 84010000 		.4byte	.LVL53
 16228 2fc0 0100     		.2byte	0x1
 16229 2fc2 54       		.byte	0x54
 16230 2fc3 84010000 		.4byte	.LVL53
 16231 2fc7 88010000 		.4byte	.LVL55
 16232 2fcb 0200     		.2byte	0x2
 16233 2fcd 91       		.byte	0x91
 16234 2fce 04       		.sleb128 4
 16235 2fcf 88010000 		.4byte	.LVL55
 16236 2fd3 A2010000 		.4byte	.LVL57
 16237 2fd7 0100     		.2byte	0x1
 16238 2fd9 54       		.byte	0x54
 16239 2fda A2010000 		.4byte	.LVL57
 16240 2fde AA010000 		.4byte	.LVL59
 16241 2fe2 0300     		.2byte	0x3
ARM GAS  /tmp/ccFy9xbE.s 			page 320


 16242 2fe4 74       		.byte	0x74
 16243 2fe5 01       		.sleb128 1
 16244 2fe6 9F       		.byte	0x9f
 16245 2fe7 AA010000 		.4byte	.LVL59
 16246 2feb AC010000 		.4byte	.LVL60
 16247 2fef 0100     		.2byte	0x1
 16248 2ff1 54       		.byte	0x54
 16249 2ff2 AC010000 		.4byte	.LVL60
 16250 2ff6 B4010000 		.4byte	.LVL62
 16251 2ffa 0300     		.2byte	0x3
 16252 2ffc 74       		.byte	0x74
 16253 2ffd 01       		.sleb128 1
 16254 2ffe 9F       		.byte	0x9f
 16255 2fff B4010000 		.4byte	.LVL62
 16256 3003 B6010000 		.4byte	.LVL63
 16257 3007 0100     		.2byte	0x1
 16258 3009 54       		.byte	0x54
 16259 300a B6010000 		.4byte	.LVL63
 16260 300e BA010000 		.4byte	.LVL64
 16261 3012 0100     		.2byte	0x1
 16262 3014 5C       		.byte	0x5c
 16263 3015 BA010000 		.4byte	.LVL64
 16264 3019 BE010000 		.4byte	.LVL65
 16265 301d 0200     		.2byte	0x2
 16266 301f 30       		.byte	0x30
 16267 3020 9F       		.byte	0x9f
 16268 3021 C4010000 		.4byte	.LVL66
 16269 3025 CE010000 		.4byte	.LFE8
 16270 3029 0200     		.2byte	0x2
 16271 302b 31       		.byte	0x31
 16272 302c 9F       		.byte	0x9f
 16273 302d 00000000 		.4byte	0
 16274 3031 00000000 		.4byte	0
 16275              	.LVUS15:
 16276 3035 00       		.uleb128 0
 16277 3036 00       		.uleb128 .LVU92
 16278 3037 00       		.uleb128 .LVU98
 16279 3038 00       		.uleb128 .LVU108
 16280 3039 00       		.uleb128 .LVU122
 16281 303a 00       		.uleb128 .LVU128
 16282 303b 00       		.uleb128 .LVU143
 16283 303c 00       		.uleb128 .LVU164
 16284 303d 00       		.uleb128 .LVU166
 16285 303e 00       		.uleb128 .LVU168
 16286 303f 00       		.uleb128 .LVU170
 16287 3040 00       		.uleb128 0
 16288              	.LLST15:
 16289 3041 00000000 		.4byte	.LVL22
 16290 3045 A4000000 		.4byte	.LVL29
 16291 3049 0200     		.2byte	0x2
 16292 304b 91       		.byte	0x91
 16293 304c 08       		.sleb128 8
 16294 304d B8000000 		.4byte	.LVL32
 16295 3051 D0000000 		.4byte	.LVL36
 16296 3055 0200     		.2byte	0x2
 16297 3057 91       		.byte	0x91
 16298 3058 08       		.sleb128 8
ARM GAS  /tmp/ccFy9xbE.s 			page 321


 16299 3059 00010000 		.4byte	.LVL41
 16300 305d 2A010000 		.4byte	.LVL43
 16301 3061 0200     		.2byte	0x2
 16302 3063 91       		.byte	0x91
 16303 3064 08       		.sleb128 8
 16304 3065 54010000 		.4byte	.LVL49
 16305 3069 A8010000 		.4byte	.LVL58
 16306 306d 0200     		.2byte	0x2
 16307 306f 91       		.byte	0x91
 16308 3070 08       		.sleb128 8
 16309 3071 AC010000 		.4byte	.LVL60
 16310 3075 B2010000 		.4byte	.LVL61
 16311 3079 0200     		.2byte	0x2
 16312 307b 91       		.byte	0x91
 16313 307c 08       		.sleb128 8
 16314 307d B6010000 		.4byte	.LVL63
 16315 3081 CE010000 		.4byte	.LFE8
 16316 3085 0200     		.2byte	0x2
 16317 3087 91       		.byte	0x91
 16318 3088 08       		.sleb128 8
 16319 3089 00000000 		.4byte	0
 16320 308d 00000000 		.4byte	0
 16321              	.LVUS16:
 16322 3091 00       		.uleb128 0
 16323 3092 00       		.uleb128 .LVU92
 16324 3093 00       		.uleb128 .LVU98
 16325 3094 00       		.uleb128 .LVU108
 16326 3095 00       		.uleb128 .LVU122
 16327 3096 00       		.uleb128 .LVU128
 16328 3097 00       		.uleb128 .LVU143
 16329 3098 00       		.uleb128 .LVU164
 16330 3099 00       		.uleb128 .LVU166
 16331 309a 00       		.uleb128 .LVU168
 16332 309b 00       		.uleb128 .LVU170
 16333 309c 00       		.uleb128 0
 16334              	.LLST16:
 16335 309d 00000000 		.4byte	.LVL22
 16336 30a1 A4000000 		.4byte	.LVL29
 16337 30a5 0200     		.2byte	0x2
 16338 30a7 91       		.byte	0x91
 16339 30a8 0C       		.sleb128 12
 16340 30a9 B8000000 		.4byte	.LVL32
 16341 30ad D0000000 		.4byte	.LVL36
 16342 30b1 0200     		.2byte	0x2
 16343 30b3 91       		.byte	0x91
 16344 30b4 0C       		.sleb128 12
 16345 30b5 00010000 		.4byte	.LVL41
 16346 30b9 2A010000 		.4byte	.LVL43
 16347 30bd 0200     		.2byte	0x2
 16348 30bf 91       		.byte	0x91
 16349 30c0 0C       		.sleb128 12
 16350 30c1 54010000 		.4byte	.LVL49
 16351 30c5 A8010000 		.4byte	.LVL58
 16352 30c9 0200     		.2byte	0x2
 16353 30cb 91       		.byte	0x91
 16354 30cc 0C       		.sleb128 12
 16355 30cd AC010000 		.4byte	.LVL60
ARM GAS  /tmp/ccFy9xbE.s 			page 322


 16356 30d1 B2010000 		.4byte	.LVL61
 16357 30d5 0200     		.2byte	0x2
 16358 30d7 91       		.byte	0x91
 16359 30d8 0C       		.sleb128 12
 16360 30d9 B6010000 		.4byte	.LVL63
 16361 30dd CE010000 		.4byte	.LFE8
 16362 30e1 0200     		.2byte	0x2
 16363 30e3 91       		.byte	0x91
 16364 30e4 0C       		.sleb128 12
 16365 30e5 00000000 		.4byte	0
 16366 30e9 00000000 		.4byte	0
 16367              	.LVUS17:
 16368 30ed 00       		.uleb128 0
 16369 30ee 00       		.uleb128 .LVU92
 16370 30ef 00       		.uleb128 .LVU98
 16371 30f0 00       		.uleb128 .LVU108
 16372 30f1 00       		.uleb128 .LVU122
 16373 30f2 00       		.uleb128 .LVU128
 16374 30f3 00       		.uleb128 .LVU143
 16375 30f4 00       		.uleb128 .LVU164
 16376 30f5 00       		.uleb128 .LVU166
 16377 30f6 00       		.uleb128 .LVU168
 16378 30f7 00       		.uleb128 .LVU170
 16379 30f8 00       		.uleb128 0
 16380              	.LLST17:
 16381 30f9 00000000 		.4byte	.LVL22
 16382 30fd A4000000 		.4byte	.LVL29
 16383 3101 0200     		.2byte	0x2
 16384 3103 91       		.byte	0x91
 16385 3104 10       		.sleb128 16
 16386 3105 B8000000 		.4byte	.LVL32
 16387 3109 D0000000 		.4byte	.LVL36
 16388 310d 0200     		.2byte	0x2
 16389 310f 91       		.byte	0x91
 16390 3110 10       		.sleb128 16
 16391 3111 00010000 		.4byte	.LVL41
 16392 3115 2A010000 		.4byte	.LVL43
 16393 3119 0200     		.2byte	0x2
 16394 311b 91       		.byte	0x91
 16395 311c 10       		.sleb128 16
 16396 311d 54010000 		.4byte	.LVL49
 16397 3121 A8010000 		.4byte	.LVL58
 16398 3125 0200     		.2byte	0x2
 16399 3127 91       		.byte	0x91
 16400 3128 10       		.sleb128 16
 16401 3129 AC010000 		.4byte	.LVL60
 16402 312d B2010000 		.4byte	.LVL61
 16403 3131 0200     		.2byte	0x2
 16404 3133 91       		.byte	0x91
 16405 3134 10       		.sleb128 16
 16406 3135 B6010000 		.4byte	.LVL63
 16407 3139 CE010000 		.4byte	.LFE8
 16408 313d 0200     		.2byte	0x2
 16409 313f 91       		.byte	0x91
 16410 3140 10       		.sleb128 16
 16411 3141 00000000 		.4byte	0
 16412 3145 00000000 		.4byte	0
ARM GAS  /tmp/ccFy9xbE.s 			page 323


 16413              	.LVUS18:
 16414 3149 00       		.uleb128 0
 16415 314a 00       		.uleb128 .LVU60
 16416 314b 00       		.uleb128 .LVU60
 16417 314c 00       		.uleb128 .LVU63
 16418 314d 00       		.uleb128 .LVU80
 16419 314e 00       		.uleb128 .LVU97
 16420 314f 00       		.uleb128 .LVU97
 16421 3150 00       		.uleb128 .LVU98
 16422 3151 00       		.uleb128 .LVU98
 16423 3152 00       		.uleb128 .LVU121
 16424 3153 00       		.uleb128 .LVU121
 16425 3154 00       		.uleb128 .LVU122
 16426 3155 00       		.uleb128 .LVU122
 16427 3156 00       		.uleb128 .LVU125
 16428 3157 00       		.uleb128 .LVU125
 16429 3158 00       		.uleb128 .LVU142
 16430 3159 00       		.uleb128 .LVU142
 16431 315a 00       		.uleb128 .LVU143
 16432 315b 00       		.uleb128 .LVU143
 16433 315c 00       		.uleb128 .LVU154
 16434 315d 00       		.uleb128 .LVU154
 16435 315e 00       		.uleb128 .LVU156
 16436 315f 00       		.uleb128 .LVU156
 16437 3160 00       		.uleb128 0
 16438              	.LLST18:
 16439 3161 00000000 		.4byte	.LVL22
 16440 3165 20000000 		.4byte	.LVL23
 16441 3169 0200     		.2byte	0x2
 16442 316b 91       		.byte	0x91
 16443 316c 14       		.sleb128 20
 16444 316d 20000000 		.4byte	.LVL23
 16445 3171 2C000000 		.4byte	.LVL24
 16446 3175 0200     		.2byte	0x2
 16447 3177 30       		.byte	0x30
 16448 3178 9F       		.byte	0x9f
 16449 3179 7A000000 		.4byte	.LVL27
 16450 317d B4000000 		.4byte	.LVL31
 16451 3181 0100     		.2byte	0x1
 16452 3183 55       		.byte	0x55
 16453 3184 B4000000 		.4byte	.LVL31
 16454 3188 B7000000 		.4byte	.LVL32-1
 16455 318c 0200     		.2byte	0x2
 16456 318e 7D       		.byte	0x7d
 16457 318f 08       		.sleb128 8
 16458 3190 B8000000 		.4byte	.LVL32
 16459 3194 FC000000 		.4byte	.LVL40
 16460 3198 0100     		.2byte	0x1
 16461 319a 55       		.byte	0x55
 16462 319b FC000000 		.4byte	.LVL40
 16463 319f FF000000 		.4byte	.LVL41-1
 16464 31a3 0200     		.2byte	0x2
 16465 31a5 7D       		.byte	0x7d
 16466 31a6 08       		.sleb128 8
 16467 31a7 00010000 		.4byte	.LVL41
 16468 31ab 12010000 		.4byte	.LVL42
 16469 31af 0200     		.2byte	0x2
ARM GAS  /tmp/ccFy9xbE.s 			page 324


 16470 31b1 91       		.byte	0x91
 16471 31b2 14       		.sleb128 20
 16472 31b3 12010000 		.4byte	.LVL42
 16473 31b7 50010000 		.4byte	.LVL48
 16474 31bb 0100     		.2byte	0x1
 16475 31bd 55       		.byte	0x55
 16476 31be 50010000 		.4byte	.LVL48
 16477 31c2 53010000 		.4byte	.LVL49-1
 16478 31c6 0200     		.2byte	0x2
 16479 31c8 7D       		.byte	0x7d
 16480 31c9 08       		.sleb128 8
 16481 31ca 54010000 		.4byte	.LVL49
 16482 31ce 84010000 		.4byte	.LVL53
 16483 31d2 0100     		.2byte	0x1
 16484 31d4 55       		.byte	0x55
 16485 31d5 84010000 		.4byte	.LVL53
 16486 31d9 86010000 		.4byte	.LVL54
 16487 31dd 0200     		.2byte	0x2
 16488 31df 91       		.byte	0x91
 16489 31e0 14       		.sleb128 20
 16490 31e1 86010000 		.4byte	.LVL54
 16491 31e5 CE010000 		.4byte	.LFE8
 16492 31e9 0100     		.2byte	0x1
 16493 31eb 55       		.byte	0x55
 16494 31ec 00000000 		.4byte	0
 16495 31f0 00000000 		.4byte	0
 16496              	.LVUS19:
 16497 31f4 00       		.uleb128 0
 16498 31f5 00       		.uleb128 .LVU92
 16499 31f6 00       		.uleb128 .LVU98
 16500 31f7 00       		.uleb128 .LVU108
 16501 31f8 00       		.uleb128 .LVU122
 16502 31f9 00       		.uleb128 .LVU128
 16503 31fa 00       		.uleb128 .LVU143
 16504 31fb 00       		.uleb128 .LVU164
 16505 31fc 00       		.uleb128 .LVU166
 16506 31fd 00       		.uleb128 .LVU168
 16507 31fe 00       		.uleb128 .LVU170
 16508 31ff 00       		.uleb128 0
 16509              	.LLST19:
 16510 3200 00000000 		.4byte	.LVL22
 16511 3204 A4000000 		.4byte	.LVL29
 16512 3208 0200     		.2byte	0x2
 16513 320a 91       		.byte	0x91
 16514 320b 18       		.sleb128 24
 16515 320c B8000000 		.4byte	.LVL32
 16516 3210 D0000000 		.4byte	.LVL36
 16517 3214 0200     		.2byte	0x2
 16518 3216 91       		.byte	0x91
 16519 3217 18       		.sleb128 24
 16520 3218 00010000 		.4byte	.LVL41
 16521 321c 2A010000 		.4byte	.LVL43
 16522 3220 0200     		.2byte	0x2
 16523 3222 91       		.byte	0x91
 16524 3223 18       		.sleb128 24
 16525 3224 54010000 		.4byte	.LVL49
 16526 3228 A8010000 		.4byte	.LVL58
ARM GAS  /tmp/ccFy9xbE.s 			page 325


 16527 322c 0200     		.2byte	0x2
 16528 322e 91       		.byte	0x91
 16529 322f 18       		.sleb128 24
 16530 3230 AC010000 		.4byte	.LVL60
 16531 3234 B2010000 		.4byte	.LVL61
 16532 3238 0200     		.2byte	0x2
 16533 323a 91       		.byte	0x91
 16534 323b 18       		.sleb128 24
 16535 323c B6010000 		.4byte	.LVL63
 16536 3240 CE010000 		.4byte	.LFE8
 16537 3244 0200     		.2byte	0x2
 16538 3246 91       		.byte	0x91
 16539 3247 18       		.sleb128 24
 16540 3248 00000000 		.4byte	0
 16541 324c 00000000 		.4byte	0
 16542              	.LLST0:
 16543 3250 00000000 		.4byte	.LFB7
 16544 3254 04000000 		.4byte	.LCFI0
 16545 3258 0200     		.2byte	0x2
 16546 325a 7D       		.byte	0x7d
 16547 325b 00       		.sleb128 0
 16548 325c 04000000 		.4byte	.LCFI0
 16549 3260 86000000 		.4byte	.LFE7
 16550 3264 0200     		.2byte	0x2
 16551 3266 7D       		.byte	0x7d
 16552 3267 28       		.sleb128 40
 16553 3268 00000000 		.4byte	0
 16554 326c 00000000 		.4byte	0
 16555              	.LVUS1:
 16556 3270 00       		.uleb128 0
 16557 3271 00       		.uleb128 .LVU25
 16558 3272 00       		.uleb128 .LVU25
 16559 3273 00       		.uleb128 .LVU30
 16560 3274 00       		.uleb128 .LVU30
 16561 3275 00       		.uleb128 .LVU31
 16562 3276 00       		.uleb128 .LVU31
 16563 3277 00       		.uleb128 0
 16564              	.LLST1:
 16565 3278 00000000 		.4byte	.LVL2
 16566 327c 28000000 		.4byte	.LVL7
 16567 3280 0100     		.2byte	0x1
 16568 3282 50       		.byte	0x50
 16569 3283 28000000 		.4byte	.LVL7
 16570 3287 3A000000 		.4byte	.LVL10
 16571 328b 0100     		.2byte	0x1
 16572 328d 56       		.byte	0x56
 16573 328e 3A000000 		.4byte	.LVL10
 16574 3292 3C000000 		.4byte	.LVL11
 16575 3296 0100     		.2byte	0x1
 16576 3298 50       		.byte	0x50
 16577 3299 3C000000 		.4byte	.LVL11
 16578 329d 86000000 		.4byte	.LFE7
 16579 32a1 0100     		.2byte	0x1
 16580 32a3 56       		.byte	0x56
 16581 32a4 00000000 		.4byte	0
 16582 32a8 00000000 		.4byte	0
 16583              	.LVUS2:
ARM GAS  /tmp/ccFy9xbE.s 			page 326


 16584 32ac 00       		.uleb128 0
 16585 32ad 00       		.uleb128 .LVU25
 16586 32ae 00       		.uleb128 .LVU25
 16587 32af 00       		.uleb128 .LVU30
 16588 32b0 00       		.uleb128 .LVU30
 16589 32b1 00       		.uleb128 .LVU31
 16590 32b2 00       		.uleb128 .LVU31
 16591 32b3 00       		.uleb128 0
 16592              	.LLST2:
 16593 32b4 00000000 		.4byte	.LVL2
 16594 32b8 28000000 		.4byte	.LVL7
 16595 32bc 0100     		.2byte	0x1
 16596 32be 51       		.byte	0x51
 16597 32bf 28000000 		.4byte	.LVL7
 16598 32c3 3A000000 		.4byte	.LVL10
 16599 32c7 0100     		.2byte	0x1
 16600 32c9 5B       		.byte	0x5b
 16601 32ca 3A000000 		.4byte	.LVL10
 16602 32ce 3C000000 		.4byte	.LVL11
 16603 32d2 0100     		.2byte	0x1
 16604 32d4 51       		.byte	0x51
 16605 32d5 3C000000 		.4byte	.LVL11
 16606 32d9 86000000 		.4byte	.LFE7
 16607 32dd 0100     		.2byte	0x1
 16608 32df 5B       		.byte	0x5b
 16609 32e0 00000000 		.4byte	0
 16610 32e4 00000000 		.4byte	0
 16611              	.LVUS3:
 16612 32e8 00       		.uleb128 0
 16613 32e9 00       		.uleb128 .LVU21
 16614 32ea 00       		.uleb128 .LVU21
 16615 32eb 00       		.uleb128 .LVU25
 16616 32ec 00       		.uleb128 .LVU25
 16617 32ed 00       		.uleb128 .LVU30
 16618 32ee 00       		.uleb128 .LVU30
 16619 32ef 00       		.uleb128 .LVU31
 16620 32f0 00       		.uleb128 .LVU31
 16621 32f1 00       		.uleb128 .LVU33
 16622 32f2 00       		.uleb128 .LVU34
 16623 32f3 01       		.uleb128 .LVU35
 16624 32f4 00       		.uleb128 .LVU41
 16625 32f5 00       		.uleb128 .LVU47
 16626 32f6 00       		.uleb128 .LVU47
 16627 32f7 00       		.uleb128 .LVU48
 16628 32f8 00       		.uleb128 .LVU48
 16629 32f9 00       		.uleb128 .LVU48
 16630 32fa 00       		.uleb128 .LVU48
 16631 32fb 00       		.uleb128 .LVU49
 16632              	.LLST3:
 16633 32fc 00000000 		.4byte	.LVL2
 16634 3300 0E000000 		.4byte	.LVL5
 16635 3304 0100     		.2byte	0x1
 16636 3306 52       		.byte	0x52
 16637 3307 0E000000 		.4byte	.LVL5
 16638 330b 28000000 		.4byte	.LVL7
 16639 330f 0100     		.2byte	0x1
 16640 3311 57       		.byte	0x57
ARM GAS  /tmp/ccFy9xbE.s 			page 327


 16641 3312 28000000 		.4byte	.LVL7
 16642 3316 3A000000 		.4byte	.LVL10
 16643 331a 0100     		.2byte	0x1
 16644 331c 54       		.byte	0x54
 16645 331d 3A000000 		.4byte	.LVL10
 16646 3321 3C000000 		.4byte	.LVL11
 16647 3325 0100     		.2byte	0x1
 16648 3327 57       		.byte	0x57
 16649 3328 3C000000 		.4byte	.LVL11
 16650 332c 48000000 		.4byte	.LVL12
 16651 3330 0100     		.2byte	0x1
 16652 3332 55       		.byte	0x55
 16653 3333 4C000000 		.4byte	.LVL13
 16654 3337 4C000000 		.4byte	.LVL13
 16655 333b 0100     		.2byte	0x1
 16656 333d 52       		.byte	0x52
 16657 333e 64000000 		.4byte	.LVL17
 16658 3342 7A000000 		.4byte	.LVL19
 16659 3346 0100     		.2byte	0x1
 16660 3348 55       		.byte	0x55
 16661 3349 7A000000 		.4byte	.LVL19
 16662 334d 7B000000 		.4byte	.LVL20-1
 16663 3351 0100     		.2byte	0x1
 16664 3353 52       		.byte	0x52
 16665 3354 7B000000 		.4byte	.LVL20-1
 16666 3358 7C000000 		.4byte	.LVL20
 16667 335c 0300     		.2byte	0x3
 16668 335e 75       		.byte	0x75
 16669 335f 7F       		.sleb128 -1
 16670 3360 9F       		.byte	0x9f
 16671 3361 7C000000 		.4byte	.LVL20
 16672 3365 80000000 		.4byte	.LVL21
 16673 3369 0100     		.2byte	0x1
 16674 336b 55       		.byte	0x55
 16675 336c 00000000 		.4byte	0
 16676 3370 00000000 		.4byte	0
 16677              	.LVUS4:
 16678 3374 00       		.uleb128 0
 16679 3375 00       		.uleb128 .LVU17
 16680 3376 00       		.uleb128 .LVU17
 16681 3377 00       		.uleb128 0
 16682              	.LLST4:
 16683 3378 00000000 		.4byte	.LVL2
 16684 337c 08000000 		.4byte	.LVL3
 16685 3380 0100     		.2byte	0x1
 16686 3382 53       		.byte	0x53
 16687 3383 08000000 		.4byte	.LVL3
 16688 3387 86000000 		.4byte	.LFE7
 16689 338b 0100     		.2byte	0x1
 16690 338d 5A       		.byte	0x5a
 16691 338e 00000000 		.4byte	0
 16692 3392 00000000 		.4byte	0
 16693              	.LVUS5:
 16694 3396 00       		.uleb128 0
 16695 3397 00       		.uleb128 .LVU33
 16696 3398 00       		.uleb128 .LVU34
 16697 3399 01       		.uleb128 .LVU35
ARM GAS  /tmp/ccFy9xbE.s 			page 328


 16698 339a 01       		.uleb128 .LVU35
 16699 339b 00       		.uleb128 .LVU36
 16700 339c 00       		.uleb128 .LVU36
 16701 339d 00       		.uleb128 .LVU39
 16702              	.LLST5:
 16703 339e 00000000 		.4byte	.LVL2
 16704 33a2 48000000 		.4byte	.LVL12
 16705 33a6 0200     		.2byte	0x2
 16706 33a8 91       		.byte	0x91
 16707 33a9 04       		.sleb128 4
 16708 33aa 4C000000 		.4byte	.LVL13
 16709 33ae 4C000000 		.4byte	.LVL13
 16710 33b2 0600     		.2byte	0x6
 16711 33b4 74       		.byte	0x74
 16712 33b5 00       		.sleb128 0
 16713 33b6 78       		.byte	0x78
 16714 33b7 00       		.sleb128 0
 16715 33b8 1C       		.byte	0x1c
 16716 33b9 9F       		.byte	0x9f
 16717 33ba 4C000000 		.4byte	.LVL13
 16718 33be 50000000 		.4byte	.LVL14
 16719 33c2 0700     		.2byte	0x7
 16720 33c4 78       		.byte	0x78
 16721 33c5 00       		.sleb128 0
 16722 33c6 20       		.byte	0x20
 16723 33c7 74       		.byte	0x74
 16724 33c8 00       		.sleb128 0
 16725 33c9 22       		.byte	0x22
 16726 33ca 9F       		.byte	0x9f
 16727 33cb 50000000 		.4byte	.LVL14
 16728 33cf 5E000000 		.4byte	.LVL16
 16729 33d3 0600     		.2byte	0x6
 16730 33d5 74       		.byte	0x74
 16731 33d6 00       		.sleb128 0
 16732 33d7 78       		.byte	0x78
 16733 33d8 00       		.sleb128 0
 16734 33d9 1C       		.byte	0x1c
 16735 33da 9F       		.byte	0x9f
 16736 33db 00000000 		.4byte	0
 16737 33df 00000000 		.4byte	0
 16738              	.LVUS6:
 16739 33e3 00       		.uleb128 .LVU18
 16740 33e4 00       		.uleb128 .LVU21
 16741 33e5 00       		.uleb128 .LVU21
 16742 33e6 00       		.uleb128 .LVU43
 16743 33e7 00       		.uleb128 .LVU43
 16744 33e8 00       		.uleb128 0
 16745              	.LLST6:
 16746 33e9 0A000000 		.4byte	.LVL4
 16747 33ed 0E000000 		.4byte	.LVL5
 16748 33f1 0100     		.2byte	0x1
 16749 33f3 52       		.byte	0x52
 16750 33f4 0E000000 		.4byte	.LVL5
 16751 33f8 66000000 		.4byte	.LVL18
 16752 33fc 0100     		.2byte	0x1
 16753 33fe 57       		.byte	0x57
 16754 33ff 66000000 		.4byte	.LVL18
ARM GAS  /tmp/ccFy9xbE.s 			page 329


 16755 3403 86000000 		.4byte	.LFE7
 16756 3407 0400     		.2byte	0x4
 16757 3409 F3       		.byte	0xf3
 16758 340a 01       		.uleb128 0x1
 16759 340b 52       		.byte	0x52
 16760 340c 9F       		.byte	0x9f
 16761 340d 00000000 		.4byte	0
 16762 3411 00000000 		.4byte	0
 16763              	.LVUS7:
 16764 3415 00       		.uleb128 .LVU23
 16765 3416 00       		.uleb128 .LVU25
 16766              	.LLST7:
 16767 3417 16000000 		.4byte	.LVL6
 16768 341b 28000000 		.4byte	.LVL7
 16769 341f 0200     		.2byte	0x2
 16770 3421 91       		.byte	0x91
 16771 3422 04       		.sleb128 4
 16772 3423 00000000 		.4byte	0
 16773 3427 00000000 		.4byte	0
 16774              	.LVUS80:
 16775 342b 00       		.uleb128 0
 16776 342c 00       		.uleb128 .LVU678
 16777 342d 00       		.uleb128 .LVU678
 16778 342e 00       		.uleb128 0
 16779              	.LLST80:
 16780 342f 00000000 		.4byte	.LVL314
 16781 3433 07000000 		.4byte	.LVL315-1
 16782 3437 0100     		.2byte	0x1
 16783 3439 50       		.byte	0x50
 16784 343a 07000000 		.4byte	.LVL315-1
 16785 343e 08000000 		.4byte	.LFE2
 16786 3442 0400     		.2byte	0x4
 16787 3444 F3       		.byte	0xf3
 16788 3445 01       		.uleb128 0x1
 16789 3446 50       		.byte	0x50
 16790 3447 9F       		.byte	0x9f
 16791 3448 00000000 		.4byte	0
 16792 344c 00000000 		.4byte	0
 16793              	.LVUS81:
 16794 3450 00       		.uleb128 0
 16795 3451 00       		.uleb128 .LVU678
 16796 3452 00       		.uleb128 .LVU678
 16797 3453 00       		.uleb128 0
 16798              	.LLST81:
 16799 3454 00000000 		.4byte	.LVL314
 16800 3458 07000000 		.4byte	.LVL315-1
 16801 345c 0100     		.2byte	0x1
 16802 345e 51       		.byte	0x51
 16803 345f 07000000 		.4byte	.LVL315-1
 16804 3463 08000000 		.4byte	.LFE2
 16805 3467 0400     		.2byte	0x4
 16806 3469 F3       		.byte	0xf3
 16807 346a 01       		.uleb128 0x1
 16808 346b 51       		.byte	0x51
 16809 346c 9F       		.byte	0x9f
 16810 346d 00000000 		.4byte	0
 16811 3471 00000000 		.4byte	0
ARM GAS  /tmp/ccFy9xbE.s 			page 330


 16812              	.LVUS82:
 16813 3475 00       		.uleb128 0
 16814 3476 00       		.uleb128 .LVU678
 16815 3477 00       		.uleb128 .LVU678
 16816 3478 00       		.uleb128 0
 16817              	.LLST82:
 16818 3479 00000000 		.4byte	.LVL314
 16819 347d 07000000 		.4byte	.LVL315-1
 16820 3481 0100     		.2byte	0x1
 16821 3483 52       		.byte	0x52
 16822 3484 07000000 		.4byte	.LVL315-1
 16823 3488 08000000 		.4byte	.LFE2
 16824 348c 0400     		.2byte	0x4
 16825 348e F3       		.byte	0xf3
 16826 348f 01       		.uleb128 0x1
 16827 3490 52       		.byte	0x52
 16828 3491 9F       		.byte	0x9f
 16829 3492 00000000 		.4byte	0
 16830 3496 00000000 		.4byte	0
 16831              	.LVUS83:
 16832 349a 00       		.uleb128 0
 16833 349b 00       		.uleb128 .LVU678
 16834 349c 00       		.uleb128 .LVU678
 16835 349d 00       		.uleb128 0
 16836              	.LLST83:
 16837 349e 00000000 		.4byte	.LVL314
 16838 34a2 07000000 		.4byte	.LVL315-1
 16839 34a6 0100     		.2byte	0x1
 16840 34a8 53       		.byte	0x53
 16841 34a9 07000000 		.4byte	.LVL315-1
 16842 34ad 08000000 		.4byte	.LFE2
 16843 34b1 0400     		.2byte	0x4
 16844 34b3 F3       		.byte	0xf3
 16845 34b4 01       		.uleb128 0x1
 16846 34b5 53       		.byte	0x53
 16847 34b6 9F       		.byte	0x9f
 16848 34b7 00000000 		.4byte	0
 16849 34bb 00000000 		.4byte	0
 16850              	.LVUS84:
 16851 34bf 00       		.uleb128 0
 16852 34c0 00       		.uleb128 .LVU688
 16853 34c1 00       		.uleb128 .LVU688
 16854 34c2 00       		.uleb128 .LVU688
 16855 34c3 00       		.uleb128 .LVU688
 16856 34c4 00       		.uleb128 0
 16857              	.LLST84:
 16858 34c5 00000000 		.4byte	.LVL316
 16859 34c9 07000000 		.4byte	.LVL319-1
 16860 34cd 0100     		.2byte	0x1
 16861 34cf 50       		.byte	0x50
 16862 34d0 07000000 		.4byte	.LVL319-1
 16863 34d4 08000000 		.4byte	.LVL319
 16864 34d8 0400     		.2byte	0x4
 16865 34da F3       		.byte	0xf3
 16866 34db 01       		.uleb128 0x1
 16867 34dc 50       		.byte	0x50
 16868 34dd 9F       		.byte	0x9f
ARM GAS  /tmp/ccFy9xbE.s 			page 331


 16869 34de 08000000 		.4byte	.LVL319
 16870 34e2 0A000000 		.4byte	.LFE3
 16871 34e6 0100     		.2byte	0x1
 16872 34e8 50       		.byte	0x50
 16873 34e9 00000000 		.4byte	0
 16874 34ed 00000000 		.4byte	0
 16875              	.LVUS85:
 16876 34f1 00       		.uleb128 0
 16877 34f2 00       		.uleb128 .LVU687
 16878 34f3 00       		.uleb128 .LVU687
 16879 34f4 00       		.uleb128 .LVU688
 16880 34f5 00       		.uleb128 .LVU688
 16881 34f6 00       		.uleb128 0
 16882              	.LLST85:
 16883 34f7 00000000 		.4byte	.LVL316
 16884 34fb 06000000 		.4byte	.LVL318
 16885 34ff 0100     		.2byte	0x1
 16886 3501 51       		.byte	0x51
 16887 3502 06000000 		.4byte	.LVL318
 16888 3506 08000000 		.4byte	.LVL319
 16889 350a 0400     		.2byte	0x4
 16890 350c F3       		.byte	0xf3
 16891 350d 01       		.uleb128 0x1
 16892 350e 51       		.byte	0x51
 16893 350f 9F       		.byte	0x9f
 16894 3510 08000000 		.4byte	.LVL319
 16895 3514 0A000000 		.4byte	.LFE3
 16896 3518 0100     		.2byte	0x1
 16897 351a 51       		.byte	0x51
 16898 351b 00000000 		.4byte	0
 16899 351f 00000000 		.4byte	0
 16900              	.LVUS86:
 16901 3523 00       		.uleb128 0
 16902 3524 00       		.uleb128 .LVU688
 16903 3525 00       		.uleb128 .LVU688
 16904 3526 00       		.uleb128 .LVU688
 16905 3527 00       		.uleb128 .LVU688
 16906 3528 00       		.uleb128 0
 16907              	.LLST86:
 16908 3529 00000000 		.4byte	.LVL316
 16909 352d 07000000 		.4byte	.LVL319-1
 16910 3531 0100     		.2byte	0x1
 16911 3533 52       		.byte	0x52
 16912 3534 07000000 		.4byte	.LVL319-1
 16913 3538 08000000 		.4byte	.LVL319
 16914 353c 0400     		.2byte	0x4
 16915 353e F3       		.byte	0xf3
 16916 353f 01       		.uleb128 0x1
 16917 3540 52       		.byte	0x52
 16918 3541 9F       		.byte	0x9f
 16919 3542 08000000 		.4byte	.LVL319
 16920 3546 0A000000 		.4byte	.LFE3
 16921 354a 0100     		.2byte	0x1
 16922 354c 52       		.byte	0x52
 16923 354d 00000000 		.4byte	0
 16924 3551 00000000 		.4byte	0
 16925              	.LVUS87:
ARM GAS  /tmp/ccFy9xbE.s 			page 332


 16926 3555 00       		.uleb128 0
 16927 3556 00       		.uleb128 .LVU687
 16928 3557 00       		.uleb128 .LVU687
 16929 3558 00       		.uleb128 .LVU688
 16930 3559 00       		.uleb128 .LVU688
 16931 355a 00       		.uleb128 0
 16932              	.LLST87:
 16933 355b 00000000 		.4byte	.LVL316
 16934 355f 06000000 		.4byte	.LVL318
 16935 3563 0100     		.2byte	0x1
 16936 3565 53       		.byte	0x53
 16937 3566 06000000 		.4byte	.LVL318
 16938 356a 08000000 		.4byte	.LVL319
 16939 356e 0400     		.2byte	0x4
 16940 3570 F3       		.byte	0xf3
 16941 3571 01       		.uleb128 0x1
 16942 3572 53       		.byte	0x53
 16943 3573 9F       		.byte	0x9f
 16944 3574 08000000 		.4byte	.LVL319
 16945 3578 0A000000 		.4byte	.LFE3
 16946 357c 0100     		.2byte	0x1
 16947 357e 53       		.byte	0x53
 16948 357f 00000000 		.4byte	0
 16949 3583 00000000 		.4byte	0
 16950              	.LVUS88:
 16951 3587 01       		.uleb128 .LVU685
 16952 3588 00       		.uleb128 .LVU688
 16953 3589 00       		.uleb128 .LVU688
 16954 358a 00       		.uleb128 .LVU688
 16955              	.LLST88:
 16956 358b 02000000 		.4byte	.LVL317
 16957 358f 07000000 		.4byte	.LVL319-1
 16958 3593 0100     		.2byte	0x1
 16959 3595 52       		.byte	0x52
 16960 3596 07000000 		.4byte	.LVL319-1
 16961 359a 08000000 		.4byte	.LVL319
 16962 359e 0400     		.2byte	0x4
 16963 35a0 F3       		.byte	0xf3
 16964 35a1 01       		.uleb128 0x1
 16965 35a2 52       		.byte	0x52
 16966 35a3 9F       		.byte	0x9f
 16967 35a4 00000000 		.4byte	0
 16968 35a8 00000000 		.4byte	0
 16969              	.LVUS89:
 16970 35ac 01       		.uleb128 .LVU685
 16971 35ad 00       		.uleb128 .LVU687
 16972 35ae 00       		.uleb128 .LVU687
 16973 35af 00       		.uleb128 .LVU688
 16974              	.LLST89:
 16975 35b0 02000000 		.4byte	.LVL317
 16976 35b4 06000000 		.4byte	.LVL318
 16977 35b8 0100     		.2byte	0x1
 16978 35ba 53       		.byte	0x53
 16979 35bb 06000000 		.4byte	.LVL318
 16980 35bf 08000000 		.4byte	.LVL319
 16981 35c3 0400     		.2byte	0x4
 16982 35c5 F3       		.byte	0xf3
ARM GAS  /tmp/ccFy9xbE.s 			page 333


 16983 35c6 01       		.uleb128 0x1
 16984 35c7 53       		.byte	0x53
 16985 35c8 9F       		.byte	0x9f
 16986 35c9 00000000 		.4byte	0
 16987 35cd 00000000 		.4byte	0
 16988              	.LVUS90:
 16989 35d1 00       		.uleb128 .LVU684
 16990 35d2 00       		.uleb128 .LVU687
 16991 35d3 00       		.uleb128 .LVU687
 16992 35d4 00       		.uleb128 .LVU688
 16993              	.LLST90:
 16994 35d5 02000000 		.4byte	.LVL317
 16995 35d9 06000000 		.4byte	.LVL318
 16996 35dd 0100     		.2byte	0x1
 16997 35df 51       		.byte	0x51
 16998 35e0 06000000 		.4byte	.LVL318
 16999 35e4 08000000 		.4byte	.LVL319
 17000 35e8 0400     		.2byte	0x4
 17001 35ea F3       		.byte	0xf3
 17002 35eb 01       		.uleb128 0x1
 17003 35ec 51       		.byte	0x51
 17004 35ed 9F       		.byte	0x9f
 17005 35ee 00000000 		.4byte	0
 17006 35f2 00000000 		.4byte	0
 17007              		.section	.debug_aranges,"",%progbits
 17008 0000 9C000000 		.4byte	0x9c
 17009 0004 0200     		.2byte	0x2
 17010 0006 00000000 		.4byte	.Ldebug_info0
 17011 000a 04       		.byte	0x4
 17012 000b 00       		.byte	0
 17013 000c 0000     		.2byte	0
 17014 000e 0000     		.2byte	0
 17015 0010 00000000 		.4byte	.LFB0
 17016 0014 08000000 		.4byte	.LFE0-.LFB0
 17017 0018 00000000 		.4byte	.LFB1
 17018 001c 02000000 		.4byte	.LFE1-.LFB1
 17019 0020 00000000 		.4byte	.LFB7
 17020 0024 86000000 		.4byte	.LFE7-.LFB7
 17021 0028 00000000 		.4byte	.LFB8
 17022 002c CE010000 		.4byte	.LFE8-.LFB8
 17023 0030 00000000 		.4byte	.LFB9
 17024 0034 98000000 		.4byte	.LFE9-.LFB9
 17025 0038 00000000 		.4byte	.LFB10
 17026 003c C6000000 		.4byte	.LFE10-.LFB10
 17027 0040 00000000 		.4byte	.LFB12
 17028 0044 62040000 		.4byte	.LFE12-.LFB12
 17029 0048 00000000 		.4byte	.LFB11
 17030 004c 20040000 		.4byte	.LFE11-.LFB11
 17031 0050 00000000 		.4byte	.LFB2
 17032 0054 08000000 		.4byte	.LFE2-.LFB2
 17033 0058 00000000 		.4byte	.LFB3
 17034 005c 0A000000 		.4byte	.LFE3-.LFB3
 17035 0060 00000000 		.4byte	.LFB13
 17036 0064 6A060000 		.4byte	.LFE13-.LFB13
 17037 0068 00000000 		.4byte	.LFB14
 17038 006c 2C000000 		.4byte	.LFE14-.LFB14
 17039 0070 00000000 		.4byte	.LFB15
ARM GAS  /tmp/ccFy9xbE.s 			page 334


 17040 0074 2C000000 		.4byte	.LFE15-.LFB15
 17041 0078 00000000 		.4byte	.LFB16
 17042 007c 2C000000 		.4byte	.LFE16-.LFB16
 17043 0080 00000000 		.4byte	.LFB17
 17044 0084 20000000 		.4byte	.LFE17-.LFB17
 17045 0088 00000000 		.4byte	.LFB18
 17046 008c 20000000 		.4byte	.LFE18-.LFB18
 17047 0090 00000000 		.4byte	.LFB19
 17048 0094 30000000 		.4byte	.LFE19-.LFB19
 17049 0098 00000000 		.4byte	0
 17050 009c 00000000 		.4byte	0
 17051              		.section	.debug_ranges,"",%progbits
 17052              	.Ldebug_ranges0:
 17053 0000 52000000 		.4byte	.LBB21
 17054 0004 66000000 		.4byte	.LBE21
 17055 0008 66000000 		.4byte	.LBB22
 17056 000c 88000000 		.4byte	.LBE22
 17057 0010 8A000000 		.4byte	.LBB23
 17058 0014 90000000 		.4byte	.LBE23
 17059 0018 00000000 		.4byte	0
 17060 001c 00000000 		.4byte	0
 17061 0020 76000000 		.4byte	.LBB24
 17062 0024 90000000 		.4byte	.LBE24
 17063 0028 90000000 		.4byte	.LBB25
 17064 002c B0000000 		.4byte	.LBE25
 17065 0030 B2000000 		.4byte	.LBB26
 17066 0034 B8000000 		.4byte	.LBE26
 17067 0038 BC000000 		.4byte	.LBB27
 17068 003c BE000000 		.4byte	.LBE27
 17069 0040 00000000 		.4byte	0
 17070 0044 00000000 		.4byte	0
 17071 0048 A8020000 		.4byte	.LBB28
 17072 004c DE020000 		.4byte	.LBE28
 17073 0050 AE030000 		.4byte	.LBB29
 17074 0054 E2030000 		.4byte	.LBE29
 17075 0058 08040000 		.4byte	.LBB30
 17076 005c 20040000 		.4byte	.LBE30
 17077 0060 00000000 		.4byte	0
 17078 0064 00000000 		.4byte	0
 17079 0068 E8010000 		.4byte	.LBB67
 17080 006c F0010000 		.4byte	.LBE67
 17081 0070 F2010000 		.4byte	.LBB68
 17082 0074 F6010000 		.4byte	.LBE68
 17083 0078 8A020000 		.4byte	.LBB79
 17084 007c 8A020000 		.4byte	.LBE79
 17085 0080 8C020000 		.4byte	.LBB80
 17086 0084 96020000 		.4byte	.LBE80
 17087 0088 00000000 		.4byte	0
 17088 008c 00000000 		.4byte	0
 17089 0090 0C020000 		.4byte	.LBB69
 17090 0094 8A020000 		.4byte	.LBE69
 17091 0098 5E040000 		.4byte	.LBB98
 17092 009c 72040000 		.4byte	.LBE98
 17093 00a0 80040000 		.4byte	.LBB100
 17094 00a4 C4040000 		.4byte	.LBE100
 17095 00a8 C6040000 		.4byte	.LBB102
 17096 00ac CC040000 		.4byte	.LBE102
ARM GAS  /tmp/ccFy9xbE.s 			page 335


 17097 00b0 7C050000 		.4byte	.LBB107
 17098 00b4 84050000 		.4byte	.LBE107
 17099 00b8 88050000 		.4byte	.LBB109
 17100 00bc 54060000 		.4byte	.LBE109
 17101 00c0 00000000 		.4byte	0
 17102 00c4 00000000 		.4byte	0
 17103 00c8 64020000 		.4byte	.LBB70
 17104 00cc 8A020000 		.4byte	.LBE70
 17105 00d0 BE040000 		.4byte	.LBB72
 17106 00d4 C4040000 		.4byte	.LBE72
 17107 00d8 C6040000 		.4byte	.LBB73
 17108 00dc CC040000 		.4byte	.LBE73
 17109 00e0 82050000 		.4byte	.LBB75
 17110 00e4 84050000 		.4byte	.LBE75
 17111 00e8 00000000 		.4byte	0
 17112 00ec 00000000 		.4byte	0
 17113 00f0 90040000 		.4byte	.LBB71
 17114 00f4 BE040000 		.4byte	.LBE71
 17115 00f8 7C050000 		.4byte	.LBB74
 17116 00fc 82050000 		.4byte	.LBE74
 17117 0100 4A060000 		.4byte	.LBB78
 17118 0104 54060000 		.4byte	.LBE78
 17119 0108 00000000 		.4byte	0
 17120 010c 00000000 		.4byte	0
 17121 0110 2E030000 		.4byte	.LBB81
 17122 0114 C0030000 		.4byte	.LBE81
 17123 0118 72040000 		.4byte	.LBB99
 17124 011c 80040000 		.4byte	.LBE99
 17125 0120 E2040000 		.4byte	.LBB104
 17126 0124 EA040000 		.4byte	.LBE104
 17127 0128 22050000 		.4byte	.LBB106
 17128 012c 7C050000 		.4byte	.LBE106
 17129 0130 54060000 		.4byte	.LBB110
 17130 0134 66060000 		.4byte	.LBE110
 17131 0138 00000000 		.4byte	0
 17132 013c 00000000 		.4byte	0
 17133 0140 3E030000 		.4byte	.LBB82
 17134 0144 66030000 		.4byte	.LBE82
 17135 0148 72040000 		.4byte	.LBB87
 17136 014c 80040000 		.4byte	.LBE87
 17137 0150 E2040000 		.4byte	.LBB88
 17138 0154 EA040000 		.4byte	.LBE88
 17139 0158 54060000 		.4byte	.LBB89
 17140 015c 5C060000 		.4byte	.LBE89
 17141 0160 00000000 		.4byte	0
 17142 0164 00000000 		.4byte	0
 17143 0168 00040000 		.4byte	.LBB91
 17144 016c 34040000 		.4byte	.LBE91
 17145 0170 C4040000 		.4byte	.LBB101
 17146 0174 C6040000 		.4byte	.LBE101
 17147 0178 CC040000 		.4byte	.LBB103
 17148 017c CE040000 		.4byte	.LBE103
 17149 0180 F0040000 		.4byte	.LBB105
 17150 0184 22050000 		.4byte	.LBE105
 17151 0188 84050000 		.4byte	.LBB108
 17152 018c 88050000 		.4byte	.LBE108
 17153 0190 66060000 		.4byte	.LBB111
ARM GAS  /tmp/ccFy9xbE.s 			page 336


 17154 0194 6A060000 		.4byte	.LBE111
 17155 0198 00000000 		.4byte	0
 17156 019c 00000000 		.4byte	0
 17157 01a0 50040000 		.4byte	.LBB96
 17158 01a4 56040000 		.4byte	.LBE96
 17159 01a8 58040000 		.4byte	.LBB97
 17160 01ac 5E040000 		.4byte	.LBE97
 17161 01b0 00000000 		.4byte	0
 17162 01b4 00000000 		.4byte	0
 17163 01b8 00000000 		.4byte	.LFB0
 17164 01bc 08000000 		.4byte	.LFE0
 17165 01c0 00000000 		.4byte	.LFB1
 17166 01c4 02000000 		.4byte	.LFE1
 17167 01c8 00000000 		.4byte	.LFB7
 17168 01cc 86000000 		.4byte	.LFE7
 17169 01d0 00000000 		.4byte	.LFB8
 17170 01d4 CE010000 		.4byte	.LFE8
 17171 01d8 00000000 		.4byte	.LFB9
 17172 01dc 98000000 		.4byte	.LFE9
 17173 01e0 00000000 		.4byte	.LFB10
 17174 01e4 C6000000 		.4byte	.LFE10
 17175 01e8 00000000 		.4byte	.LFB12
 17176 01ec 62040000 		.4byte	.LFE12
 17177 01f0 00000000 		.4byte	.LFB11
 17178 01f4 20040000 		.4byte	.LFE11
 17179 01f8 00000000 		.4byte	.LFB2
 17180 01fc 08000000 		.4byte	.LFE2
 17181 0200 00000000 		.4byte	.LFB3
 17182 0204 0A000000 		.4byte	.LFE3
 17183 0208 00000000 		.4byte	.LFB13
 17184 020c 6A060000 		.4byte	.LFE13
 17185 0210 00000000 		.4byte	.LFB14
 17186 0214 2C000000 		.4byte	.LFE14
 17187 0218 00000000 		.4byte	.LFB15
 17188 021c 2C000000 		.4byte	.LFE15
 17189 0220 00000000 		.4byte	.LFB16
 17190 0224 2C000000 		.4byte	.LFE16
 17191 0228 00000000 		.4byte	.LFB17
 17192 022c 20000000 		.4byte	.LFE17
 17193 0230 00000000 		.4byte	.LFB18
 17194 0234 20000000 		.4byte	.LFE18
 17195 0238 00000000 		.4byte	.LFB19
 17196 023c 30000000 		.4byte	.LFE19
 17197 0240 00000000 		.4byte	0
 17198 0244 00000000 		.4byte	0
 17199              		.section	.debug_macro,"",%progbits
 17200              	.Ldebug_macro0:
 17201 0000 0400     		.2byte	0x4
 17202 0002 02       		.byte	0x2
 17203 0003 00000000 		.4byte	.Ldebug_line0
 17204 0007 07       		.byte	0x7
 17205 0008 00000000 		.4byte	.Ldebug_macro2
 17206 000c 03       		.byte	0x3
 17207 000d 00       		.uleb128 0
 17208 000e 01       		.uleb128 0x1
 17209              		.file 7 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdbool.h"
 17210 000f 03       		.byte	0x3
ARM GAS  /tmp/ccFy9xbE.s 			page 337


 17211 0010 22       		.uleb128 0x22
 17212 0011 07       		.uleb128 0x7
 17213 0012 07       		.byte	0x7
 17214 0013 00000000 		.4byte	.Ldebug_macro3
 17215 0017 04       		.byte	0x4
 17216 0018 03       		.byte	0x3
 17217 0019 23       		.uleb128 0x23
 17218 001a 02       		.uleb128 0x2
 17219 001b 07       		.byte	0x7
 17220 001c 00000000 		.4byte	.Ldebug_macro4
 17221 0020 04       		.byte	0x4
 17222 0021 03       		.byte	0x3
 17223 0022 25       		.uleb128 0x25
 17224 0023 06       		.uleb128 0x6
 17225 0024 05       		.byte	0x5
 17226 0025 22       		.uleb128 0x22
 17227 0026 4B440000 		.4byte	.LASF574
 17228 002a 03       		.byte	0x3
 17229 002b 24       		.uleb128 0x24
 17230 002c 03       		.uleb128 0x3
 17231 002d 07       		.byte	0x7
 17232 002e 00000000 		.4byte	.Ldebug_macro5
 17233 0032 04       		.byte	0x4
 17234 0033 03       		.byte	0x3
 17235 0034 25       		.uleb128 0x25
 17236 0035 04       		.uleb128 0x4
 17237 0036 07       		.byte	0x7
 17238 0037 00000000 		.4byte	.Ldebug_macro6
 17239 003b 04       		.byte	0x4
 17240 003c 07       		.byte	0x7
 17241 003d 00000000 		.4byte	.Ldebug_macro7
 17242 0041 04       		.byte	0x4
 17243 0042 05       		.byte	0x5
 17244 0043 32       		.uleb128 0x32
 17245 0044 E50E0000 		.4byte	.LASF647
 17246 0048 05       		.byte	0x5
 17247 0049 39       		.uleb128 0x39
 17248 004a 43450000 		.4byte	.LASF648
 17249 004e 05       		.byte	0x5
 17250 004f 3F       		.uleb128 0x3f
 17251 0050 38360000 		.4byte	.LASF649
 17252 0054 05       		.byte	0x5
 17253 0055 45       		.uleb128 0x45
 17254 0056 8D160000 		.4byte	.LASF650
 17255 005a 05       		.byte	0x5
 17256 005b 4B       		.uleb128 0x4b
 17257 005c 7F380000 		.4byte	.LASF651
 17258 0060 05       		.byte	0x5
 17259 0061 51       		.uleb128 0x51
 17260 0062 691C0000 		.4byte	.LASF652
 17261 0066 05       		.byte	0x5
 17262 0067 57       		.uleb128 0x57
 17263 0068 7F0A0000 		.4byte	.LASF653
 17264 006c 05       		.byte	0x5
 17265 006d 5E       		.uleb128 0x5e
 17266 006e 8B190000 		.4byte	.LASF654
 17267 0072 05       		.byte	0x5
ARM GAS  /tmp/ccFy9xbE.s 			page 338


 17268 0073 64       		.uleb128 0x64
 17269 0074 9B010000 		.4byte	.LASF655
 17270 0078 05       		.byte	0x5
 17271 0079 65       		.uleb128 0x65
 17272 007a 8F2A0000 		.4byte	.LASF656
 17273 007e 05       		.byte	0x5
 17274 007f 66       		.uleb128 0x66
 17275 0080 D6340000 		.4byte	.LASF657
 17276 0084 05       		.byte	0x5
 17277 0085 67       		.uleb128 0x67
 17278 0086 2F0A0000 		.4byte	.LASF658
 17279 008a 05       		.byte	0x5
 17280 008b 68       		.uleb128 0x68
 17281 008c 2B270000 		.4byte	.LASF659
 17282 0090 05       		.byte	0x5
 17283 0091 69       		.uleb128 0x69
 17284 0092 BC270000 		.4byte	.LASF660
 17285 0096 05       		.byte	0x5
 17286 0097 6A       		.uleb128 0x6a
 17287 0098 4E160000 		.4byte	.LASF661
 17288 009c 05       		.byte	0x5
 17289 009d 6B       		.uleb128 0x6b
 17290 009e 74330000 		.4byte	.LASF662
 17291 00a2 05       		.byte	0x5
 17292 00a3 6C       		.uleb128 0x6c
 17293 00a4 091D0000 		.4byte	.LASF663
 17294 00a8 05       		.byte	0x5
 17295 00a9 6D       		.uleb128 0x6d
 17296 00aa 3C280000 		.4byte	.LASF664
 17297 00ae 05       		.byte	0x5
 17298 00af 6E       		.uleb128 0x6e
 17299 00b0 131B0000 		.4byte	.LASF665
 17300 00b4 05       		.byte	0x5
 17301 00b5 6F       		.uleb128 0x6f
 17302 00b6 010F0000 		.4byte	.LASF666
 17303              		.file 8 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/float.h"
 17304 00ba 03       		.byte	0x3
 17305 00bb 73       		.uleb128 0x73
 17306 00bc 08       		.uleb128 0x8
 17307 00bd 07       		.byte	0x7
 17308 00be 00000000 		.4byte	.Ldebug_macro8
 17309 00c2 04       		.byte	0x4
 17310 00c3 04       		.byte	0x4
 17311 00c4 00       		.byte	0
 17312              		.section	.debug_macro,"G",%progbits,wm4.0.007990e38b48ed7e6b618cf8f1acad11,comdat
 17313              	.Ldebug_macro2:
 17314 0000 0400     		.2byte	0x4
 17315 0002 00       		.byte	0
 17316 0003 05       		.byte	0x5
 17317 0004 00       		.uleb128 0
 17318 0005 923F0000 		.4byte	.LASF0
 17319 0009 05       		.byte	0x5
 17320 000a 00       		.uleb128 0
 17321 000b 09120000 		.4byte	.LASF1
 17322 000f 05       		.byte	0x5
 17323 0010 00       		.uleb128 0
 17324 0011 862B0000 		.4byte	.LASF2
ARM GAS  /tmp/ccFy9xbE.s 			page 339


 17325 0015 05       		.byte	0x5
 17326 0016 00       		.uleb128 0
 17327 0017 8C120000 		.4byte	.LASF3
 17328 001b 05       		.byte	0x5
 17329 001c 00       		.uleb128 0
 17330 001d 06060000 		.4byte	.LASF4
 17331 0021 05       		.byte	0x5
 17332 0022 00       		.uleb128 0
 17333 0023 23240000 		.4byte	.LASF5
 17334 0027 05       		.byte	0x5
 17335 0028 00       		.uleb128 0
 17336 0029 B0380000 		.4byte	.LASF6
 17337 002d 05       		.byte	0x5
 17338 002e 00       		.uleb128 0
 17339 002f 85110000 		.4byte	.LASF7
 17340 0033 05       		.byte	0x5
 17341 0034 00       		.uleb128 0
 17342 0035 4E360000 		.4byte	.LASF8
 17343 0039 05       		.byte	0x5
 17344 003a 00       		.uleb128 0
 17345 003b C13C0000 		.4byte	.LASF9
 17346 003f 05       		.byte	0x5
 17347 0040 00       		.uleb128 0
 17348 0041 6A130000 		.4byte	.LASF10
 17349 0045 05       		.byte	0x5
 17350 0046 00       		.uleb128 0
 17351 0047 E01C0000 		.4byte	.LASF11
 17352 004b 05       		.byte	0x5
 17353 004c 00       		.uleb128 0
 17354 004d 30220000 		.4byte	.LASF12
 17355 0051 05       		.byte	0x5
 17356 0052 00       		.uleb128 0
 17357 0053 7E460000 		.4byte	.LASF13
 17358 0057 05       		.byte	0x5
 17359 0058 00       		.uleb128 0
 17360 0059 28020000 		.4byte	.LASF14
 17361 005d 05       		.byte	0x5
 17362 005e 00       		.uleb128 0
 17363 005f AD220000 		.4byte	.LASF15
 17364 0063 05       		.byte	0x5
 17365 0064 00       		.uleb128 0
 17366 0065 45350000 		.4byte	.LASF16
 17367 0069 05       		.byte	0x5
 17368 006a 00       		.uleb128 0
 17369 006b C8410000 		.4byte	.LASF17
 17370 006f 05       		.byte	0x5
 17371 0070 00       		.uleb128 0
 17372 0071 D30E0000 		.4byte	.LASF18
 17373 0075 05       		.byte	0x5
 17374 0076 00       		.uleb128 0
 17375 0077 BE020000 		.4byte	.LASF19
 17376 007b 05       		.byte	0x5
 17377 007c 00       		.uleb128 0
 17378 007d 96350000 		.4byte	.LASF20
 17379 0081 05       		.byte	0x5
 17380 0082 00       		.uleb128 0
 17381 0083 9E120000 		.4byte	.LASF21
ARM GAS  /tmp/ccFy9xbE.s 			page 340


 17382 0087 05       		.byte	0x5
 17383 0088 00       		.uleb128 0
 17384 0089 1D0F0000 		.4byte	.LASF22
 17385 008d 05       		.byte	0x5
 17386 008e 00       		.uleb128 0
 17387 008f 81140000 		.4byte	.LASF23
 17388 0093 05       		.byte	0x5
 17389 0094 00       		.uleb128 0
 17390 0095 453B0000 		.4byte	.LASF24
 17391 0099 05       		.byte	0x5
 17392 009a 00       		.uleb128 0
 17393 009b EA270000 		.4byte	.LASF25
 17394 009f 05       		.byte	0x5
 17395 00a0 00       		.uleb128 0
 17396 00a1 662F0000 		.4byte	.LASF26
 17397 00a5 05       		.byte	0x5
 17398 00a6 00       		.uleb128 0
 17399 00a7 753F0000 		.4byte	.LASF27
 17400 00ab 05       		.byte	0x5
 17401 00ac 00       		.uleb128 0
 17402 00ad 5D080000 		.4byte	.LASF28
 17403 00b1 05       		.byte	0x5
 17404 00b2 00       		.uleb128 0
 17405 00b3 B5030000 		.4byte	.LASF29
 17406 00b7 05       		.byte	0x5
 17407 00b8 00       		.uleb128 0
 17408 00b9 8E280000 		.4byte	.LASF30
 17409 00bd 05       		.byte	0x5
 17410 00be 00       		.uleb128 0
 17411 00bf AF2C0000 		.4byte	.LASF31
 17412 00c3 05       		.byte	0x5
 17413 00c4 00       		.uleb128 0
 17414 00c5 920C0000 		.4byte	.LASF32
 17415 00c9 05       		.byte	0x5
 17416 00ca 00       		.uleb128 0
 17417 00cb CF030000 		.4byte	.LASF33
 17418 00cf 05       		.byte	0x5
 17419 00d0 00       		.uleb128 0
 17420 00d1 F4170000 		.4byte	.LASF34
 17421 00d5 05       		.byte	0x5
 17422 00d6 00       		.uleb128 0
 17423 00d7 9A140000 		.4byte	.LASF35
 17424 00db 05       		.byte	0x5
 17425 00dc 00       		.uleb128 0
 17426 00dd 67060000 		.4byte	.LASF36
 17427 00e1 05       		.byte	0x5
 17428 00e2 00       		.uleb128 0
 17429 00e3 13390000 		.4byte	.LASF37
 17430 00e7 05       		.byte	0x5
 17431 00e8 00       		.uleb128 0
 17432 00e9 6B0D0000 		.4byte	.LASF38
 17433 00ed 05       		.byte	0x5
 17434 00ee 00       		.uleb128 0
 17435 00ef FF340000 		.4byte	.LASF39
 17436 00f3 05       		.byte	0x5
 17437 00f4 00       		.uleb128 0
 17438 00f5 3C0E0000 		.4byte	.LASF40
ARM GAS  /tmp/ccFy9xbE.s 			page 341


 17439 00f9 05       		.byte	0x5
 17440 00fa 00       		.uleb128 0
 17441 00fb 2D060000 		.4byte	.LASF41
 17442 00ff 05       		.byte	0x5
 17443 0100 00       		.uleb128 0
 17444 0101 07040000 		.4byte	.LASF42
 17445 0105 05       		.byte	0x5
 17446 0106 00       		.uleb128 0
 17447 0107 EF040000 		.4byte	.LASF43
 17448 010b 05       		.byte	0x5
 17449 010c 00       		.uleb128 0
 17450 010d A2360000 		.4byte	.LASF44
 17451 0111 05       		.byte	0x5
 17452 0112 00       		.uleb128 0
 17453 0113 9F270000 		.4byte	.LASF45
 17454 0117 05       		.byte	0x5
 17455 0118 00       		.uleb128 0
 17456 0119 65180000 		.4byte	.LASF46
 17457 011d 05       		.byte	0x5
 17458 011e 00       		.uleb128 0
 17459 011f 261F0000 		.4byte	.LASF47
 17460 0123 05       		.byte	0x5
 17461 0124 00       		.uleb128 0
 17462 0125 CE400000 		.4byte	.LASF48
 17463 0129 05       		.byte	0x5
 17464 012a 00       		.uleb128 0
 17465 012b 593B0000 		.4byte	.LASF49
 17466 012f 05       		.byte	0x5
 17467 0130 00       		.uleb128 0
 17468 0131 A70C0000 		.4byte	.LASF50
 17469 0135 05       		.byte	0x5
 17470 0136 00       		.uleb128 0
 17471 0137 AD430000 		.4byte	.LASF51
 17472 013b 05       		.byte	0x5
 17473 013c 00       		.uleb128 0
 17474 013d 72320000 		.4byte	.LASF52
 17475 0141 05       		.byte	0x5
 17476 0142 00       		.uleb128 0
 17477 0143 88470000 		.4byte	.LASF53
 17478 0147 05       		.byte	0x5
 17479 0148 00       		.uleb128 0
 17480 0149 D3250000 		.4byte	.LASF54
 17481 014d 05       		.byte	0x5
 17482 014e 00       		.uleb128 0
 17483 014f AD340000 		.4byte	.LASF55
 17484 0153 05       		.byte	0x5
 17485 0154 00       		.uleb128 0
 17486 0155 C1380000 		.4byte	.LASF56
 17487 0159 05       		.byte	0x5
 17488 015a 00       		.uleb128 0
 17489 015b 94210000 		.4byte	.LASF57
 17490 015f 05       		.byte	0x5
 17491 0160 00       		.uleb128 0
 17492 0161 2E0C0000 		.4byte	.LASF58
 17493 0165 05       		.byte	0x5
 17494 0166 00       		.uleb128 0
 17495 0167 6B340000 		.4byte	.LASF59
ARM GAS  /tmp/ccFy9xbE.s 			page 342


 17496 016b 05       		.byte	0x5
 17497 016c 00       		.uleb128 0
 17498 016d 172A0000 		.4byte	.LASF60
 17499 0171 05       		.byte	0x5
 17500 0172 00       		.uleb128 0
 17501 0173 45060000 		.4byte	.LASF61
 17502 0177 05       		.byte	0x5
 17503 0178 00       		.uleb128 0
 17504 0179 09200000 		.4byte	.LASF62
 17505 017d 05       		.byte	0x5
 17506 017e 00       		.uleb128 0
 17507 017f 5D420000 		.4byte	.LASF63
 17508 0183 05       		.byte	0x5
 17509 0184 00       		.uleb128 0
 17510 0185 59120000 		.4byte	.LASF64
 17511 0189 05       		.byte	0x5
 17512 018a 00       		.uleb128 0
 17513 018b 4B150000 		.4byte	.LASF65
 17514 018f 05       		.byte	0x5
 17515 0190 00       		.uleb128 0
 17516 0191 763A0000 		.4byte	.LASF66
 17517 0195 05       		.byte	0x5
 17518 0196 00       		.uleb128 0
 17519 0197 923A0000 		.4byte	.LASF67
 17520 019b 05       		.byte	0x5
 17521 019c 00       		.uleb128 0
 17522 019d EF050000 		.4byte	.LASF68
 17523 01a1 05       		.byte	0x5
 17524 01a2 00       		.uleb128 0
 17525 01a3 4C2B0000 		.4byte	.LASF69
 17526 01a7 05       		.byte	0x5
 17527 01a8 00       		.uleb128 0
 17528 01a9 A9330000 		.4byte	.LASF70
 17529 01ad 05       		.byte	0x5
 17530 01ae 00       		.uleb128 0
 17531 01af 71470000 		.4byte	.LASF71
 17532 01b3 05       		.byte	0x5
 17533 01b4 00       		.uleb128 0
 17534 01b5 00450000 		.4byte	.LASF72
 17535 01b9 05       		.byte	0x5
 17536 01ba 00       		.uleb128 0
 17537 01bb F92F0000 		.4byte	.LASF73
 17538 01bf 05       		.byte	0x5
 17539 01c0 00       		.uleb128 0
 17540 01c1 4F020000 		.4byte	.LASF74
 17541 01c5 05       		.byte	0x5
 17542 01c6 00       		.uleb128 0
 17543 01c7 B7240000 		.4byte	.LASF75
 17544 01cb 05       		.byte	0x5
 17545 01cc 00       		.uleb128 0
 17546 01cd 7D430000 		.4byte	.LASF76
 17547 01d1 05       		.byte	0x5
 17548 01d2 00       		.uleb128 0
 17549 01d3 26430000 		.4byte	.LASF77
 17550 01d7 05       		.byte	0x5
 17551 01d8 00       		.uleb128 0
 17552 01d9 22010000 		.4byte	.LASF78
ARM GAS  /tmp/ccFy9xbE.s 			page 343


 17553 01dd 05       		.byte	0x5
 17554 01de 00       		.uleb128 0
 17555 01df D0440000 		.4byte	.LASF79
 17556 01e3 05       		.byte	0x5
 17557 01e4 00       		.uleb128 0
 17558 01e5 B71F0000 		.4byte	.LASF80
 17559 01e9 05       		.byte	0x5
 17560 01ea 00       		.uleb128 0
 17561 01eb D61E0000 		.4byte	.LASF81
 17562 01ef 05       		.byte	0x5
 17563 01f0 00       		.uleb128 0
 17564 01f1 383E0000 		.4byte	.LASF82
 17565 01f5 05       		.byte	0x5
 17566 01f6 00       		.uleb128 0
 17567 01f7 39240000 		.4byte	.LASF83
 17568 01fb 05       		.byte	0x5
 17569 01fc 00       		.uleb128 0
 17570 01fd FC250000 		.4byte	.LASF84
 17571 0201 05       		.byte	0x5
 17572 0202 00       		.uleb128 0
 17573 0203 15460000 		.4byte	.LASF85
 17574 0207 05       		.byte	0x5
 17575 0208 00       		.uleb128 0
 17576 0209 70410000 		.4byte	.LASF86
 17577 020d 05       		.byte	0x5
 17578 020e 00       		.uleb128 0
 17579 020f 05090000 		.4byte	.LASF87
 17580 0213 05       		.byte	0x5
 17581 0214 00       		.uleb128 0
 17582 0215 E1420000 		.4byte	.LASF88
 17583 0219 05       		.byte	0x5
 17584 021a 00       		.uleb128 0
 17585 021b B4010000 		.4byte	.LASF89
 17586 021f 05       		.byte	0x5
 17587 0220 00       		.uleb128 0
 17588 0221 41270000 		.4byte	.LASF90
 17589 0225 05       		.byte	0x5
 17590 0226 00       		.uleb128 0
 17591 0227 15470000 		.4byte	.LASF91
 17592 022b 05       		.byte	0x5
 17593 022c 00       		.uleb128 0
 17594 022d 7A0C0000 		.4byte	.LASF92
 17595 0231 05       		.byte	0x5
 17596 0232 00       		.uleb128 0
 17597 0233 6E030000 		.4byte	.LASF93
 17598 0237 05       		.byte	0x5
 17599 0238 00       		.uleb128 0
 17600 0239 213D0000 		.4byte	.LASF94
 17601 023d 05       		.byte	0x5
 17602 023e 00       		.uleb128 0
 17603 023f 1D1A0000 		.4byte	.LASF95
 17604 0243 05       		.byte	0x5
 17605 0244 00       		.uleb128 0
 17606 0245 B13E0000 		.4byte	.LASF96
 17607 0249 05       		.byte	0x5
 17608 024a 00       		.uleb128 0
 17609 024b 551E0000 		.4byte	.LASF97
ARM GAS  /tmp/ccFy9xbE.s 			page 344


 17610 024f 05       		.byte	0x5
 17611 0250 00       		.uleb128 0
 17612 0251 233E0000 		.4byte	.LASF98
 17613 0255 05       		.byte	0x5
 17614 0256 00       		.uleb128 0
 17615 0257 43200000 		.4byte	.LASF99
 17616 025b 05       		.byte	0x5
 17617 025c 00       		.uleb128 0
 17618 025d 96230000 		.4byte	.LASF100
 17619 0261 05       		.byte	0x5
 17620 0262 00       		.uleb128 0
 17621 0263 64160000 		.4byte	.LASF101
 17622 0267 05       		.byte	0x5
 17623 0268 00       		.uleb128 0
 17624 0269 7D130000 		.4byte	.LASF102
 17625 026d 05       		.byte	0x5
 17626 026e 00       		.uleb128 0
 17627 026f 611F0000 		.4byte	.LASF103
 17628 0273 05       		.byte	0x5
 17629 0274 00       		.uleb128 0
 17630 0275 161C0000 		.4byte	.LASF104
 17631 0279 05       		.byte	0x5
 17632 027a 00       		.uleb128 0
 17633 027b 7E1C0000 		.4byte	.LASF105
 17634 027f 05       		.byte	0x5
 17635 0280 00       		.uleb128 0
 17636 0281 94300000 		.4byte	.LASF106
 17637 0285 05       		.byte	0x5
 17638 0286 00       		.uleb128 0
 17639 0287 96430000 		.4byte	.LASF107
 17640 028b 05       		.byte	0x5
 17641 028c 00       		.uleb128 0
 17642 028d 10170000 		.4byte	.LASF108
 17643 0291 05       		.byte	0x5
 17644 0292 00       		.uleb128 0
 17645 0293 05360000 		.4byte	.LASF109
 17646 0297 05       		.byte	0x5
 17647 0298 00       		.uleb128 0
 17648 0299 FA1A0000 		.4byte	.LASF110
 17649 029d 05       		.byte	0x5
 17650 029e 00       		.uleb128 0
 17651 029f AE100000 		.4byte	.LASF111
 17652 02a3 05       		.byte	0x5
 17653 02a4 00       		.uleb128 0
 17654 02a5 E2150000 		.4byte	.LASF112
 17655 02a9 05       		.byte	0x5
 17656 02aa 00       		.uleb128 0
 17657 02ab 310F0000 		.4byte	.LASF113
 17658 02af 05       		.byte	0x5
 17659 02b0 00       		.uleb128 0
 17660 02b1 A6200000 		.4byte	.LASF114
 17661 02b5 05       		.byte	0x5
 17662 02b6 00       		.uleb128 0
 17663 02b7 803B0000 		.4byte	.LASF115
 17664 02bb 05       		.byte	0x5
 17665 02bc 00       		.uleb128 0
 17666 02bd 071E0000 		.4byte	.LASF116
ARM GAS  /tmp/ccFy9xbE.s 			page 345


 17667 02c1 05       		.byte	0x5
 17668 02c2 00       		.uleb128 0
 17669 02c3 4A1A0000 		.4byte	.LASF117
 17670 02c7 05       		.byte	0x5
 17671 02c8 00       		.uleb128 0
 17672 02c9 E0040000 		.4byte	.LASF118
 17673 02cd 05       		.byte	0x5
 17674 02ce 00       		.uleb128 0
 17675 02cf C9110000 		.4byte	.LASF119
 17676 02d3 05       		.byte	0x5
 17677 02d4 00       		.uleb128 0
 17678 02d5 773C0000 		.4byte	.LASF120
 17679 02d9 05       		.byte	0x5
 17680 02da 00       		.uleb128 0
 17681 02db 721D0000 		.4byte	.LASF121
 17682 02df 05       		.byte	0x5
 17683 02e0 00       		.uleb128 0
 17684 02e1 78170000 		.4byte	.LASF122
 17685 02e5 05       		.byte	0x5
 17686 02e6 00       		.uleb128 0
 17687 02e7 B3320000 		.4byte	.LASF123
 17688 02eb 05       		.byte	0x5
 17689 02ec 00       		.uleb128 0
 17690 02ed 3A320000 		.4byte	.LASF124
 17691 02f1 05       		.byte	0x5
 17692 02f2 00       		.uleb128 0
 17693 02f3 E83F0000 		.4byte	.LASF125
 17694 02f7 05       		.byte	0x5
 17695 02f8 00       		.uleb128 0
 17696 02f9 6F2B0000 		.4byte	.LASF126
 17697 02fd 05       		.byte	0x5
 17698 02fe 00       		.uleb128 0
 17699 02ff 5C350000 		.4byte	.LASF127
 17700 0303 05       		.byte	0x5
 17701 0304 00       		.uleb128 0
 17702 0305 66090000 		.4byte	.LASF128
 17703 0309 05       		.byte	0x5
 17704 030a 00       		.uleb128 0
 17705 030b 4C130000 		.4byte	.LASF129
 17706 030f 05       		.byte	0x5
 17707 0310 00       		.uleb128 0
 17708 0311 4D400000 		.4byte	.LASF130
 17709 0315 05       		.byte	0x5
 17710 0316 00       		.uleb128 0
 17711 0317 640B0000 		.4byte	.LASF131
 17712 031b 05       		.byte	0x5
 17713 031c 00       		.uleb128 0
 17714 031d C8070000 		.4byte	.LASF132
 17715 0321 05       		.byte	0x5
 17716 0322 00       		.uleb128 0
 17717 0323 1A090000 		.4byte	.LASF133
 17718 0327 05       		.byte	0x5
 17719 0328 00       		.uleb128 0
 17720 0329 D2090000 		.4byte	.LASF134
 17721 032d 05       		.byte	0x5
 17722 032e 00       		.uleb128 0
 17723 032f 9F0E0000 		.4byte	.LASF135
ARM GAS  /tmp/ccFy9xbE.s 			page 346


 17724 0333 05       		.byte	0x5
 17725 0334 00       		.uleb128 0
 17726 0335 82180000 		.4byte	.LASF136
 17727 0339 05       		.byte	0x5
 17728 033a 00       		.uleb128 0
 17729 033b 150A0000 		.4byte	.LASF137
 17730 033f 05       		.byte	0x5
 17731 0340 00       		.uleb128 0
 17732 0341 57260000 		.4byte	.LASF138
 17733 0345 05       		.byte	0x5
 17734 0346 00       		.uleb128 0
 17735 0347 0F070000 		.4byte	.LASF139
 17736 034b 05       		.byte	0x5
 17737 034c 00       		.uleb128 0
 17738 034d DF2B0000 		.4byte	.LASF140
 17739 0351 05       		.byte	0x5
 17740 0352 00       		.uleb128 0
 17741 0353 E81E0000 		.4byte	.LASF141
 17742 0357 05       		.byte	0x5
 17743 0358 00       		.uleb128 0
 17744 0359 102B0000 		.4byte	.LASF142
 17745 035d 05       		.byte	0x5
 17746 035e 00       		.uleb128 0
 17747 035f 961F0000 		.4byte	.LASF143
 17748 0363 05       		.byte	0x5
 17749 0364 00       		.uleb128 0
 17750 0365 2F1B0000 		.4byte	.LASF144
 17751 0369 05       		.byte	0x5
 17752 036a 00       		.uleb128 0
 17753 036b 64250000 		.4byte	.LASF145
 17754 036f 05       		.byte	0x5
 17755 0370 00       		.uleb128 0
 17756 0371 52220000 		.4byte	.LASF146
 17757 0375 05       		.byte	0x5
 17758 0376 00       		.uleb128 0
 17759 0377 22120000 		.4byte	.LASF147
 17760 037b 05       		.byte	0x5
 17761 037c 00       		.uleb128 0
 17762 037d 75270000 		.4byte	.LASF148
 17763 0381 05       		.byte	0x5
 17764 0382 00       		.uleb128 0
 17765 0383 59100000 		.4byte	.LASF149
 17766 0387 05       		.byte	0x5
 17767 0388 00       		.uleb128 0
 17768 0389 BF0E0000 		.4byte	.LASF150
 17769 038d 05       		.byte	0x5
 17770 038e 00       		.uleb128 0
 17771 038f EE120000 		.4byte	.LASF151
 17772 0393 05       		.byte	0x5
 17773 0394 00       		.uleb128 0
 17774 0395 8C100000 		.4byte	.LASF152
 17775 0399 05       		.byte	0x5
 17776 039a 00       		.uleb128 0
 17777 039b 4B240000 		.4byte	.LASF153
 17778 039f 05       		.byte	0x5
 17779 03a0 00       		.uleb128 0
 17780 03a1 34330000 		.4byte	.LASF154
ARM GAS  /tmp/ccFy9xbE.s 			page 347


 17781 03a5 05       		.byte	0x5
 17782 03a6 00       		.uleb128 0
 17783 03a7 77150000 		.4byte	.LASF155
 17784 03ab 05       		.byte	0x5
 17785 03ac 00       		.uleb128 0
 17786 03ad BB170000 		.4byte	.LASF156
 17787 03b1 05       		.byte	0x5
 17788 03b2 00       		.uleb128 0
 17789 03b3 2B170000 		.4byte	.LASF157
 17790 03b7 05       		.byte	0x5
 17791 03b8 00       		.uleb128 0
 17792 03b9 F2030000 		.4byte	.LASF158
 17793 03bd 05       		.byte	0x5
 17794 03be 00       		.uleb128 0
 17795 03bf 201E0000 		.4byte	.LASF159
 17796 03c3 05       		.byte	0x5
 17797 03c4 00       		.uleb128 0
 17798 03c5 D02D0000 		.4byte	.LASF160
 17799 03c9 05       		.byte	0x5
 17800 03ca 00       		.uleb128 0
 17801 03cb 911A0000 		.4byte	.LASF161
 17802 03cf 05       		.byte	0x5
 17803 03d0 00       		.uleb128 0
 17804 03d1 3B470000 		.4byte	.LASF162
 17805 03d5 05       		.byte	0x5
 17806 03d6 00       		.uleb128 0
 17807 03d7 F63A0000 		.4byte	.LASF163
 17808 03db 05       		.byte	0x5
 17809 03dc 00       		.uleb128 0
 17810 03dd 09310000 		.4byte	.LASF164
 17811 03e1 05       		.byte	0x5
 17812 03e2 00       		.uleb128 0
 17813 03e3 29080000 		.4byte	.LASF165
 17814 03e7 05       		.byte	0x5
 17815 03e8 00       		.uleb128 0
 17816 03e9 1B220000 		.4byte	.LASF166
 17817 03ed 05       		.byte	0x5
 17818 03ee 00       		.uleb128 0
 17819 03ef D5020000 		.4byte	.LASF167
 17820 03f3 05       		.byte	0x5
 17821 03f4 00       		.uleb128 0
 17822 03f5 E03D0000 		.4byte	.LASF168
 17823 03f9 05       		.byte	0x5
 17824 03fa 00       		.uleb128 0
 17825 03fb DA430000 		.4byte	.LASF169
 17826 03ff 05       		.byte	0x5
 17827 0400 00       		.uleb128 0
 17828 0401 81290000 		.4byte	.LASF170
 17829 0405 05       		.byte	0x5
 17830 0406 00       		.uleb128 0
 17831 0407 A60B0000 		.4byte	.LASF171
 17832 040b 05       		.byte	0x5
 17833 040c 00       		.uleb128 0
 17834 040d 941D0000 		.4byte	.LASF172
 17835 0411 05       		.byte	0x5
 17836 0412 00       		.uleb128 0
 17837 0413 E1290000 		.4byte	.LASF173
ARM GAS  /tmp/ccFy9xbE.s 			page 348


 17838 0417 05       		.byte	0x5
 17839 0418 00       		.uleb128 0
 17840 0419 BD160000 		.4byte	.LASF174
 17841 041d 05       		.byte	0x5
 17842 041e 00       		.uleb128 0
 17843 041f F33C0000 		.4byte	.LASF175
 17844 0423 05       		.byte	0x5
 17845 0424 00       		.uleb128 0
 17846 0425 B0390000 		.4byte	.LASF176
 17847 0429 05       		.byte	0x5
 17848 042a 00       		.uleb128 0
 17849 042b A3040000 		.4byte	.LASF177
 17850 042f 05       		.byte	0x5
 17851 0430 00       		.uleb128 0
 17852 0431 C8420000 		.4byte	.LASF178
 17853 0435 05       		.byte	0x5
 17854 0436 00       		.uleb128 0
 17855 0437 8A040000 		.4byte	.LASF179
 17856 043b 05       		.byte	0x5
 17857 043c 00       		.uleb128 0
 17858 043d AB3B0000 		.4byte	.LASF180
 17859 0441 05       		.byte	0x5
 17860 0442 00       		.uleb128 0
 17861 0443 77160000 		.4byte	.LASF181
 17862 0447 05       		.byte	0x5
 17863 0448 00       		.uleb128 0
 17864 0449 B5290000 		.4byte	.LASF182
 17865 044d 05       		.byte	0x5
 17866 044e 00       		.uleb128 0
 17867 044f 00000000 		.4byte	.LASF183
 17868 0453 05       		.byte	0x5
 17869 0454 00       		.uleb128 0
 17870 0455 9D3F0000 		.4byte	.LASF184
 17871 0459 05       		.byte	0x5
 17872 045a 00       		.uleb128 0
 17873 045b 1A250000 		.4byte	.LASF185
 17874 045f 05       		.byte	0x5
 17875 0460 00       		.uleb128 0
 17876 0461 272F0000 		.4byte	.LASF186
 17877 0465 05       		.byte	0x5
 17878 0466 00       		.uleb128 0
 17879 0467 C63B0000 		.4byte	.LASF187
 17880 046b 05       		.byte	0x5
 17881 046c 00       		.uleb128 0
 17882 046d F6150000 		.4byte	.LASF188
 17883 0471 05       		.byte	0x5
 17884 0472 00       		.uleb128 0
 17885 0473 69230000 		.4byte	.LASF189
 17886 0477 05       		.byte	0x5
 17887 0478 00       		.uleb128 0
 17888 0479 C3310000 		.4byte	.LASF190
 17889 047d 05       		.byte	0x5
 17890 047e 00       		.uleb128 0
 17891 047f 64190000 		.4byte	.LASF191
 17892 0483 05       		.byte	0x5
 17893 0484 00       		.uleb128 0
 17894 0485 BA250000 		.4byte	.LASF192
ARM GAS  /tmp/ccFy9xbE.s 			page 349


 17895 0489 05       		.byte	0x5
 17896 048a 00       		.uleb128 0
 17897 048b 02210000 		.4byte	.LASF193
 17898 048f 05       		.byte	0x5
 17899 0490 00       		.uleb128 0
 17900 0491 44310000 		.4byte	.LASF194
 17901 0495 05       		.byte	0x5
 17902 0496 00       		.uleb128 0
 17903 0497 3A070000 		.4byte	.LASF195
 17904 049b 05       		.byte	0x5
 17905 049c 00       		.uleb128 0
 17906 049d C22E0000 		.4byte	.LASF196
 17907 04a1 05       		.byte	0x5
 17908 04a2 00       		.uleb128 0
 17909 04a3 310D0000 		.4byte	.LASF197
 17910 04a7 05       		.byte	0x5
 17911 04a8 00       		.uleb128 0
 17912 04a9 A9060000 		.4byte	.LASF198
 17913 04ad 05       		.byte	0x5
 17914 04ae 00       		.uleb128 0
 17915 04af 72040000 		.4byte	.LASF199
 17916 04b3 05       		.byte	0x5
 17917 04b4 00       		.uleb128 0
 17918 04b5 CE3A0000 		.4byte	.LASF200
 17919 04b9 05       		.byte	0x5
 17920 04ba 00       		.uleb128 0
 17921 04bb C3460000 		.4byte	.LASF201
 17922 04bf 05       		.byte	0x5
 17923 04c0 00       		.uleb128 0
 17924 04c1 21040000 		.4byte	.LASF202
 17925 04c5 05       		.byte	0x5
 17926 04c6 00       		.uleb128 0
 17927 04c7 B5280000 		.4byte	.LASF203
 17928 04cb 05       		.byte	0x5
 17929 04cc 00       		.uleb128 0
 17930 04cd 2D210000 		.4byte	.LASF204
 17931 04d1 05       		.byte	0x5
 17932 04d2 00       		.uleb128 0
 17933 04d3 05400000 		.4byte	.LASF205
 17934 04d7 05       		.byte	0x5
 17935 04d8 00       		.uleb128 0
 17936 04d9 32440000 		.4byte	.LASF206
 17937 04dd 05       		.byte	0x5
 17938 04de 00       		.uleb128 0
 17939 04df 4A190000 		.4byte	.LASF207
 17940 04e3 05       		.byte	0x5
 17941 04e4 00       		.uleb128 0
 17942 04e5 FC060000 		.4byte	.LASF208
 17943 04e9 05       		.byte	0x5
 17944 04ea 00       		.uleb128 0
 17945 04eb 653D0000 		.4byte	.LASF209
 17946 04ef 05       		.byte	0x5
 17947 04f0 00       		.uleb128 0
 17948 04f1 6C430000 		.4byte	.LASF210
 17949 04f5 05       		.byte	0x5
 17950 04f6 00       		.uleb128 0
 17951 04f7 EB080000 		.4byte	.LASF211
ARM GAS  /tmp/ccFy9xbE.s 			page 350


 17952 04fb 05       		.byte	0x5
 17953 04fc 00       		.uleb128 0
 17954 04fd 92070000 		.4byte	.LASF212
 17955 0501 05       		.byte	0x5
 17956 0502 00       		.uleb128 0
 17957 0503 D9260000 		.4byte	.LASF213
 17958 0507 05       		.byte	0x5
 17959 0508 00       		.uleb128 0
 17960 0509 610C0000 		.4byte	.LASF214
 17961 050d 05       		.byte	0x5
 17962 050e 00       		.uleb128 0
 17963 050f EA010000 		.4byte	.LASF215
 17964 0513 05       		.byte	0x5
 17965 0514 00       		.uleb128 0
 17966 0515 08050000 		.4byte	.LASF216
 17967 0519 05       		.byte	0x5
 17968 051a 00       		.uleb128 0
 17969 051b 15230000 		.4byte	.LASF217
 17970 051f 05       		.byte	0x5
 17971 0520 00       		.uleb128 0
 17972 0521 02270000 		.4byte	.LASF218
 17973 0525 05       		.byte	0x5
 17974 0526 00       		.uleb128 0
 17975 0527 C93E0000 		.4byte	.LASF219
 17976 052b 05       		.byte	0x5
 17977 052c 00       		.uleb128 0
 17978 052d 22000000 		.4byte	.LASF220
 17979 0531 05       		.byte	0x5
 17980 0532 00       		.uleb128 0
 17981 0533 C52A0000 		.4byte	.LASF221
 17982 0537 05       		.byte	0x5
 17983 0538 00       		.uleb128 0
 17984 0539 9F000000 		.4byte	.LASF222
 17985 053d 05       		.byte	0x5
 17986 053e 00       		.uleb128 0
 17987 053f 622A0000 		.4byte	.LASF223
 17988 0543 05       		.byte	0x5
 17989 0544 00       		.uleb128 0
 17990 0545 FE450000 		.4byte	.LASF224
 17991 0549 05       		.byte	0x5
 17992 054a 00       		.uleb128 0
 17993 054b 22350000 		.4byte	.LASF225
 17994 054f 05       		.byte	0x5
 17995 0550 00       		.uleb128 0
 17996 0551 8E2D0000 		.4byte	.LASF226
 17997 0555 05       		.byte	0x5
 17998 0556 00       		.uleb128 0
 17999 0557 72050000 		.4byte	.LASF227
 18000 055b 05       		.byte	0x5
 18001 055c 00       		.uleb128 0
 18002 055d 361D0000 		.4byte	.LASF228
 18003 0561 05       		.byte	0x5
 18004 0562 00       		.uleb128 0
 18005 0563 A5190000 		.4byte	.LASF229
 18006 0567 05       		.byte	0x5
 18007 0568 00       		.uleb128 0
 18008 0569 8C0B0000 		.4byte	.LASF230
ARM GAS  /tmp/ccFy9xbE.s 			page 351


 18009 056d 05       		.byte	0x5
 18010 056e 00       		.uleb128 0
 18011 056f C3370000 		.4byte	.LASF231
 18012 0573 05       		.byte	0x5
 18013 0574 00       		.uleb128 0
 18014 0575 642E0000 		.4byte	.LASF232
 18015 0579 05       		.byte	0x5
 18016 057a 00       		.uleb128 0
 18017 057b 94260000 		.4byte	.LASF233
 18018 057f 05       		.byte	0x5
 18019 0580 00       		.uleb128 0
 18020 0581 F00B0000 		.4byte	.LASF234
 18021 0585 05       		.byte	0x5
 18022 0586 00       		.uleb128 0
 18023 0587 B1120000 		.4byte	.LASF235
 18024 058b 05       		.byte	0x5
 18025 058c 00       		.uleb128 0
 18026 058d 1C400000 		.4byte	.LASF236
 18027 0591 05       		.byte	0x5
 18028 0592 00       		.uleb128 0
 18029 0593 990A0000 		.4byte	.LASF237
 18030 0597 05       		.byte	0x5
 18031 0598 00       		.uleb128 0
 18032 0599 D50B0000 		.4byte	.LASF238
 18033 059d 05       		.byte	0x5
 18034 059e 00       		.uleb128 0
 18035 059f 5C030000 		.4byte	.LASF239
 18036 05a3 05       		.byte	0x5
 18037 05a4 00       		.uleb128 0
 18038 05a5 7C280000 		.4byte	.LASF240
 18039 05a9 05       		.byte	0x5
 18040 05aa 00       		.uleb128 0
 18041 05ab 971E0000 		.4byte	.LASF241
 18042 05af 05       		.byte	0x5
 18043 05b0 00       		.uleb128 0
 18044 05b1 E5450000 		.4byte	.LASF242
 18045 05b5 05       		.byte	0x5
 18046 05b6 00       		.uleb128 0
 18047 05b7 04080000 		.4byte	.LASF243
 18048 05bb 05       		.byte	0x5
 18049 05bc 00       		.uleb128 0
 18050 05bd AC1B0000 		.4byte	.LASF244
 18051 05c1 05       		.byte	0x5
 18052 05c2 00       		.uleb128 0
 18053 05c3 CF150000 		.4byte	.LASF245
 18054 05c7 05       		.byte	0x5
 18055 05c8 00       		.uleb128 0
 18056 05c9 2C160000 		.4byte	.LASF246
 18057 05cd 05       		.byte	0x5
 18058 05ce 00       		.uleb128 0
 18059 05cf E1060000 		.4byte	.LASF247
 18060 05d3 05       		.byte	0x5
 18061 05d4 00       		.uleb128 0
 18062 05d5 7D1B0000 		.4byte	.LASF248
 18063 05d9 05       		.byte	0x5
 18064 05da 00       		.uleb128 0
 18065 05db 54110000 		.4byte	.LASF249
ARM GAS  /tmp/ccFy9xbE.s 			page 352


 18066 05df 05       		.byte	0x5
 18067 05e0 00       		.uleb128 0
 18068 05e1 DE320000 		.4byte	.LASF250
 18069 05e5 05       		.byte	0x5
 18070 05e6 00       		.uleb128 0
 18071 05e7 EC020000 		.4byte	.LASF251
 18072 05eb 05       		.byte	0x5
 18073 05ec 00       		.uleb128 0
 18074 05ed 04130000 		.4byte	.LASF252
 18075 05f1 05       		.byte	0x5
 18076 05f2 00       		.uleb128 0
 18077 05f3 FE3B0000 		.4byte	.LASF253
 18078 05f7 05       		.byte	0x5
 18079 05f8 00       		.uleb128 0
 18080 05f9 4D290000 		.4byte	.LASF254
 18081 05fd 05       		.byte	0x5
 18082 05fe 00       		.uleb128 0
 18083 05ff 5F300000 		.4byte	.LASF255
 18084 0603 05       		.byte	0x5
 18085 0604 00       		.uleb128 0
 18086 0605 460A0000 		.4byte	.LASF256
 18087 0609 05       		.byte	0x5
 18088 060a 00       		.uleb128 0
 18089 060b 16280000 		.4byte	.LASF257
 18090 060f 05       		.byte	0x5
 18091 0610 00       		.uleb128 0
 18092 0611 9A240000 		.4byte	.LASF258
 18093 0615 05       		.byte	0x5
 18094 0616 00       		.uleb128 0
 18095 0617 D7270000 		.4byte	.LASF259
 18096 061b 05       		.byte	0x5
 18097 061c 00       		.uleb128 0
 18098 061d A2300000 		.4byte	.LASF260
 18099 0621 05       		.byte	0x5
 18100 0622 00       		.uleb128 0
 18101 0623 E91D0000 		.4byte	.LASF261
 18102 0627 05       		.byte	0x5
 18103 0628 00       		.uleb128 0
 18104 0629 452C0000 		.4byte	.LASF262
 18105 062d 05       		.byte	0x5
 18106 062e 00       		.uleb128 0
 18107 062f 1D2E0000 		.4byte	.LASF263
 18108 0633 05       		.byte	0x5
 18109 0634 00       		.uleb128 0
 18110 0635 7E070000 		.4byte	.LASF264
 18111 0639 05       		.byte	0x5
 18112 063a 00       		.uleb128 0
 18113 063b 4F470000 		.4byte	.LASF265
 18114 063f 05       		.byte	0x5
 18115 0640 00       		.uleb128 0
 18116 0641 8A3E0000 		.4byte	.LASF266
 18117 0645 05       		.byte	0x5
 18118 0646 00       		.uleb128 0
 18119 0647 8B340000 		.4byte	.LASF267
 18120 064b 05       		.byte	0x5
 18121 064c 00       		.uleb128 0
 18122 064d 053B0000 		.4byte	.LASF268
ARM GAS  /tmp/ccFy9xbE.s 			page 353


 18123 0651 05       		.byte	0x5
 18124 0652 00       		.uleb128 0
 18125 0653 1E440000 		.4byte	.LASF269
 18126 0657 05       		.byte	0x5
 18127 0658 00       		.uleb128 0
 18128 0659 F2410000 		.4byte	.LASF270
 18129 065d 05       		.byte	0x5
 18130 065e 00       		.uleb128 0
 18131 065f 94090000 		.4byte	.LASF271
 18132 0663 05       		.byte	0x5
 18133 0664 00       		.uleb128 0
 18134 0665 E5390000 		.4byte	.LASF272
 18135 0669 05       		.byte	0x5
 18136 066a 00       		.uleb128 0
 18137 066b C6450000 		.4byte	.LASF273
 18138 066f 05       		.byte	0x5
 18139 0670 00       		.uleb128 0
 18140 0671 18060000 		.4byte	.LASF274
 18141 0675 05       		.byte	0x5
 18142 0676 00       		.uleb128 0
 18143 0677 CD230000 		.4byte	.LASF275
 18144 067b 05       		.byte	0x5
 18145 067c 00       		.uleb128 0
 18146 067d 82410000 		.4byte	.LASF276
 18147 0681 05       		.byte	0x5
 18148 0682 00       		.uleb128 0
 18149 0683 930D0000 		.4byte	.LASF277
 18150 0687 05       		.byte	0x5
 18151 0688 00       		.uleb128 0
 18152 0689 303F0000 		.4byte	.LASF278
 18153 068d 05       		.byte	0x5
 18154 068e 00       		.uleb128 0
 18155 068f F9310000 		.4byte	.LASF279
 18156 0693 05       		.byte	0x5
 18157 0694 00       		.uleb128 0
 18158 0695 1A340000 		.4byte	.LASF280
 18159 0699 05       		.byte	0x5
 18160 069a 00       		.uleb128 0
 18161 069b 57010000 		.4byte	.LASF281
 18162 069f 05       		.byte	0x5
 18163 06a0 00       		.uleb128 0
 18164 06a1 5B3A0000 		.4byte	.LASF282
 18165 06a5 05       		.byte	0x5
 18166 06a6 00       		.uleb128 0
 18167 06a7 05420000 		.4byte	.LASF283
 18168 06ab 05       		.byte	0x5
 18169 06ac 00       		.uleb128 0
 18170 06ad CB180000 		.4byte	.LASF284
 18171 06b1 05       		.byte	0x5
 18172 06b2 00       		.uleb128 0
 18173 06b3 7C2A0000 		.4byte	.LASF285
 18174 06b7 05       		.byte	0x5
 18175 06b8 00       		.uleb128 0
 18176 06b9 5B040000 		.4byte	.LASF286
 18177 06bd 05       		.byte	0x5
 18178 06be 00       		.uleb128 0
 18179 06bf 3F030000 		.4byte	.LASF287
ARM GAS  /tmp/ccFy9xbE.s 			page 354


 18180 06c3 05       		.byte	0x5
 18181 06c4 00       		.uleb128 0
 18182 06c5 92390000 		.4byte	.LASF288
 18183 06c9 05       		.byte	0x5
 18184 06ca 00       		.uleb128 0
 18185 06cb 090B0000 		.4byte	.LASF289
 18186 06cf 05       		.byte	0x5
 18187 06d0 00       		.uleb128 0
 18188 06d1 E2170000 		.4byte	.LASF290
 18189 06d5 05       		.byte	0x5
 18190 06d6 00       		.uleb128 0
 18191 06d7 69020000 		.4byte	.LASF291
 18192 06db 05       		.byte	0x5
 18193 06dc 00       		.uleb128 0
 18194 06dd 371E0000 		.4byte	.LASF292
 18195 06e1 05       		.byte	0x5
 18196 06e2 00       		.uleb128 0
 18197 06e3 8E420000 		.4byte	.LASF293
 18198 06e7 05       		.byte	0x5
 18199 06e8 00       		.uleb128 0
 18200 06e9 87240000 		.4byte	.LASF294
 18201 06ed 05       		.byte	0x5
 18202 06ee 00       		.uleb128 0
 18203 06ef 280B0000 		.4byte	.LASF295
 18204 06f3 05       		.byte	0x5
 18205 06f4 00       		.uleb128 0
 18206 06f5 9B170000 		.4byte	.LASF296
 18207 06f9 05       		.byte	0x5
 18208 06fa 00       		.uleb128 0
 18209 06fb D9220000 		.4byte	.LASF297
 18210 06ff 05       		.byte	0x5
 18211 0700 00       		.uleb128 0
 18212 0701 2E180000 		.4byte	.LASF298
 18213 0705 05       		.byte	0x5
 18214 0706 00       		.uleb128 0
 18215 0707 18190000 		.4byte	.LASF299
 18216 070b 05       		.byte	0x5
 18217 070c 00       		.uleb128 0
 18218 070d 53090000 		.4byte	.LASF300
 18219 0711 05       		.byte	0x5
 18220 0712 00       		.uleb128 0
 18221 0713 B53F0000 		.4byte	.LASF301
 18222 0717 05       		.byte	0x5
 18223 0718 00       		.uleb128 0
 18224 0719 31050000 		.4byte	.LASF302
 18225 071d 05       		.byte	0x5
 18226 071e 00       		.uleb128 0
 18227 071f 05010000 		.4byte	.LASF303
 18228 0723 05       		.byte	0x5
 18229 0724 00       		.uleb128 0
 18230 0725 3B020000 		.4byte	.LASF304
 18231 0729 05       		.byte	0x5
 18232 072a 00       		.uleb128 0
 18233 072b 8B330000 		.4byte	.LASF305
 18234 072f 05       		.byte	0x5
 18235 0730 00       		.uleb128 0
 18236 0731 F5240000 		.4byte	.LASF306
ARM GAS  /tmp/ccFy9xbE.s 			page 355


 18237 0735 05       		.byte	0x5
 18238 0736 00       		.uleb128 0
 18239 0737 DB350000 		.4byte	.LASF307
 18240 073b 05       		.byte	0x5
 18241 073c 00       		.uleb128 0
 18242 073d A9420000 		.4byte	.LASF308
 18243 0741 05       		.byte	0x5
 18244 0742 00       		.uleb128 0
 18245 0743 60380000 		.4byte	.LASF309
 18246 0747 05       		.byte	0x5
 18247 0748 00       		.uleb128 0
 18248 0749 2A200000 		.4byte	.LASF310
 18249 074d 05       		.byte	0x5
 18250 074e 00       		.uleb128 0
 18251 074f D2000000 		.4byte	.LASF311
 18252 0753 05       		.byte	0x5
 18253 0754 00       		.uleb128 0
 18254 0755 BF1B0000 		.4byte	.LASF312
 18255 0759 05       		.byte	0x5
 18256 075a 00       		.uleb128 0
 18257 075b 66110000 		.4byte	.LASF313
 18258 075f 05       		.byte	0x5
 18259 0760 00       		.uleb128 0
 18260 0761 CF130000 		.4byte	.LASF314
 18261 0765 05       		.byte	0x5
 18262 0766 00       		.uleb128 0
 18263 0767 DC2A0000 		.4byte	.LASF315
 18264 076b 05       		.byte	0x5
 18265 076c 00       		.uleb128 0
 18266 076d 34400000 		.4byte	.LASF316
 18267 0771 05       		.byte	0x5
 18268 0772 00       		.uleb128 0
 18269 0773 13030000 		.4byte	.LASF317
 18270 0777 05       		.byte	0x5
 18271 0778 00       		.uleb128 0
 18272 0779 C9330000 		.4byte	.LASF318
 18273 077d 05       		.byte	0x5
 18274 077e 00       		.uleb128 0
 18275 077f 603E0000 		.4byte	.LASF319
 18276 0783 05       		.byte	0x5
 18277 0784 00       		.uleb128 0
 18278 0785 52380000 		.4byte	.LASF320
 18279 0789 05       		.byte	0x5
 18280 078a 00       		.uleb128 0
 18281 078b 90440000 		.4byte	.LASF321
 18282 078f 05       		.byte	0x5
 18283 0790 00       		.uleb128 0
 18284 0791 96460000 		.4byte	.LASF322
 18285 0795 05       		.byte	0x5
 18286 0796 00       		.uleb128 0
 18287 0797 80080000 		.4byte	.LASF323
 18288 079b 05       		.byte	0x5
 18289 079c 00       		.uleb128 0
 18290 079d A7030000 		.4byte	.LASF324
 18291 07a1 05       		.byte	0x5
 18292 07a2 00       		.uleb128 0
 18293 07a3 FB330000 		.4byte	.LASF325
ARM GAS  /tmp/ccFy9xbE.s 			page 356


 18294 07a7 05       		.byte	0x5
 18295 07a8 00       		.uleb128 0
 18296 07a9 76360000 		.4byte	.LASF326
 18297 07ad 05       		.byte	0x5
 18298 07ae 00       		.uleb128 0
 18299 07af 93130000 		.4byte	.LASF327
 18300 07b3 05       		.byte	0x5
 18301 07b4 00       		.uleb128 0
 18302 07b5 C2080000 		.4byte	.LASF328
 18303 07b9 05       		.byte	0x5
 18304 07ba 00       		.uleb128 0
 18305 07bb B82B0000 		.4byte	.LASF329
 18306 07bf 05       		.byte	0x5
 18307 07c0 00       		.uleb128 0
 18308 07c1 C8240000 		.4byte	.LASF330
 18309 07c5 05       		.byte	0x5
 18310 07c6 00       		.uleb128 0
 18311 07c7 DB080000 		.4byte	.LASF331
 18312 07cb 05       		.byte	0x5
 18313 07cc 00       		.uleb128 0
 18314 07cd 39340000 		.4byte	.LASF332
 18315 07d1 05       		.byte	0x5
 18316 07d2 00       		.uleb128 0
 18317 07d3 A3130000 		.4byte	.LASF333
 18318 07d7 05       		.byte	0x5
 18319 07d8 00       		.uleb128 0
 18320 07d9 A1380000 		.4byte	.LASF334
 18321 07dd 05       		.byte	0x5
 18322 07de 00       		.uleb128 0
 18323 07df 71290000 		.4byte	.LASF335
 18324 07e3 05       		.byte	0x5
 18325 07e4 00       		.uleb128 0
 18326 07e5 77220000 		.4byte	.LASF336
 18327 07e9 05       		.byte	0x5
 18328 07ea 00       		.uleb128 0
 18329 07eb 34350000 		.4byte	.LASF337
 18330 07ef 05       		.byte	0x5
 18331 07f0 00       		.uleb128 0
 18332 07f1 72370000 		.4byte	.LASF338
 18333 07f5 05       		.byte	0x5
 18334 07f6 00       		.uleb128 0
 18335 07f7 9B150000 		.4byte	.LASF339
 18336 07fb 05       		.byte	0x5
 18337 07fc 00       		.uleb128 0
 18338 07fd 49260000 		.4byte	.LASF340
 18339 0801 05       		.byte	0x5
 18340 0802 00       		.uleb128 0
 18341 0803 A3370000 		.4byte	.LASF341
 18342 0807 05       		.byte	0x5
 18343 0808 00       		.uleb128 0
 18344 0809 C71E0000 		.4byte	.LASF342
 18345 080d 05       		.byte	0x5
 18346 080e 00       		.uleb128 0
 18347 080f FB160000 		.4byte	.LASF343
 18348 0813 05       		.byte	0x5
 18349 0814 00       		.uleb128 0
 18350 0815 6F460000 		.4byte	.LASF344
ARM GAS  /tmp/ccFy9xbE.s 			page 357


 18351 0819 05       		.byte	0x5
 18352 081a 00       		.uleb128 0
 18353 081b 7C190000 		.4byte	.LASF345
 18354 081f 05       		.byte	0x5
 18355 0820 00       		.uleb128 0
 18356 0821 982F0000 		.4byte	.LASF346
 18357 0825 05       		.byte	0x5
 18358 0826 00       		.uleb128 0
 18359 0827 13000000 		.4byte	.LASF347
 18360 082b 05       		.byte	0x5
 18361 082c 00       		.uleb128 0
 18362 082d 7F420000 		.4byte	.LASF348
 18363 0831 05       		.byte	0x5
 18364 0832 00       		.uleb128 0
 18365 0833 622D0000 		.4byte	.LASF349
 18366 0837 05       		.byte	0x5
 18367 0838 00       		.uleb128 0
 18368 0839 D1140000 		.4byte	.LASF350
 18369 083d 05       		.byte	0x5
 18370 083e 00       		.uleb128 0
 18371 083f 450C0000 		.4byte	.LASF351
 18372 0843 05       		.byte	0x5
 18373 0844 00       		.uleb128 0
 18374 0845 A03C0000 		.4byte	.LASF352
 18375 0849 05       		.byte	0x5
 18376 084a 00       		.uleb128 0
 18377 084b B2080000 		.4byte	.LASF353
 18378 084f 05       		.byte	0x5
 18379 0850 00       		.uleb128 0
 18380 0851 F53E0000 		.4byte	.LASF354
 18381 0855 05       		.byte	0x5
 18382 0856 00       		.uleb128 0
 18383 0857 B93A0000 		.4byte	.LASF355
 18384 085b 05       		.byte	0x5
 18385 085c 00       		.uleb128 0
 18386 085d FF1B0000 		.4byte	.LASF356
 18387 0861 05       		.byte	0x5
 18388 0862 00       		.uleb128 0
 18389 0863 3D110000 		.4byte	.LASF357
 18390 0867 05       		.byte	0x5
 18391 0868 00       		.uleb128 0
 18392 0869 73000000 		.4byte	.LASF358
 18393 086d 05       		.byte	0x5
 18394 086e 00       		.uleb128 0
 18395 086f B1050000 		.4byte	.LASF359
 18396 0873 05       		.byte	0x5
 18397 0874 00       		.uleb128 0
 18398 0875 E1140000 		.4byte	.LASF360
 18399 0879 05       		.byte	0x5
 18400 087a 00       		.uleb128 0
 18401 087b 0B320000 		.4byte	.LASF361
 18402 087f 05       		.byte	0x5
 18403 0880 00       		.uleb128 0
 18404 0881 C70C0000 		.4byte	.LASF362
 18405 0885 05       		.byte	0x5
 18406 0886 00       		.uleb128 0
 18407 0887 E82D0000 		.4byte	.LASF363
ARM GAS  /tmp/ccFy9xbE.s 			page 358


 18408 088b 05       		.byte	0x5
 18409 088c 00       		.uleb128 0
 18410 088d EF210000 		.4byte	.LASF364
 18411 0891 05       		.byte	0x5
 18412 0892 00       		.uleb128 0
 18413 0893 9B110000 		.4byte	.LASF365
 18414 0897 05       		.byte	0x5
 18415 0898 00       		.uleb128 0
 18416 0899 52000000 		.4byte	.LASF366
 18417 089d 05       		.byte	0x5
 18418 089e 00       		.uleb128 0
 18419 089f AC180000 		.4byte	.LASF367
 18420 08a3 05       		.byte	0x5
 18421 08a4 00       		.uleb128 0
 18422 08a5 BC220000 		.4byte	.LASF368
 18423 08a9 05       		.byte	0x5
 18424 08aa 00       		.uleb128 0
 18425 08ab D7240000 		.4byte	.LASF369
 18426 08af 05       		.byte	0x5
 18427 08b0 00       		.uleb128 0
 18428 08b1 6B260000 		.4byte	.LASF370
 18429 08b5 05       		.byte	0x5
 18430 08b6 00       		.uleb128 0
 18431 08b7 F4180000 		.4byte	.LASF371
 18432 08bb 05       		.byte	0x5
 18433 08bc 00       		.uleb128 0
 18434 08bd 961C0000 		.4byte	.LASF372
 18435 08c1 05       		.byte	0x5
 18436 08c2 00       		.uleb128 0
 18437 08c3 D9310000 		.4byte	.LASF373
 18438 08c7 05       		.byte	0x5
 18439 08c8 00       		.uleb128 0
 18440 08c9 671E0000 		.4byte	.LASF374
 18441 08cd 05       		.byte	0x5
 18442 08ce 00       		.uleb128 0
 18443 08cf 91220000 		.4byte	.LASF375
 18444 08d3 05       		.byte	0x5
 18445 08d4 00       		.uleb128 0
 18446 08d5 F9270000 		.4byte	.LASF376
 18447 08d9 05       		.byte	0x5
 18448 08da 00       		.uleb128 0
 18449 08db 513F0000 		.4byte	.LASF377
 18450 08df 05       		.byte	0x5
 18451 08e0 00       		.uleb128 0
 18452 08e1 652C0000 		.4byte	.LASF378
 18453 08e5 05       		.byte	0x5
 18454 08e6 00       		.uleb128 0
 18455 08e7 35380000 		.4byte	.LASF379
 18456 08eb 05       		.byte	0x5
 18457 08ec 00       		.uleb128 0
 18458 08ed B71C0000 		.4byte	.LASF380
 18459 08f1 05       		.byte	0x5
 18460 08f2 00       		.uleb128 0
 18461 08f3 B9230000 		.4byte	.LASF381
 18462 08f7 06       		.byte	0x6
 18463 08f8 00       		.uleb128 0
 18464 08f9 51320000 		.4byte	.LASF382
ARM GAS  /tmp/ccFy9xbE.s 			page 359


 18465 08fd 05       		.byte	0x5
 18466 08fe 00       		.uleb128 0
 18467 08ff 173A0000 		.4byte	.LASF383
 18468 0903 06       		.byte	0x6
 18469 0904 00       		.uleb128 0
 18470 0905 D82F0000 		.4byte	.LASF384
 18471 0909 06       		.byte	0x6
 18472 090a 00       		.uleb128 0
 18473 090b 831E0000 		.4byte	.LASF385
 18474 090f 06       		.byte	0x6
 18475 0910 00       		.uleb128 0
 18476 0911 0A410000 		.4byte	.LASF386
 18477 0915 06       		.byte	0x6
 18478 0916 00       		.uleb128 0
 18479 0917 F31C0000 		.4byte	.LASF387
 18480 091b 05       		.byte	0x5
 18481 091c 00       		.uleb128 0
 18482 091d 71300000 		.4byte	.LASF388
 18483 0921 06       		.byte	0x6
 18484 0922 00       		.uleb128 0
 18485 0923 001F0000 		.4byte	.LASF389
 18486 0927 06       		.byte	0x6
 18487 0928 00       		.uleb128 0
 18488 0929 82250000 		.4byte	.LASF390
 18489 092d 06       		.byte	0x6
 18490 092e 00       		.uleb128 0
 18491 092f 982B0000 		.4byte	.LASF391
 18492 0933 05       		.byte	0x5
 18493 0934 00       		.uleb128 0
 18494 0935 73450000 		.4byte	.LASF392
 18495 0939 05       		.byte	0x5
 18496 093a 00       		.uleb128 0
 18497 093b CC1C0000 		.4byte	.LASF393
 18498 093f 06       		.byte	0x6
 18499 0940 00       		.uleb128 0
 18500 0941 E9380000 		.4byte	.LASF394
 18501 0945 05       		.byte	0x5
 18502 0946 00       		.uleb128 0
 18503 0947 493E0000 		.4byte	.LASF395
 18504 094b 05       		.byte	0x5
 18505 094c 00       		.uleb128 0
 18506 094d 3A2E0000 		.4byte	.LASF396
 18507 0951 05       		.byte	0x5
 18508 0952 00       		.uleb128 0
 18509 0953 1F1D0000 		.4byte	.LASF397
 18510 0957 06       		.byte	0x6
 18511 0958 00       		.uleb128 0
 18512 0959 8C270000 		.4byte	.LASF398
 18513 095d 05       		.byte	0x5
 18514 095e 00       		.uleb128 0
 18515 095f 953B0000 		.4byte	.LASF399
 18516 0963 05       		.byte	0x5
 18517 0964 00       		.uleb128 0
 18518 0965 942E0000 		.4byte	.LASF400
 18519 0969 06       		.byte	0x6
 18520 096a 00       		.uleb128 0
 18521 096b E9440000 		.4byte	.LASF401
ARM GAS  /tmp/ccFy9xbE.s 			page 360


 18522 096f 05       		.byte	0x5
 18523 0970 00       		.uleb128 0
 18524 0971 40250000 		.4byte	.LASF402
 18525 0975 05       		.byte	0x5
 18526 0976 00       		.uleb128 0
 18527 0977 CF200000 		.4byte	.LASF403
 18528 097b 05       		.byte	0x5
 18529 097c 00       		.uleb128 0
 18530 097d 21420000 		.4byte	.LASF404
 18531 0981 05       		.byte	0x5
 18532 0982 00       		.uleb128 0
 18533 0983 A2100000 		.4byte	.LASF405
 18534 0987 05       		.byte	0x5
 18535 0988 00       		.uleb128 0
 18536 0989 C2130000 		.4byte	.LASF406
 18537 098d 05       		.byte	0x5
 18538 098e 00       		.uleb128 0
 18539 098f 11380000 		.4byte	.LASF407
 18540 0993 06       		.byte	0x6
 18541 0994 00       		.uleb128 0
 18542 0995 09180000 		.4byte	.LASF408
 18543 0999 05       		.byte	0x5
 18544 099a 00       		.uleb128 0
 18545 099b 31390000 		.4byte	.LASF409
 18546 099f 05       		.byte	0x5
 18547 09a0 00       		.uleb128 0
 18548 09a1 79440000 		.4byte	.LASF410
 18549 09a5 05       		.byte	0x5
 18550 09a6 00       		.uleb128 0
 18551 09a7 87090000 		.4byte	.LASF411
 18552 09ab 06       		.byte	0x6
 18553 09ac 00       		.uleb128 0
 18554 09ad 40260000 		.4byte	.LASF412
 18555 09b1 05       		.byte	0x5
 18556 09b2 00       		.uleb128 0
 18557 09b3 3C420000 		.4byte	.LASF413
 18558 09b7 06       		.byte	0x6
 18559 09b8 00       		.uleb128 0
 18560 09b9 0A3D0000 		.4byte	.LASF414
 18561 09bd 06       		.byte	0x6
 18562 09be 00       		.uleb128 0
 18563 09bf 092F0000 		.4byte	.LASF415
 18564 09c3 06       		.byte	0x6
 18565 09c4 00       		.uleb128 0
 18566 09c5 CF2B0000 		.4byte	.LASF416
 18567 09c9 06       		.byte	0x6
 18568 09ca 00       		.uleb128 0
 18569 09cb 6D390000 		.4byte	.LASF417
 18570 09cf 06       		.byte	0x6
 18571 09d0 00       		.uleb128 0
 18572 09d1 6D0E0000 		.4byte	.LASF418
 18573 09d5 06       		.byte	0x6
 18574 09d6 00       		.uleb128 0
 18575 09d7 451B0000 		.4byte	.LASF419
 18576 09db 05       		.byte	0x5
 18577 09dc 00       		.uleb128 0
 18578 09dd 43010000 		.4byte	.LASF420
ARM GAS  /tmp/ccFy9xbE.s 			page 361


 18579 09e1 06       		.byte	0x6
 18580 09e2 00       		.uleb128 0
 18581 09e3 040D0000 		.4byte	.LASF421
 18582 09e7 06       		.byte	0x6
 18583 09e8 00       		.uleb128 0
 18584 09e9 43160000 		.4byte	.LASF422
 18585 09ed 06       		.byte	0x6
 18586 09ee 00       		.uleb128 0
 18587 09ef E0280000 		.4byte	.LASF423
 18588 09f3 05       		.byte	0x5
 18589 09f4 00       		.uleb128 0
 18590 09f5 5B0A0000 		.4byte	.LASF424
 18591 09f9 05       		.byte	0x5
 18592 09fa 00       		.uleb128 0
 18593 09fb A52A0000 		.4byte	.LASF425
 18594 09ff 05       		.byte	0x5
 18595 0a00 00       		.uleb128 0
 18596 0a01 20410000 		.4byte	.LASF426
 18597 0a05 05       		.byte	0x5
 18598 0a06 00       		.uleb128 0
 18599 0a07 EE370000 		.4byte	.LASF427
 18600 0a0b 06       		.byte	0x6
 18601 0a0c 00       		.uleb128 0
 18602 0a0d B6150000 		.4byte	.LASF428
 18603 0a11 05       		.byte	0x5
 18604 0a12 00       		.uleb128 0
 18605 0a13 DE190000 		.4byte	.LASF429
 18606 0a17 05       		.byte	0x5
 18607 0a18 00       		.uleb128 0
 18608 0a19 9A2C0000 		.4byte	.LASF430
 18609 0a1d 05       		.byte	0x5
 18610 0a1e 00       		.uleb128 0
 18611 0a1f 95400000 		.4byte	.LASF431
 18612 0a23 06       		.byte	0x6
 18613 0a24 00       		.uleb128 0
 18614 0a25 DE3C0000 		.4byte	.LASF432
 18615 0a29 05       		.byte	0x5
 18616 0a2a 00       		.uleb128 0
 18617 0a2b EA2C0000 		.4byte	.LASF433
 18618 0a2f 06       		.byte	0x6
 18619 0a30 00       		.uleb128 0
 18620 0a31 EC3B0000 		.4byte	.LASF434
 18621 0a35 06       		.byte	0x6
 18622 0a36 00       		.uleb128 0
 18623 0a37 AB470000 		.4byte	.LASF435
 18624 0a3b 06       		.byte	0x6
 18625 0a3c 00       		.uleb128 0
 18626 0a3d 4B180000 		.4byte	.LASF436
 18627 0a41 06       		.byte	0x6
 18628 0a42 00       		.uleb128 0
 18629 0a43 82030000 		.4byte	.LASF437
 18630 0a47 06       		.byte	0x6
 18631 0a48 00       		.uleb128 0
 18632 0a49 DD200000 		.4byte	.LASF438
 18633 0a4d 06       		.byte	0x6
 18634 0a4e 00       		.uleb128 0
 18635 0a4f 84360000 		.4byte	.LASF439
ARM GAS  /tmp/ccFy9xbE.s 			page 362


 18636 0a53 05       		.byte	0x5
 18637 0a54 00       		.uleb128 0
 18638 0a55 79200000 		.4byte	.LASF440
 18639 0a59 05       		.byte	0x5
 18640 0a5a 00       		.uleb128 0
 18641 0a5b 07380000 		.4byte	.LASF441
 18642 0a5f 05       		.byte	0x5
 18643 0a60 00       		.uleb128 0
 18644 0a61 BB3D0000 		.4byte	.LASF442
 18645 0a65 05       		.byte	0x5
 18646 0a66 00       		.uleb128 0
 18647 0a67 233F0000 		.4byte	.LASF443
 18648 0a6b 05       		.byte	0x5
 18649 0a6c 00       		.uleb128 0
 18650 0a6d 49040000 		.4byte	.LASF444
 18651 0a71 05       		.byte	0x5
 18652 0a72 00       		.uleb128 0
 18653 0a73 B2400000 		.4byte	.LASF445
 18654 0a77 00       		.byte	0
 18655              		.section	.debug_macro,"G",%progbits,wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461,comdat
 18656              	.Ldebug_macro3:
 18657 0000 0400     		.2byte	0x4
 18658 0002 00       		.byte	0
 18659 0003 05       		.byte	0x5
 18660 0004 1D       		.uleb128 0x1d
 18661 0005 F12A0000 		.4byte	.LASF446
 18662 0009 05       		.byte	0x5
 18663 000a 21       		.uleb128 0x21
 18664 000b F6190000 		.4byte	.LASF447
 18665 000f 05       		.byte	0x5
 18666 0010 22       		.uleb128 0x22
 18667 0011 462D0000 		.4byte	.LASF448
 18668 0015 05       		.byte	0x5
 18669 0016 23       		.uleb128 0x23
 18670 0017 1C2D0000 		.4byte	.LASF449
 18671 001b 05       		.byte	0x5
 18672 001c 34       		.uleb128 0x34
 18673 001d 9F440000 		.4byte	.LASF450
 18674 0021 00       		.byte	0
 18675              		.section	.debug_macro,"G",%progbits,wm4.stdint.h.29.6d480f4ba0f60596e88234283d42444f,comdat
 18676              	.Ldebug_macro4:
 18677 0000 0400     		.2byte	0x4
 18678 0002 00       		.byte	0
 18679 0003 05       		.byte	0x5
 18680 0004 1D       		.uleb128 0x1d
 18681 0005 85300000 		.4byte	.LASF451
 18682 0009 06       		.byte	0x6
 18683 000a 64       		.uleb128 0x64
 18684 000b DA100000 		.4byte	.LASF452
 18685 000f 05       		.byte	0x5
 18686 0010 65       		.uleb128 0x65
 18687 0011 D9210000 		.4byte	.LASF453
 18688 0015 06       		.byte	0x6
 18689 0016 66       		.uleb128 0x66
 18690 0017 242D0000 		.4byte	.LASF454
 18691 001b 05       		.byte	0x5
 18692 001c 67       		.uleb128 0x67
ARM GAS  /tmp/ccFy9xbE.s 			page 363


 18693 001d 2B310000 		.4byte	.LASF455
 18694 0021 06       		.byte	0x6
 18695 0022 6A       		.uleb128 0x6a
 18696 0023 440B0000 		.4byte	.LASF456
 18697 0027 05       		.byte	0x5
 18698 0028 6B       		.uleb128 0x6b
 18699 0029 240E0000 		.4byte	.LASF457
 18700 002d 06       		.byte	0x6
 18701 002e 6E       		.uleb128 0x6e
 18702 002f 95250000 		.4byte	.LASF458
 18703 0033 05       		.byte	0x5
 18704 0034 6F       		.uleb128 0x6f
 18705 0035 791A0000 		.4byte	.LASF459
 18706 0039 06       		.byte	0x6
 18707 003a 70       		.uleb128 0x70
 18708 003b FD370000 		.4byte	.LASF460
 18709 003f 05       		.byte	0x5
 18710 0040 71       		.uleb128 0x71
 18711 0041 621B0000 		.4byte	.LASF461
 18712 0045 06       		.byte	0x6
 18713 0046 74       		.uleb128 0x74
 18714 0047 E7410000 		.4byte	.LASF462
 18715 004b 05       		.byte	0x5
 18716 004c 75       		.uleb128 0x75
 18717 004d B8000000 		.4byte	.LASF463
 18718 0051 06       		.byte	0x6
 18719 0052 78       		.uleb128 0x78
 18720 0053 30320000 		.4byte	.LASF464
 18721 0057 05       		.byte	0x5
 18722 0058 79       		.uleb128 0x79
 18723 0059 6F240000 		.4byte	.LASF465
 18724 005d 06       		.byte	0x6
 18725 005e 7A       		.uleb128 0x7a
 18726 005f 14440000 		.4byte	.LASF466
 18727 0063 05       		.byte	0x5
 18728 0064 7B       		.uleb128 0x7b
 18729 0065 8E060000 		.4byte	.LASF467
 18730 0069 06       		.byte	0x6
 18731 006a 7E       		.uleb128 0x7e
 18732 006b EF1A0000 		.4byte	.LASF468
 18733 006f 05       		.byte	0x5
 18734 0070 7F       		.uleb128 0x7f
 18735 0071 53070000 		.4byte	.LASF469
 18736 0075 06       		.byte	0x6
 18737 0076 8201     		.uleb128 0x82
 18738 0078 32280000 		.4byte	.LASF470
 18739 007c 05       		.byte	0x5
 18740 007d 8301     		.uleb128 0x83
 18741 007f 9B020000 		.4byte	.LASF471
 18742 0083 06       		.byte	0x6
 18743 0084 8401     		.uleb128 0x84
 18744 0086 E91B0000 		.4byte	.LASF472
 18745 008a 05       		.byte	0x5
 18746 008b 8501     		.uleb128 0x85
 18747 008d B8040000 		.4byte	.LASF473
 18748 0091 06       		.byte	0x6
 18749 0092 8801     		.uleb128 0x88
ARM GAS  /tmp/ccFy9xbE.s 			page 364


 18750 0094 E3120000 		.4byte	.LASF474
 18751 0098 05       		.byte	0x5
 18752 0099 8901     		.uleb128 0x89
 18753 009b 022D0000 		.4byte	.LASF475
 18754 009f 06       		.byte	0x6
 18755 00a0 8C01     		.uleb128 0x8c
 18756 00a2 1E210000 		.4byte	.LASF476
 18757 00a6 05       		.byte	0x5
 18758 00a7 8D01     		.uleb128 0x8d
 18759 00a9 56170000 		.4byte	.LASF477
 18760 00ad 06       		.byte	0x6
 18761 00ae 8E01     		.uleb128 0x8e
 18762 00b0 5C340000 		.4byte	.LASF478
 18763 00b4 05       		.byte	0x5
 18764 00b5 8F01     		.uleb128 0x8f
 18765 00b7 EF2B0000 		.4byte	.LASF479
 18766 00bb 06       		.byte	0x6
 18767 00bc 9001     		.uleb128 0x90
 18768 00be A13E0000 		.4byte	.LASF480
 18769 00c2 05       		.byte	0x5
 18770 00c3 9101     		.uleb128 0x91
 18771 00c5 470D0000 		.4byte	.LASF481
 18772 00c9 06       		.byte	0x6
 18773 00ca 9201     		.uleb128 0x92
 18774 00cc 79310000 		.4byte	.LASF482
 18775 00d0 05       		.byte	0x5
 18776 00d1 9301     		.uleb128 0x93
 18777 00d3 142C0000 		.4byte	.LASF483
 18778 00d7 06       		.byte	0x6
 18779 00d8 9401     		.uleb128 0x94
 18780 00da 36430000 		.4byte	.LASF484
 18781 00de 05       		.byte	0x5
 18782 00df 9501     		.uleb128 0x95
 18783 00e1 A92D0000 		.4byte	.LASF485
 18784 00e5 06       		.byte	0x6
 18785 00e6 9601     		.uleb128 0x96
 18786 00e8 4E300000 		.4byte	.LASF486
 18787 00ec 05       		.byte	0x5
 18788 00ed 9701     		.uleb128 0x97
 18789 00ef F1360000 		.4byte	.LASF487
 18790 00f3 06       		.byte	0x6
 18791 00f4 9801     		.uleb128 0x98
 18792 00f6 AB3D0000 		.4byte	.LASF488
 18793 00fa 05       		.byte	0x5
 18794 00fb 9901     		.uleb128 0x99
 18795 00fd 1E130000 		.4byte	.LASF489
 18796 0101 06       		.byte	0x6
 18797 0102 9A01     		.uleb128 0x9a
 18798 0104 5F2B0000 		.4byte	.LASF490
 18799 0108 05       		.byte	0x5
 18800 0109 9B01     		.uleb128 0x9b
 18801 010b 193C0000 		.4byte	.LASF491
 18802 010f 06       		.byte	0x6
 18803 0110 9C01     		.uleb128 0x9c
 18804 0112 B03C0000 		.4byte	.LASF492
 18805 0116 05       		.byte	0x5
 18806 0117 9D01     		.uleb128 0x9d
ARM GAS  /tmp/ccFy9xbE.s 			page 365


 18807 0119 3F3D0000 		.4byte	.LASF493
 18808 011d 06       		.byte	0x6
 18809 011e 9E01     		.uleb128 0x9e
 18810 0120 0A340000 		.4byte	.LASF494
 18811 0124 05       		.byte	0x5
 18812 0125 9F01     		.uleb128 0x9f
 18813 0127 E0070000 		.4byte	.LASF495
 18814 012b 06       		.byte	0x6
 18815 012c A001     		.uleb128 0xa0
 18816 012e 653F0000 		.4byte	.LASF496
 18817 0132 05       		.byte	0x5
 18818 0133 A101     		.uleb128 0xa1
 18819 0135 E2300000 		.4byte	.LASF497
 18820 0139 06       		.byte	0x6
 18821 013a A201     		.uleb128 0xa2
 18822 013c EF320000 		.4byte	.LASF498
 18823 0140 05       		.byte	0x5
 18824 0141 A301     		.uleb128 0xa3
 18825 0143 46430000 		.4byte	.LASF499
 18826 0147 06       		.byte	0x6
 18827 0148 A501     		.uleb128 0xa5
 18828 014a B5090000 		.4byte	.LASF500
 18829 014e 05       		.byte	0x5
 18830 014f A601     		.uleb128 0xa6
 18831 0151 491C0000 		.4byte	.LASF501
 18832 0155 06       		.byte	0x6
 18833 0156 A701     		.uleb128 0xa7
 18834 0158 3B1C0000 		.4byte	.LASF502
 18835 015c 05       		.byte	0x5
 18836 015d A801     		.uleb128 0xa8
 18837 015f C61D0000 		.4byte	.LASF503
 18838 0163 06       		.byte	0x6
 18839 0164 A901     		.uleb128 0xa9
 18840 0166 43220000 		.4byte	.LASF504
 18841 016a 05       		.byte	0x5
 18842 016b AA01     		.uleb128 0xaa
 18843 016d DC0D0000 		.4byte	.LASF505
 18844 0171 06       		.byte	0x6
 18845 0172 AB01     		.uleb128 0xab
 18846 0174 62470000 		.4byte	.LASF506
 18847 0178 05       		.byte	0x5
 18848 0179 AC01     		.uleb128 0xac
 18849 017b 57440000 		.4byte	.LASF507
 18850 017f 06       		.byte	0x6
 18851 0180 AD01     		.uleb128 0xad
 18852 0182 B3130000 		.4byte	.LASF508
 18853 0186 05       		.byte	0x5
 18854 0187 AE01     		.uleb128 0xae
 18855 0189 4A460000 		.4byte	.LASF509
 18856 018d 06       		.byte	0x6
 18857 018e AF01     		.uleb128 0xaf
 18858 0190 C91F0000 		.4byte	.LASF510
 18859 0194 05       		.byte	0x5
 18860 0195 B001     		.uleb128 0xb0
 18861 0197 B30A0000 		.4byte	.LASF511
 18862 019b 06       		.byte	0x6
 18863 019c B101     		.uleb128 0xb1
ARM GAS  /tmp/ccFy9xbE.s 			page 366


 18864 019e F50C0000 		.4byte	.LASF512
 18865 01a2 05       		.byte	0x5
 18866 01a3 B201     		.uleb128 0xb2
 18867 01a5 81370000 		.4byte	.LASF513
 18868 01a9 06       		.byte	0x6
 18869 01aa B301     		.uleb128 0xb3
 18870 01ac 7D1F0000 		.4byte	.LASF514
 18871 01b0 05       		.byte	0x5
 18872 01b1 B401     		.uleb128 0xb4
 18873 01b3 0F140000 		.4byte	.LASF515
 18874 01b7 06       		.byte	0x6
 18875 01b8 B501     		.uleb128 0xb5
 18876 01ba 59050000 		.4byte	.LASF516
 18877 01be 05       		.byte	0x5
 18878 01bf B601     		.uleb128 0xb6
 18879 01c1 14360000 		.4byte	.LASF517
 18880 01c5 06       		.byte	0x6
 18881 01c6 B701     		.uleb128 0xb7
 18882 01c8 19020000 		.4byte	.LASF518
 18883 01cc 05       		.byte	0x5
 18884 01cd B801     		.uleb128 0xb8
 18885 01cf 8F050000 		.4byte	.LASF519
 18886 01d3 06       		.byte	0x6
 18887 01d4 B901     		.uleb128 0xb9
 18888 01d6 C0150000 		.4byte	.LASF520
 18889 01da 05       		.byte	0x5
 18890 01db BA01     		.uleb128 0xba
 18891 01dd 57280000 		.4byte	.LASF521
 18892 01e1 06       		.byte	0x6
 18893 01e2 BB01     		.uleb128 0xbb
 18894 01e4 E50C0000 		.4byte	.LASF522
 18895 01e8 05       		.byte	0x5
 18896 01e9 BC01     		.uleb128 0xbc
 18897 01eb 0B290000 		.4byte	.LASF523
 18898 01ef 06       		.byte	0x6
 18899 01f0 BF01     		.uleb128 0xbf
 18900 01f2 D0080000 		.4byte	.LASF524
 18901 01f6 05       		.byte	0x5
 18902 01f7 C001     		.uleb128 0xc0
 18903 01f9 F0400000 		.4byte	.LASF525
 18904 01fd 06       		.byte	0x6
 18905 01fe C101     		.uleb128 0xc1
 18906 0200 5B2F0000 		.4byte	.LASF526
 18907 0204 05       		.byte	0x5
 18908 0205 C201     		.uleb128 0xc2
 18909 0207 EE280000 		.4byte	.LASF527
 18910 020b 06       		.byte	0x6
 18911 020c C501     		.uleb128 0xc5
 18912 020e 43230000 		.4byte	.LASF528
 18913 0212 05       		.byte	0x5
 18914 0213 C601     		.uleb128 0xc6
 18915 0215 ED110000 		.4byte	.LASF529
 18916 0219 06       		.byte	0x6
 18917 021a C901     		.uleb128 0xc9
 18918 021c 50390000 		.4byte	.LASF530
 18919 0220 05       		.byte	0x5
 18920 0221 CA01     		.uleb128 0xca
ARM GAS  /tmp/ccFy9xbE.s 			page 367


 18921 0223 BF260000 		.4byte	.LASF531
 18922 0227 06       		.byte	0x6
 18923 0228 CB01     		.uleb128 0xcb
 18924 022a B3020000 		.4byte	.LASF532
 18925 022e 05       		.byte	0x5
 18926 022f CC01     		.uleb128 0xcc
 18927 0231 E3100000 		.4byte	.LASF533
 18928 0235 06       		.byte	0x6
 18929 0236 CD01     		.uleb128 0xcd
 18930 0238 9A200000 		.4byte	.LASF534
 18931 023c 05       		.byte	0x5
 18932 023d CE01     		.uleb128 0xce
 18933 023f 011A0000 		.4byte	.LASF535
 18934 0243 06       		.byte	0x6
 18935 0244 D201     		.uleb128 0xd2
 18936 0246 98450000 		.4byte	.LASF536
 18937 024a 05       		.byte	0x5
 18938 024b D301     		.uleb128 0xd3
 18939 024d 7A350000 		.4byte	.LASF537
 18940 0251 06       		.byte	0x6
 18941 0252 D401     		.uleb128 0xd4
 18942 0254 BD110000 		.4byte	.LASF538
 18943 0258 05       		.byte	0x5
 18944 0259 D501     		.uleb128 0xd5
 18945 025b 06150000 		.4byte	.LASF539
 18946 025f 06       		.byte	0x6
 18947 0260 D701     		.uleb128 0xd7
 18948 0262 F3420000 		.4byte	.LASF540
 18949 0266 05       		.byte	0x5
 18950 0267 D801     		.uleb128 0xd8
 18951 0269 2C300000 		.4byte	.LASF541
 18952 026d 06       		.byte	0x6
 18953 026e D901     		.uleb128 0xd9
 18954 0270 5E0E0000 		.4byte	.LASF542
 18955 0274 05       		.byte	0x5
 18956 0275 DA01     		.uleb128 0xda
 18957 0277 B4300000 		.4byte	.LASF543
 18958 027b 06       		.byte	0x6
 18959 027c DC01     		.uleb128 0xdc
 18960 027e 77080000 		.4byte	.LASF544
 18961 0282 05       		.byte	0x5
 18962 0283 DD01     		.uleb128 0xdd
 18963 0285 4E0B0000 		.4byte	.LASF545
 18964 0289 06       		.byte	0x6
 18965 028a DF01     		.uleb128 0xdf
 18966 028c 2F240000 		.4byte	.LASF546
 18967 0290 05       		.byte	0x5
 18968 0291 E001     		.uleb128 0xe0
 18969 0293 243B0000 		.4byte	.LASF547
 18970 0297 06       		.byte	0x6
 18971 0298 E101     		.uleb128 0xe1
 18972 029a DC360000 		.4byte	.LASF548
 18973 029e 05       		.byte	0x5
 18974 029f E201     		.uleb128 0xe2
 18975 02a1 C1210000 		.4byte	.LASF549
 18976 02a5 06       		.byte	0x6
 18977 02a6 E401     		.uleb128 0xe4
ARM GAS  /tmp/ccFy9xbE.s 			page 368


 18978 02a8 2D460000 		.4byte	.LASF550
 18979 02ac 05       		.byte	0x5
 18980 02ad E501     		.uleb128 0xe5
 18981 02af B6140000 		.4byte	.LASF551
 18982 02b3 06       		.byte	0x6
 18983 02b4 E601     		.uleb128 0xe6
 18984 02b6 30120000 		.4byte	.LASF552
 18985 02ba 05       		.byte	0x5
 18986 02bb E701     		.uleb128 0xe7
 18987 02bd 03020000 		.4byte	.LASF553
 18988 02c1 06       		.byte	0x6
 18989 02c2 EF01     		.uleb128 0xef
 18990 02c4 863D0000 		.4byte	.LASF554
 18991 02c8 05       		.byte	0x5
 18992 02c9 F001     		.uleb128 0xf0
 18993 02cb E60A0000 		.4byte	.LASF555
 18994 02cf 06       		.byte	0x6
 18995 02d0 F101     		.uleb128 0xf1
 18996 02d2 C72B0000 		.4byte	.LASF556
 18997 02d6 05       		.byte	0x5
 18998 02d7 F201     		.uleb128 0xf2
 18999 02d9 043E0000 		.4byte	.LASF557
 19000 02dd 06       		.byte	0x6
 19001 02de F301     		.uleb128 0xf3
 19002 02e0 0F3A0000 		.4byte	.LASF558
 19003 02e4 05       		.byte	0x5
 19004 02e5 F401     		.uleb128 0xf4
 19005 02e7 07110000 		.4byte	.LASF559
 19006 02eb 06       		.byte	0x6
 19007 02ec F501     		.uleb128 0xf5
 19008 02ee 83340000 		.4byte	.LASF560
 19009 02f2 05       		.byte	0x5
 19010 02f3 F601     		.uleb128 0xf6
 19011 02f5 F7090000 		.4byte	.LASF561
 19012 02f9 06       		.byte	0x6
 19013 02fa F701     		.uleb128 0xf7
 19014 02fc 8A3A0000 		.4byte	.LASF562
 19015 0300 05       		.byte	0x5
 19016 0301 F801     		.uleb128 0xf8
 19017 0303 69140000 		.4byte	.LASF563
 19018 0307 06       		.byte	0x6
 19019 0308 F901     		.uleb128 0xf9
 19020 030a B03A0000 		.4byte	.LASF564
 19021 030e 05       		.byte	0x5
 19022 030f FA01     		.uleb128 0xfa
 19023 0311 39090000 		.4byte	.LASF565
 19024 0315 06       		.byte	0x6
 19025 0316 FB01     		.uleb128 0xfb
 19026 0318 C4470000 		.4byte	.LASF566
 19027 031c 05       		.byte	0x5
 19028 031d FC01     		.uleb128 0xfc
 19029 031f 43080000 		.4byte	.LASF567
 19030 0323 06       		.byte	0x6
 19031 0324 FD01     		.uleb128 0xfd
 19032 0326 D8420000 		.4byte	.LASF568
 19033 032a 05       		.byte	0x5
 19034 032b FE01     		.uleb128 0xfe
ARM GAS  /tmp/ccFy9xbE.s 			page 369


 19035 032d F0460000 		.4byte	.LASF569
 19036 0331 06       		.byte	0x6
 19037 0332 FF01     		.uleb128 0xff
 19038 0334 7E090000 		.4byte	.LASF570
 19039 0338 05       		.byte	0x5
 19040 0339 8002     		.uleb128 0x100
 19041 033b 72100000 		.4byte	.LASF571
 19042 033f 06       		.byte	0x6
 19043 0340 8102     		.uleb128 0x101
 19044 0342 42130000 		.4byte	.LASF572
 19045 0346 05       		.byte	0x5
 19046 0347 8202     		.uleb128 0x102
 19047 0349 722D0000 		.4byte	.LASF573
 19048 034d 00       		.byte	0
 19049              		.section	.debug_macro,"G",%progbits,wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c,comdat
 19050              	.Ldebug_macro5:
 19051 0000 0400     		.2byte	0x4
 19052 0002 00       		.byte	0
 19053 0003 05       		.byte	0x5
 19054 0004 1F       		.uleb128 0x1f
 19055 0005 86220000 		.4byte	.LASF575
 19056 0009 05       		.byte	0x5
 19057 000a 20       		.uleb128 0x20
 19058 000b 00330000 		.4byte	.LASF576
 19059 000f 06       		.byte	0x6
 19060 0010 22       		.uleb128 0x22
 19061 0011 BF440000 		.4byte	.LASF577
 19062 0015 05       		.byte	0x5
 19063 0016 27       		.uleb128 0x27
 19064 0017 BF190000 		.4byte	.LASF578
 19065 001b 05       		.byte	0x5
 19066 001c 2F       		.uleb128 0x2f
 19067 001d 25150000 		.4byte	.LASF579
 19068 0021 05       		.byte	0x5
 19069 0022 30       		.uleb128 0x30
 19070 0023 053F0000 		.4byte	.LASF580
 19071 0027 05       		.byte	0x5
 19072 0028 31       		.uleb128 0x31
 19073 0029 553C0000 		.4byte	.LASF581
 19074 002d 05       		.byte	0x5
 19075 002e 34       		.uleb128 0x34
 19076 002f 9E2E0000 		.4byte	.LASF582
 19077 0033 05       		.byte	0x5
 19078 0034 36       		.uleb128 0x36
 19079 0035 4C370000 		.4byte	.LASF583
 19080 0039 05       		.byte	0x5
 19081 003a 69       		.uleb128 0x69
 19082 003b 0A470000 		.4byte	.LASF584
 19083 003f 05       		.byte	0x5
 19084 0040 6C       		.uleb128 0x6c
 19085 0041 40460000 		.4byte	.LASF585
 19086 0045 05       		.byte	0x5
 19087 0046 6F       		.uleb128 0x6f
 19088 0047 2B190000 		.4byte	.LASF586
 19089 004b 05       		.byte	0x5
 19090 004c 72       		.uleb128 0x72
 19091 004d 710A0000 		.4byte	.LASF587
ARM GAS  /tmp/ccFy9xbE.s 			page 370


 19092 0051 05       		.byte	0x5
 19093 0052 75       		.uleb128 0x75
 19094 0053 1B0B0000 		.4byte	.LASF588
 19095 0057 00       		.byte	0
 19096              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f,comdat
 19097              	.Ldebug_macro6:
 19098 0000 0400     		.2byte	0x4
 19099 0002 00       		.byte	0
 19100 0003 05       		.byte	0x5
 19101 0004 27       		.uleb128 0x27
 19102 0005 4A3C0000 		.4byte	.LASF589
 19103 0009 05       		.byte	0x5
 19104 000a 28       		.uleb128 0x28
 19105 000b D6300000 		.4byte	.LASF590
 19106 000f 05       		.byte	0x5
 19107 0010 2A       		.uleb128 0x2a
 19108 0011 37290000 		.4byte	.LASF591
 19109 0015 05       		.byte	0x5
 19110 0016 8301     		.uleb128 0x83
 19111 0018 1A260000 		.4byte	.LASF592
 19112 001c 05       		.byte	0x5
 19113 001d 8401     		.uleb128 0x84
 19114 001f 4F230000 		.4byte	.LASF593
 19115 0023 05       		.byte	0x5
 19116 0024 8501     		.uleb128 0x85
 19117 0026 AC2B0000 		.4byte	.LASF594
 19118 002a 05       		.byte	0x5
 19119 002b 8601     		.uleb128 0x86
 19120 002d 2C340000 		.4byte	.LASF595
 19121 0031 05       		.byte	0x5
 19122 0032 8701     		.uleb128 0x87
 19123 0034 F73D0000 		.4byte	.LASF596
 19124 0038 05       		.byte	0x5
 19125 0039 8801     		.uleb128 0x88
 19126 003b 6D070000 		.4byte	.LASF597
 19127 003f 05       		.byte	0x5
 19128 0040 8901     		.uleb128 0x89
 19129 0042 FE0D0000 		.4byte	.LASF598
 19130 0046 05       		.byte	0x5
 19131 0047 8A01     		.uleb128 0x8a
 19132 0049 7E2F0000 		.4byte	.LASF599
 19133 004d 05       		.byte	0x5
 19134 004e 8B01     		.uleb128 0x8b
 19135 0050 4D2D0000 		.4byte	.LASF600
 19136 0054 06       		.byte	0x6
 19137 0055 9B01     		.uleb128 0x9b
 19138 0057 CF3D0000 		.4byte	.LASF601
 19139 005b 05       		.byte	0x5
 19140 005c B501     		.uleb128 0xb5
 19141 005e 550C0000 		.4byte	.LASF602
 19142 0062 05       		.byte	0x5
 19143 0063 B601     		.uleb128 0xb6
 19144 0065 82060000 		.4byte	.LASF603
 19145 0069 05       		.byte	0x5
 19146 006a B701     		.uleb128 0xb7
 19147 006c A72F0000 		.4byte	.LASF604
 19148 0070 05       		.byte	0x5
ARM GAS  /tmp/ccFy9xbE.s 			page 371


 19149 0071 B801     		.uleb128 0xb8
 19150 0073 D70A0000 		.4byte	.LASF605
 19151 0077 05       		.byte	0x5
 19152 0078 B901     		.uleb128 0xb9
 19153 007a 8C1F0000 		.4byte	.LASF606
 19154 007e 05       		.byte	0x5
 19155 007f BA01     		.uleb128 0xba
 19156 0081 20080000 		.4byte	.LASF607
 19157 0085 05       		.byte	0x5
 19158 0086 BB01     		.uleb128 0xbb
 19159 0088 21310000 		.4byte	.LASF608
 19160 008c 05       		.byte	0x5
 19161 008d BC01     		.uleb128 0xbc
 19162 008f 4D250000 		.4byte	.LASF609
 19163 0093 05       		.byte	0x5
 19164 0094 BD01     		.uleb128 0xbd
 19165 0096 CE360000 		.4byte	.LASF610
 19166 009a 05       		.byte	0x5
 19167 009b BE01     		.uleb128 0xbe
 19168 009d 34140000 		.4byte	.LASF611
 19169 00a1 05       		.byte	0x5
 19170 00a2 BF01     		.uleb128 0xbf
 19171 00a4 EA330000 		.4byte	.LASF612
 19172 00a8 05       		.byte	0x5
 19173 00a9 C001     		.uleb128 0xc0
 19174 00ab 43120000 		.4byte	.LASF613
 19175 00af 05       		.byte	0x5
 19176 00b0 C101     		.uleb128 0xc1
 19177 00b2 120E0000 		.4byte	.LASF614
 19178 00b6 05       		.byte	0x5
 19179 00b7 C201     		.uleb128 0xc2
 19180 00b9 7B120000 		.4byte	.LASF615
 19181 00bd 05       		.byte	0x5
 19182 00be C301     		.uleb128 0xc3
 19183 00c0 30410000 		.4byte	.LASF616
 19184 00c4 05       		.byte	0x5
 19185 00c5 C401     		.uleb128 0xc4
 19186 00c7 592A0000 		.4byte	.LASF617
 19187 00cb 05       		.byte	0x5
 19188 00cc CB01     		.uleb128 0xcb
 19189 00ce AE070000 		.4byte	.LASF618
 19190 00d2 06       		.byte	0x6
 19191 00d3 E701     		.uleb128 0xe7
 19192 00d5 0C250000 		.4byte	.LASF619
 19193 00d9 05       		.byte	0x5
 19194 00da 8402     		.uleb128 0x104
 19195 00dc C8390000 		.4byte	.LASF620
 19196 00e0 05       		.byte	0x5
 19197 00e1 8502     		.uleb128 0x105
 19198 00e3 7C2C0000 		.4byte	.LASF621
 19199 00e7 05       		.byte	0x5
 19200 00e8 8602     		.uleb128 0x106
 19201 00ea FF2E0000 		.4byte	.LASF622
 19202 00ee 05       		.byte	0x5
 19203 00ef 8702     		.uleb128 0x107
 19204 00f1 9B410000 		.4byte	.LASF623
 19205 00f5 05       		.byte	0x5
ARM GAS  /tmp/ccFy9xbE.s 			page 372


 19206 00f6 8802     		.uleb128 0x108
 19207 00f8 17370000 		.4byte	.LASF624
 19208 00fc 05       		.byte	0x5
 19209 00fd 8902     		.uleb128 0x109
 19210 00ff F0260000 		.4byte	.LASF625
 19211 0103 05       		.byte	0x5
 19212 0104 8A02     		.uleb128 0x10a
 19213 0106 E6360000 		.4byte	.LASF626
 19214 010a 05       		.byte	0x5
 19215 010b 8B02     		.uleb128 0x10b
 19216 010d 631A0000 		.4byte	.LASF627
 19217 0111 05       		.byte	0x5
 19218 0112 8C02     		.uleb128 0x10c
 19219 0114 A4460000 		.4byte	.LASF628
 19220 0118 05       		.byte	0x5
 19221 0119 8D02     		.uleb128 0x10d
 19222 011b C9350000 		.4byte	.LASF629
 19223 011f 05       		.byte	0x5
 19224 0120 8E02     		.uleb128 0x10e
 19225 0122 B02F0000 		.4byte	.LASF630
 19226 0126 05       		.byte	0x5
 19227 0127 8F02     		.uleb128 0x10f
 19228 0129 65400000 		.4byte	.LASF631
 19229 012d 05       		.byte	0x5
 19230 012e 9002     		.uleb128 0x110
 19231 0130 B2370000 		.4byte	.LASF632
 19232 0134 05       		.byte	0x5
 19233 0135 9102     		.uleb128 0x111
 19234 0137 DC2C0000 		.4byte	.LASF633
 19235 013b 05       		.byte	0x5
 19236 013c 9202     		.uleb128 0x112
 19237 013e FD2A0000 		.4byte	.LASF634
 19238 0142 06       		.byte	0x6
 19239 0143 9F02     		.uleb128 0x11f
 19240 0145 D9410000 		.4byte	.LASF635
 19241 0149 06       		.byte	0x6
 19242 014a D402     		.uleb128 0x154
 19243 014c 2B070000 		.4byte	.LASF636
 19244 0150 06       		.byte	0x6
 19245 0151 8603     		.uleb128 0x186
 19246 0153 46140000 		.4byte	.LASF637
 19247 0157 05       		.byte	0x5
 19248 0158 8B03     		.uleb128 0x18b
 19249 015a 9B1B0000 		.4byte	.LASF638
 19250 015e 06       		.byte	0x6
 19251 015f 9103     		.uleb128 0x191
 19252 0161 F31B0000 		.4byte	.LASF639
 19253 0165 05       		.byte	0x5
 19254 0166 9603     		.uleb128 0x196
 19255 0168 5C210000 		.4byte	.LASF640
 19256 016c 05       		.byte	0x5
 19257 016d 9B03     		.uleb128 0x19b
 19258 016f 5B390000 		.4byte	.LASF641
 19259 0173 00       		.byte	0
 19260              		.section	.debug_macro,"G",%progbits,wm4.printf.h.59.15c3282c91c12f59c67258a426cb49f3,comdat
 19261              	.Ldebug_macro7:
 19262 0000 0400     		.2byte	0x4
ARM GAS  /tmp/ccFy9xbE.s 			page 373


 19263 0002 00       		.byte	0
 19264 0003 05       		.byte	0x5
 19265 0004 3B       		.uleb128 0x3b
 19266 0005 CF190000 		.4byte	.LASF642
 19267 0009 05       		.byte	0x5
 19268 000a 47       		.uleb128 0x47
 19269 000b 892C0000 		.4byte	.LASF643
 19270 000f 05       		.byte	0x5
 19271 0010 55       		.uleb128 0x55
 19272 0011 A7250000 		.4byte	.LASF644
 19273 0015 05       		.byte	0x5
 19274 0016 56       		.uleb128 0x56
 19275 0017 0E240000 		.4byte	.LASF645
 19276 001b 05       		.byte	0x5
 19277 001c 61       		.uleb128 0x61
 19278 001d 313A0000 		.4byte	.LASF646
 19279 0021 00       		.byte	0
 19280              		.section	.debug_macro,"G",%progbits,wm4.float.h.29.0e9d9baf95ec39f9555dc80c6e28186b,comdat
 19281              	.Ldebug_macro8:
 19282 0000 0400     		.2byte	0x4
 19283 0002 00       		.byte	0
 19284 0003 05       		.byte	0x5
 19285 0004 1D       		.uleb128 0x1d
 19286 0005 EE160000 		.4byte	.LASF667
 19287 0009 06       		.byte	0x6
 19288 000a 20       		.uleb128 0x20
 19289 000b 9F330000 		.4byte	.LASF668
 19290 000f 05       		.byte	0x5
 19291 0010 21       		.uleb128 0x21
 19292 0011 491F0000 		.4byte	.LASF669
 19293 0015 06       		.byte	0x6
 19294 0016 24       		.uleb128 0x24
 19295 0017 121F0000 		.4byte	.LASF670
 19296 001b 06       		.byte	0x6
 19297 001c 25       		.uleb128 0x25
 19298 001d 3D190000 		.4byte	.LASF671
 19299 0021 06       		.byte	0x6
 19300 0022 26       		.uleb128 0x26
 19301 0023 77400000 		.4byte	.LASF672
 19302 0027 05       		.byte	0x5
 19303 0028 27       		.uleb128 0x27
 19304 0029 57270000 		.4byte	.LASF673
 19305 002d 05       		.byte	0x5
 19306 002e 28       		.uleb128 0x28
 19307 002f 1F110000 		.4byte	.LASF674
 19308 0033 05       		.byte	0x5
 19309 0034 29       		.uleb128 0x29
 19310 0035 110D0000 		.4byte	.LASF675
 19311 0039 06       		.byte	0x6
 19312 003a 32       		.uleb128 0x32
 19313 003b E5110000 		.4byte	.LASF676
 19314 003f 06       		.byte	0x6
 19315 0040 33       		.uleb128 0x33
 19316 0041 2F290000 		.4byte	.LASF677
 19317 0045 06       		.byte	0x6
 19318 0046 34       		.uleb128 0x34
 19319 0047 E6050000 		.4byte	.LASF678
ARM GAS  /tmp/ccFy9xbE.s 			page 374


 19320 004b 05       		.byte	0x5
 19321 004c 35       		.uleb128 0x35
 19322 004d 473A0000 		.4byte	.LASF679
 19323 0051 05       		.byte	0x5
 19324 0052 36       		.uleb128 0x36
 19325 0053 DB1A0000 		.4byte	.LASF680
 19326 0057 05       		.byte	0x5
 19327 0058 37       		.uleb128 0x37
 19328 0059 47420000 		.4byte	.LASF681
 19329 005d 06       		.byte	0x6
 19330 005e 3A       		.uleb128 0x3a
 19331 005f F9000000 		.4byte	.LASF682
 19332 0063 06       		.byte	0x6
 19333 0064 3B       		.uleb128 0x3b
 19334 0065 F4440000 		.4byte	.LASF683
 19335 0069 06       		.byte	0x6
 19336 006a 3C       		.uleb128 0x3c
 19337 006b 57250000 		.4byte	.LASF684
 19338 006f 05       		.byte	0x5
 19339 0070 3D       		.uleb128 0x3d
 19340 0071 D2160000 		.4byte	.LASF685
 19341 0075 05       		.byte	0x5
 19342 0076 3E       		.uleb128 0x3e
 19343 0077 6E3E0000 		.4byte	.LASF686
 19344 007b 05       		.byte	0x5
 19345 007c 3F       		.uleb128 0x3f
 19346 007d 8D3D0000 		.4byte	.LASF687
 19347 0081 06       		.byte	0x6
 19348 0082 46       		.uleb128 0x46
 19349 0083 062E0000 		.4byte	.LASF688
 19350 0087 06       		.byte	0x6
 19351 0088 47       		.uleb128 0x47
 19352 0089 89450000 		.4byte	.LASF689
 19353 008d 06       		.byte	0x6
 19354 008e 48       		.uleb128 0x48
 19355 008f B8070000 		.4byte	.LASF690
 19356 0093 05       		.byte	0x5
 19357 0094 49       		.uleb128 0x49
 19358 0095 2A370000 		.4byte	.LASF691
 19359 0099 05       		.byte	0x5
 19360 009a 4A       		.uleb128 0x4a
 19361 009b 79010000 		.4byte	.LASF692
 19362 009f 05       		.byte	0x5
 19363 00a0 4B       		.uleb128 0x4b
 19364 00a1 4E1D0000 		.4byte	.LASF693
 19365 00a5 06       		.byte	0x6
 19366 00a6 4E       		.uleb128 0x4e
 19367 00a7 BD330000 		.4byte	.LASF694
 19368 00ab 06       		.byte	0x6
 19369 00ac 4F       		.uleb128 0x4f
 19370 00ad 26260000 		.4byte	.LASF695
 19371 00b1 06       		.byte	0x6
 19372 00b2 50       		.uleb128 0x50
 19373 00b3 EC2F0000 		.4byte	.LASF696
 19374 00b7 05       		.byte	0x5
 19375 00b8 51       		.uleb128 0x51
 19376 00b9 F9220000 		.4byte	.LASF697
ARM GAS  /tmp/ccFy9xbE.s 			page 375


 19377 00bd 05       		.byte	0x5
 19378 00be 52       		.uleb128 0x52
 19379 00bf 5D200000 		.4byte	.LASF698
 19380 00c3 05       		.byte	0x5
 19381 00c4 53       		.uleb128 0x53
 19382 00c5 A5310000 		.4byte	.LASF699
 19383 00c9 06       		.byte	0x6
 19384 00ca 5A       		.uleb128 0x5a
 19385 00cb 3D410000 		.4byte	.LASF700
 19386 00cf 06       		.byte	0x6
 19387 00d0 5B       		.uleb128 0x5b
 19388 00d1 D93F0000 		.4byte	.LASF701
 19389 00d5 06       		.byte	0x6
 19390 00d6 5C       		.uleb128 0x5c
 19391 00d7 85400000 		.4byte	.LASF702
 19392 00db 05       		.byte	0x5
 19393 00dc 5D       		.uleb128 0x5d
 19394 00dd A4450000 		.4byte	.LASF703
 19395 00e1 05       		.byte	0x5
 19396 00e2 5E       		.uleb128 0x5e
 19397 00e3 DD2E0000 		.4byte	.LASF704
 19398 00e7 05       		.byte	0x5
 19399 00e8 5F       		.uleb128 0x5f
 19400 00e9 D91F0000 		.4byte	.LASF705
 19401 00ed 06       		.byte	0x6
 19402 00ee 65       		.uleb128 0x65
 19403 00ef 48390000 		.4byte	.LASF706
 19404 00f3 06       		.byte	0x6
 19405 00f4 66       		.uleb128 0x66
 19406 00f5 D31A0000 		.4byte	.LASF707
 19407 00f9 06       		.byte	0x6
 19408 00fa 67       		.uleb128 0x67
 19409 00fb 522F0000 		.4byte	.LASF708
 19410 00ff 05       		.byte	0x5
 19411 0100 68       		.uleb128 0x68
 19412 0101 A9160000 		.4byte	.LASF709
 19413 0105 05       		.byte	0x5
 19414 0106 69       		.uleb128 0x69
 19415 0107 CD290000 		.4byte	.LASF710
 19416 010b 05       		.byte	0x5
 19417 010c 6A       		.uleb128 0x6a
 19418 010d DE180000 		.4byte	.LASF711
 19419 0111 06       		.byte	0x6
 19420 0112 6E       		.uleb128 0x6e
 19421 0113 3A2D0000 		.4byte	.LASF712
 19422 0117 06       		.byte	0x6
 19423 0118 6F       		.uleb128 0x6f
 19424 0119 66320000 		.4byte	.LASF713
 19425 011d 06       		.byte	0x6
 19426 011e 70       		.uleb128 0x70
 19427 011f A9150000 		.4byte	.LASF714
 19428 0123 05       		.byte	0x5
 19429 0124 71       		.uleb128 0x71
 19430 0125 89310000 		.4byte	.LASF715
 19431 0129 05       		.byte	0x5
 19432 012a 72       		.uleb128 0x72
 19433 012b BC2F0000 		.4byte	.LASF716
ARM GAS  /tmp/ccFy9xbE.s 			page 376


 19434 012f 05       		.byte	0x5
 19435 0130 73       		.uleb128 0x73
 19436 0131 94080000 		.4byte	.LASF717
 19437 0135 06       		.byte	0x6
 19438 0136 76       		.uleb128 0x76
 19439 0137 93020000 		.4byte	.LASF718
 19440 013b 06       		.byte	0x6
 19441 013c 77       		.uleb128 0x77
 19442 013d EA030000 		.4byte	.LASF719
 19443 0141 06       		.byte	0x6
 19444 0142 78       		.uleb128 0x78
 19445 0143 C5400000 		.4byte	.LASF720
 19446 0147 05       		.byte	0x5
 19447 0148 79       		.uleb128 0x79
 19448 0149 48340000 		.4byte	.LASF721
 19449 014d 05       		.byte	0x5
 19450 014e 7A       		.uleb128 0x7a
 19451 014f 5F450000 		.4byte	.LASF722
 19452 0153 05       		.byte	0x5
 19453 0154 7B       		.uleb128 0x7b
 19454 0155 E4130000 		.4byte	.LASF723
 19455 0159 06       		.byte	0x6
 19456 015a 7F       		.uleb128 0x7f
 19457 015b 09440000 		.4byte	.LASF724
 19458 015f 05       		.byte	0x5
 19459 0160 8001     		.uleb128 0x80
 19460 0162 D3040000 		.4byte	.LASF725
 19461 0166 06       		.byte	0x6
 19462 0167 C101     		.uleb128 0xc1
 19463 0169 873C0000 		.4byte	.LASF726
 19464 016d 05       		.byte	0x5
 19465 016e C501     		.uleb128 0xc5
 19466 0170 02430000 		.4byte	.LASF727
 19467 0174 06       		.byte	0x6
 19468 0175 D001     		.uleb128 0xd0
 19469 0177 FD1F0000 		.4byte	.LASF728
 19470 017b 05       		.byte	0x5
 19471 017c D101     		.uleb128 0xd1
 19472 017e A6410000 		.4byte	.LASF729
 19473 0182 06       		.byte	0x6
 19474 0183 D801     		.uleb128 0xd8
 19475 0185 1E180000 		.4byte	.LASF730
 19476 0189 06       		.byte	0x6
 19477 018a D901     		.uleb128 0xd9
 19478 018c 3C2A0000 		.4byte	.LASF731
 19479 0190 06       		.byte	0x6
 19480 0191 DA01     		.uleb128 0xda
 19481 0193 66220000 		.4byte	.LASF732
 19482 0197 05       		.byte	0x5
 19483 0198 DB01     		.uleb128 0xdb
 19484 019a 4C410000 		.4byte	.LASF733
 19485 019e 05       		.byte	0x5
 19486 019f DC01     		.uleb128 0xdc
 19487 01a1 1F450000 		.4byte	.LASF734
 19488 01a5 05       		.byte	0x5
 19489 01a6 DD01     		.uleb128 0xdd
 19490 01a8 262B0000 		.4byte	.LASF735
ARM GAS  /tmp/ccFy9xbE.s 			page 377


 19491 01ac 06       		.byte	0x6
 19492 01ad E001     		.uleb128 0xe0
 19493 01af 1E0C0000 		.4byte	.LASF736
 19494 01b3 06       		.byte	0x6
 19495 01b4 E101     		.uleb128 0xe1
 19496 01b6 D6050000 		.4byte	.LASF737
 19497 01ba 06       		.byte	0x6
 19498 01bb E201     		.uleb128 0xe2
 19499 01bd 8E000000 		.4byte	.LASF738
 19500 01c1 05       		.byte	0x5
 19501 01c2 E301     		.uleb128 0xe3
 19502 01c4 90320000 		.4byte	.LASF739
 19503 01c8 05       		.byte	0x5
 19504 01c9 E401     		.uleb128 0xe4
 19505 01cb 11330000 		.4byte	.LASF740
 19506 01cf 05       		.byte	0x5
 19507 01d0 E501     		.uleb128 0xe5
 19508 01d2 54310000 		.4byte	.LASF741
 19509 01d6 06       		.byte	0x6
 19510 01d7 E801     		.uleb128 0xe8
 19511 01d9 5C230000 		.4byte	.LASF742
 19512 01dd 06       		.byte	0x6
 19513 01de E901     		.uleb128 0xe9
 19514 01e0 2D2D0000 		.4byte	.LASF743
 19515 01e4 06       		.byte	0x6
 19516 01e5 EA01     		.uleb128 0xea
 19517 01e7 CC430000 		.4byte	.LASF744
 19518 01eb 05       		.byte	0x5
 19519 01ec EB01     		.uleb128 0xeb
 19520 01ee A9350000 		.4byte	.LASF745
 19521 01f2 05       		.byte	0x5
 19522 01f3 EC01     		.uleb128 0xec
 19523 01f5 C1060000 		.4byte	.LASF746
 19524 01f9 05       		.byte	0x5
 19525 01fa ED01     		.uleb128 0xed
 19526 01fc EC230000 		.4byte	.LASF747
 19527 0200 00       		.byte	0
 19528              		.section	.debug_line,"",%progbits
 19529              	.Ldebug_line0:
 19530 0000 29120000 		.section	.debug_str,"MS",%progbits,1
 19530      0300AC00 
 19530      00000201 
 19530      FB0E0D00 
 19530      01010101 
 19531              	.LASF183:
 19532 0000 5F5F4445 		.ascii	"__DECIMAL_DIG__ 17\000"
 19532      43494D41 
 19532      4C5F4449 
 19532      475F5F20 
 19532      313700
 19533              	.LASF347:
 19534 0013 5F5F5548 		.ascii	"__UHA_FBIT__ 8\000"
 19534      415F4642 
 19534      49545F5F 
 19534      203800
 19535              	.LASF220:
 19536 0022 5F5F464C 		.ascii	"__FLT64_DENORM_MIN__ 4.9406564584124654e-324F64\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 378


 19536      5436345F 
 19536      44454E4F 
 19536      524D5F4D 
 19536      494E5F5F 
 19537              	.LASF366:
 19538 0052 5F5F4743 		.ascii	"__GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\000"
 19538      435F4154 
 19538      4F4D4943 
 19538      5F574348 
 19538      41525F54 
 19539              	.LASF358:
 19540 0073 5F5F4348 		.ascii	"__CHAR_UNSIGNED__ 1\000"
 19540      41525F55 
 19540      4E534947 
 19540      4E45445F 
 19540      5F203100 
 19541              	.LASF762:
 19542 0087 73697A65 		.ascii	"size_t\000"
 19542      5F7400
 19543              	.LASF738:
 19544 008e 4C44424C 		.ascii	"LDBL_HAS_SUBNORM\000"
 19544      5F484153 
 19544      5F535542 
 19544      4E4F524D 
 19544      00
 19545              	.LASF222:
 19546 009f 5F5F464C 		.ascii	"__FLT64_HAS_INFINITY__ 1\000"
 19546      5436345F 
 19546      4841535F 
 19546      494E4649 
 19546      4E495459 
 19547              	.LASF463:
 19548 00b8 55494E54 		.ascii	"UINT16_MAX __UINT16_MAX__\000"
 19548      31365F4D 
 19548      4158205F 
 19548      5F55494E 
 19548      5431365F 
 19549              	.LASF311:
 19550 00d2 5F5F4C4C 		.ascii	"__LLACCUM_MIN__ (-0X1P31LLK-0X1P31LLK)\000"
 19550      41434355 
 19550      4D5F4D49 
 19550      4E5F5F20 
 19550      282D3058 
 19551              	.LASF682:
 19552 00f9 464C545F 		.ascii	"FLT_MIN_EXP\000"
 19552      4D494E5F 
 19552      45585000 
 19553              	.LASF303:
 19554 0105 5F5F4C41 		.ascii	"__LACCUM_EPSILON__ 0x1P-31LK\000"
 19554      4343554D 
 19554      5F455053 
 19554      494C4F4E 
 19554      5F5F2030 
 19555              	.LASF78:
 19556 0122 5F5F5054 		.ascii	"__PTRDIFF_MAX__ 0x7fffffff\000"
 19556      52444946 
 19556      465F4D41 
ARM GAS  /tmp/ccFy9xbE.s 			page 379


 19556      585F5F20 
 19556      30783766 
 19557              	.LASF808:
 19558 013d 5F61746F 		.ascii	"_atoi\000"
 19558      6900
 19559              	.LASF420:
 19560 0143 5F5F4152 		.ascii	"__ARM_FEATURE_FMA 1\000"
 19560      4D5F4645 
 19560      41545552 
 19560      455F464D 
 19560      41203100 
 19561              	.LASF281:
 19562 0157 5F5F5341 		.ascii	"__SACCUM_MIN__ (-0X1P7HK-0X1P7HK)\000"
 19562      4343554D 
 19562      5F4D494E 
 19562      5F5F2028 
 19562      2D305831 
 19563              	.LASF692:
 19564 0179 44424C5F 		.ascii	"DBL_MIN_10_EXP __DBL_MIN_10_EXP__\000"
 19564      4D494E5F 
 19564      31305F45 
 19564      5850205F 
 19564      5F44424C 
 19565              	.LASF655:
 19566 019b 464C4147 		.ascii	"FLAGS_ZEROPAD (1U << 0U)\000"
 19566      535F5A45 
 19566      524F5041 
 19566      44202831 
 19566      55203C3C 
 19567              	.LASF89:
 19568 01b4 5F5F494E 		.ascii	"__INTMAX_MAX__ 0x7fffffffffffffffLL\000"
 19568      544D4158 
 19568      5F4D4158 
 19568      5F5F2030 
 19568      78376666 
 19569              	.LASF766:
 19570 01d8 6F75745F 		.ascii	"out_fct_wrap_type\000"
 19570      6663745F 
 19570      77726170 
 19570      5F747970 
 19570      6500
 19571              	.LASF215:
 19572 01ea 5F5F464C 		.ascii	"__FLT64_DECIMAL_DIG__ 17\000"
 19572      5436345F 
 19572      44454349 
 19572      4D414C5F 
 19572      4449475F 
 19573              	.LASF553:
 19574 0203 57494E54 		.ascii	"WINT_MIN __WINT_MIN__\000"
 19574      5F4D494E 
 19574      205F5F57 
 19574      494E545F 
 19574      4D494E5F 
 19575              	.LASF518:
 19576 0219 494E545F 		.ascii	"INT_FAST64_MAX\000"
 19576      46415354 
 19576      36345F4D 
ARM GAS  /tmp/ccFy9xbE.s 			page 380


 19576      415800
 19577              	.LASF14:
 19578 0228 5F5F4154 		.ascii	"__ATOMIC_CONSUME 1\000"
 19578      4F4D4943 
 19578      5F434F4E 
 19578      53554D45 
 19578      203100
 19579              	.LASF304:
 19580 023b 5F5F554C 		.ascii	"__ULACCUM_FBIT__ 32\000"
 19580      41434355 
 19580      4D5F4642 
 19580      49545F5F 
 19580      20333200 
 19581              	.LASF74:
 19582 024f 5F5F5743 		.ascii	"__WCHAR_MAX__ 0xffffffffU\000"
 19582      4841525F 
 19582      4D41585F 
 19582      5F203078 
 19582      66666666 
 19583              	.LASF291:
 19584 0269 5F5F4143 		.ascii	"__ACCUM_MIN__ (-0X1P15K-0X1P15K)\000"
 19584      43554D5F 
 19584      4D494E5F 
 19584      5F20282D 
 19584      30583150 
 19585              	.LASF831:
 19586 028a 5F6F7574 		.ascii	"_out_fct\000"
 19586      5F666374 
 19586      00
 19587              	.LASF718:
 19588 0293 464C545F 		.ascii	"FLT_MIN\000"
 19588      4D494E00 
 19589              	.LASF471:
 19590 029b 494E5436 		.ascii	"INT64_MAX __INT64_MAX__\000"
 19590      345F4D41 
 19590      58205F5F 
 19590      494E5436 
 19590      345F4D41 
 19591              	.LASF532:
 19592 02b3 494E544D 		.ascii	"INTMAX_MIN\000"
 19592      41585F4D 
 19592      494E00
 19593              	.LASF19:
 19594 02be 5F5F5349 		.ascii	"__SIZEOF_LONG_LONG__ 8\000"
 19594      5A454F46 
 19594      5F4C4F4E 
 19594      475F4C4F 
 19594      4E475F5F 
 19595              	.LASF167:
 19596 02d5 5F5F4442 		.ascii	"__DBL_MAX_10_EXP__ 308\000"
 19596      4C5F4D41 
 19596      585F3130 
 19596      5F455850 
 19596      5F5F2033 
 19597              	.LASF251:
 19598 02ec 5F5F4652 		.ascii	"__FRACT_MIN__ (-0.5R-0.5R)\000"
 19598      4143545F 
ARM GAS  /tmp/ccFy9xbE.s 			page 381


 19598      4D494E5F 
 19598      5F20282D 
 19598      302E3552 
 19599              	.LASF815:
 19600 0307 5F6F7574 		.ascii	"_out_buffer\000"
 19600      5F627566 
 19600      66657200 
 19601              	.LASF317:
 19602 0313 5F5F554C 		.ascii	"__ULLACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULLK\000"
 19602      4C414343 
 19602      554D5F4D 
 19602      41585F5F 
 19602      20305846 
 19603              	.LASF287:
 19604 033f 5F5F5553 		.ascii	"__USACCUM_MAX__ 0XFFFFP-8UHK\000"
 19604      41434355 
 19604      4D5F4D41 
 19604      585F5F20 
 19604      30584646 
 19605              	.LASF239:
 19606 035c 5F5F5346 		.ascii	"__SFRACT_FBIT__ 7\000"
 19606      52414354 
 19606      5F464249 
 19606      545F5F20 
 19606      3700
 19607              	.LASF93:
 19608 036e 5F5F494E 		.ascii	"__INTMAX_WIDTH__ 64\000"
 19608      544D4158 
 19608      5F574944 
 19608      54485F5F 
 19608      20363400 
 19609              	.LASF437:
 19610 0382 5F5F4152 		.ascii	"__ARM_FEATURE_BF16_SCALAR_ARITHMETIC\000"
 19610      4D5F4645 
 19610      41545552 
 19610      455F4246 
 19610      31365F53 
 19611              	.LASF324:
 19612 03a7 5F5F5351 		.ascii	"__SQ_IBIT__ 0\000"
 19612      5F494249 
 19612      545F5F20 
 19612      3000
 19613              	.LASF29:
 19614 03b5 5F5F4F52 		.ascii	"__ORDER_PDP_ENDIAN__ 3412\000"
 19614      4445525F 
 19614      5044505F 
 19614      454E4449 
 19614      414E5F5F 
 19615              	.LASF33:
 19616 03cf 5F5F5349 		.ascii	"__SIZE_TYPE__ unsigned int\000"
 19616      5A455F54 
 19616      5950455F 
 19616      5F20756E 
 19616      7369676E 
 19617              	.LASF719:
 19618 03ea 44424C5F 		.ascii	"DBL_MIN\000"
 19618      4D494E00 
ARM GAS  /tmp/ccFy9xbE.s 			page 382


 19619              	.LASF158:
 19620 03f2 5F5F464C 		.ascii	"__FLT_HAS_DENORM__ 1\000"
 19620      545F4841 
 19620      535F4445 
 19620      4E4F524D 
 19620      5F5F2031 
 19621              	.LASF42:
 19622 0407 5F5F494E 		.ascii	"__INT8_TYPE__ signed char\000"
 19622      54385F54 
 19622      5950455F 
 19622      5F207369 
 19622      676E6564 
 19623              	.LASF202:
 19624 0421 5F5F464C 		.ascii	"__FLT32_MIN__ 1.1754943508222875e-38F32\000"
 19624      5433325F 
 19624      4D494E5F 
 19624      5F20312E 
 19624      31373534 
 19625              	.LASF444:
 19626 0449 54415247 		.ascii	"TARGET_PLAYDATE 1\000"
 19626      45545F50 
 19626      4C415944 
 19626      41544520 
 19626      3100
 19627              	.LASF286:
 19628 045b 5F5F5553 		.ascii	"__USACCUM_MIN__ 0.0UHK\000"
 19628      41434355 
 19628      4D5F4D49 
 19628      4E5F5F20 
 19628      302E3055 
 19629              	.LASF199:
 19630 0472 5F5F464C 		.ascii	"__FLT32_DECIMAL_DIG__ 9\000"
 19630      5433325F 
 19630      44454349 
 19630      4D414C5F 
 19630      4449475F 
 19631              	.LASF179:
 19632 048a 5F5F4C44 		.ascii	"__LDBL_MIN_EXP__ (-1021)\000"
 19632      424C5F4D 
 19632      494E5F45 
 19632      58505F5F 
 19632      20282D31 
 19633              	.LASF177:
 19634 04a3 5F5F4C44 		.ascii	"__LDBL_MANT_DIG__ 53\000"
 19634      424C5F4D 
 19634      414E545F 
 19634      4449475F 
 19634      5F203533 
 19635              	.LASF473:
 19636 04b8 494E5436 		.ascii	"INT64_MIN (-INT64_MAX - 1)\000"
 19636      345F4D49 
 19636      4E20282D 
 19636      494E5436 
 19636      345F4D41 
 19637              	.LASF725:
 19638 04d3 464C545F 		.ascii	"FLT_ROUNDS 1\000"
 19638      524F554E 
ARM GAS  /tmp/ccFy9xbE.s 			page 383


 19638      44532031 
 19638      00
 19639              	.LASF118:
 19640 04e0 5F5F5549 		.ascii	"__UINT8_C(c) c\000"
 19640      4E54385F 
 19640      43286329 
 19640      206300
 19641              	.LASF43:
 19642 04ef 5F5F494E 		.ascii	"__INT16_TYPE__ short int\000"
 19642      5431365F 
 19642      54595045 
 19642      5F5F2073 
 19642      686F7274 
 19643              	.LASF216:
 19644 0508 5F5F464C 		.ascii	"__FLT64_MAX__ 1.7976931348623157e+308F64\000"
 19644      5436345F 
 19644      4D41585F 
 19644      5F20312E 
 19644      37393736 
 19645              	.LASF302:
 19646 0531 5F5F4C41 		.ascii	"__LACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LK\000"
 19646      4343554D 
 19646      5F4D4158 
 19646      5F5F2030 
 19646      58374646 
 19647              	.LASF516:
 19648 0559 55494E54 		.ascii	"UINT_FAST32_MAX\000"
 19648      5F464153 
 19648      5433325F 
 19648      4D415800 
 19649              	.LASF792:
 19650 0569 6D696E77 		.ascii	"minwidth\000"
 19650      69647468 
 19650      00
 19651              	.LASF227:
 19652 0572 5F5F464C 		.ascii	"__FLT32X_MIN_10_EXP__ (-307)\000"
 19652      54333258 
 19652      5F4D494E 
 19652      5F31305F 
 19652      4558505F 
 19653              	.LASF519:
 19654 058f 494E545F 		.ascii	"INT_FAST64_MAX __INT_FAST64_MAX__\000"
 19654      46415354 
 19654      36345F4D 
 19654      4158205F 
 19654      5F494E54 
 19655              	.LASF359:
 19656 05b1 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1\000"
 19656      435F4841 
 19656      56455F53 
 19656      594E435F 
 19656      434F4D50 
 19657              	.LASF737:
 19658 05d6 44424C5F 		.ascii	"DBL_HAS_SUBNORM\000"
 19658      4841535F 
 19658      5355424E 
 19658      4F524D00 
ARM GAS  /tmp/ccFy9xbE.s 			page 384


 19659              	.LASF678:
 19660 05e6 4C44424C 		.ascii	"LDBL_DIG\000"
 19660      5F444947 
 19660      00
 19661              	.LASF68:
 19662 05ef 5F5F4758 		.ascii	"__GXX_ABI_VERSION 1014\000"
 19662      585F4142 
 19662      495F5645 
 19662      5253494F 
 19662      4E203130 
 19663              	.LASF4:
 19664 0606 5F5F5354 		.ascii	"__STDC_HOSTED__ 1\000"
 19664      44435F48 
 19664      4F535445 
 19664      445F5F20 
 19664      3100
 19665              	.LASF274:
 19666 0618 5F5F554C 		.ascii	"__ULLFRACT_FBIT__ 64\000"
 19666      4C465241 
 19666      43545F46 
 19666      4249545F 
 19666      5F203634 
 19667              	.LASF41:
 19668 062d 5F5F5349 		.ascii	"__SIG_ATOMIC_TYPE__ int\000"
 19668      475F4154 
 19668      4F4D4943 
 19668      5F545950 
 19668      455F5F20 
 19669              	.LASF61:
 19670 0645 5F5F494E 		.ascii	"__INT_FAST64_TYPE__ long long int\000"
 19670      545F4641 
 19670      53543634 
 19670      5F545950 
 19670      455F5F20 
 19671              	.LASF36:
 19672 0667 5F5F5749 		.ascii	"__WINT_TYPE__ unsigned int\000"
 19672      4E545F54 
 19672      5950455F 
 19672      5F20756E 
 19672      7369676E 
 19673              	.LASF603:
 19674 0682 5F5F5349 		.ascii	"__SIZE_T__ \000"
 19674      5A455F54 
 19674      5F5F2000 
 19675              	.LASF467:
 19676 068e 494E5433 		.ascii	"INT32_MIN (-INT32_MAX - 1)\000"
 19676      325F4D49 
 19676      4E20282D 
 19676      494E5433 
 19676      325F4D41 
 19677              	.LASF198:
 19678 06a9 5F5F464C 		.ascii	"__FLT32_MAX_10_EXP__ 38\000"
 19678      5433325F 
 19678      4D41585F 
 19678      31305F45 
 19678      58505F5F 
 19679              	.LASF746:
ARM GAS  /tmp/ccFy9xbE.s 			page 385


 19680 06c1 44424C5F 		.ascii	"DBL_TRUE_MIN __DBL_DENORM_MIN__\000"
 19680      54525545 
 19680      5F4D494E 
 19680      205F5F44 
 19680      424C5F44 
 19681              	.LASF247:
 19682 06e1 5F5F5553 		.ascii	"__USFRACT_MAX__ 0XFFP-8UHR\000"
 19682      46524143 
 19682      545F4D41 
 19682      585F5F20 
 19682      30584646 
 19683              	.LASF208:
 19684 06fc 5F5F4650 		.ascii	"__FP_FAST_FMAF32 1\000"
 19684      5F464153 
 19684      545F464D 
 19684      41463332 
 19684      203100
 19685              	.LASF139:
 19686 070f 5F5F5549 		.ascii	"__UINTPTR_MAX__ 0xffffffffU\000"
 19686      4E545054 
 19686      525F4D41 
 19686      585F5F20 
 19686      30786666 
 19687              	.LASF636:
 19688 072b 5F5F6E65 		.ascii	"__need_wchar_t\000"
 19688      65645F77 
 19688      63686172 
 19688      5F7400
 19689              	.LASF195:
 19690 073a 5F5F464C 		.ascii	"__FLT32_MIN_EXP__ (-125)\000"
 19690      5433325F 
 19690      4D494E5F 
 19690      4558505F 
 19690      5F20282D 
 19691              	.LASF469:
 19692 0753 55494E54 		.ascii	"UINT32_MAX __UINT32_MAX__\000"
 19692      33325F4D 
 19692      4158205F 
 19692      5F55494E 
 19692      5433325F 
 19693              	.LASF597:
 19694 076d 5F425344 		.ascii	"_BSD_PTRDIFF_T_ \000"
 19694      5F505452 
 19694      44494646 
 19694      5F545F20 
 19694      00
 19695              	.LASF264:
 19696 077e 5F5F554C 		.ascii	"__ULFRACT_FBIT__ 32\000"
 19696      46524143 
 19696      545F4642 
 19696      49545F5F 
 19696      20333200 
 19697              	.LASF212:
 19698 0792 5F5F464C 		.ascii	"__FLT64_MIN_10_EXP__ (-307)\000"
 19698      5436345F 
 19698      4D494E5F 
 19698      31305F45 
ARM GAS  /tmp/ccFy9xbE.s 			page 386


 19698      58505F5F 
 19699              	.LASF618:
 19700 07ae 5F5F7369 		.ascii	"__size_t \000"
 19700      7A655F74 
 19700      2000
 19701              	.LASF690:
 19702 07b8 4C44424C 		.ascii	"LDBL_MIN_10_EXP\000"
 19702      5F4D494E 
 19702      5F31305F 
 19702      45585000 
 19703              	.LASF132:
 19704 07c8 5F5F494E 		.ascii	"__INT_FAST64_WIDTH__ 64\000"
 19704      545F4641 
 19704      53543634 
 19704      5F574944 
 19704      54485F5F 
 19705              	.LASF495:
 19706 07e0 494E545F 		.ascii	"INT_LEAST64_MAX __INT_LEAST64_MAX__\000"
 19706      4C454153 
 19706      5436345F 
 19706      4D415820 
 19706      5F5F494E 
 19707              	.LASF243:
 19708 0804 5F5F5346 		.ascii	"__SFRACT_EPSILON__ 0x1P-7HR\000"
 19708      52414354 
 19708      5F455053 
 19708      494C4F4E 
 19708      5F5F2030 
 19709              	.LASF607:
 19710 0820 5F545F53 		.ascii	"_T_SIZE \000"
 19710      495A4520 
 19710      00
 19711              	.LASF165:
 19712 0829 5F5F4442 		.ascii	"__DBL_MIN_10_EXP__ (-307)\000"
 19712      4C5F4D49 
 19712      4E5F3130 
 19712      5F455850 
 19712      5F5F2028 
 19713              	.LASF567:
 19714 0843 55494E54 		.ascii	"UINT32_C(c) __UINT32_C(c)\000"
 19714      33325F43 
 19714      28632920 
 19714      5F5F5549 
 19714      4E543332 
 19715              	.LASF28:
 19716 085d 5F5F4F52 		.ascii	"__ORDER_BIG_ENDIAN__ 4321\000"
 19716      4445525F 
 19716      4249475F 
 19716      454E4449 
 19716      414E5F5F 
 19717              	.LASF544:
 19718 0877 53495A45 		.ascii	"SIZE_MAX\000"
 19718      5F4D4158 
 19718      00
 19719              	.LASF323:
 19720 0880 5F5F5351 		.ascii	"__SQ_FBIT__ 31\000"
 19720      5F464249 
ARM GAS  /tmp/ccFy9xbE.s 			page 387


 19720      545F5F20 
 19720      333100
 19721              	.LASF789:
 19722 088f 636F6E76 		.ascii	"conv\000"
 19722      00
 19723              	.LASF717:
 19724 0894 4C44424C 		.ascii	"LDBL_EPSILON __LDBL_EPSILON__\000"
 19724      5F455053 
 19724      494C4F4E 
 19724      205F5F4C 
 19724      44424C5F 
 19725              	.LASF353:
 19726 08b2 5F5F5554 		.ascii	"__UTA_FBIT__ 64\000"
 19726      415F4642 
 19726      49545F5F 
 19726      20363400 
 19727              	.LASF328:
 19728 08c2 5F5F5451 		.ascii	"__TQ_IBIT__ 0\000"
 19728      5F494249 
 19728      545F5F20 
 19728      3000
 19729              	.LASF524:
 19730 08d0 494E5450 		.ascii	"INTPTR_MAX\000"
 19730      54525F4D 
 19730      415800
 19731              	.LASF331:
 19732 08db 5F5F5548 		.ascii	"__UHQ_FBIT__ 16\000"
 19732      515F4642 
 19732      49545F5F 
 19732      20313600 
 19733              	.LASF211:
 19734 08eb 5F5F464C 		.ascii	"__FLT64_MIN_EXP__ (-1021)\000"
 19734      5436345F 
 19734      4D494E5F 
 19734      4558505F 
 19734      5F20282D 
 19735              	.LASF87:
 19736 0905 5F5F5054 		.ascii	"__PTRDIFF_WIDTH__ 32\000"
 19736      52444946 
 19736      465F5749 
 19736      4454485F 
 19736      5F203332 
 19737              	.LASF133:
 19738 091a 5F5F5549 		.ascii	"__UINT_FAST8_MAX__ 0xffffffffU\000"
 19738      4E545F46 
 19738      41535438 
 19738      5F4D4158 
 19738      5F5F2030 
 19739              	.LASF565:
 19740 0939 55494E54 		.ascii	"UINT16_C(c) __UINT16_C(c)\000"
 19740      31365F43 
 19740      28632920 
 19740      5F5F5549 
 19740      4E543136 
 19741              	.LASF300:
 19742 0953 5F5F4C41 		.ascii	"__LACCUM_IBIT__ 32\000"
 19742      4343554D 
ARM GAS  /tmp/ccFy9xbE.s 			page 388


 19742      5F494249 
 19742      545F5F20 
 19742      333200
 19743              	.LASF128:
 19744 0966 5F5F494E 		.ascii	"__INT_FAST16_WIDTH__ 32\000"
 19744      545F4641 
 19744      53543136 
 19744      5F574944 
 19744      54485F5F 
 19745              	.LASF570:
 19746 097e 494E544D 		.ascii	"INTMAX_C\000"
 19746      41585F43 
 19746      00
 19747              	.LASF411:
 19748 0987 5F5F5646 		.ascii	"__VFP_FP__ 1\000"
 19748      505F4650 
 19748      5F5F2031 
 19748      00
 19749              	.LASF271:
 19750 0994 5F5F4C4C 		.ascii	"__LLFRACT_MIN__ (-0.5LLR-0.5LLR)\000"
 19750      46524143 
 19750      545F4D49 
 19750      4E5F5F20 
 19750      282D302E 
 19751              	.LASF500:
 19752 09b5 494E545F 		.ascii	"INT_FAST8_MAX\000"
 19752      46415354 
 19752      385F4D41 
 19752      5800
 19753              	.LASF816:
 19754 09c3 5F5F6165 		.ascii	"__aeabi_dcmpeq\000"
 19754      6162695F 
 19754      64636D70 
 19754      657100
 19755              	.LASF134:
 19756 09d2 5F5F5549 		.ascii	"__UINT_FAST16_MAX__ 0xffffffffU\000"
 19756      4E545F46 
 19756      41535431 
 19756      365F4D41 
 19756      585F5F20 
 19757              	.LASF799:
 19758 09f2 64696666 		.ascii	"diff\000"
 19758      00
 19759              	.LASF561:
 19760 09f7 494E5436 		.ascii	"INT64_C(c) __INT64_C(c)\000"
 19760      345F4328 
 19760      6329205F 
 19760      5F494E54 
 19760      36345F43 
 19761              	.LASF783:
 19762 0a0f 69735F6C 		.ascii	"is_ll\000"
 19762      6C00
 19763              	.LASF137:
 19764 0a15 5F5F494E 		.ascii	"__INTPTR_MAX__ 0x7fffffff\000"
 19764      54505452 
 19764      5F4D4158 
 19764      5F5F2030 
ARM GAS  /tmp/ccFy9xbE.s 			page 389


 19764      78376666 
 19765              	.LASF658:
 19766 0a2f 464C4147 		.ascii	"FLAGS_SPACE (1U << 3U)\000"
 19766      535F5350 
 19766      41434520 
 19766      28315520 
 19766      3C3C2033 
 19767              	.LASF256:
 19768 0a46 5F5F5546 		.ascii	"__UFRACT_MIN__ 0.0UR\000"
 19768      52414354 
 19768      5F4D494E 
 19768      5F5F2030 
 19768      2E305552 
 19769              	.LASF424:
 19770 0a5b 5F5F5448 		.ascii	"__THUMB_INTERWORK__ 1\000"
 19770      554D425F 
 19770      494E5445 
 19770      52574F52 
 19770      4B5F5F20 
 19771              	.LASF587:
 19772 0a71 5F56415F 		.ascii	"_VA_LIST_T_H \000"
 19772      4C495354 
 19772      5F545F48 
 19772      2000
 19773              	.LASF653:
 19774 0a7f 5052494E 		.ascii	"PRINTF_SUPPORT_LONG_LONG \000"
 19774      54465F53 
 19774      5550504F 
 19774      52545F4C 
 19774      4F4E475F 
 19775              	.LASF237:
 19776 0a99 5F5F464C 		.ascii	"__FLT32X_HAS_INFINITY__ 1\000"
 19776      54333258 
 19776      5F484153 
 19776      5F494E46 
 19776      494E4954 
 19777              	.LASF511:
 19778 0ab3 55494E54 		.ascii	"UINT_FAST16_MAX __UINT_FAST16_MAX__\000"
 19778      5F464153 
 19778      5431365F 
 19778      4D415820 
 19778      5F5F5549 
 19779              	.LASF605:
 19780 0ad7 5F535953 		.ascii	"_SYS_SIZE_T_H \000"
 19780      5F53495A 
 19780      455F545F 
 19780      482000
 19781              	.LASF555:
 19782 0ae6 494E5438 		.ascii	"INT8_C(c) __INT8_C(c)\000"
 19782      5F432863 
 19782      29205F5F 
 19782      494E5438 
 19782      5F432863 
 19783              	.LASF827:
 19784 0afc 5F5F6165 		.ascii	"__aeabi_ui2d\000"
 19784      6162695F 
 19784      75693264 
ARM GAS  /tmp/ccFy9xbE.s 			page 390


 19784      00
 19785              	.LASF289:
 19786 0b09 5F5F4143 		.ascii	"__ACCUM_FBIT__ 15\000"
 19786      43554D5F 
 19786      46424954 
 19786      5F5F2031 
 19786      3500
 19787              	.LASF588:
 19788 0b1b 5F5F7661 		.ascii	"__va_list__ \000"
 19788      5F6C6973 
 19788      745F5F20 
 19788      00
 19789              	.LASF295:
 19790 0b28 5F5F5541 		.ascii	"__UACCUM_IBIT__ 16\000"
 19790      4343554D 
 19790      5F494249 
 19790      545F5F20 
 19790      313600
 19791              	.LASF751:
 19792 0b3b 6C6F6E67 		.ascii	"long int\000"
 19792      20696E74 
 19792      00
 19793              	.LASF456:
 19794 0b44 55494E54 		.ascii	"UINT8_MAX\000"
 19794      385F4D41 
 19794      5800
 19795              	.LASF545:
 19796 0b4e 53495A45 		.ascii	"SIZE_MAX __SIZE_MAX__\000"
 19796      5F4D4158 
 19796      205F5F53 
 19796      495A455F 
 19796      4D41585F 
 19797              	.LASF131:
 19798 0b64 5F5F494E 		.ascii	"__INT_FAST64_MAX__ 0x7fffffffffffffffLL\000"
 19798      545F4641 
 19798      53543634 
 19798      5F4D4158 
 19798      5F5F2030 
 19799              	.LASF230:
 19800 0b8c 5F5F464C 		.ascii	"__FLT32X_DECIMAL_DIG__ 17\000"
 19800      54333258 
 19800      5F444543 
 19800      494D414C 
 19800      5F444947 
 19801              	.LASF171:
 19802 0ba6 5F5F4442 		.ascii	"__DBL_MIN__ ((double)2.2250738585072014e-308L)\000"
 19802      4C5F4D49 
 19802      4E5F5F20 
 19802      2828646F 
 19802      75626C65 
 19803              	.LASF238:
 19804 0bd5 5F5F464C 		.ascii	"__FLT32X_HAS_QUIET_NAN__ 1\000"
 19804      54333258 
 19804      5F484153 
 19804      5F515549 
 19804      45545F4E 
 19805              	.LASF234:
ARM GAS  /tmp/ccFy9xbE.s 			page 391


 19806 0bf0 5F5F464C 		.ascii	"__FLT32X_EPSILON__ 2.2204460492503131e-16F32x\000"
 19806      54333258 
 19806      5F455053 
 19806      494C4F4E 
 19806      5F5F2032 
 19807              	.LASF736:
 19808 0c1e 464C545F 		.ascii	"FLT_HAS_SUBNORM\000"
 19808      4841535F 
 19808      5355424E 
 19808      4F524D00 
 19809              	.LASF58:
 19810 0c2e 5F5F494E 		.ascii	"__INT_FAST8_TYPE__ int\000"
 19810      545F4641 
 19810      5354385F 
 19810      54595045 
 19810      5F5F2069 
 19811              	.LASF351:
 19812 0c45 5F5F5544 		.ascii	"__UDA_FBIT__ 32\000"
 19812      415F4642 
 19812      49545F5F 
 19812      20333200 
 19813              	.LASF602:
 19814 0c55 5F5F7369 		.ascii	"__size_t__ \000"
 19814      7A655F74 
 19814      5F5F2000 
 19815              	.LASF214:
 19816 0c61 5F5F464C 		.ascii	"__FLT64_MAX_10_EXP__ 308\000"
 19816      5436345F 
 19816      4D41585F 
 19816      31305F45 
 19816      58505F5F 
 19817              	.LASF92:
 19818 0c7a 5F5F5549 		.ascii	"__UINTMAX_C(c) c ## ULL\000"
 19818      4E544D41 
 19818      585F4328 
 19818      63292063 
 19818      20232320 
 19819              	.LASF32:
 19820 0c92 5F5F5349 		.ascii	"__SIZEOF_POINTER__ 4\000"
 19820      5A454F46 
 19820      5F504F49 
 19820      4E544552 
 19820      5F5F2034 
 19821              	.LASF50:
 19822 0ca7 5F5F494E 		.ascii	"__INT_LEAST8_TYPE__ signed char\000"
 19822      545F4C45 
 19822      41535438 
 19822      5F545950 
 19822      455F5F20 
 19823              	.LASF362:
 19824 0cc7 5F5F4743 		.ascii	"__GCC_ATOMIC_BOOL_LOCK_FREE 2\000"
 19824      435F4154 
 19824      4F4D4943 
 19824      5F424F4F 
 19824      4C5F4C4F 
 19825              	.LASF522:
 19826 0ce5 55494E54 		.ascii	"UINT_FAST64_MAX\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 392


 19826      5F464153 
 19826      5436345F 
 19826      4D415800 
 19827              	.LASF512:
 19828 0cf5 494E545F 		.ascii	"INT_FAST32_MAX\000"
 19828      46415354 
 19828      33325F4D 
 19828      415800
 19829              	.LASF421:
 19830 0d04 5F5F4152 		.ascii	"__ARM_NEON__\000"
 19830      4D5F4E45 
 19830      4F4E5F5F 
 19830      00
 19831              	.LASF675:
 19832 0d11 4C44424C 		.ascii	"LDBL_MANT_DIG __LDBL_MANT_DIG__\000"
 19832      5F4D414E 
 19832      545F4449 
 19832      47205F5F 
 19832      4C44424C 
 19833              	.LASF197:
 19834 0d31 5F5F464C 		.ascii	"__FLT32_MAX_EXP__ 128\000"
 19834      5433325F 
 19834      4D41585F 
 19834      4558505F 
 19834      5F203132 
 19835              	.LASF481:
 19836 0d47 55494E54 		.ascii	"UINT_LEAST8_MAX __UINT_LEAST8_MAX__\000"
 19836      5F4C4541 
 19836      5354385F 
 19836      4D415820 
 19836      5F5F5549 
 19837              	.LASF38:
 19838 0d6b 5F5F5549 		.ascii	"__UINTMAX_TYPE__ long long unsigned int\000"
 19838      4E544D41 
 19838      585F5459 
 19838      50455F5F 
 19838      206C6F6E 
 19839              	.LASF277:
 19840 0d93 5F5F554C 		.ascii	"__ULLFRACT_MAX__ 0XFFFFFFFFFFFFFFFFP-64ULLR\000"
 19840      4C465241 
 19840      43545F4D 
 19840      41585F5F 
 19840      20305846 
 19841              	.LASF754:
 19842 0dbf 73686F72 		.ascii	"short unsigned int\000"
 19842      7420756E 
 19842      7369676E 
 19842      65642069 
 19842      6E7400
 19843              	.LASF813:
 19844 0dd2 5F6F7574 		.ascii	"_out_char\000"
 19844      5F636861 
 19844      7200
 19845              	.LASF505:
 19846 0ddc 55494E54 		.ascii	"UINT_FAST8_MAX __UINT_FAST8_MAX__\000"
 19846      5F464153 
 19846      54385F4D 
ARM GAS  /tmp/ccFy9xbE.s 			page 393


 19846      4158205F 
 19846      5F55494E 
 19847              	.LASF598:
 19848 0dfe 5F5F5F69 		.ascii	"___int_ptrdiff_t_h \000"
 19848      6E745F70 
 19848      74726469 
 19848      66665F74 
 19848      5F682000 
 19849              	.LASF614:
 19850 0e12 5F53495A 		.ascii	"_SIZE_T_DECLARED \000"
 19850      455F545F 
 19850      4445434C 
 19850      41524544 
 19850      2000
 19851              	.LASF457:
 19852 0e24 55494E54 		.ascii	"UINT8_MAX __UINT8_MAX__\000"
 19852      385F4D41 
 19852      58205F5F 
 19852      55494E54 
 19852      385F4D41 
 19853              	.LASF40:
 19854 0e3c 5F5F4348 		.ascii	"__CHAR32_TYPE__ long unsigned int\000"
 19854      41523332 
 19854      5F545950 
 19854      455F5F20 
 19854      6C6F6E67 
 19855              	.LASF542:
 19856 0e5e 5349475F 		.ascii	"SIG_ATOMIC_MIN\000"
 19856      41544F4D 
 19856      49435F4D 
 19856      494E00
 19857              	.LASF418:
 19858 0e6d 5F5F4152 		.ascii	"__ARM_FEATURE_FP16_VECTOR_ARITHMETIC\000"
 19858      4D5F4645 
 19858      41545552 
 19858      455F4650 
 19858      31365F56 
 19859              	.LASF767:
 19860 0e92 6F75745F 		.ascii	"out_fct_wrap\000"
 19860      6663745F 
 19860      77726170 
 19860      00
 19861              	.LASF135:
 19862 0e9f 5F5F5549 		.ascii	"__UINT_FAST32_MAX__ 0xffffffffU\000"
 19862      4E545F46 
 19862      41535433 
 19862      325F4D41 
 19862      585F5F20 
 19863              	.LASF150:
 19864 0ebf 5F5F464C 		.ascii	"__FLT_MAX_EXP__ 128\000"
 19864      545F4D41 
 19864      585F4558 
 19864      505F5F20 
 19864      31323800 
 19865              	.LASF18:
 19866 0ed3 5F5F5349 		.ascii	"__SIZEOF_LONG__ 4\000"
 19866      5A454F46 
ARM GAS  /tmp/ccFy9xbE.s 			page 394


 19866      5F4C4F4E 
 19866      475F5F20 
 19866      3400
 19867              	.LASF647:
 19868 0ee5 5052494E 		.ascii	"PRINTF_NTOA_BUFFER_SIZE 32U\000"
 19868      54465F4E 
 19868      544F415F 
 19868      42554646 
 19868      45525F53 
 19869              	.LASF666:
 19870 0f01 464C4147 		.ascii	"FLAGS_ADAPT_EXP (1U << 11U)\000"
 19870      535F4144 
 19870      4150545F 
 19870      45585020 
 19870      28315520 
 19871              	.LASF22:
 19872 0f1d 5F5F5349 		.ascii	"__SIZEOF_DOUBLE__ 8\000"
 19872      5A454F46 
 19872      5F444F55 
 19872      424C455F 
 19872      5F203800 
 19873              	.LASF113:
 19874 0f31 5F5F494E 		.ascii	"__INT_LEAST32_WIDTH__ 32\000"
 19874      545F4C45 
 19874      41535433 
 19874      325F5749 
 19874      4454485F 
 19875              	.LASF795:
 19876 0f4a 474E5520 		.ascii	"GNU C17 10.3.1 20210621 (release) -mthumb -mcpu=cor"
 19876      43313720 
 19876      31302E33 
 19876      2E312032 
 19876      30323130 
 19877 0f7d 7465782D 		.ascii	"tex-m7 -mfloat-abi=hard -mfpu=fpv5-sp-d16 -mword-re"
 19877      6D37202D 
 19877      6D666C6F 
 19877      61742D61 
 19877      62693D68 
 19878 0fb0 6C6F6361 		.ascii	"locations -march=armv7e-m+fpv5 -g3 -gdwarf-2 -O2 -f"
 19878      74696F6E 
 19878      73202D6D 
 19878      61726368 
 19878      3D61726D 
 19879 0fe3 616C6967 		.ascii	"align-functions=16 -fomit-frame-pointer -fno-common"
 19879      6E2D6675 
 19879      6E637469 
 19879      6F6E733D 
 19879      3136202D 
 19880 1016 202D6666 		.ascii	" -ffunction-sections -fdata-sections\000"
 19880      756E6374 
 19880      696F6E2D 
 19880      73656374 
 19880      696F6E73 
 19881              	.LASF825:
 19882 103b 5F5F6165 		.ascii	"__aeabi_dcmpge\000"
 19882      6162695F 
 19882      64636D70 
ARM GAS  /tmp/ccFy9xbE.s 			page 395


 19882      676500
 19883              	.LASF817:
 19884 104a 5F5F6165 		.ascii	"__aeabi_dcmpgt\000"
 19884      6162695F 
 19884      64636D70 
 19884      677400
 19885              	.LASF149:
 19886 1059 5F5F464C 		.ascii	"__FLT_MIN_10_EXP__ (-37)\000"
 19886      545F4D49 
 19886      4E5F3130 
 19886      5F455850 
 19886      5F5F2028 
 19887              	.LASF571:
 19888 1072 494E544D 		.ascii	"INTMAX_C(c) __INTMAX_C(c)\000"
 19888      41585F43 
 19888      28632920 
 19888      5F5F494E 
 19888      544D4158 
 19889              	.LASF152:
 19890 108c 5F5F464C 		.ascii	"__FLT_DECIMAL_DIG__ 9\000"
 19890      545F4445 
 19890      43494D41 
 19890      4C5F4449 
 19890      475F5F20 
 19891              	.LASF405:
 19892 10a2 5F5F7468 		.ascii	"__thumb__ 1\000"
 19892      756D625F 
 19892      5F203100 
 19893              	.LASF111:
 19894 10ae 5F5F494E 		.ascii	"__INT_LEAST32_MAX__ 0x7fffffffL\000"
 19894      545F4C45 
 19894      41535433 
 19894      325F4D41 
 19894      585F5F20 
 19895              	.LASF749:
 19896 10ce 7369676E 		.ascii	"signed char\000"
 19896      65642063 
 19896      68617200 
 19897              	.LASF452:
 19898 10da 494E5438 		.ascii	"INT8_MAX\000"
 19898      5F4D4158 
 19898      00
 19899              	.LASF533:
 19900 10e3 494E544D 		.ascii	"INTMAX_MIN (-INTMAX_MAX - 1)\000"
 19900      41585F4D 
 19900      494E2028 
 19900      2D494E54 
 19900      4D41585F 
 19901              	.LASF791:
 19902 1100 65787076 		.ascii	"expval\000"
 19902      616C00
 19903              	.LASF559:
 19904 1107 494E5433 		.ascii	"INT32_C(c) __INT32_C(c)\000"
 19904      325F4328 
 19904      6329205F 
 19904      5F494E54 
 19904      33325F43 
ARM GAS  /tmp/ccFy9xbE.s 			page 396


 19905              	.LASF674:
 19906 111f 44424C5F 		.ascii	"DBL_MANT_DIG __DBL_MANT_DIG__\000"
 19906      4D414E54 
 19906      5F444947 
 19906      205F5F44 
 19906      424C5F4D 
 19907              	.LASF357:
 19908 113d 5F5F474E 		.ascii	"__GNUC_STDC_INLINE__ 1\000"
 19908      55435F53 
 19908      5444435F 
 19908      494E4C49 
 19908      4E455F5F 
 19909              	.LASF249:
 19910 1154 5F5F4652 		.ascii	"__FRACT_FBIT__ 15\000"
 19910      4143545F 
 19910      46424954 
 19910      5F5F2031 
 19910      3500
 19911              	.LASF313:
 19912 1166 5F5F4C4C 		.ascii	"__LLACCUM_EPSILON__ 0x1P-31LLK\000"
 19912      41434355 
 19912      4D5F4550 
 19912      53494C4F 
 19912      4E5F5F20 
 19913              	.LASF7:
 19914 1185 5F5F474E 		.ascii	"__GNUC_PATCHLEVEL__ 1\000"
 19914      55435F50 
 19914      41544348 
 19914      4C455645 
 19914      4C5F5F20 
 19915              	.LASF365:
 19916 119b 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\000"
 19916      435F4154 
 19916      4F4D4943 
 19916      5F434841 
 19916      5233325F 
 19917              	.LASF538:
 19918 11bd 50545244 		.ascii	"PTRDIFF_MIN\000"
 19918      4946465F 
 19918      4D494E00 
 19919              	.LASF119:
 19920 11c9 5F5F5549 		.ascii	"__UINT_LEAST16_MAX__ 0xffff\000"
 19920      4E545F4C 
 19920      45415354 
 19920      31365F4D 
 19920      41585F5F 
 19921              	.LASF676:
 19922 11e5 464C545F 		.ascii	"FLT_DIG\000"
 19922      44494700 
 19923              	.LASF529:
 19924 11ed 55494E54 		.ascii	"UINTPTR_MAX __UINTPTR_MAX__\000"
 19924      5054525F 
 19924      4D415820 
 19924      5F5F5549 
 19924      4E545054 
 19925              	.LASF1:
 19926 1209 5F5F5354 		.ascii	"__STDC_VERSION__ 201710L\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 397


 19926      44435F56 
 19926      45525349 
 19926      4F4E5F5F 
 19926      20323031 
 19927              	.LASF147:
 19928 1222 5F5F464C 		.ascii	"__FLT_DIG__ 6\000"
 19928      545F4449 
 19928      475F5F20 
 19928      3600
 19929              	.LASF552:
 19930 1230 57494E54 		.ascii	"WINT_MIN\000"
 19930      5F4D494E 
 19930      00
 19931              	.LASF794:
 19932 1239 73746172 		.ascii	"start_idx\000"
 19932      745F6964 
 19932      7800
 19933              	.LASF613:
 19934 1243 5F425344 		.ascii	"_BSD_SIZE_T_DEFINED_ \000"
 19934      5F53495A 
 19934      455F545F 
 19934      44454649 
 19934      4E45445F 
 19935              	.LASF64:
 19936 1259 5F5F5549 		.ascii	"__UINT_FAST32_TYPE__ unsigned int\000"
 19936      4E545F46 
 19936      41535433 
 19936      325F5459 
 19936      50455F5F 
 19937              	.LASF615:
 19938 127b 5F5F5F69 		.ascii	"___int_size_t_h \000"
 19938      6E745F73 
 19938      697A655F 
 19938      745F6820 
 19938      00
 19939              	.LASF3:
 19940 128c 5F5F5354 		.ascii	"__STDC_UTF_32__ 1\000"
 19940      44435F55 
 19940      54465F33 
 19940      325F5F20 
 19940      3100
 19941              	.LASF21:
 19942 129e 5F5F5349 		.ascii	"__SIZEOF_FLOAT__ 4\000"
 19942      5A454F46 
 19942      5F464C4F 
 19942      41545F5F 
 19942      203400
 19943              	.LASF235:
 19944 12b1 5F5F464C 		.ascii	"__FLT32X_DENORM_MIN__ 4.9406564584124654e-324F32x\000"
 19944      54333258 
 19944      5F44454E 
 19944      4F524D5F 
 19944      4D494E5F 
 19945              	.LASF474:
 19946 12e3 55494E54 		.ascii	"UINT64_MAX\000"
 19946      36345F4D 
 19946      415800
ARM GAS  /tmp/ccFy9xbE.s 			page 398


 19947              	.LASF151:
 19948 12ee 5F5F464C 		.ascii	"__FLT_MAX_10_EXP__ 38\000"
 19948      545F4D41 
 19948      585F3130 
 19948      5F455850 
 19948      5F5F2033 
 19949              	.LASF252:
 19950 1304 5F5F4652 		.ascii	"__FRACT_MAX__ 0X7FFFP-15R\000"
 19950      4143545F 
 19950      4D41585F 
 19950      5F203058 
 19950      37464646 
 19951              	.LASF489:
 19952 131e 494E545F 		.ascii	"INT_LEAST32_MAX __INT_LEAST32_MAX__\000"
 19952      4C454153 
 19952      5433325F 
 19952      4D415820 
 19952      5F5F494E 
 19953              	.LASF572:
 19954 1342 55494E54 		.ascii	"UINTMAX_C\000"
 19954      4D41585F 
 19954      4300
 19955              	.LASF129:
 19956 134c 5F5F494E 		.ascii	"__INT_FAST32_MAX__ 0x7fffffff\000"
 19956      545F4641 
 19956      53543332 
 19956      5F4D4158 
 19956      5F5F2030 
 19957              	.LASF10:
 19958 136a 5F5F4154 		.ascii	"__ATOMIC_SEQ_CST 5\000"
 19958      4F4D4943 
 19958      5F534551 
 19958      5F435354 
 19958      203500
 19959              	.LASF102:
 19960 137d 5F5F5549 		.ascii	"__UINT16_MAX__ 0xffff\000"
 19960      4E543136 
 19960      5F4D4158 
 19960      5F5F2030 
 19960      78666666 
 19961              	.LASF327:
 19962 1393 5F5F5451 		.ascii	"__TQ_FBIT__ 127\000"
 19962      5F464249 
 19962      545F5F20 
 19962      31323700 
 19963              	.LASF333:
 19964 13a3 5F5F5553 		.ascii	"__USQ_FBIT__ 32\000"
 19964      515F4642 
 19964      49545F5F 
 19964      20333200 
 19965              	.LASF508:
 19966 13b3 494E545F 		.ascii	"INT_FAST16_MIN\000"
 19966      46415354 
 19966      31365F4D 
 19966      494E00
 19967              	.LASF406:
 19968 13c2 5F5F7468 		.ascii	"__thumb2__ 1\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 399


 19968      756D6232 
 19968      5F5F2031 
 19968      00
 19969              	.LASF314:
 19970 13cf 5F5F554C 		.ascii	"__ULLACCUM_FBIT__ 32\000"
 19970      4C414343 
 19970      554D5F46 
 19970      4249545F 
 19970      5F203332 
 19971              	.LASF723:
 19972 13e4 4C44424C 		.ascii	"LDBL_MIN __LDBL_MIN__\000"
 19972      5F4D494E 
 19972      205F5F4C 
 19972      44424C5F 
 19972      4D494E5F 
 19973              	.LASF760:
 19974 13fa 5F5F676E 		.ascii	"__gnuc_va_list\000"
 19974      75635F76 
 19974      615F6C69 
 19974      737400
 19975              	.LASF784:
 19976 1409 5F426F6F 		.ascii	"_Bool\000"
 19976      6C00
 19977              	.LASF515:
 19978 140f 494E545F 		.ascii	"INT_FAST32_MIN (-INT_FAST32_MAX - 1)\000"
 19978      46415354 
 19978      33325F4D 
 19978      494E2028 
 19978      2D494E54 
 19979              	.LASF611:
 19980 1434 5F53495A 		.ascii	"_SIZE_T_DEFINED_ \000"
 19980      455F545F 
 19980      44454649 
 19980      4E45445F 
 19980      2000
 19981              	.LASF637:
 19982 1446 4E554C4C 		.ascii	"NULL\000"
 19982      00
 19983              	.LASF818:
 19984 144b 5F5F6165 		.ascii	"__aeabi_dcmplt\000"
 19984      6162695F 
 19984      64636D70 
 19984      6C7400
 19985              	.LASF788:
 19986 145a 6E656761 		.ascii	"negative\000"
 19986      74697665 
 19986      00
 19987              	.LASF782:
 19988 1463 76616C75 		.ascii	"value\000"
 19988      6500
 19989              	.LASF563:
 19990 1469 55494E54 		.ascii	"UINT8_C(c) __UINT8_C(c)\000"
 19990      385F4328 
 19990      6329205F 
 19990      5F55494E 
 19990      54385F43 
 19991              	.LASF23:
ARM GAS  /tmp/ccFy9xbE.s 			page 400


 19992 1481 5F5F5349 		.ascii	"__SIZEOF_LONG_DOUBLE__ 8\000"
 19992      5A454F46 
 19992      5F4C4F4E 
 19992      475F444F 
 19992      55424C45 
 19993              	.LASF35:
 19994 149a 5F5F5743 		.ascii	"__WCHAR_TYPE__ unsigned int\000"
 19994      4841525F 
 19994      54595045 
 19994      5F5F2075 
 19994      6E736967 
 19995              	.LASF551:
 19996 14b6 57494E54 		.ascii	"WINT_MAX __WINT_MAX__\000"
 19996      5F4D4158 
 19996      205F5F57 
 19996      494E545F 
 19996      4D41585F 
 19997              	.LASF765:
 19998 14cc 63686172 		.ascii	"char\000"
 19998      00
 19999              	.LASF350:
 20000 14d1 5F5F5553 		.ascii	"__USA_IBIT__ 16\000"
 20000      415F4942 
 20000      49545F5F 
 20000      20313600 
 20001              	.LASF360:
 20002 14e1 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1\000"
 20002      435F4841 
 20002      56455F53 
 20002      594E435F 
 20002      434F4D50 
 20003              	.LASF539:
 20004 1506 50545244 		.ascii	"PTRDIFF_MIN (-PTRDIFF_MAX - 1)\000"
 20004      4946465F 
 20004      4D494E20 
 20004      282D5054 
 20004      52444946 
 20005              	.LASF579:
 20006 1525 76615F73 		.ascii	"va_start(v,l) __builtin_va_start(v,l)\000"
 20006      74617274 
 20006      28762C6C 
 20006      29205F5F 
 20006      6275696C 
 20007              	.LASF65:
 20008 154b 5F5F5549 		.ascii	"__UINT_FAST64_TYPE__ long long unsigned int\000"
 20008      4E545F46 
 20008      41535436 
 20008      345F5459 
 20008      50455F5F 
 20009              	.LASF155:
 20010 1577 5F5F464C 		.ascii	"__FLT_MIN__ 1.1754943508222875e-38F\000"
 20010      545F4D49 
 20010      4E5F5F20 
 20010      312E3137 
 20010      35343934 
 20011              	.LASF339:
 20012 159b 5F5F4841 		.ascii	"__HA_FBIT__ 7\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 401


 20012      5F464249 
 20012      545F5F20 
 20012      3700
 20013              	.LASF714:
 20014 15a9 4C44424C 		.ascii	"LDBL_EPSILON\000"
 20014      5F455053 
 20014      494C4F4E 
 20014      00
 20015              	.LASF428:
 20016 15b6 5F5F4644 		.ascii	"__FDPIC__\000"
 20016      5049435F 
 20016      5F00
 20017              	.LASF520:
 20018 15c0 494E545F 		.ascii	"INT_FAST64_MIN\000"
 20018      46415354 
 20018      36345F4D 
 20018      494E00
 20019              	.LASF245:
 20020 15cf 5F5F5553 		.ascii	"__USFRACT_IBIT__ 0\000"
 20020      46524143 
 20020      545F4942 
 20020      49545F5F 
 20020      203000
 20021              	.LASF112:
 20022 15e2 5F5F494E 		.ascii	"__INT32_C(c) c ## L\000"
 20022      5433325F 
 20022      43286329 
 20022      20632023 
 20022      23204C00 
 20023              	.LASF188:
 20024 15f6 5F5F4C44 		.ascii	"__LDBL_EPSILON__ 2.2204460492503131e-16L\000"
 20024      424C5F45 
 20024      5053494C 
 20024      4F4E5F5F 
 20024      20322E32 
 20025              	.LASF823:
 20026 161f 5F5F6165 		.ascii	"__aeabi_d2iz\000"
 20026      6162695F 
 20026      6432697A 
 20026      00
 20027              	.LASF246:
 20028 162c 5F5F5553 		.ascii	"__USFRACT_MIN__ 0.0UHR\000"
 20028      46524143 
 20028      545F4D49 
 20028      4E5F5F20 
 20028      302E3055 
 20029              	.LASF422:
 20030 1643 5F5F4152 		.ascii	"__ARM_NEON\000"
 20030      4D5F4E45 
 20030      4F4E00
 20031              	.LASF661:
 20032 164e 464C4147 		.ascii	"FLAGS_CHAR (1U << 6U)\000"
 20032      535F4348 
 20032      41522028 
 20032      3155203C 
 20032      3C203655 
 20033              	.LASF101:
ARM GAS  /tmp/ccFy9xbE.s 			page 402


 20034 1664 5F5F5549 		.ascii	"__UINT8_MAX__ 0xff\000"
 20034      4E54385F 
 20034      4D41585F 
 20034      5F203078 
 20034      666600
 20035              	.LASF181:
 20036 1677 5F5F4C44 		.ascii	"__LDBL_MAX_EXP__ 1024\000"
 20036      424C5F4D 
 20036      41585F45 
 20036      58505F5F 
 20036      20313032 
 20037              	.LASF650:
 20038 168d 5052494E 		.ascii	"PRINTF_SUPPORT_EXPONENTIAL \000"
 20038      54465F53 
 20038      5550504F 
 20038      52545F45 
 20038      58504F4E 
 20039              	.LASF709:
 20040 16a9 464C545F 		.ascii	"FLT_MAX __FLT_MAX__\000"
 20040      4D415820 
 20040      5F5F464C 
 20040      545F4D41 
 20040      585F5F00 
 20041              	.LASF174:
 20042 16bd 5F5F4442 		.ascii	"__DBL_HAS_DENORM__ 1\000"
 20042      4C5F4841 
 20042      535F4445 
 20042      4E4F524D 
 20042      5F5F2031 
 20043              	.LASF685:
 20044 16d2 464C545F 		.ascii	"FLT_MIN_EXP __FLT_MIN_EXP__\000"
 20044      4D494E5F 
 20044      45585020 
 20044      5F5F464C 
 20044      545F4D49 
 20045              	.LASF667:
 20046 16ee 5F464C4F 		.ascii	"_FLOAT_H___ \000"
 20046      41545F48 
 20046      5F5F5F20 
 20046      00
 20047              	.LASF343:
 20048 16fb 5F5F4441 		.ascii	"__DA_FBIT__ 31\000"
 20048      5F464249 
 20048      545F5F20 
 20048      333100
 20049              	.LASF778:
 20050 170a 666C6167 		.ascii	"flags\000"
 20050      7300
 20051              	.LASF108:
 20052 1710 5F5F494E 		.ascii	"__INT_LEAST16_MAX__ 0x7fff\000"
 20052      545F4C45 
 20052      41535431 
 20052      365F4D41 
 20052      585F5F20 
 20053              	.LASF157:
 20054 172b 5F5F464C 		.ascii	"__FLT_DENORM_MIN__ 1.4012984643248171e-45F\000"
 20054      545F4445 
ARM GAS  /tmp/ccFy9xbE.s 			page 403


 20054      4E4F524D 
 20054      5F4D494E 
 20054      5F5F2031 
 20055              	.LASF477:
 20056 1756 494E545F 		.ascii	"INT_LEAST8_MAX __INT_LEAST8_MAX__\000"
 20056      4C454153 
 20056      54385F4D 
 20056      4158205F 
 20056      5F494E54 
 20057              	.LASF122:
 20058 1778 5F5F5549 		.ascii	"__UINT32_C(c) c ## UL\000"
 20058      4E543332 
 20058      5F432863 
 20058      29206320 
 20058      23232055 
 20059              	.LASF806:
 20060 178e 5F6E746F 		.ascii	"_ntoa_format\000"
 20060      615F666F 
 20060      726D6174 
 20060      00
 20061              	.LASF296:
 20062 179b 5F5F5541 		.ascii	"__UACCUM_MIN__ 0.0UK\000"
 20062      4343554D 
 20062      5F4D494E 
 20062      5F5F2030 
 20062      2E30554B 
 20063              	.LASF810:
 20064 17b0 5F737472 		.ascii	"_strnlen_s\000"
 20064      6E6C656E 
 20064      5F7300
 20065              	.LASF156:
 20066 17bb 5F5F464C 		.ascii	"__FLT_EPSILON__ 1.1920928955078125e-7F\000"
 20066      545F4550 
 20066      53494C4F 
 20066      4E5F5F20 
 20066      312E3139 
 20067              	.LASF290:
 20068 17e2 5F5F4143 		.ascii	"__ACCUM_IBIT__ 16\000"
 20068      43554D5F 
 20068      49424954 
 20068      5F5F2031 
 20068      3600
 20069              	.LASF34:
 20070 17f4 5F5F5054 		.ascii	"__PTRDIFF_TYPE__ int\000"
 20070      52444946 
 20070      465F5459 
 20070      50455F5F 
 20070      20696E74 
 20071              	.LASF408:
 20072 1809 5F5F4152 		.ascii	"__ARM_ARCH_ISA_THUMB\000"
 20072      4D5F4152 
 20072      43485F49 
 20072      53415F54 
 20072      48554D42 
 20073              	.LASF730:
 20074 181e 464C545F 		.ascii	"FLT_DECIMAL_DIG\000"
 20074      44454349 
ARM GAS  /tmp/ccFy9xbE.s 			page 404


 20074      4D414C5F 
 20074      44494700 
 20075              	.LASF298:
 20076 182e 5F5F5541 		.ascii	"__UACCUM_EPSILON__ 0x1P-16UK\000"
 20076      4343554D 
 20076      5F455053 
 20076      494C4F4E 
 20076      5F5F2030 
 20077              	.LASF436:
 20078 184b 5F5F4152 		.ascii	"__ARM_FEATURE_MATMUL_INT8\000"
 20078      4D5F4645 
 20078      41545552 
 20078      455F4D41 
 20078      544D554C 
 20079              	.LASF46:
 20080 1865 5F5F5549 		.ascii	"__UINT8_TYPE__ unsigned char\000"
 20080      4E54385F 
 20080      54595045 
 20080      5F5F2075 
 20080      6E736967 
 20081              	.LASF136:
 20082 1882 5F5F5549 		.ascii	"__UINT_FAST64_MAX__ 0xffffffffffffffffULL\000"
 20082      4E545F46 
 20082      41535436 
 20082      345F4D41 
 20082      585F5F20 
 20083              	.LASF367:
 20084 18ac 5F5F4743 		.ascii	"__GCC_ATOMIC_SHORT_LOCK_FREE 2\000"
 20084      435F4154 
 20084      4F4D4943 
 20084      5F53484F 
 20084      52545F4C 
 20085              	.LASF284:
 20086 18cb 5F5F5553 		.ascii	"__USACCUM_FBIT__ 8\000"
 20086      41434355 
 20086      4D5F4642 
 20086      49545F5F 
 20086      203800
 20087              	.LASF711:
 20088 18de 4C44424C 		.ascii	"LDBL_MAX __LDBL_MAX__\000"
 20088      5F4D4158 
 20088      205F5F4C 
 20088      44424C5F 
 20088      4D41585F 
 20089              	.LASF371:
 20090 18f4 5F5F4743 		.ascii	"__GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1\000"
 20090      435F4154 
 20090      4F4D4943 
 20090      5F544553 
 20090      545F414E 
 20091              	.LASF299:
 20092 1918 5F5F4C41 		.ascii	"__LACCUM_FBIT__ 31\000"
 20092      4343554D 
 20092      5F464249 
 20092      545F5F20 
 20092      333100
 20093              	.LASF586:
ARM GAS  /tmp/ccFy9xbE.s 			page 405


 20094 192b 5F56415F 		.ascii	"_VA_LIST_DEFINED \000"
 20094      4C495354 
 20094      5F444546 
 20094      494E4544 
 20094      2000
 20095              	.LASF671:
 20096 193d 44424C5F 		.ascii	"DBL_MANT_DIG\000"
 20096      4D414E54 
 20096      5F444947 
 20096      00
 20097              	.LASF207:
 20098 194a 5F5F464C 		.ascii	"__FLT32_HAS_QUIET_NAN__ 1\000"
 20098      5433325F 
 20098      4841535F 
 20098      51554945 
 20098      545F4E41 
 20099              	.LASF191:
 20100 1964 5F5F4C44 		.ascii	"__LDBL_HAS_INFINITY__ 1\000"
 20100      424C5F48 
 20100      41535F49 
 20100      4E46494E 
 20100      4954595F 
 20101              	.LASF345:
 20102 197c 5F5F5441 		.ascii	"__TA_FBIT__ 63\000"
 20102      5F464249 
 20102      545F5F20 
 20102      363300
 20103              	.LASF654:
 20104 198b 5052494E 		.ascii	"PRINTF_SUPPORT_PTRDIFF_T \000"
 20104      54465F53 
 20104      5550504F 
 20104      52545F50 
 20104      54524449 
 20105              	.LASF229:
 20106 19a5 5F5F464C 		.ascii	"__FLT32X_MAX_10_EXP__ 308\000"
 20106      54333258 
 20106      5F4D4158 
 20106      5F31305F 
 20106      4558505F 
 20107              	.LASF578:
 20108 19bf 5F5F474E 		.ascii	"__GNUC_VA_LIST \000"
 20108      55435F56 
 20108      415F4C49 
 20108      53542000 
 20109              	.LASF642:
 20110 19cf 7072696E 		.ascii	"printf printf_\000"
 20110      74662070 
 20110      72696E74 
 20110      665F00
 20111              	.LASF429:
 20112 19de 5F5F4152 		.ascii	"__ARM_ARCH_EXT_IDIV__ 1\000"
 20112      4D5F4152 
 20112      43485F45 
 20112      58545F49 
 20112      4449565F 
 20113              	.LASF447:
 20114 19f6 626F6F6C 		.ascii	"bool _Bool\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 406


 20114      205F426F 
 20114      6F6C00
 20115              	.LASF535:
 20116 1a01 55494E54 		.ascii	"UINTMAX_MAX __UINTMAX_MAX__\000"
 20116      4D41585F 
 20116      4D415820 
 20116      5F5F5549 
 20116      4E544D41 
 20117              	.LASF95:
 20118 1a1d 5F5F5349 		.ascii	"__SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)\000"
 20118      475F4154 
 20118      4F4D4943 
 20118      5F4D494E 
 20118      5F5F2028 
 20119              	.LASF117:
 20120 1a4a 5F5F5549 		.ascii	"__UINT_LEAST8_MAX__ 0xff\000"
 20120      4E545F4C 
 20120      45415354 
 20120      385F4D41 
 20120      585F5F20 
 20121              	.LASF627:
 20122 1a63 5F425344 		.ascii	"_BSD_WCHAR_T_ \000"
 20122      5F574348 
 20122      41525F54 
 20122      5F2000
 20123              	.LASF770:
 20124 1a72 62756666 		.ascii	"buffer\000"
 20124      657200
 20125              	.LASF459:
 20126 1a79 494E5431 		.ascii	"INT16_MAX __INT16_MAX__\000"
 20126      365F4D41 
 20126      58205F5F 
 20126      494E5431 
 20126      365F4D41 
 20127              	.LASF161:
 20128 1a91 5F5F4650 		.ascii	"__FP_FAST_FMAF 1\000"
 20128      5F464153 
 20128      545F464D 
 20128      41462031 
 20128      00
 20129              	.LASF797:
 20130 1aa2 2F686F6D 		.ascii	"/home/mchristensen/projects/ggj2024\000"
 20130      652F6D63 
 20130      68726973 
 20130      74656E73 
 20130      656E2F70 
 20131              	.LASF824:
 20132 1ac6 5F5F6165 		.ascii	"__aeabi_ddiv\000"
 20132      6162695F 
 20132      64646976 
 20132      00
 20133              	.LASF707:
 20134 1ad3 44424C5F 		.ascii	"DBL_MAX\000"
 20134      4D415800 
 20135              	.LASF680:
 20136 1adb 44424C5F 		.ascii	"DBL_DIG __DBL_DIG__\000"
 20136      44494720 
ARM GAS  /tmp/ccFy9xbE.s 			page 407


 20136      5F5F4442 
 20136      4C5F4449 
 20136      475F5F00 
 20137              	.LASF468:
 20138 1aef 55494E54 		.ascii	"UINT32_MAX\000"
 20138      33325F4D 
 20138      415800
 20139              	.LASF110:
 20140 1afa 5F5F494E 		.ascii	"__INT_LEAST16_WIDTH__ 16\000"
 20140      545F4C45 
 20140      41535431 
 20140      365F5749 
 20140      4454485F 
 20141              	.LASF665:
 20142 1b13 464C4147 		.ascii	"FLAGS_PRECISION (1U << 10U)\000"
 20142      535F5052 
 20142      45434953 
 20142      494F4E20 
 20142      28315520 
 20143              	.LASF144:
 20144 1b2f 5F5F4445 		.ascii	"__DEC_EVAL_METHOD__ 2\000"
 20144      435F4556 
 20144      414C5F4D 
 20144      4554484F 
 20144      445F5F20 
 20145              	.LASF419:
 20146 1b45 5F5F4152 		.ascii	"__ARM_FEATURE_FP16_FML\000"
 20146      4D5F4645 
 20146      41545552 
 20146      455F4650 
 20146      31365F46 
 20147              	.LASF804:
 20148 1b5c 64696769 		.ascii	"digit\000"
 20148      7400
 20149              	.LASF461:
 20150 1b62 494E5431 		.ascii	"INT16_MIN (-INT16_MAX - 1)\000"
 20150      365F4D49 
 20150      4E20282D 
 20150      494E5431 
 20150      365F4D41 
 20151              	.LASF248:
 20152 1b7d 5F5F5553 		.ascii	"__USFRACT_EPSILON__ 0x1P-8UHR\000"
 20152      46524143 
 20152      545F4550 
 20152      53494C4F 
 20152      4E5F5F20 
 20153              	.LASF638:
 20154 1b9b 4E554C4C 		.ascii	"NULL ((void *)0)\000"
 20154      20282876 
 20154      6F696420 
 20154      2A293029 
 20154      00
 20155              	.LASF244:
 20156 1bac 5F5F5553 		.ascii	"__USFRACT_FBIT__ 8\000"
 20156      46524143 
 20156      545F4642 
 20156      49545F5F 
ARM GAS  /tmp/ccFy9xbE.s 			page 408


 20156      203800
 20157              	.LASF312:
 20158 1bbf 5F5F4C4C 		.ascii	"__LLACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LLK\000"
 20158      41434355 
 20158      4D5F4D41 
 20158      585F5F20 
 20158      30583746 
 20159              	.LASF472:
 20160 1be9 494E5436 		.ascii	"INT64_MIN\000"
 20160      345F4D49 
 20160      4E00
 20161              	.LASF639:
 20162 1bf3 5F5F6E65 		.ascii	"__need_NULL\000"
 20162      65645F4E 
 20162      554C4C00 
 20163              	.LASF356:
 20164 1bff 5F5F5553 		.ascii	"__USER_LABEL_PREFIX__ \000"
 20164      45525F4C 
 20164      4142454C 
 20164      5F505245 
 20164      4649585F 
 20165              	.LASF104:
 20166 1c16 5F5F5549 		.ascii	"__UINT64_MAX__ 0xffffffffffffffffULL\000"
 20166      4E543634 
 20166      5F4D4158 
 20166      5F5F2030 
 20166      78666666 
 20167              	.LASF502:
 20168 1c3b 494E545F 		.ascii	"INT_FAST8_MIN\000"
 20168      46415354 
 20168      385F4D49 
 20168      4E00
 20169              	.LASF501:
 20170 1c49 494E545F 		.ascii	"INT_FAST8_MAX __INT_FAST8_MAX__\000"
 20170      46415354 
 20170      385F4D41 
 20170      58205F5F 
 20170      494E545F 
 20171              	.LASF652:
 20172 1c69 5052494E 		.ascii	"PRINTF_MAX_FLOAT 1e9\000"
 20172      54465F4D 
 20172      41585F46 
 20172      4C4F4154 
 20172      20316539 
 20173              	.LASF105:
 20174 1c7e 5F5F494E 		.ascii	"__INT_LEAST8_MAX__ 0x7f\000"
 20174      545F4C45 
 20174      41535438 
 20174      5F4D4158 
 20174      5F5F2030 
 20175              	.LASF372:
 20176 1c96 5F5F4743 		.ascii	"__GCC_ATOMIC_POINTER_LOCK_FREE 2\000"
 20176      435F4154 
 20176      4F4D4943 
 20176      5F504F49 
 20176      4E544552 
 20177              	.LASF380:
ARM GAS  /tmp/ccFy9xbE.s 			page 409


 20178 1cb7 5F5F4152 		.ascii	"__ARM_FEATURE_QBIT 1\000"
 20178      4D5F4645 
 20178      41545552 
 20178      455F5142 
 20178      49542031 
 20179              	.LASF393:
 20180 1ccc 5F5F4152 		.ascii	"__ARM_FEATURE_CLZ 1\000"
 20180      4D5F4645 
 20180      41545552 
 20180      455F434C 
 20180      5A203100 
 20181              	.LASF11:
 20182 1ce0 5F5F4154 		.ascii	"__ATOMIC_ACQUIRE 2\000"
 20182      4F4D4943 
 20182      5F414351 
 20182      55495245 
 20182      203200
 20183              	.LASF387:
 20184 1cf3 5F5F4152 		.ascii	"__ARM_FEATURE_COMPLEX\000"
 20184      4D5F4645 
 20184      41545552 
 20184      455F434F 
 20184      4D504C45 
 20185              	.LASF663:
 20186 1d09 464C4147 		.ascii	"FLAGS_LONG (1U << 8U)\000"
 20186      535F4C4F 
 20186      4E472028 
 20186      3155203C 
 20186      3C203855 
 20187              	.LASF397:
 20188 1d1f 5F5F4152 		.ascii	"__ARM_SIZEOF_WCHAR_T 4\000"
 20188      4D5F5349 
 20188      5A454F46 
 20188      5F574348 
 20188      41525F54 
 20189              	.LASF228:
 20190 1d36 5F5F464C 		.ascii	"__FLT32X_MAX_EXP__ 1024\000"
 20190      54333258 
 20190      5F4D4158 
 20190      5F455850 
 20190      5F5F2031 
 20191              	.LASF693:
 20192 1d4e 4C44424C 		.ascii	"LDBL_MIN_10_EXP __LDBL_MIN_10_EXP__\000"
 20192      5F4D494E 
 20192      5F31305F 
 20192      45585020 
 20192      5F5F4C44 
 20193              	.LASF121:
 20194 1d72 5F5F5549 		.ascii	"__UINT_LEAST32_MAX__ 0xffffffffUL\000"
 20194      4E545F4C 
 20194      45415354 
 20194      33325F4D 
 20194      41585F5F 
 20195              	.LASF172:
 20196 1d94 5F5F4442 		.ascii	"__DBL_EPSILON__ ((double)2.2204460492503131e-16L)\000"
 20196      4C5F4550 
 20196      53494C4F 
ARM GAS  /tmp/ccFy9xbE.s 			page 410


 20196      4E5F5F20 
 20196      2828646F 
 20197              	.LASF503:
 20198 1dc6 494E545F 		.ascii	"INT_FAST8_MIN (-INT_FAST8_MAX - 1)\000"
 20198      46415354 
 20198      385F4D49 
 20198      4E20282D 
 20198      494E545F 
 20199              	.LASF261:
 20200 1de9 5F5F4C46 		.ascii	"__LFRACT_MIN__ (-0.5LR-0.5LR)\000"
 20200      52414354 
 20200      5F4D494E 
 20200      5F5F2028 
 20200      2D302E35 
 20201              	.LASF116:
 20202 1e07 5F5F494E 		.ascii	"__INT_LEAST64_WIDTH__ 64\000"
 20202      545F4C45 
 20202      41535436 
 20202      345F5749 
 20202      4454485F 
 20203              	.LASF159:
 20204 1e20 5F5F464C 		.ascii	"__FLT_HAS_INFINITY__ 1\000"
 20204      545F4841 
 20204      535F494E 
 20204      46494E49 
 20204      54595F5F 
 20205              	.LASF292:
 20206 1e37 5F5F4143 		.ascii	"__ACCUM_MAX__ 0X7FFFFFFFP-15K\000"
 20206      43554D5F 
 20206      4D41585F 
 20206      5F203058 
 20206      37464646 
 20207              	.LASF97:
 20208 1e55 5F5F494E 		.ascii	"__INT8_MAX__ 0x7f\000"
 20208      54385F4D 
 20208      41585F5F 
 20208      20307837 
 20208      6600
 20209              	.LASF374:
 20210 1e67 5F5F4743 		.ascii	"__GCC_HAVE_DWARF2_CFI_ASM 1\000"
 20210      435F4841 
 20210      56455F44 
 20210      57415246 
 20210      325F4346 
 20211              	.LASF385:
 20212 1e83 5F5F4152 		.ascii	"__ARM_FEATURE_CRC32\000"
 20212      4D5F4645 
 20212      41545552 
 20212      455F4352 
 20212      43333200 
 20213              	.LASF241:
 20214 1e97 5F5F5346 		.ascii	"__SFRACT_MIN__ (-0.5HR-0.5HR)\000"
 20214      52414354 
 20214      5F4D494E 
 20214      5F5F2028 
 20214      2D302E35 
 20215              	.LASF755:
ARM GAS  /tmp/ccFy9xbE.s 			page 411


 20216 1eb5 6C6F6E67 		.ascii	"long unsigned int\000"
 20216      20756E73 
 20216      69676E65 
 20216      6420696E 
 20216      7400
 20217              	.LASF342:
 20218 1ec7 5F5F5341 		.ascii	"__SA_IBIT__ 16\000"
 20218      5F494249 
 20218      545F5F20 
 20218      313600
 20219              	.LASF81:
 20220 1ed6 5F5F5348 		.ascii	"__SHRT_WIDTH__ 16\000"
 20220      52545F57 
 20220      49445448 
 20220      5F5F2031 
 20220      3600
 20221              	.LASF141:
 20222 1ee8 5F5F4743 		.ascii	"__GCC_IEC_559_COMPLEX 0\000"
 20222      435F4945 
 20222      435F3535 
 20222      395F434F 
 20222      4D504C45 
 20223              	.LASF389:
 20224 1f00 5F5F4152 		.ascii	"__ARM_FEATURE_MVE\000"
 20224      4D5F4645 
 20224      41545552 
 20224      455F4D56 
 20224      4500
 20225              	.LASF670:
 20226 1f12 464C545F 		.ascii	"FLT_MANT_DIG\000"
 20226      4D414E54 
 20226      5F444947 
 20226      00
 20227              	.LASF772:
 20228 1f1f 666F726D 		.ascii	"format\000"
 20228      617400
 20229              	.LASF47:
 20230 1f26 5F5F5549 		.ascii	"__UINT16_TYPE__ short unsigned int\000"
 20230      4E543136 
 20230      5F545950 
 20230      455F5F20 
 20230      73686F72 
 20231              	.LASF669:
 20232 1f49 464C545F 		.ascii	"FLT_RADIX __FLT_RADIX__\000"
 20232      52414449 
 20232      58205F5F 
 20232      464C545F 
 20232      52414449 
 20233              	.LASF103:
 20234 1f61 5F5F5549 		.ascii	"__UINT32_MAX__ 0xffffffffUL\000"
 20234      4E543332 
 20234      5F4D4158 
 20234      5F5F2030 
 20234      78666666 
 20235              	.LASF514:
 20236 1f7d 494E545F 		.ascii	"INT_FAST32_MIN\000"
 20236      46415354 
ARM GAS  /tmp/ccFy9xbE.s 			page 412


 20236      33325F4D 
 20236      494E00
 20237              	.LASF606:
 20238 1f8c 5F545F53 		.ascii	"_T_SIZE_ \000"
 20238      495A455F 
 20238      2000
 20239              	.LASF143:
 20240 1f96 5F5F464C 		.ascii	"__FLT_EVAL_METHOD_TS_18661_3__ 0\000"
 20240      545F4556 
 20240      414C5F4D 
 20240      4554484F 
 20240      445F5453 
 20241              	.LASF80:
 20242 1fb7 5F5F5343 		.ascii	"__SCHAR_WIDTH__ 8\000"
 20242      4841525F 
 20242      57494454 
 20242      485F5F20 
 20242      3800
 20243              	.LASF510:
 20244 1fc9 55494E54 		.ascii	"UINT_FAST16_MAX\000"
 20244      5F464153 
 20244      5431365F 
 20244      4D415800 
 20245              	.LASF705:
 20246 1fd9 4C44424C 		.ascii	"LDBL_MAX_10_EXP __LDBL_MAX_10_EXP__\000"
 20246      5F4D4158 
 20246      5F31305F 
 20246      45585020 
 20246      5F5F4C44 
 20247              	.LASF728:
 20248 1ffd 44454349 		.ascii	"DECIMAL_DIG\000"
 20248      4D414C5F 
 20248      44494700 
 20249              	.LASF62:
 20250 2009 5F5F5549 		.ascii	"__UINT_FAST8_TYPE__ unsigned int\000"
 20250      4E545F46 
 20250      41535438 
 20250      5F545950 
 20250      455F5F20 
 20251              	.LASF310:
 20252 202a 5F5F4C4C 		.ascii	"__LLACCUM_IBIT__ 32\000"
 20252      41434355 
 20252      4D5F4942 
 20252      49545F5F 
 20252      20333200 
 20253              	.LASF830:
 20254 203e 5F5F6170 		.ascii	"__ap\000"
 20254      00
 20255              	.LASF99:
 20256 2043 5F5F494E 		.ascii	"__INT32_MAX__ 0x7fffffffL\000"
 20256      5433325F 
 20256      4D41585F 
 20256      5F203078 
 20256      37666666 
 20257              	.LASF698:
 20258 205d 44424C5F 		.ascii	"DBL_MAX_EXP __DBL_MAX_EXP__\000"
 20258      4D41585F 
ARM GAS  /tmp/ccFy9xbE.s 			page 413


 20258      45585020 
 20258      5F5F4442 
 20258      4C5F4D41 
 20259              	.LASF440:
 20260 2079 5F5F4758 		.ascii	"__GXX_TYPEINFO_EQUALITY_INLINE 0\000"
 20260      585F5459 
 20260      5045494E 
 20260      464F5F45 
 20260      5155414C 
 20261              	.LASF534:
 20262 209a 55494E54 		.ascii	"UINTMAX_MAX\000"
 20262      4D41585F 
 20262      4D415800 
 20263              	.LASF114:
 20264 20a6 5F5F494E 		.ascii	"__INT_LEAST64_MAX__ 0x7fffffffffffffffLL\000"
 20264      545F4C45 
 20264      41535436 
 20264      345F4D41 
 20264      585F5F20 
 20265              	.LASF403:
 20266 20cf 5F5F4150 		.ascii	"__APCS_32__ 1\000"
 20266      43535F33 
 20266      325F5F20 
 20266      3100
 20267              	.LASF438:
 20268 20dd 5F5F4152 		.ascii	"__ARM_FEATURE_BF16_VECTOR_ARITHMETIC\000"
 20268      4D5F4645 
 20268      41545552 
 20268      455F4246 
 20268      31365F56 
 20269              	.LASF193:
 20270 2102 5F5F464C 		.ascii	"__FLT32_MANT_DIG__ 24\000"
 20270      5433325F 
 20270      4D414E54 
 20270      5F444947 
 20270      5F5F2032 
 20271              	.LASF798:
 20272 2118 5F66746F 		.ascii	"_ftoa\000"
 20272      6100
 20273              	.LASF476:
 20274 211e 494E545F 		.ascii	"INT_LEAST8_MAX\000"
 20274      4C454153 
 20274      54385F4D 
 20274      415800
 20275              	.LASF204:
 20276 212d 5F5F464C 		.ascii	"__FLT32_DENORM_MIN__ 1.4012984643248171e-45F32\000"
 20276      5433325F 
 20276      44454E4F 
 20276      524D5F4D 
 20276      494E5F5F 
 20277              	.LASF640:
 20278 215c 6F666673 		.ascii	"offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEM"
 20278      65746F66 
 20278      28545950 
 20278      452C4D45 
 20278      4D424552 
 20279 218f 42455229 		.ascii	"BER)\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 414


 20279      00
 20280              	.LASF57:
 20281 2194 5F5F5549 		.ascii	"__UINT_LEAST64_TYPE__ long long unsigned int\000"
 20281      4E545F4C 
 20281      45415354 
 20281      36345F54 
 20281      5950455F 
 20282              	.LASF549:
 20283 21c1 57434841 		.ascii	"WCHAR_MIN __WCHAR_MIN__\000"
 20283      525F4D49 
 20283      4E205F5F 
 20283      57434841 
 20283      525F4D49 
 20284              	.LASF453:
 20285 21d9 494E5438 		.ascii	"INT8_MAX __INT8_MAX__\000"
 20285      5F4D4158 
 20285      205F5F49 
 20285      4E54385F 
 20285      4D41585F 
 20286              	.LASF364:
 20287 21ef 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\000"
 20287      435F4154 
 20287      4F4D4943 
 20287      5F434841 
 20287      5231365F 
 20288              	.LASF759:
 20289 2211 75696E74 		.ascii	"uintptr_t\000"
 20289      7074725F 
 20289      7400
 20290              	.LASF166:
 20291 221b 5F5F4442 		.ascii	"__DBL_MAX_EXP__ 1024\000"
 20291      4C5F4D41 
 20291      585F4558 
 20291      505F5F20 
 20291      31303234 
 20292              	.LASF12:
 20293 2230 5F5F4154 		.ascii	"__ATOMIC_RELEASE 3\000"
 20293      4F4D4943 
 20293      5F52454C 
 20293      45415345 
 20293      203300
 20294              	.LASF504:
 20295 2243 55494E54 		.ascii	"UINT_FAST8_MAX\000"
 20295      5F464153 
 20295      54385F4D 
 20295      415800
 20296              	.LASF146:
 20297 2252 5F5F464C 		.ascii	"__FLT_MANT_DIG__ 24\000"
 20297      545F4D41 
 20297      4E545F44 
 20297      49475F5F 
 20297      20323400 
 20298              	.LASF732:
 20299 2266 4C44424C 		.ascii	"LDBL_DECIMAL_DIG\000"
 20299      5F444543 
 20299      494D414C 
 20299      5F444947 
ARM GAS  /tmp/ccFy9xbE.s 			page 415


 20299      00
 20300              	.LASF336:
 20301 2277 5F5F5544 		.ascii	"__UDQ_IBIT__ 0\000"
 20301      515F4942 
 20301      49545F5F 
 20301      203000
 20302              	.LASF575:
 20303 2286 5F535444 		.ascii	"_STDARG_H \000"
 20303      4152475F 
 20303      482000
 20304              	.LASF375:
 20305 2291 5F5F5052 		.ascii	"__PRAGMA_REDEFINE_EXTNAME 1\000"
 20305      41474D41 
 20305      5F524544 
 20305      4546494E 
 20305      455F4558 
 20306              	.LASF15:
 20307 22ad 5F5F4F50 		.ascii	"__OPTIMIZE__ 1\000"
 20307      54494D49 
 20307      5A455F5F 
 20307      203100
 20308              	.LASF368:
 20309 22bc 5F5F4743 		.ascii	"__GCC_ATOMIC_INT_LOCK_FREE 2\000"
 20309      435F4154 
 20309      4F4D4943 
 20309      5F494E54 
 20309      5F4C4F43 
 20310              	.LASF297:
 20311 22d9 5F5F5541 		.ascii	"__UACCUM_MAX__ 0XFFFFFFFFP-16UK\000"
 20311      4343554D 
 20311      5F4D4158 
 20311      5F5F2030 
 20311      58464646 
 20312              	.LASF697:
 20313 22f9 464C545F 		.ascii	"FLT_MAX_EXP __FLT_MAX_EXP__\000"
 20313      4D41585F 
 20313      45585020 
 20313      5F5F464C 
 20313      545F4D41 
 20314              	.LASF217:
 20315 2315 5F5F464C 		.ascii	"__FLT64_NORM_MAX__ 1.7976931348623157e+308F64\000"
 20315      5436345F 
 20315      4E4F524D 
 20315      5F4D4158 
 20315      5F5F2031 
 20316              	.LASF528:
 20317 2343 55494E54 		.ascii	"UINTPTR_MAX\000"
 20317      5054525F 
 20317      4D415800 
 20318              	.LASF593:
 20319 234f 5F545F50 		.ascii	"_T_PTRDIFF_ \000"
 20319      54524449 
 20319      46465F20 
 20319      00
 20320              	.LASF742:
 20321 235c 464C545F 		.ascii	"FLT_TRUE_MIN\000"
 20321      54525545 
ARM GAS  /tmp/ccFy9xbE.s 			page 416


 20321      5F4D494E 
 20321      00
 20322              	.LASF189:
 20323 2369 5F5F4C44 		.ascii	"__LDBL_DENORM_MIN__ 4.9406564584124654e-324L\000"
 20323      424C5F44 
 20323      454E4F52 
 20323      4D5F4D49 
 20323      4E5F5F20 
 20324              	.LASF100:
 20325 2396 5F5F494E 		.ascii	"__INT64_MAX__ 0x7fffffffffffffffLL\000"
 20325      5436345F 
 20325      4D41585F 
 20325      5F203078 
 20325      37666666 
 20326              	.LASF381:
 20327 23b9 5F5F4152 		.ascii	"__ARM_FEATURE_SAT 1\000"
 20327      4D5F4645 
 20327      41545552 
 20327      455F5341 
 20327      54203100 
 20328              	.LASF275:
 20329 23cd 5F5F554C 		.ascii	"__ULLFRACT_IBIT__ 0\000"
 20329      4C465241 
 20329      43545F49 
 20329      4249545F 
 20329      5F203000 
 20330              	.LASF785:
 20331 23e1 5F76736E 		.ascii	"_vsnprintf\000"
 20331      7072696E 
 20331      746600
 20332              	.LASF747:
 20333 23ec 4C44424C 		.ascii	"LDBL_TRUE_MIN __LDBL_DENORM_MIN__\000"
 20333      5F545255 
 20333      455F4D49 
 20333      4E205F5F 
 20333      4C44424C 
 20334              	.LASF645:
 20335 240e 76736E70 		.ascii	"vsnprintf vsnprintf_\000"
 20335      72696E74 
 20335      66207673 
 20335      6E707269 
 20335      6E74665F 
 20336              	.LASF5:
 20337 2423 5F5F474E 		.ascii	"__GNUC__ 10\000"
 20337      55435F5F 
 20337      20313000 
 20338              	.LASF546:
 20339 242f 57434841 		.ascii	"WCHAR_MAX\000"
 20339      525F4D41 
 20339      5800
 20340              	.LASF83:
 20341 2439 5F5F4C4F 		.ascii	"__LONG_WIDTH__ 32\000"
 20341      4E475F57 
 20341      49445448 
 20341      5F5F2033 
 20341      3200
 20342              	.LASF153:
ARM GAS  /tmp/ccFy9xbE.s 			page 417


 20343 244b 5F5F464C 		.ascii	"__FLT_MAX__ 3.4028234663852886e+38F\000"
 20343      545F4D41 
 20343      585F5F20 
 20343      332E3430 
 20343      32383233 
 20344              	.LASF465:
 20345 246f 494E5433 		.ascii	"INT32_MAX __INT32_MAX__\000"
 20345      325F4D41 
 20345      58205F5F 
 20345      494E5433 
 20345      325F4D41 
 20346              	.LASF294:
 20347 2487 5F5F5541 		.ascii	"__UACCUM_FBIT__ 16\000"
 20347      4343554D 
 20347      5F464249 
 20347      545F5F20 
 20347      313600
 20348              	.LASF258:
 20349 249a 5F5F5546 		.ascii	"__UFRACT_EPSILON__ 0x1P-16UR\000"
 20349      52414354 
 20349      5F455053 
 20349      494C4F4E 
 20349      5F5F2030 
 20350              	.LASF75:
 20351 24b7 5F5F5743 		.ascii	"__WCHAR_MIN__ 0U\000"
 20351      4841525F 
 20351      4D494E5F 
 20351      5F203055 
 20351      00
 20352              	.LASF330:
 20353 24c8 5F5F5551 		.ascii	"__UQQ_IBIT__ 0\000"
 20353      515F4942 
 20353      49545F5F 
 20353      203000
 20354              	.LASF369:
 20355 24d7 5F5F4743 		.ascii	"__GCC_ATOMIC_LONG_LOCK_FREE 2\000"
 20355      435F4154 
 20355      4F4D4943 
 20355      5F4C4F4E 
 20355      475F4C4F 
 20356              	.LASF306:
 20357 24f5 5F5F554C 		.ascii	"__ULACCUM_MIN__ 0.0ULK\000"
 20357      41434355 
 20357      4D5F4D49 
 20357      4E5F5F20 
 20357      302E3055 
 20358              	.LASF619:
 20359 250c 5F5F6E65 		.ascii	"__need_size_t\000"
 20359      65645F73 
 20359      697A655F 
 20359      7400
 20360              	.LASF185:
 20361 251a 5F5F4C44 		.ascii	"__LDBL_MAX__ 1.7976931348623157e+308L\000"
 20361      424C5F4D 
 20361      41585F5F 
 20361      20312E37 
 20361      39373639 
ARM GAS  /tmp/ccFy9xbE.s 			page 418


 20362              	.LASF402:
 20363 2540 5F5F4152 		.ascii	"__ARM_ARCH 7\000"
 20363      4D5F4152 
 20363      43482037 
 20363      00
 20364              	.LASF609:
 20365 254d 5F53495A 		.ascii	"_SIZE_T_ \000"
 20365      455F545F 
 20365      2000
 20366              	.LASF684:
 20367 2557 4C44424C 		.ascii	"LDBL_MIN_EXP\000"
 20367      5F4D494E 
 20367      5F455850 
 20367      00
 20368              	.LASF145:
 20369 2564 5F5F464C 		.ascii	"__FLT_RADIX__ 2\000"
 20369      545F5241 
 20369      4449585F 
 20369      5F203200 
 20370              	.LASF752:
 20371 2574 6C6F6E67 		.ascii	"long long int\000"
 20371      206C6F6E 
 20371      6720696E 
 20371      7400
 20372              	.LASF390:
 20373 2582 5F5F4152 		.ascii	"__ARM_FEATURE_CMSE\000"
 20373      4D5F4645 
 20373      41545552 
 20373      455F434D 
 20373      534500
 20374              	.LASF458:
 20375 2595 494E5431 		.ascii	"INT16_MAX\000"
 20375      365F4D41 
 20375      5800
 20376              	.LASF761:
 20377 259f 76615F6C 		.ascii	"va_list\000"
 20377      69737400 
 20378              	.LASF644:
 20379 25a7 736E7072 		.ascii	"snprintf snprintf_\000"
 20379      696E7466 
 20379      20736E70 
 20379      72696E74 
 20379      665F00
 20380              	.LASF192:
 20381 25ba 5F5F4C44 		.ascii	"__LDBL_HAS_QUIET_NAN__ 1\000"
 20381      424C5F48 
 20381      41535F51 
 20381      55494554 
 20381      5F4E414E 
 20382              	.LASF54:
 20383 25d3 5F5F5549 		.ascii	"__UINT_LEAST8_TYPE__ unsigned char\000"
 20383      4E545F4C 
 20383      45415354 
 20383      385F5459 
 20383      50455F5F 
 20384              	.LASF779:
 20385 25f6 77696474 		.ascii	"width\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 419


 20385      6800
 20386              	.LASF84:
 20387 25fc 5F5F4C4F 		.ascii	"__LONG_LONG_WIDTH__ 64\000"
 20387      4E475F4C 
 20387      4F4E475F 
 20387      57494454 
 20387      485F5F20 
 20388              	.LASF777:
 20389 2613 6D61786C 		.ascii	"maxlen\000"
 20389      656E00
 20390              	.LASF592:
 20391 261a 5F505452 		.ascii	"_PTRDIFF_T \000"
 20391      44494646 
 20391      5F542000 
 20392              	.LASF695:
 20393 2626 44424C5F 		.ascii	"DBL_MAX_EXP\000"
 20393      4D41585F 
 20393      45585000 
 20394              	.LASF826:
 20395 2632 5F5F6165 		.ascii	"__aeabi_d2uiz\000"
 20395      6162695F 
 20395      64327569 
 20395      7A00
 20396              	.LASF412:
 20397 2640 5F5F4152 		.ascii	"__ARM_FP\000"
 20397      4D5F4650 
 20397      00
 20398              	.LASF340:
 20399 2649 5F5F4841 		.ascii	"__HA_IBIT__ 8\000"
 20399      5F494249 
 20399      545F5F20 
 20399      3800
 20400              	.LASF138:
 20401 2657 5F5F494E 		.ascii	"__INTPTR_WIDTH__ 32\000"
 20401      54505452 
 20401      5F574944 
 20401      54485F5F 
 20401      20333200 
 20402              	.LASF370:
 20403 266b 5F5F4743 		.ascii	"__GCC_ATOMIC_LLONG_LOCK_FREE 1\000"
 20403      435F4154 
 20403      4F4D4943 
 20403      5F4C4C4F 
 20403      4E475F4C 
 20404              	.LASF809:
 20405 268a 5F69735F 		.ascii	"_is_digit\000"
 20405      64696769 
 20405      7400
 20406              	.LASF233:
 20407 2694 5F5F464C 		.ascii	"__FLT32X_MIN__ 2.2250738585072014e-308F32x\000"
 20407      54333258 
 20407      5F4D494E 
 20407      5F5F2032 
 20407      2E323235 
 20408              	.LASF531:
 20409 26bf 494E544D 		.ascii	"INTMAX_MAX __INTMAX_MAX__\000"
 20409      41585F4D 
ARM GAS  /tmp/ccFy9xbE.s 			page 420


 20409      4158205F 
 20409      5F494E54 
 20409      4D41585F 
 20410              	.LASF213:
 20411 26d9 5F5F464C 		.ascii	"__FLT64_MAX_EXP__ 1024\000"
 20411      5436345F 
 20411      4D41585F 
 20411      4558505F 
 20411      5F203130 
 20412              	.LASF625:
 20413 26f0 5F5F5743 		.ascii	"__WCHAR_T \000"
 20413      4841525F 
 20413      542000
 20414              	.LASF748:
 20415 26fb 646F7562 		.ascii	"double\000"
 20415      6C6500
 20416              	.LASF218:
 20417 2702 5F5F464C 		.ascii	"__FLT64_MIN__ 2.2250738585072014e-308F64\000"
 20417      5436345F 
 20417      4D494E5F 
 20417      5F20322E 
 20417      32323530 
 20418              	.LASF659:
 20419 272b 464C4147 		.ascii	"FLAGS_HASH (1U << 4U)\000"
 20419      535F4841 
 20419      53482028 
 20419      3155203C 
 20419      3C203455 
 20420              	.LASF90:
 20421 2741 5F5F494E 		.ascii	"__INTMAX_C(c) c ## LL\000"
 20421      544D4158 
 20421      5F432863 
 20421      29206320 
 20421      2323204C 
 20422              	.LASF673:
 20423 2757 464C545F 		.ascii	"FLT_MANT_DIG __FLT_MANT_DIG__\000"
 20423      4D414E54 
 20423      5F444947 
 20423      205F5F46 
 20423      4C545F4D 
 20424              	.LASF148:
 20425 2775 5F5F464C 		.ascii	"__FLT_MIN_EXP__ (-125)\000"
 20425      545F4D49 
 20425      4E5F4558 
 20425      505F5F20 
 20425      282D3132 
 20426              	.LASF398:
 20427 278c 5F5F4152 		.ascii	"__ARM_ARCH_PROFILE\000"
 20427      4D5F4152 
 20427      43485F50 
 20427      524F4649 
 20427      4C4500
 20428              	.LASF45:
 20429 279f 5F5F494E 		.ascii	"__INT64_TYPE__ long long int\000"
 20429      5436345F 
 20429      54595045 
 20429      5F5F206C 
ARM GAS  /tmp/ccFy9xbE.s 			page 421


 20429      6F6E6720 
 20430              	.LASF660:
 20431 27bc 464C4147 		.ascii	"FLAGS_UPPERCASE (1U << 5U)\000"
 20431      535F5550 
 20431      50455243 
 20431      41534520 
 20431      28315520 
 20432              	.LASF259:
 20433 27d7 5F5F4C46 		.ascii	"__LFRACT_FBIT__ 31\000"
 20433      52414354 
 20433      5F464249 
 20433      545F5F20 
 20433      333100
 20434              	.LASF25:
 20435 27ea 5F5F4348 		.ascii	"__CHAR_BIT__ 8\000"
 20435      41525F42 
 20435      49545F5F 
 20435      203800
 20436              	.LASF376:
 20437 27f9 5F5F5349 		.ascii	"__SIZEOF_WCHAR_T__ 4\000"
 20437      5A454F46 
 20437      5F574348 
 20437      41525F54 
 20437      5F5F2034 
 20438              	.LASF776:
 20439 280e 7072696E 		.ascii	"printf_\000"
 20439      74665F00 
 20440              	.LASF257:
 20441 2816 5F5F5546 		.ascii	"__UFRACT_MAX__ 0XFFFFP-16UR\000"
 20441      52414354 
 20441      5F4D4158 
 20441      5F5F2030 
 20441      58464646 
 20442              	.LASF470:
 20443 2832 494E5436 		.ascii	"INT64_MAX\000"
 20443      345F4D41 
 20443      5800
 20444              	.LASF664:
 20445 283c 464C4147 		.ascii	"FLAGS_LONG_LONG (1U << 9U)\000"
 20445      535F4C4F 
 20445      4E475F4C 
 20445      4F4E4720 
 20445      28315520 
 20446              	.LASF521:
 20447 2857 494E545F 		.ascii	"INT_FAST64_MIN (-INT_FAST64_MAX - 1)\000"
 20447      46415354 
 20447      36345F4D 
 20447      494E2028 
 20447      2D494E54 
 20448              	.LASF240:
 20449 287c 5F5F5346 		.ascii	"__SFRACT_IBIT__ 0\000"
 20449      52414354 
 20449      5F494249 
 20449      545F5F20 
 20449      3000
 20450              	.LASF30:
 20451 288e 5F5F4259 		.ascii	"__BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 422


 20451      54455F4F 
 20451      52444552 
 20451      5F5F205F 
 20451      5F4F5244 
 20452              	.LASF203:
 20453 28b5 5F5F464C 		.ascii	"__FLT32_EPSILON__ 1.1920928955078125e-7F32\000"
 20453      5433325F 
 20453      45505349 
 20453      4C4F4E5F 
 20453      5F20312E 
 20454              	.LASF423:
 20455 28e0 5F5F4152 		.ascii	"__ARM_NEON_FP\000"
 20455      4D5F4E45 
 20455      4F4E5F46 
 20455      5000
 20456              	.LASF527:
 20457 28ee 494E5450 		.ascii	"INTPTR_MIN (-INTPTR_MAX - 1)\000"
 20457      54525F4D 
 20457      494E2028 
 20457      2D494E54 
 20457      5054525F 
 20458              	.LASF523:
 20459 290b 55494E54 		.ascii	"UINT_FAST64_MAX __UINT_FAST64_MAX__\000"
 20459      5F464153 
 20459      5436345F 
 20459      4D415820 
 20459      5F5F5549 
 20460              	.LASF677:
 20461 292f 44424C5F 		.ascii	"DBL_DIG\000"
 20461      44494700 
 20462              	.LASF591:
 20463 2937 5F414E53 		.ascii	"_ANSI_STDDEF_H \000"
 20463      495F5354 
 20463      44444546 
 20463      5F482000 
 20464              	.LASF771:
 20465 2947 636F756E 		.ascii	"count\000"
 20465      7400
 20466              	.LASF254:
 20467 294d 5F5F5546 		.ascii	"__UFRACT_FBIT__ 16\000"
 20467      52414354 
 20467      5F464249 
 20467      545F5F20 
 20467      313600
 20468              	.LASF828:
 20469 2960 5F5F6165 		.ascii	"__aeabi_uldivmod\000"
 20469      6162695F 
 20469      756C6469 
 20469      766D6F64 
 20469      00
 20470              	.LASF335:
 20471 2971 5F5F5544 		.ascii	"__UDQ_FBIT__ 64\000"
 20471      515F4642 
 20471      49545F5F 
 20471      20363400 
 20472              	.LASF170:
 20473 2981 5F5F4442 		.ascii	"__DBL_NORM_MAX__ ((double)1.7976931348623157e+308L)"
ARM GAS  /tmp/ccFy9xbE.s 			page 423


 20473      4C5F4E4F 
 20473      524D5F4D 
 20473      41585F5F 
 20473      20282864 
 20474 29b4 00       		.ascii	"\000"
 20475              	.LASF182:
 20476 29b5 5F5F4C44 		.ascii	"__LDBL_MAX_10_EXP__ 308\000"
 20476      424C5F4D 
 20476      41585F31 
 20476      305F4558 
 20476      505F5F20 
 20477              	.LASF710:
 20478 29cd 44424C5F 		.ascii	"DBL_MAX __DBL_MAX__\000"
 20478      4D415820 
 20478      5F5F4442 
 20478      4C5F4D41 
 20478      585F5F00 
 20479              	.LASF173:
 20480 29e1 5F5F4442 		.ascii	"__DBL_DENORM_MIN__ ((double)4.9406564584124654e-324"
 20480      4C5F4445 
 20480      4E4F524D 
 20480      5F4D494E 
 20480      5F5F2028 
 20481 2a14 4C2900   		.ascii	"L)\000"
 20482              	.LASF60:
 20483 2a17 5F5F494E 		.ascii	"__INT_FAST32_TYPE__ int\000"
 20483      545F4641 
 20483      53543332 
 20483      5F545950 
 20483      455F5F20 
 20484              	.LASF757:
 20485 2a2f 756E7369 		.ascii	"unsigned int\000"
 20485      676E6564 
 20485      20696E74 
 20485      00
 20486              	.LASF731:
 20487 2a3c 44424C5F 		.ascii	"DBL_DECIMAL_DIG\000"
 20487      44454349 
 20487      4D414C5F 
 20487      44494700 
 20488              	.LASF764:
 20489 2a4c 6F75745F 		.ascii	"out_fct_type\000"
 20489      6663745F 
 20489      74797065 
 20489      00
 20490              	.LASF617:
 20491 2a59 5F53495A 		.ascii	"_SIZET_ \000"
 20491      45545F20 
 20491      00
 20492              	.LASF223:
 20493 2a62 5F5F464C 		.ascii	"__FLT64_HAS_QUIET_NAN__ 1\000"
 20493      5436345F 
 20493      4841535F 
 20493      51554945 
 20493      545F4E41 
 20494              	.LASF285:
 20495 2a7c 5F5F5553 		.ascii	"__USACCUM_IBIT__ 8\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 424


 20495      41434355 
 20495      4D5F4942 
 20495      49545F5F 
 20495      203800
 20496              	.LASF656:
 20497 2a8f 464C4147 		.ascii	"FLAGS_LEFT (1U << 1U)\000"
 20497      535F4C45 
 20497      46542028 
 20497      3155203C 
 20497      3C203155 
 20498              	.LASF425:
 20499 2aa5 5F5F4152 		.ascii	"__ARM_ARCH_7EM__ 1\000"
 20499      4D5F4152 
 20499      43485F37 
 20499      454D5F5F 
 20499      203100
 20500              	.LASF820:
 20501 2ab8 5F5F6165 		.ascii	"__aeabi_dmul\000"
 20501      6162695F 
 20501      646D756C 
 20501      00
 20502              	.LASF221:
 20503 2ac5 5F5F464C 		.ascii	"__FLT64_HAS_DENORM__ 1\000"
 20503      5436345F 
 20503      4841535F 
 20503      44454E4F 
 20503      524D5F5F 
 20504              	.LASF315:
 20505 2adc 5F5F554C 		.ascii	"__ULLACCUM_IBIT__ 32\000"
 20505      4C414343 
 20505      554D5F49 
 20505      4249545F 
 20505      5F203332 
 20506              	.LASF446:
 20507 2af1 5F535444 		.ascii	"_STDBOOL_H \000"
 20507      424F4F4C 
 20507      5F482000 
 20508              	.LASF634:
 20509 2afd 5F574348 		.ascii	"_WCHAR_T_DECLARED \000"
 20509      41525F54 
 20509      5F444543 
 20509      4C415245 
 20509      442000
 20510              	.LASF142:
 20511 2b10 5F5F464C 		.ascii	"__FLT_EVAL_METHOD__ 0\000"
 20511      545F4556 
 20511      414C5F4D 
 20511      4554484F 
 20511      445F5F20 
 20512              	.LASF735:
 20513 2b26 4C44424C 		.ascii	"LDBL_DECIMAL_DIG __LDBL_DECIMAL_DIG__\000"
 20513      5F444543 
 20513      494D414C 
 20513      5F444947 
 20513      205F5F4C 
 20514              	.LASF69:
 20515 2b4c 5F5F5343 		.ascii	"__SCHAR_MAX__ 0x7f\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 425


 20515      4841525F 
 20515      4D41585F 
 20515      5F203078 
 20515      376600
 20516              	.LASF490:
 20517 2b5f 494E545F 		.ascii	"INT_LEAST32_MIN\000"
 20517      4C454153 
 20517      5433325F 
 20517      4D494E00 
 20518              	.LASF126:
 20519 2b6f 5F5F494E 		.ascii	"__INT_FAST8_WIDTH__ 32\000"
 20519      545F4641 
 20519      5354385F 
 20519      57494454 
 20519      485F5F20 
 20520              	.LASF2:
 20521 2b86 5F5F5354 		.ascii	"__STDC_UTF_16__ 1\000"
 20521      44435F55 
 20521      54465F31 
 20521      365F5F20 
 20521      3100
 20522              	.LASF391:
 20523 2b98 5F5F4152 		.ascii	"__ARM_FEATURE_LDREX\000"
 20523      4D5F4645 
 20523      41545552 
 20523      455F4C44 
 20523      52455800 
 20524              	.LASF594:
 20525 2bac 5F545F50 		.ascii	"_T_PTRDIFF \000"
 20525      54524449 
 20525      46462000 
 20526              	.LASF329:
 20527 2bb8 5F5F5551 		.ascii	"__UQQ_FBIT__ 8\000"
 20527      515F4642 
 20527      49545F5F 
 20527      203800
 20528              	.LASF556:
 20529 2bc7 494E5431 		.ascii	"INT16_C\000"
 20529      365F4300 
 20530              	.LASF416:
 20531 2bcf 5F5F4152 		.ascii	"__ARM_FP16_ARGS\000"
 20531      4D5F4650 
 20531      31365F41 
 20531      52475300 
 20532              	.LASF140:
 20533 2bdf 5F5F4743 		.ascii	"__GCC_IEC_559 0\000"
 20533      435F4945 
 20533      435F3535 
 20533      39203000 
 20534              	.LASF479:
 20535 2bef 494E545F 		.ascii	"INT_LEAST8_MIN (-INT_LEAST8_MAX - 1)\000"
 20535      4C454153 
 20535      54385F4D 
 20535      494E2028 
 20535      2D494E54 
 20536              	.LASF483:
 20537 2c14 494E545F 		.ascii	"INT_LEAST16_MAX __INT_LEAST16_MAX__\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 426


 20537      4C454153 
 20537      5431365F 
 20537      4D415820 
 20537      5F5F494E 
 20538              	.LASF821:
 20539 2c38 5F5F6165 		.ascii	"__aeabi_dadd\000"
 20539      6162695F 
 20539      64616464 
 20539      00
 20540              	.LASF262:
 20541 2c45 5F5F4C46 		.ascii	"__LFRACT_MAX__ 0X7FFFFFFFP-31LR\000"
 20541      52414354 
 20541      5F4D4158 
 20541      5F5F2030 
 20541      58374646 
 20542              	.LASF378:
 20543 2c65 5F5F5349 		.ascii	"__SIZEOF_PTRDIFF_T__ 4\000"
 20543      5A454F46 
 20543      5F505452 
 20543      44494646 
 20543      5F545F5F 
 20544              	.LASF621:
 20545 2c7c 5F5F5743 		.ascii	"__WCHAR_T__ \000"
 20545      4841525F 
 20545      545F5F20 
 20545      00
 20546              	.LASF643:
 20547 2c89 73707269 		.ascii	"sprintf sprintf_\000"
 20547      6E746620 
 20547      73707269 
 20547      6E74665F 
 20547      00
 20548              	.LASF430:
 20549 2c9a 5F5F4152 		.ascii	"__ARM_FEATURE_IDIV 1\000"
 20549      4D5F4645 
 20549      41545552 
 20549      455F4944 
 20549      49562031 
 20550              	.LASF31:
 20551 2caf 5F5F464C 		.ascii	"__FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
 20551      4F41545F 
 20551      574F5244 
 20551      5F4F5244 
 20551      45525F5F 
 20552              	.LASF633:
 20553 2cdc 5F474343 		.ascii	"_GCC_WCHAR_T \000"
 20553      5F574348 
 20553      41525F54 
 20553      2000
 20554              	.LASF433:
 20555 2cea 5F5F4152 		.ascii	"__ARM_FEATURE_COPROC 15\000"
 20555      4D5F4645 
 20555      41545552 
 20555      455F434F 
 20555      50524F43 
 20556              	.LASF475:
 20557 2d02 55494E54 		.ascii	"UINT64_MAX __UINT64_MAX__\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 427


 20557      36345F4D 
 20557      4158205F 
 20557      5F55494E 
 20557      5436345F 
 20558              	.LASF449:
 20559 2d1c 66616C73 		.ascii	"false 0\000"
 20559      65203000 
 20560              	.LASF454:
 20561 2d24 494E5438 		.ascii	"INT8_MIN\000"
 20561      5F4D494E 
 20561      00
 20562              	.LASF743:
 20563 2d2d 44424C5F 		.ascii	"DBL_TRUE_MIN\000"
 20563      54525545 
 20563      5F4D494E 
 20563      00
 20564              	.LASF712:
 20565 2d3a 464C545F 		.ascii	"FLT_EPSILON\000"
 20565      45505349 
 20565      4C4F4E00 
 20566              	.LASF448:
 20567 2d46 74727565 		.ascii	"true 1\000"
 20567      203100
 20568              	.LASF600:
 20569 2d4d 5F505452 		.ascii	"_PTRDIFF_T_DECLARED \000"
 20569      44494646 
 20569      5F545F44 
 20569      45434C41 
 20569      52454420 
 20570              	.LASF349:
 20571 2d62 5F5F5553 		.ascii	"__USA_FBIT__ 16\000"
 20571      415F4642 
 20571      49545F5F 
 20571      20313600 
 20572              	.LASF573:
 20573 2d72 55494E54 		.ascii	"UINTMAX_C(c) __UINTMAX_C(c)\000"
 20573      4D41585F 
 20573      43286329 
 20573      205F5F55 
 20573      494E544D 
 20574              	.LASF226:
 20575 2d8e 5F5F464C 		.ascii	"__FLT32X_MIN_EXP__ (-1021)\000"
 20575      54333258 
 20575      5F4D494E 
 20575      5F455850 
 20575      5F5F2028 
 20576              	.LASF485:
 20577 2da9 494E545F 		.ascii	"INT_LEAST16_MIN (-INT_LEAST16_MAX - 1)\000"
 20577      4C454153 
 20577      5431365F 
 20577      4D494E20 
 20577      282D494E 
 20578              	.LASF160:
 20579 2dd0 5F5F464C 		.ascii	"__FLT_HAS_QUIET_NAN__ 1\000"
 20579      545F4841 
 20579      535F5155 
 20579      4945545F 
ARM GAS  /tmp/ccFy9xbE.s 			page 428


 20579      4E414E5F 
 20580              	.LASF363:
 20581 2de8 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR_LOCK_FREE 2\000"
 20581      435F4154 
 20581      4F4D4943 
 20581      5F434841 
 20581      525F4C4F 
 20582              	.LASF688:
 20583 2e06 464C545F 		.ascii	"FLT_MIN_10_EXP\000"
 20583      4D494E5F 
 20583      31305F45 
 20583      585000
 20584              	.LASF811:
 20585 2e15 6D617873 		.ascii	"maxsize\000"
 20585      697A6500 
 20586              	.LASF263:
 20587 2e1d 5F5F4C46 		.ascii	"__LFRACT_EPSILON__ 0x1P-31LR\000"
 20587      52414354 
 20587      5F455053 
 20587      494C4F4E 
 20587      5F5F2030 
 20588              	.LASF396:
 20589 2e3a 5F5F4152 		.ascii	"__ARM_SIZEOF_MINIMAL_ENUM 1\000"
 20589      4D5F5349 
 20589      5A454F46 
 20589      5F4D494E 
 20589      494D414C 
 20590              	.LASF753:
 20591 2e56 756E7369 		.ascii	"unsigned char\000"
 20591      676E6564 
 20591      20636861 
 20591      7200
 20592              	.LASF232:
 20593 2e64 5F5F464C 		.ascii	"__FLT32X_NORM_MAX__ 1.7976931348623157e+308F32x\000"
 20593      54333258 
 20593      5F4E4F52 
 20593      4D5F4D41 
 20593      585F5F20 
 20594              	.LASF400:
 20595 2e94 5F5F6172 		.ascii	"__arm__ 1\000"
 20595      6D5F5F20 
 20595      3100
 20596              	.LASF582:
 20597 2e9e 76615F63 		.ascii	"va_copy(d,s) __builtin_va_copy(d,s)\000"
 20597      6F707928 
 20597      642C7329 
 20597      205F5F62 
 20597      75696C74 
 20598              	.LASF196:
 20599 2ec2 5F5F464C 		.ascii	"__FLT32_MIN_10_EXP__ (-37)\000"
 20599      5433325F 
 20599      4D494E5F 
 20599      31305F45 
 20599      58505F5F 
 20600              	.LASF704:
 20601 2edd 44424C5F 		.ascii	"DBL_MAX_10_EXP __DBL_MAX_10_EXP__\000"
 20601      4D41585F 
ARM GAS  /tmp/ccFy9xbE.s 			page 429


 20601      31305F45 
 20601      5850205F 
 20601      5F44424C 
 20602              	.LASF622:
 20603 2eff 5F574348 		.ascii	"_WCHAR_T \000"
 20603      41525F54 
 20603      2000
 20604              	.LASF415:
 20605 2f09 5F5F4152 		.ascii	"__ARM_FP16_FORMAT_ALTERNATIVE\000"
 20605      4D5F4650 
 20605      31365F46 
 20605      4F524D41 
 20605      545F414C 
 20606              	.LASF186:
 20607 2f27 5F5F4C44 		.ascii	"__LDBL_NORM_MAX__ 1.7976931348623157e+308L\000"
 20607      424C5F4E 
 20607      4F524D5F 
 20607      4D41585F 
 20607      5F20312E 
 20608              	.LASF708:
 20609 2f52 4C44424C 		.ascii	"LDBL_MAX\000"
 20609      5F4D4158 
 20609      00
 20610              	.LASF526:
 20611 2f5b 494E5450 		.ascii	"INTPTR_MIN\000"
 20611      54525F4D 
 20611      494E00
 20612              	.LASF26:
 20613 2f66 5F5F4249 		.ascii	"__BIGGEST_ALIGNMENT__ 8\000"
 20613      47474553 
 20613      545F414C 
 20613      49474E4D 
 20613      454E545F 
 20614              	.LASF599:
 20615 2f7e 5F474343 		.ascii	"_GCC_PTRDIFF_T \000"
 20615      5F505452 
 20615      44494646 
 20615      5F542000 
 20616              	.LASF768:
 20617 2f8e 66637470 		.ascii	"fctprintf\000"
 20617      72696E74 
 20617      6600
 20618              	.LASF346:
 20619 2f98 5F5F5441 		.ascii	"__TA_IBIT__ 64\000"
 20619      5F494249 
 20619      545F5F20 
 20619      363400
 20620              	.LASF604:
 20621 2fa7 5F53495A 		.ascii	"_SIZE_T \000"
 20621      455F5420 
 20621      00
 20622              	.LASF630:
 20623 2fb0 5F574348 		.ascii	"_WCHAR_T_H \000"
 20623      41525F54 
 20623      5F482000 
 20624              	.LASF716:
 20625 2fbc 44424C5F 		.ascii	"DBL_EPSILON __DBL_EPSILON__\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 430


 20625      45505349 
 20625      4C4F4E20 
 20625      5F5F4442 
 20625      4C5F4550 
 20626              	.LASF384:
 20627 2fd8 5F5F4152 		.ascii	"__ARM_FEATURE_QRDMX\000"
 20627      4D5F4645 
 20627      41545552 
 20627      455F5152 
 20627      444D5800 
 20628              	.LASF696:
 20629 2fec 4C44424C 		.ascii	"LDBL_MAX_EXP\000"
 20629      5F4D4158 
 20629      5F455850 
 20629      00
 20630              	.LASF73:
 20631 2ff9 5F5F4C4F 		.ascii	"__LONG_LONG_MAX__ 0x7fffffffffffffffLL\000"
 20631      4E475F4C 
 20631      4F4E475F 
 20631      4D41585F 
 20631      5F203078 
 20632              	.LASF763:
 20633 3020 6C6F6E67 		.ascii	"long double\000"
 20633      20646F75 
 20633      626C6500 
 20634              	.LASF541:
 20635 302c 5349475F 		.ascii	"SIG_ATOMIC_MAX __SIG_ATOMIC_MAX__\000"
 20635      41544F4D 
 20635      49435F4D 
 20635      4158205F 
 20635      5F534947 
 20636              	.LASF486:
 20637 304e 55494E54 		.ascii	"UINT_LEAST16_MAX\000"
 20637      5F4C4541 
 20637      53543136 
 20637      5F4D4158 
 20637      00
 20638              	.LASF255:
 20639 305f 5F5F5546 		.ascii	"__UFRACT_IBIT__ 0\000"
 20639      52414354 
 20639      5F494249 
 20639      545F5F20 
 20639      3000
 20640              	.LASF388:
 20641 3071 5F5F4152 		.ascii	"__ARM_32BIT_STATE 1\000"
 20641      4D5F3332 
 20641      4249545F 
 20641      53544154 
 20641      45203100 
 20642              	.LASF451:
 20643 3085 5F474343 		.ascii	"_GCC_STDINT_H \000"
 20643      5F535444 
 20643      494E545F 
 20643      482000
 20644              	.LASF106:
 20645 3094 5F5F494E 		.ascii	"__INT8_C(c) c\000"
 20645      54385F43 
ARM GAS  /tmp/ccFy9xbE.s 			page 431


 20645      28632920 
 20645      6300
 20646              	.LASF260:
 20647 30a2 5F5F4C46 		.ascii	"__LFRACT_IBIT__ 0\000"
 20647      52414354 
 20647      5F494249 
 20647      545F5F20 
 20647      3000
 20648              	.LASF543:
 20649 30b4 5349475F 		.ascii	"SIG_ATOMIC_MIN __SIG_ATOMIC_MIN__\000"
 20649      41544F4D 
 20649      49435F4D 
 20649      494E205F 
 20649      5F534947 
 20650              	.LASF590:
 20651 30d6 5F535444 		.ascii	"_STDDEF_H_ \000"
 20651      4445465F 
 20651      485F2000 
 20652              	.LASF497:
 20653 30e2 494E545F 		.ascii	"INT_LEAST64_MIN (-INT_LEAST64_MAX - 1)\000"
 20653      4C454153 
 20653      5436345F 
 20653      4D494E20 
 20653      282D494E 
 20654              	.LASF164:
 20655 3109 5F5F4442 		.ascii	"__DBL_MIN_EXP__ (-1021)\000"
 20655      4C5F4D49 
 20655      4E5F4558 
 20655      505F5F20 
 20655      282D3130 
 20656              	.LASF608:
 20657 3121 5F5F5349 		.ascii	"__SIZE_T \000"
 20657      5A455F54 
 20657      2000
 20658              	.LASF455:
 20659 312b 494E5438 		.ascii	"INT8_MIN (-INT8_MAX - 1)\000"
 20659      5F4D494E 
 20659      20282D49 
 20659      4E54385F 
 20659      4D415820 
 20660              	.LASF194:
 20661 3144 5F5F464C 		.ascii	"__FLT32_DIG__ 6\000"
 20661      5433325F 
 20661      4449475F 
 20661      5F203600 
 20662              	.LASF741:
 20663 3154 4C44424C 		.ascii	"LDBL_HAS_SUBNORM __LDBL_HAS_DENORM__\000"
 20663      5F484153 
 20663      5F535542 
 20663      4E4F524D 
 20663      205F5F4C 
 20664              	.LASF482:
 20665 3179 494E545F 		.ascii	"INT_LEAST16_MAX\000"
 20665      4C454153 
 20665      5431365F 
 20665      4D415800 
 20666              	.LASF715:
ARM GAS  /tmp/ccFy9xbE.s 			page 432


 20667 3189 464C545F 		.ascii	"FLT_EPSILON __FLT_EPSILON__\000"
 20667      45505349 
 20667      4C4F4E20 
 20667      5F5F464C 
 20667      545F4550 
 20668              	.LASF699:
 20669 31a5 4C44424C 		.ascii	"LDBL_MAX_EXP __LDBL_MAX_EXP__\000"
 20669      5F4D4158 
 20669      5F455850 
 20669      205F5F4C 
 20669      44424C5F 
 20670              	.LASF190:
 20671 31c3 5F5F4C44 		.ascii	"__LDBL_HAS_DENORM__ 1\000"
 20671      424C5F48 
 20671      41535F44 
 20671      454E4F52 
 20671      4D5F5F20 
 20672              	.LASF373:
 20673 31d9 5F5F4841 		.ascii	"__HAVE_SPECULATION_SAFE_VALUE 1\000"
 20673      56455F53 
 20673      50454355 
 20673      4C415449 
 20673      4F4E5F53 
 20674              	.LASF279:
 20675 31f9 5F5F5341 		.ascii	"__SACCUM_FBIT__ 7\000"
 20675      4343554D 
 20675      5F464249 
 20675      545F5F20 
 20675      3700
 20676              	.LASF361:
 20677 320b 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1\000"
 20677      435F4841 
 20677      56455F53 
 20677      594E435F 
 20677      434F4D50 
 20678              	.LASF464:
 20679 3230 494E5433 		.ascii	"INT32_MAX\000"
 20679      325F4D41 
 20679      5800
 20680              	.LASF124:
 20681 323a 5F5F5549 		.ascii	"__UINT64_C(c) c ## ULL\000"
 20681      4E543634 
 20681      5F432863 
 20681      29206320 
 20681      23232055 
 20682              	.LASF382:
 20683 3251 5F5F4152 		.ascii	"__ARM_FEATURE_CRYPTO\000"
 20683      4D5F4645 
 20683      41545552 
 20683      455F4352 
 20683      5950544F 
 20684              	.LASF713:
 20685 3266 44424C5F 		.ascii	"DBL_EPSILON\000"
 20685      45505349 
 20685      4C4F4E00 
 20686              	.LASF52:
 20687 3272 5F5F494E 		.ascii	"__INT_LEAST32_TYPE__ long int\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 433


 20687      545F4C45 
 20687      41535433 
 20687      325F5459 
 20687      50455F5F 
 20688              	.LASF739:
 20689 3290 464C545F 		.ascii	"FLT_HAS_SUBNORM __FLT_HAS_DENORM__\000"
 20689      4841535F 
 20689      5355424E 
 20689      4F524D20 
 20689      5F5F464C 
 20690              	.LASF123:
 20691 32b3 5F5F5549 		.ascii	"__UINT_LEAST64_MAX__ 0xffffffffffffffffULL\000"
 20691      4E545F4C 
 20691      45415354 
 20691      36345F4D 
 20691      41585F5F 
 20692              	.LASF250:
 20693 32de 5F5F4652 		.ascii	"__FRACT_IBIT__ 0\000"
 20693      4143545F 
 20693      49424954 
 20693      5F5F2030 
 20693      00
 20694              	.LASF498:
 20695 32ef 55494E54 		.ascii	"UINT_LEAST64_MAX\000"
 20695      5F4C4541 
 20695      53543634 
 20695      5F4D4158 
 20695      00
 20696              	.LASF576:
 20697 3300 5F414E53 		.ascii	"_ANSI_STDARG_H_ \000"
 20697      495F5354 
 20697      44415247 
 20697      5F485F20 
 20697      00
 20698              	.LASF740:
 20699 3311 44424C5F 		.ascii	"DBL_HAS_SUBNORM __DBL_HAS_DENORM__\000"
 20699      4841535F 
 20699      5355424E 
 20699      4F524D20 
 20699      5F5F4442 
 20700              	.LASF154:
 20701 3334 5F5F464C 		.ascii	"__FLT_NORM_MAX__ 3.4028234663852886e+38F\000"
 20701      545F4E4F 
 20701      524D5F4D 
 20701      41585F5F 
 20701      20332E34 
 20702              	.LASF756:
 20703 335d 6C6F6E67 		.ascii	"long long unsigned int\000"
 20703      206C6F6E 
 20703      6720756E 
 20703      7369676E 
 20703      65642069 
 20704              	.LASF662:
 20705 3374 464C4147 		.ascii	"FLAGS_SHORT (1U << 7U)\000"
 20705      535F5348 
 20705      4F525420 
 20705      28315520 
ARM GAS  /tmp/ccFy9xbE.s 			page 434


 20705      3C3C2037 
 20706              	.LASF305:
 20707 338b 5F5F554C 		.ascii	"__ULACCUM_IBIT__ 32\000"
 20707      41434355 
 20707      4D5F4942 
 20707      49545F5F 
 20707      20333200 
 20708              	.LASF668:
 20709 339f 464C545F 		.ascii	"FLT_RADIX\000"
 20709      52414449 
 20709      5800
 20710              	.LASF70:
 20711 33a9 5F5F5348 		.ascii	"__SHRT_MAX__ 0x7fff\000"
 20711      52545F4D 
 20711      41585F5F 
 20711      20307837 
 20711      66666600 
 20712              	.LASF694:
 20713 33bd 464C545F 		.ascii	"FLT_MAX_EXP\000"
 20713      4D41585F 
 20713      45585000 
 20714              	.LASF318:
 20715 33c9 5F5F554C 		.ascii	"__ULLACCUM_EPSILON__ 0x1P-32ULLK\000"
 20715      4C414343 
 20715      554D5F45 
 20715      5053494C 
 20715      4F4E5F5F 
 20716              	.LASF612:
 20717 33ea 5F53495A 		.ascii	"_SIZE_T_DEFINED \000"
 20717      455F545F 
 20717      44454649 
 20717      4E454420 
 20717      00
 20718              	.LASF325:
 20719 33fb 5F5F4451 		.ascii	"__DQ_FBIT__ 63\000"
 20719      5F464249 
 20719      545F5F20 
 20719      363300
 20720              	.LASF494:
 20721 340a 494E545F 		.ascii	"INT_LEAST64_MAX\000"
 20721      4C454153 
 20721      5436345F 
 20721      4D415800 
 20722              	.LASF280:
 20723 341a 5F5F5341 		.ascii	"__SACCUM_IBIT__ 8\000"
 20723      4343554D 
 20723      5F494249 
 20723      545F5F20 
 20723      3800
 20724              	.LASF595:
 20725 342c 5F5F5054 		.ascii	"__PTRDIFF_T \000"
 20725      52444946 
 20725      465F5420 
 20725      00
 20726              	.LASF332:
 20727 3439 5F5F5548 		.ascii	"__UHQ_IBIT__ 0\000"
 20727      515F4942 
ARM GAS  /tmp/ccFy9xbE.s 			page 435


 20727      49545F5F 
 20727      203000
 20728              	.LASF721:
 20729 3448 464C545F 		.ascii	"FLT_MIN __FLT_MIN__\000"
 20729      4D494E20 
 20729      5F5F464C 
 20729      545F4D49 
 20729      4E5F5F00 
 20730              	.LASF478:
 20731 345c 494E545F 		.ascii	"INT_LEAST8_MIN\000"
 20731      4C454153 
 20731      54385F4D 
 20731      494E00
 20732              	.LASF59:
 20733 346b 5F5F494E 		.ascii	"__INT_FAST16_TYPE__ int\000"
 20733      545F4641 
 20733      53543136 
 20733      5F545950 
 20733      455F5F20 
 20734              	.LASF560:
 20735 3483 494E5436 		.ascii	"INT64_C\000"
 20735      345F4300 
 20736              	.LASF267:
 20737 348b 5F5F554C 		.ascii	"__ULFRACT_MAX__ 0XFFFFFFFFP-32ULR\000"
 20737      46524143 
 20737      545F4D41 
 20737      585F5F20 
 20737      30584646 
 20738              	.LASF55:
 20739 34ad 5F5F5549 		.ascii	"__UINT_LEAST16_TYPE__ short unsigned int\000"
 20739      4E545F4C 
 20739      45415354 
 20739      31365F54 
 20739      5950455F 
 20740              	.LASF657:
 20741 34d6 464C4147 		.ascii	"FLAGS_PLUS (1U << 2U)\000"
 20741      535F504C 
 20741      55532028 
 20741      3155203C 
 20741      3C203255 
 20742              	.LASF773:
 20743 34ec 76707269 		.ascii	"vprintf_\000"
 20743      6E74665F 
 20743      00
 20744              	.LASF814:
 20745 34f5 5F6F7574 		.ascii	"_out_null\000"
 20745      5F6E756C 
 20745      6C00
 20746              	.LASF39:
 20747 34ff 5F5F4348 		.ascii	"__CHAR16_TYPE__ short unsigned int\000"
 20747      41523136 
 20747      5F545950 
 20747      455F5F20 
 20747      73686F72 
 20748              	.LASF225:
 20749 3522 5F5F464C 		.ascii	"__FLT32X_DIG__ 15\000"
 20749      54333258 
ARM GAS  /tmp/ccFy9xbE.s 			page 436


 20749      5F444947 
 20749      5F5F2031 
 20749      3500
 20750              	.LASF337:
 20751 3534 5F5F5554 		.ascii	"__UTQ_FBIT__ 128\000"
 20751      515F4642 
 20751      49545F5F 
 20751      20313238 
 20751      00
 20752              	.LASF16:
 20753 3545 5F5F4649 		.ascii	"__FINITE_MATH_ONLY__ 0\000"
 20753      4E495445 
 20753      5F4D4154 
 20753      485F4F4E 
 20753      4C595F5F 
 20754              	.LASF127:
 20755 355c 5F5F494E 		.ascii	"__INT_FAST16_MAX__ 0x7fffffff\000"
 20755      545F4641 
 20755      53543136 
 20755      5F4D4158 
 20755      5F5F2030 
 20756              	.LASF537:
 20757 357a 50545244 		.ascii	"PTRDIFF_MAX __PTRDIFF_MAX__\000"
 20757      4946465F 
 20757      4D415820 
 20757      5F5F5054 
 20757      52444946 
 20758              	.LASF20:
 20759 3596 5F5F5349 		.ascii	"__SIZEOF_SHORT__ 2\000"
 20759      5A454F46 
 20759      5F53484F 
 20759      52545F5F 
 20759      203200
 20760              	.LASF745:
 20761 35a9 464C545F 		.ascii	"FLT_TRUE_MIN __FLT_DENORM_MIN__\000"
 20761      54525545 
 20761      5F4D494E 
 20761      205F5F46 
 20761      4C545F44 
 20762              	.LASF629:
 20763 35c9 5F574348 		.ascii	"_WCHAR_T_DEFINED \000"
 20763      41525F54 
 20763      5F444546 
 20763      494E4544 
 20763      2000
 20764              	.LASF307:
 20765 35db 5F5F554C 		.ascii	"__ULACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULK\000"
 20765      41434355 
 20765      4D5F4D41 
 20765      585F5F20 
 20765      30584646 
 20766              	.LASF109:
 20767 3605 5F5F494E 		.ascii	"__INT16_C(c) c\000"
 20767      5431365F 
 20767      43286329 
 20767      206300
 20768              	.LASF517:
ARM GAS  /tmp/ccFy9xbE.s 			page 437


 20769 3614 55494E54 		.ascii	"UINT_FAST32_MAX __UINT_FAST32_MAX__\000"
 20769      5F464153 
 20769      5433325F 
 20769      4D415820 
 20769      5F5F5549 
 20770              	.LASF649:
 20771 3638 5052494E 		.ascii	"PRINTF_SUPPORT_FLOAT \000"
 20771      54465F53 
 20771      5550504F 
 20771      52545F46 
 20771      4C4F4154 
 20772              	.LASF8:
 20773 364e 5F5F5645 		.ascii	"__VERSION__ \"10.3.1 20210621 (release)\"\000"
 20773      5253494F 
 20773      4E5F5F20 
 20773      2231302E 
 20773      332E3120 
 20774              	.LASF326:
 20775 3676 5F5F4451 		.ascii	"__DQ_IBIT__ 0\000"
 20775      5F494249 
 20775      545F5F20 
 20775      3000
 20776              	.LASF439:
 20777 3684 5F5F4152 		.ascii	"__ARM_BF16_FORMAT_ALTERNATIVE\000"
 20777      4D5F4246 
 20777      31365F46 
 20777      4F524D41 
 20777      545F414C 
 20778              	.LASF44:
 20779 36a2 5F5F494E 		.ascii	"__INT32_TYPE__ long int\000"
 20779      5433325F 
 20779      54595045 
 20779      5F5F206C 
 20779      6F6E6720 
 20780              	.LASF829:
 20781 36ba 5F5F7661 		.ascii	"__va_list\000"
 20781      5F6C6973 
 20781      7400
 20782              	.LASF774:
 20783 36c4 736E7072 		.ascii	"snprintf_\000"
 20783      696E7466 
 20783      5F00
 20784              	.LASF610:
 20785 36ce 5F425344 		.ascii	"_BSD_SIZE_T_ \000"
 20785      5F53495A 
 20785      455F545F 
 20785      2000
 20786              	.LASF548:
 20787 36dc 57434841 		.ascii	"WCHAR_MIN\000"
 20787      525F4D49 
 20787      4E00
 20788              	.LASF626:
 20789 36e6 5F574348 		.ascii	"_WCHAR_T_ \000"
 20789      41525F54 
 20789      5F2000
 20790              	.LASF487:
 20791 36f1 55494E54 		.ascii	"UINT_LEAST16_MAX __UINT_LEAST16_MAX__\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 438


 20791      5F4C4541 
 20791      53543136 
 20791      5F4D4158 
 20791      205F5F55 
 20792              	.LASF624:
 20793 3717 5F545F57 		.ascii	"_T_WCHAR \000"
 20793      43484152 
 20793      2000
 20794              	.LASF807:
 20795 3721 5F6F7574 		.ascii	"_out_rev\000"
 20795      5F726576 
 20795      00
 20796              	.LASF691:
 20797 372a 464C545F 		.ascii	"FLT_MIN_10_EXP __FLT_MIN_10_EXP__\000"
 20797      4D494E5F 
 20797      31305F45 
 20797      5850205F 
 20797      5F464C54 
 20798              	.LASF583:
 20799 374c 5F5F7661 		.ascii	"__va_copy(d,s) __builtin_va_copy(d,s)\000"
 20799      5F636F70 
 20799      7928642C 
 20799      7329205F 
 20799      5F627569 
 20800              	.LASF338:
 20801 3772 5F5F5554 		.ascii	"__UTQ_IBIT__ 0\000"
 20801      515F4942 
 20801      49545F5F 
 20801      203000
 20802              	.LASF513:
 20803 3781 494E545F 		.ascii	"INT_FAST32_MAX __INT_FAST32_MAX__\000"
 20803      46415354 
 20803      33325F4D 
 20803      4158205F 
 20803      5F494E54 
 20804              	.LASF341:
 20805 37a3 5F5F5341 		.ascii	"__SA_FBIT__ 15\000"
 20805      5F464249 
 20805      545F5F20 
 20805      313500
 20806              	.LASF632:
 20807 37b2 5F5F494E 		.ascii	"__INT_WCHAR_T_H \000"
 20807      545F5743 
 20807      4841525F 
 20807      545F4820 
 20807      00
 20808              	.LASF231:
 20809 37c3 5F5F464C 		.ascii	"__FLT32X_MAX__ 1.7976931348623157e+308F32x\000"
 20809      54333258 
 20809      5F4D4158 
 20809      5F5F2031 
 20809      2E373937 
 20810              	.LASF427:
 20811 37ee 5F5F4152 		.ascii	"__ARM_EABI__ 1\000"
 20811      4D5F4541 
 20811      42495F5F 
 20811      203100
ARM GAS  /tmp/ccFy9xbE.s 			page 439


 20812              	.LASF460:
 20813 37fd 494E5431 		.ascii	"INT16_MIN\000"
 20813      365F4D49 
 20813      4E00
 20814              	.LASF441:
 20815 3807 5F5F454C 		.ascii	"__ELF__ 1\000"
 20815      465F5F20 
 20815      3100
 20816              	.LASF407:
 20817 3811 5F5F5448 		.ascii	"__THUMBEL__ 1\000"
 20817      554D4245 
 20817      4C5F5F20 
 20817      3100
 20818              	.LASF796:
 20819 381f 7372632F 		.ascii	"src/pdantler/printf.c\000"
 20819      7064616E 
 20819      746C6572 
 20819      2F707269 
 20819      6E74662E 
 20820              	.LASF379:
 20821 3835 5F5F4152 		.ascii	"__ARM_FEATURE_DSP 1\000"
 20821      4D5F4645 
 20821      41545552 
 20821      455F4453 
 20821      50203100 
 20822              	.LASF832:
 20823 3849 5F707574 		.ascii	"_putchar\000"
 20823      63686172 
 20823      00
 20824              	.LASF320:
 20825 3852 5F5F5151 		.ascii	"__QQ_IBIT__ 0\000"
 20825      5F494249 
 20825      545F5F20 
 20825      3000
 20826              	.LASF309:
 20827 3860 5F5F4C4C 		.ascii	"__LLACCUM_FBIT__ 31\000"
 20827      41434355 
 20827      4D5F4642 
 20827      49545F5F 
 20827      20333100 
 20828              	.LASF805:
 20829 3874 5F6E746F 		.ascii	"_ntoa_long\000"
 20829      615F6C6F 
 20829      6E6700
 20830              	.LASF651:
 20831 387f 5052494E 		.ascii	"PRINTF_DEFAULT_FLOAT_PRECISION 6U\000"
 20831      54465F44 
 20831      45464155 
 20831      4C545F46 
 20831      4C4F4154 
 20832              	.LASF334:
 20833 38a1 5F5F5553 		.ascii	"__USQ_IBIT__ 0\000"
 20833      515F4942 
 20833      49545F5F 
 20833      203000
 20834              	.LASF6:
 20835 38b0 5F5F474E 		.ascii	"__GNUC_MINOR__ 3\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 440


 20835      55435F4D 
 20835      494E4F52 
 20835      5F5F2033 
 20835      00
 20836              	.LASF56:
 20837 38c1 5F5F5549 		.ascii	"__UINT_LEAST32_TYPE__ long unsigned int\000"
 20837      4E545F4C 
 20837      45415354 
 20837      33325F54 
 20837      5950455F 
 20838              	.LASF394:
 20839 38e9 5F5F4152 		.ascii	"__ARM_FEATURE_NUMERIC_MAXMIN\000"
 20839      4D5F4645 
 20839      41545552 
 20839      455F4E55 
 20839      4D455249 
 20840              	.LASF822:
 20841 3906 5F5F6165 		.ascii	"__aeabi_dsub\000"
 20841      6162695F 
 20841      64737562 
 20841      00
 20842              	.LASF37:
 20843 3913 5F5F494E 		.ascii	"__INTMAX_TYPE__ long long int\000"
 20843      544D4158 
 20843      5F545950 
 20843      455F5F20 
 20843      6C6F6E67 
 20844              	.LASF409:
 20845 3931 5F5F4152 		.ascii	"__ARM_ARCH_ISA_THUMB 2\000"
 20845      4D5F4152 
 20845      43485F49 
 20845      53415F54 
 20845      48554D42 
 20846              	.LASF706:
 20847 3948 464C545F 		.ascii	"FLT_MAX\000"
 20847      4D415800 
 20848              	.LASF530:
 20849 3950 494E544D 		.ascii	"INTMAX_MAX\000"
 20849      41585F4D 
 20849      415800
 20850              	.LASF641:
 20851 395b 5F474343 		.ascii	"_GCC_MAX_ALIGN_T \000"
 20851      5F4D4158 
 20851      5F414C49 
 20851      474E5F54 
 20851      2000
 20852              	.LASF417:
 20853 396d 5F5F4152 		.ascii	"__ARM_FEATURE_FP16_SCALAR_ARITHMETIC\000"
 20853      4D5F4645 
 20853      41545552 
 20853      455F4650 
 20853      31365F53 
 20854              	.LASF288:
 20855 3992 5F5F5553 		.ascii	"__USACCUM_EPSILON__ 0x1P-8UHK\000"
 20855      41434355 
 20855      4D5F4550 
 20855      53494C4F 
ARM GAS  /tmp/ccFy9xbE.s 			page 441


 20855      4E5F5F20 
 20856              	.LASF176:
 20857 39b0 5F5F4442 		.ascii	"__DBL_HAS_QUIET_NAN__ 1\000"
 20857      4C5F4841 
 20857      535F5155 
 20857      4945545F 
 20857      4E414E5F 
 20858              	.LASF620:
 20859 39c8 5F5F7763 		.ascii	"__wchar_t__ \000"
 20859      6861725F 
 20859      745F5F20 
 20859      00
 20860              	.LASF803:
 20861 39d5 5F6E746F 		.ascii	"_ntoa_long_long\000"
 20861      615F6C6F 
 20861      6E675F6C 
 20861      6F6E6700 
 20862              	.LASF272:
 20863 39e5 5F5F4C4C 		.ascii	"__LLFRACT_MAX__ 0X7FFFFFFFFFFFFFFFP-63LLR\000"
 20863      46524143 
 20863      545F4D41 
 20863      585F5F20 
 20863      30583746 
 20864              	.LASF558:
 20865 3a0f 494E5433 		.ascii	"INT32_C\000"
 20865      325F4300 
 20866              	.LASF383:
 20867 3a17 5F5F4152 		.ascii	"__ARM_FEATURE_UNALIGNED 1\000"
 20867      4D5F4645 
 20867      41545552 
 20867      455F554E 
 20867      414C4947 
 20868              	.LASF646:
 20869 3a31 76707269 		.ascii	"vprintf vprintf_\000"
 20869      6E746620 
 20869      76707269 
 20869      6E74665F 
 20869      00
 20870              	.LASF802:
 20871 3a42 66726163 		.ascii	"frac\000"
 20871      00
 20872              	.LASF679:
 20873 3a47 464C545F 		.ascii	"FLT_DIG __FLT_DIG__\000"
 20873      44494720 
 20873      5F5F464C 
 20873      545F4449 
 20873      475F5F00 
 20874              	.LASF282:
 20875 3a5b 5F5F5341 		.ascii	"__SACCUM_MAX__ 0X7FFFP-7HK\000"
 20875      4343554D 
 20875      5F4D4158 
 20875      5F5F2030 
 20875      58374646 
 20876              	.LASF66:
 20877 3a76 5F5F494E 		.ascii	"__INTPTR_TYPE__ int\000"
 20877      54505452 
 20877      5F545950 
ARM GAS  /tmp/ccFy9xbE.s 			page 442


 20877      455F5F20 
 20877      696E7400 
 20878              	.LASF562:
 20879 3a8a 55494E54 		.ascii	"UINT8_C\000"
 20879      385F4300 
 20880              	.LASF67:
 20881 3a92 5F5F5549 		.ascii	"__UINTPTR_TYPE__ unsigned int\000"
 20881      4E545054 
 20881      525F5459 
 20881      50455F5F 
 20881      20756E73 
 20882              	.LASF564:
 20883 3ab0 55494E54 		.ascii	"UINT16_C\000"
 20883      31365F43 
 20883      00
 20884              	.LASF355:
 20885 3ab9 5F5F5245 		.ascii	"__REGISTER_PREFIX__ \000"
 20885      47495354 
 20885      45525F50 
 20885      52454649 
 20885      585F5F20 
 20886              	.LASF200:
 20887 3ace 5F5F464C 		.ascii	"__FLT32_MAX__ 3.4028234663852886e+38F32\000"
 20887      5433325F 
 20887      4D41585F 
 20887      5F20332E 
 20887      34303238 
 20888              	.LASF163:
 20889 3af6 5F5F4442 		.ascii	"__DBL_DIG__ 15\000"
 20889      4C5F4449 
 20889      475F5F20 
 20889      313500
 20890              	.LASF268:
 20891 3b05 5F5F554C 		.ascii	"__ULFRACT_EPSILON__ 0x1P-32ULR\000"
 20891      46524143 
 20891      545F4550 
 20891      53494C4F 
 20891      4E5F5F20 
 20892              	.LASF547:
 20893 3b24 57434841 		.ascii	"WCHAR_MAX __WCHAR_MAX__\000"
 20893      525F4D41 
 20893      58205F5F 
 20893      57434841 
 20893      525F4D41 
 20894              	.LASF775:
 20895 3b3c 73707269 		.ascii	"sprintf_\000"
 20895      6E74665F 
 20895      00
 20896              	.LASF24:
 20897 3b45 5F5F5349 		.ascii	"__SIZEOF_SIZE_T__ 4\000"
 20897      5A454F46 
 20897      5F53495A 
 20897      455F545F 
 20897      5F203400 
 20898              	.LASF49:
 20899 3b59 5F5F5549 		.ascii	"__UINT64_TYPE__ long long unsigned int\000"
 20899      4E543634 
ARM GAS  /tmp/ccFy9xbE.s 			page 443


 20899      5F545950 
 20899      455F5F20 
 20899      6C6F6E67 
 20900              	.LASF115:
 20901 3b80 5F5F494E 		.ascii	"__INT64_C(c) c ## LL\000"
 20901      5436345F 
 20901      43286329 
 20901      20632023 
 20901      23204C4C 
 20902              	.LASF399:
 20903 3b95 5F5F4152 		.ascii	"__ARM_ARCH_PROFILE 77\000"
 20903      4D5F4152 
 20903      43485F50 
 20903      524F4649 
 20903      4C452037 
 20904              	.LASF180:
 20905 3bab 5F5F4C44 		.ascii	"__LDBL_MIN_10_EXP__ (-307)\000"
 20905      424C5F4D 
 20905      494E5F31 
 20905      305F4558 
 20905      505F5F20 
 20906              	.LASF187:
 20907 3bc6 5F5F4C44 		.ascii	"__LDBL_MIN__ 2.2250738585072014e-308L\000"
 20907      424C5F4D 
 20907      494E5F5F 
 20907      20322E32 
 20907      32353037 
 20908              	.LASF434:
 20909 3bec 5F5F4152 		.ascii	"__ARM_FEATURE_CDE\000"
 20909      4D5F4645 
 20909      41545552 
 20909      455F4344 
 20909      4500
 20910              	.LASF253:
 20911 3bfe 5F5F4652 		.ascii	"__FRACT_EPSILON__ 0x1P-15R\000"
 20911      4143545F 
 20911      45505349 
 20911      4C4F4E5F 
 20911      5F203078 
 20912              	.LASF491:
 20913 3c19 494E545F 		.ascii	"INT_LEAST32_MIN (-INT_LEAST32_MAX - 1)\000"
 20913      4C454153 
 20913      5433325F 
 20913      4D494E20 
 20913      282D494E 
 20914              	.LASF750:
 20915 3c40 73686F72 		.ascii	"short int\000"
 20915      7420696E 
 20915      7400
 20916              	.LASF589:
 20917 3c4a 5F535444 		.ascii	"_STDDEF_H \000"
 20917      4445465F 
 20917      482000
 20918              	.LASF581:
 20919 3c55 76615F61 		.ascii	"va_arg(v,l) __builtin_va_arg(v,l)\000"
 20919      72672876 
 20919      2C6C2920 
ARM GAS  /tmp/ccFy9xbE.s 			page 444


 20919      5F5F6275 
 20919      696C7469 
 20920              	.LASF120:
 20921 3c77 5F5F5549 		.ascii	"__UINT16_C(c) c\000"
 20921      4E543136 
 20921      5F432863 
 20921      29206300 
 20922              	.LASF726:
 20923 3c87 464C545F 		.ascii	"FLT_EVAL_METHOD\000"
 20923      4556414C 
 20923      5F4D4554 
 20923      484F4400 
 20924              	.LASF758:
 20925 3c97 75696E74 		.ascii	"uint64_t\000"
 20925      36345F74 
 20925      00
 20926              	.LASF352:
 20927 3ca0 5F5F5544 		.ascii	"__UDA_IBIT__ 32\000"
 20927      415F4942 
 20927      49545F5F 
 20927      20333200 
 20928              	.LASF492:
 20929 3cb0 55494E54 		.ascii	"UINT_LEAST32_MAX\000"
 20929      5F4C4541 
 20929      53543332 
 20929      5F4D4158 
 20929      00
 20930              	.LASF9:
 20931 3cc1 5F5F4154 		.ascii	"__ATOMIC_RELAXED 0\000"
 20931      4F4D4943 
 20931      5F52454C 
 20931      41584544 
 20931      203000
 20932              	.LASF780:
 20933 3cd4 70726563 		.ascii	"precision\000"
 20933      6973696F 
 20933      6E00
 20934              	.LASF432:
 20935 3cde 5F5F4152 		.ascii	"__ARM_FEATURE_COPROC\000"
 20935      4D5F4645 
 20935      41545552 
 20935      455F434F 
 20935      50524F43 
 20936              	.LASF175:
 20937 3cf3 5F5F4442 		.ascii	"__DBL_HAS_INFINITY__ 1\000"
 20937      4C5F4841 
 20937      535F494E 
 20937      46494E49 
 20937      54595F5F 
 20938              	.LASF414:
 20939 3d0a 5F5F4152 		.ascii	"__ARM_FP16_FORMAT_IEEE\000"
 20939      4D5F4650 
 20939      31365F46 
 20939      4F524D41 
 20939      545F4945 
 20940              	.LASF94:
 20941 3d21 5F5F5349 		.ascii	"__SIG_ATOMIC_MAX__ 0x7fffffff\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 445


 20941      475F4154 
 20941      4F4D4943 
 20941      5F4D4158 
 20941      5F5F2030 
 20942              	.LASF493:
 20943 3d3f 55494E54 		.ascii	"UINT_LEAST32_MAX __UINT_LEAST32_MAX__\000"
 20943      5F4C4541 
 20943      53543332 
 20943      5F4D4158 
 20943      205F5F55 
 20944              	.LASF209:
 20945 3d65 5F5F464C 		.ascii	"__FLT64_MANT_DIG__ 53\000"
 20945      5436345F 
 20945      4D414E54 
 20945      5F444947 
 20945      5F5F2035 
 20946              	.LASF769:
 20947 3d7b 76736E70 		.ascii	"vsnprintf_\000"
 20947      72696E74 
 20947      665F00
 20948              	.LASF554:
 20949 3d86 494E5438 		.ascii	"INT8_C\000"
 20949      5F4300
 20950              	.LASF687:
 20951 3d8d 4C44424C 		.ascii	"LDBL_MIN_EXP __LDBL_MIN_EXP__\000"
 20951      5F4D494E 
 20951      5F455850 
 20951      205F5F4C 
 20951      44424C5F 
 20952              	.LASF488:
 20953 3dab 494E545F 		.ascii	"INT_LEAST32_MAX\000"
 20953      4C454153 
 20953      5433325F 
 20953      4D415800 
 20954              	.LASF442:
 20955 3dbb 5F5F5553 		.ascii	"__USES_INITFINI__ 1\000"
 20955      45535F49 
 20955      4E495446 
 20955      494E495F 
 20955      5F203100 
 20956              	.LASF601:
 20957 3dcf 5F5F6E65 		.ascii	"__need_ptrdiff_t\000"
 20957      65645F70 
 20957      74726469 
 20957      66665F74 
 20957      00
 20958              	.LASF168:
 20959 3de0 5F5F4442 		.ascii	"__DBL_DECIMAL_DIG__ 17\000"
 20959      4C5F4445 
 20959      43494D41 
 20959      4C5F4449 
 20959      475F5F20 
 20960              	.LASF596:
 20961 3df7 5F505452 		.ascii	"_PTRDIFF_T_ \000"
 20961      44494646 
 20961      5F545F20 
 20961      00
ARM GAS  /tmp/ccFy9xbE.s 			page 446


 20962              	.LASF557:
 20963 3e04 494E5431 		.ascii	"INT16_C(c) __INT16_C(c)\000"
 20963      365F4328 
 20963      6329205F 
 20963      5F494E54 
 20963      31365F43 
 20964              	.LASF793:
 20965 3e1c 66776964 		.ascii	"fwidth\000"
 20965      746800
 20966              	.LASF98:
 20967 3e23 5F5F494E 		.ascii	"__INT16_MAX__ 0x7fff\000"
 20967      5431365F 
 20967      4D41585F 
 20967      5F203078 
 20967      37666666 
 20968              	.LASF82:
 20969 3e38 5F5F494E 		.ascii	"__INT_WIDTH__ 32\000"
 20969      545F5749 
 20969      4454485F 
 20969      5F203332 
 20969      00
 20970              	.LASF395:
 20971 3e49 5F5F4152 		.ascii	"__ARM_FEATURE_SIMD32 1\000"
 20971      4D5F4645 
 20971      41545552 
 20971      455F5349 
 20971      4D443332 
 20972              	.LASF319:
 20973 3e60 5F5F5151 		.ascii	"__QQ_FBIT__ 7\000"
 20973      5F464249 
 20973      545F5F20 
 20973      3700
 20974              	.LASF686:
 20975 3e6e 44424C5F 		.ascii	"DBL_MIN_EXP __DBL_MIN_EXP__\000"
 20975      4D494E5F 
 20975      45585020 
 20975      5F5F4442 
 20975      4C5F4D49 
 20976              	.LASF266:
 20977 3e8a 5F5F554C 		.ascii	"__ULFRACT_MIN__ 0.0ULR\000"
 20977      46524143 
 20977      545F4D49 
 20977      4E5F5F20 
 20977      302E3055 
 20978              	.LASF480:
 20979 3ea1 55494E54 		.ascii	"UINT_LEAST8_MAX\000"
 20979      5F4C4541 
 20979      5354385F 
 20979      4D415800 
 20980              	.LASF96:
 20981 3eb1 5F5F5349 		.ascii	"__SIG_ATOMIC_WIDTH__ 32\000"
 20981      475F4154 
 20981      4F4D4943 
 20981      5F574944 
 20981      54485F5F 
 20982              	.LASF219:
 20983 3ec9 5F5F464C 		.ascii	"__FLT64_EPSILON__ 2.2204460492503131e-16F64\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 447


 20983      5436345F 
 20983      45505349 
 20983      4C4F4E5F 
 20983      5F20322E 
 20984              	.LASF354:
 20985 3ef5 5F5F5554 		.ascii	"__UTA_IBIT__ 64\000"
 20985      415F4942 
 20985      49545F5F 
 20985      20363400 
 20986              	.LASF580:
 20987 3f05 76615F65 		.ascii	"va_end(v) __builtin_va_end(v)\000"
 20987      6E642876 
 20987      29205F5F 
 20987      6275696C 
 20987      74696E5F 
 20988              	.LASF443:
 20989 3f23 5F5F4650 		.ascii	"__FPU_USED 1\000"
 20989      555F5553 
 20989      45442031 
 20989      00
 20990              	.LASF278:
 20991 3f30 5F5F554C 		.ascii	"__ULLFRACT_EPSILON__ 0x1P-64ULLR\000"
 20991      4C465241 
 20991      43545F45 
 20991      5053494C 
 20991      4F4E5F5F 
 20992              	.LASF377:
 20993 3f51 5F5F5349 		.ascii	"__SIZEOF_WINT_T__ 4\000"
 20993      5A454F46 
 20993      5F57494E 
 20993      545F545F 
 20993      5F203400 
 20994              	.LASF496:
 20995 3f65 494E545F 		.ascii	"INT_LEAST64_MIN\000"
 20995      4C454153 
 20995      5436345F 
 20995      4D494E00 
 20996              	.LASF27:
 20997 3f75 5F5F4F52 		.ascii	"__ORDER_LITTLE_ENDIAN__ 1234\000"
 20997      4445525F 
 20997      4C495454 
 20997      4C455F45 
 20997      4E444941 
 20998              	.LASF0:
 20999 3f92 5F5F5354 		.ascii	"__STDC__ 1\000"
 20999      44435F5F 
 20999      203100
 21000              	.LASF184:
 21001 3f9d 5F5F4C44 		.ascii	"__LDBL_DECIMAL_DIG__ 17\000"
 21001      424C5F44 
 21001      4543494D 
 21001      414C5F44 
 21001      49475F5F 
 21002              	.LASF301:
 21003 3fb5 5F5F4C41 		.ascii	"__LACCUM_MIN__ (-0X1P31LK-0X1P31LK)\000"
 21003      4343554D 
 21003      5F4D494E 
ARM GAS  /tmp/ccFy9xbE.s 			page 448


 21003      5F5F2028 
 21003      2D305831 
 21004              	.LASF701:
 21005 3fd9 44424C5F 		.ascii	"DBL_MAX_10_EXP\000"
 21005      4D41585F 
 21005      31305F45 
 21005      585000
 21006              	.LASF125:
 21007 3fe8 5F5F494E 		.ascii	"__INT_FAST8_MAX__ 0x7fffffff\000"
 21007      545F4641 
 21007      5354385F 
 21007      4D41585F 
 21007      5F203078 
 21008              	.LASF205:
 21009 4005 5F5F464C 		.ascii	"__FLT32_HAS_DENORM__ 1\000"
 21009      5433325F 
 21009      4841535F 
 21009      44454E4F 
 21009      524D5F5F 
 21010              	.LASF236:
 21011 401c 5F5F464C 		.ascii	"__FLT32X_HAS_DENORM__ 1\000"
 21011      54333258 
 21011      5F484153 
 21011      5F44454E 
 21011      4F524D5F 
 21012              	.LASF316:
 21013 4034 5F5F554C 		.ascii	"__ULLACCUM_MIN__ 0.0ULLK\000"
 21013      4C414343 
 21013      554D5F4D 
 21013      494E5F5F 
 21013      20302E30 
 21014              	.LASF130:
 21015 404d 5F5F494E 		.ascii	"__INT_FAST32_WIDTH__ 32\000"
 21015      545F4641 
 21015      53543332 
 21015      5F574944 
 21015      54485F5F 
 21016              	.LASF631:
 21017 4065 5F5F5F69 		.ascii	"___int_wchar_t_h \000"
 21017      6E745F77 
 21017      63686172 
 21017      5F745F68 
 21017      2000
 21018              	.LASF672:
 21019 4077 4C44424C 		.ascii	"LDBL_MANT_DIG\000"
 21019      5F4D414E 
 21019      545F4449 
 21019      4700
 21020              	.LASF702:
 21021 4085 4C44424C 		.ascii	"LDBL_MAX_10_EXP\000"
 21021      5F4D4158 
 21021      5F31305F 
 21021      45585000 
 21022              	.LASF431:
 21023 4095 5F5F4152 		.ascii	"__ARM_ASM_SYNTAX_UNIFIED__ 1\000"
 21023      4D5F4153 
 21023      4D5F5359 
ARM GAS  /tmp/ccFy9xbE.s 			page 449


 21023      4E544158 
 21023      5F554E49 
 21024              	.LASF445:
 21025 40b2 54415247 		.ascii	"TARGET_EXTENSION 1\000"
 21025      45545F45 
 21025      5854454E 
 21025      53494F4E 
 21025      203100
 21026              	.LASF720:
 21027 40c5 4C44424C 		.ascii	"LDBL_MIN\000"
 21027      5F4D494E 
 21027      00
 21028              	.LASF48:
 21029 40ce 5F5F5549 		.ascii	"__UINT32_TYPE__ long unsigned int\000"
 21029      4E543332 
 21029      5F545950 
 21029      455F5F20 
 21029      6C6F6E67 
 21030              	.LASF525:
 21031 40f0 494E5450 		.ascii	"INTPTR_MAX __INTPTR_MAX__\000"
 21031      54525F4D 
 21031      4158205F 
 21031      5F494E54 
 21031      5054525F 
 21032              	.LASF386:
 21033 410a 5F5F4152 		.ascii	"__ARM_FEATURE_DOTPROD\000"
 21033      4D5F4645 
 21033      41545552 
 21033      455F444F 
 21033      5450524F 
 21034              	.LASF426:
 21035 4120 5F5F4152 		.ascii	"__ARM_PCS_VFP 1\000"
 21035      4D5F5043 
 21035      535F5646 
 21035      50203100 
 21036              	.LASF616:
 21037 4130 5F474343 		.ascii	"_GCC_SIZE_T \000"
 21037      5F53495A 
 21037      455F5420 
 21037      00
 21038              	.LASF700:
 21039 413d 464C545F 		.ascii	"FLT_MAX_10_EXP\000"
 21039      4D41585F 
 21039      31305F45 
 21039      585000
 21040              	.LASF733:
 21041 414c 464C545F 		.ascii	"FLT_DECIMAL_DIG __FLT_DECIMAL_DIG__\000"
 21041      44454349 
 21041      4D414C5F 
 21041      44494720 
 21041      5F5F464C 
 21042              	.LASF86:
 21043 4170 5F5F5749 		.ascii	"__WINT_WIDTH__ 32\000"
 21043      4E545F57 
 21043      49445448 
 21043      5F5F2033 
 21043      3200
ARM GAS  /tmp/ccFy9xbE.s 			page 450


 21044              	.LASF276:
 21045 4182 5F5F554C 		.ascii	"__ULLFRACT_MIN__ 0.0ULLR\000"
 21045      4C465241 
 21045      43545F4D 
 21045      494E5F5F 
 21045      20302E30 
 21046              	.LASF623:
 21047 419b 5F545F57 		.ascii	"_T_WCHAR_ \000"
 21047      43484152 
 21047      5F2000
 21048              	.LASF729:
 21049 41a6 44454349 		.ascii	"DECIMAL_DIG __DECIMAL_DIG__\000"
 21049      4D414C5F 
 21049      44494720 
 21049      5F5F4445 
 21049      43494D41 
 21050              	.LASF800:
 21051 41c2 706F7731 		.ascii	"pow10\000"
 21051      3000
 21052              	.LASF17:
 21053 41c8 5F5F5349 		.ascii	"__SIZEOF_INT__ 4\000"
 21053      5A454F46 
 21053      5F494E54 
 21053      5F5F2034 
 21053      00
 21054              	.LASF635:
 21055 41d9 5F425344 		.ascii	"_BSD_WCHAR_T_\000"
 21055      5F574348 
 21055      41525F54 
 21055      5F00
 21056              	.LASF462:
 21057 41e7 55494E54 		.ascii	"UINT16_MAX\000"
 21057      31365F4D 
 21057      415800
 21058              	.LASF270:
 21059 41f2 5F5F4C4C 		.ascii	"__LLFRACT_IBIT__ 0\000"
 21059      46524143 
 21059      545F4942 
 21059      49545F5F 
 21059      203000
 21060              	.LASF283:
 21061 4205 5F5F5341 		.ascii	"__SACCUM_EPSILON__ 0x1P-7HK\000"
 21061      4343554D 
 21061      5F455053 
 21061      494C4F4E 
 21061      5F5F2030 
 21062              	.LASF404:
 21063 4221 5F5F4743 		.ascii	"__GCC_ASM_FLAG_OUTPUTS__ 1\000"
 21063      435F4153 
 21063      4D5F464C 
 21063      41475F4F 
 21063      55545055 
 21064              	.LASF413:
 21065 423c 5F5F4152 		.ascii	"__ARM_FP 4\000"
 21065      4D5F4650 
 21065      203400
 21066              	.LASF681:
ARM GAS  /tmp/ccFy9xbE.s 			page 451


 21067 4247 4C44424C 		.ascii	"LDBL_DIG __LDBL_DIG__\000"
 21067      5F444947 
 21067      205F5F4C 
 21067      44424C5F 
 21067      4449475F 
 21068              	.LASF63:
 21069 425d 5F5F5549 		.ascii	"__UINT_FAST16_TYPE__ unsigned int\000"
 21069      4E545F46 
 21069      41535431 
 21069      365F5459 
 21069      50455F5F 
 21070              	.LASF348:
 21071 427f 5F5F5548 		.ascii	"__UHA_IBIT__ 8\000"
 21071      415F4942 
 21071      49545F5F 
 21071      203800
 21072              	.LASF293:
 21073 428e 5F5F4143 		.ascii	"__ACCUM_EPSILON__ 0x1P-15K\000"
 21073      43554D5F 
 21073      45505349 
 21073      4C4F4E5F 
 21073      5F203078 
 21074              	.LASF308:
 21075 42a9 5F5F554C 		.ascii	"__ULACCUM_EPSILON__ 0x1P-32ULK\000"
 21075      41434355 
 21075      4D5F4550 
 21075      53494C4F 
 21075      4E5F5F20 
 21076              	.LASF178:
 21077 42c8 5F5F4C44 		.ascii	"__LDBL_DIG__ 15\000"
 21077      424C5F44 
 21077      49475F5F 
 21077      20313500 
 21078              	.LASF568:
 21079 42d8 55494E54 		.ascii	"UINT64_C\000"
 21079      36345F43 
 21079      00
 21080              	.LASF88:
 21081 42e1 5F5F5349 		.ascii	"__SIZE_WIDTH__ 32\000"
 21081      5A455F57 
 21081      49445448 
 21081      5F5F2033 
 21081      3200
 21082              	.LASF540:
 21083 42f3 5349475F 		.ascii	"SIG_ATOMIC_MAX\000"
 21083      41544F4D 
 21083      49435F4D 
 21083      415800
 21084              	.LASF727:
 21085 4302 464C545F 		.ascii	"FLT_EVAL_METHOD __FLT_EVAL_METHOD__\000"
 21085      4556414C 
 21085      5F4D4554 
 21085      484F4420 
 21085      5F5F464C 
 21086              	.LASF77:
 21087 4326 5F5F5749 		.ascii	"__WINT_MIN__ 0U\000"
 21087      4E545F4D 
ARM GAS  /tmp/ccFy9xbE.s 			page 452


 21087      494E5F5F 
 21087      20305500 
 21088              	.LASF484:
 21089 4336 494E545F 		.ascii	"INT_LEAST16_MIN\000"
 21089      4C454153 
 21089      5431365F 
 21089      4D494E00 
 21090              	.LASF499:
 21091 4346 55494E54 		.ascii	"UINT_LEAST64_MAX __UINT_LEAST64_MAX__\000"
 21091      5F4C4541 
 21091      53543634 
 21091      5F4D4158 
 21091      205F5F55 
 21092              	.LASF210:
 21093 436c 5F5F464C 		.ascii	"__FLT64_DIG__ 15\000"
 21093      5436345F 
 21093      4449475F 
 21093      5F203135 
 21093      00
 21094              	.LASF76:
 21095 437d 5F5F5749 		.ascii	"__WINT_MAX__ 0xffffffffU\000"
 21095      4E545F4D 
 21095      41585F5F 
 21095      20307866 
 21095      66666666 
 21096              	.LASF107:
 21097 4396 5F5F494E 		.ascii	"__INT_LEAST8_WIDTH__ 8\000"
 21097      545F4C45 
 21097      41535438 
 21097      5F574944 
 21097      54485F5F 
 21098              	.LASF51:
 21099 43ad 5F5F494E 		.ascii	"__INT_LEAST16_TYPE__ short int\000"
 21099      545F4C45 
 21099      41535431 
 21099      365F5459 
 21099      50455F5F 
 21100              	.LASF744:
 21101 43cc 4C44424C 		.ascii	"LDBL_TRUE_MIN\000"
 21101      5F545255 
 21101      455F4D49 
 21101      4E00
 21102              	.LASF169:
 21103 43da 5F5F4442 		.ascii	"__DBL_MAX__ ((double)1.7976931348623157e+308L)\000"
 21103      4C5F4D41 
 21103      585F5F20 
 21103      2828646F 
 21103      75626C65 
 21104              	.LASF724:
 21105 4409 464C545F 		.ascii	"FLT_ROUNDS\000"
 21105      524F554E 
 21105      445300
 21106              	.LASF466:
 21107 4414 494E5433 		.ascii	"INT32_MIN\000"
 21107      325F4D49 
 21107      4E00
 21108              	.LASF269:
ARM GAS  /tmp/ccFy9xbE.s 			page 453


 21109 441e 5F5F4C4C 		.ascii	"__LLFRACT_FBIT__ 63\000"
 21109      46524143 
 21109      545F4642 
 21109      49545F5F 
 21109      20363300 
 21110              	.LASF206:
 21111 4432 5F5F464C 		.ascii	"__FLT32_HAS_INFINITY__ 1\000"
 21111      5433325F 
 21111      4841535F 
 21111      494E4649 
 21111      4E495459 
 21112              	.LASF574:
 21113 444b 5F505249 		.ascii	"_PRINTF_H_ \000"
 21113      4E54465F 
 21113      485F2000 
 21114              	.LASF507:
 21115 4457 494E545F 		.ascii	"INT_FAST16_MAX __INT_FAST16_MAX__\000"
 21115      46415354 
 21115      31365F4D 
 21115      4158205F 
 21115      5F494E54 
 21116              	.LASF410:
 21117 4479 5F5F4152 		.ascii	"__ARMEL__ 1\000"
 21117      4D454C5F 
 21117      5F203100 
 21118              	.LASF781:
 21119 4485 62617365 		.ascii	"base\000"
 21119      00
 21120              	.LASF786:
 21121 448a 5F65746F 		.ascii	"_etoa\000"
 21121      6100
 21122              	.LASF321:
 21123 4490 5F5F4851 		.ascii	"__HQ_FBIT__ 15\000"
 21123      5F464249 
 21123      545F5F20 
 21123      313500
 21124              	.LASF450:
 21125 449f 5F5F626F 		.ascii	"__bool_true_false_are_defined 1\000"
 21125      6F6C5F74 
 21125      7275655F 
 21125      66616C73 
 21125      655F6172 
 21126              	.LASF577:
 21127 44bf 5F5F6E65 		.ascii	"__need___va_list\000"
 21127      65645F5F 
 21127      5F76615F 
 21127      6C697374 
 21127      00
 21128              	.LASF79:
 21129 44d0 5F5F5349 		.ascii	"__SIZE_MAX__ 0xffffffffU\000"
 21129      5A455F4D 
 21129      41585F5F 
 21129      20307866 
 21129      66666666 
 21130              	.LASF401:
 21131 44e9 5F5F4152 		.ascii	"__ARM_ARCH\000"
 21131      4D5F4152 
ARM GAS  /tmp/ccFy9xbE.s 			page 454


 21131      434800
 21132              	.LASF683:
 21133 44f4 44424C5F 		.ascii	"DBL_MIN_EXP\000"
 21133      4D494E5F 
 21133      45585000 
 21134              	.LASF72:
 21135 4500 5F5F4C4F 		.ascii	"__LONG_MAX__ 0x7fffffffL\000"
 21135      4E475F4D 
 21135      41585F5F 
 21135      20307837 
 21135      66666666 
 21136              	.LASF801:
 21137 4519 77686F6C 		.ascii	"whole\000"
 21137      6500
 21138              	.LASF734:
 21139 451f 44424C5F 		.ascii	"DBL_DECIMAL_DIG __DBL_DECIMAL_DIG__\000"
 21139      44454349 
 21139      4D414C5F 
 21139      44494720 
 21139      5F5F4442 
 21140              	.LASF648:
 21141 4543 5052494E 		.ascii	"PRINTF_FTOA_BUFFER_SIZE 32U\000"
 21141      54465F46 
 21141      544F415F 
 21141      42554646 
 21141      45525F53 
 21142              	.LASF722:
 21143 455f 44424C5F 		.ascii	"DBL_MIN __DBL_MIN__\000"
 21143      4D494E20 
 21143      5F5F4442 
 21143      4C5F4D49 
 21143      4E5F5F00 
 21144              	.LASF392:
 21145 4573 5F5F4152 		.ascii	"__ARM_FEATURE_LDREX 7\000"
 21145      4D5F4645 
 21145      41545552 
 21145      455F4C44 
 21145      52455820 
 21146              	.LASF689:
 21147 4589 44424C5F 		.ascii	"DBL_MIN_10_EXP\000"
 21147      4D494E5F 
 21147      31305F45 
 21147      585000
 21148              	.LASF536:
 21149 4598 50545244 		.ascii	"PTRDIFF_MAX\000"
 21149      4946465F 
 21149      4D415800 
 21150              	.LASF703:
 21151 45a4 464C545F 		.ascii	"FLT_MAX_10_EXP __FLT_MAX_10_EXP__\000"
 21151      4D41585F 
 21151      31305F45 
 21151      5850205F 
 21151      5F464C54 
 21152              	.LASF273:
 21153 45c6 5F5F4C4C 		.ascii	"__LLFRACT_EPSILON__ 0x1P-63LLR\000"
 21153      46524143 
 21153      545F4550 
ARM GAS  /tmp/ccFy9xbE.s 			page 455


 21153      53494C4F 
 21153      4E5F5F20 
 21154              	.LASF242:
 21155 45e5 5F5F5346 		.ascii	"__SFRACT_MAX__ 0X7FP-7HR\000"
 21155      52414354 
 21155      5F4D4158 
 21155      5F5F2030 
 21155      58374650 
 21156              	.LASF224:
 21157 45fe 5F5F464C 		.ascii	"__FLT32X_MANT_DIG__ 53\000"
 21157      54333258 
 21157      5F4D414E 
 21157      545F4449 
 21157      475F5F20 
 21158              	.LASF85:
 21159 4615 5F5F5743 		.ascii	"__WCHAR_WIDTH__ 32\000"
 21159      4841525F 
 21159      57494454 
 21159      485F5F20 
 21159      333200
 21160              	.LASF790:
 21161 4628 65787032 		.ascii	"exp2\000"
 21161      00
 21162              	.LASF550:
 21163 462d 57494E54 		.ascii	"WINT_MAX\000"
 21163      5F4D4158 
 21163      00
 21164              	.LASF812:
 21165 4636 63686172 		.ascii	"character\000"
 21165      61637465 
 21165      7200
 21166              	.LASF585:
 21167 4640 5F56415F 		.ascii	"_VA_LIST \000"
 21167      4C495354 
 21167      2000
 21168              	.LASF509:
 21169 464a 494E545F 		.ascii	"INT_FAST16_MIN (-INT_FAST16_MAX - 1)\000"
 21169      46415354 
 21169      31365F4D 
 21169      494E2028 
 21169      2D494E54 
 21170              	.LASF344:
 21171 466f 5F5F4441 		.ascii	"__DA_IBIT__ 32\000"
 21171      5F494249 
 21171      545F5F20 
 21171      333200
 21172              	.LASF13:
 21173 467e 5F5F4154 		.ascii	"__ATOMIC_ACQ_REL 4\000"
 21173      4F4D4943 
 21173      5F414351 
 21173      5F52454C 
 21173      203400
 21174              	.LASF787:
 21175 4691 70726563 		.ascii	"prec\000"
 21175      00
 21176              	.LASF322:
 21177 4696 5F5F4851 		.ascii	"__HQ_IBIT__ 0\000"
ARM GAS  /tmp/ccFy9xbE.s 			page 456


 21177      5F494249 
 21177      545F5F20 
 21177      3000
 21178              	.LASF628:
 21179 46a4 5F574348 		.ascii	"_WCHAR_T_DEFINED_ \000"
 21179      41525F54 
 21179      5F444546 
 21179      494E4544 
 21179      5F2000
 21180              	.LASF819:
 21181 46b7 5F5F6165 		.ascii	"__aeabi_i2d\000"
 21181      6162695F 
 21181      69326400 
 21182              	.LASF201:
 21183 46c3 5F5F464C 		.ascii	"__FLT32_NORM_MAX__ 3.4028234663852886e+38F32\000"
 21183      5433325F 
 21183      4E4F524D 
 21183      5F4D4158 
 21183      5F5F2033 
 21184              	.LASF569:
 21185 46f0 55494E54 		.ascii	"UINT64_C(c) __UINT64_C(c)\000"
 21185      36345F43 
 21185      28632920 
 21185      5F5F5549 
 21185      4E543634 
 21186              	.LASF584:
 21187 470a 5F56415F 		.ascii	"_VA_LIST_ \000"
 21187      4C495354 
 21187      5F2000
 21188              	.LASF91:
 21189 4715 5F5F5549 		.ascii	"__UINTMAX_MAX__ 0xffffffffffffffffULL\000"
 21189      4E544D41 
 21189      585F4D41 
 21189      585F5F20 
 21189      30786666 
 21190              	.LASF162:
 21191 473b 5F5F4442 		.ascii	"__DBL_MANT_DIG__ 53\000"
 21191      4C5F4D41 
 21191      4E545F44 
 21191      49475F5F 
 21191      20353300 
 21192              	.LASF265:
 21193 474f 5F5F554C 		.ascii	"__ULFRACT_IBIT__ 0\000"
 21193      46524143 
 21193      545F4942 
 21193      49545F5F 
 21193      203000
 21194              	.LASF506:
 21195 4762 494E545F 		.ascii	"INT_FAST16_MAX\000"
 21195      46415354 
 21195      31365F4D 
 21195      415800
 21196              	.LASF71:
 21197 4771 5F5F494E 		.ascii	"__INT_MAX__ 0x7fffffff\000"
 21197      545F4D41 
 21197      585F5F20 
 21197      30783766 
ARM GAS  /tmp/ccFy9xbE.s 			page 457


 21197      66666666 
 21198              	.LASF53:
 21199 4788 5F5F494E 		.ascii	"__INT_LEAST64_TYPE__ long long int\000"
 21199      545F4C45 
 21199      41535436 
 21199      345F5459 
 21199      50455F5F 
 21200              	.LASF435:
 21201 47ab 5F5F4152 		.ascii	"__ARM_FEATURE_CDE_COPROC\000"
 21201      4D5F4645 
 21201      41545552 
 21201      455F4344 
 21201      455F434F 
 21202              	.LASF566:
 21203 47c4 55494E54 		.ascii	"UINT32_C\000"
 21203      33325F43 
 21203      00
 21204              		.ident	"GCC: (15:10.3-2021.07-4) 10.3.1 20210621 (release)"
ARM GAS  /tmp/ccFy9xbE.s 			page 458


DEFINED SYMBOLS
                            *ABS*:0000000000000000 printf.c
     /tmp/ccFy9xbE.s:81     .text._out_buffer:0000000000000000 $t
     /tmp/ccFy9xbE.s:89     .text._out_buffer:0000000000000000 _out_buffer
     /tmp/ccFy9xbE.s:114    .text._out_null:0000000000000000 $t
     /tmp/ccFy9xbE.s:121    .text._out_null:0000000000000000 _out_null
     /tmp/ccFy9xbE.s:140    .text._out_rev:0000000000000000 $t
     /tmp/ccFy9xbE.s:147    .text._out_rev:0000000000000000 _out_rev
     /tmp/ccFy9xbE.s:312    .text._ntoa_format:0000000000000000 $t
     /tmp/ccFy9xbE.s:319    .text._ntoa_format:0000000000000000 _ntoa_format
     /tmp/ccFy9xbE.s:829    .text._ntoa_long:0000000000000000 $t
     /tmp/ccFy9xbE.s:836    .text._ntoa_long:0000000000000000 _ntoa_long
     /tmp/ccFy9xbE.s:997    .text._ntoa_long_long:0000000000000000 $t
     /tmp/ccFy9xbE.s:1004   .text._ntoa_long_long:0000000000000000 _ntoa_long_long
     /tmp/ccFy9xbE.s:1223   .text._etoa:0000000000000000 $t
     /tmp/ccFy9xbE.s:1230   .text._etoa:0000000000000000 _etoa
     /tmp/ccFy9xbE.s:2176   .text._ftoa:0000000000000000 _ftoa
     /tmp/ccFy9xbE.s:1804   .text._etoa:00000000000002a8 $d
     /tmp/ccFy9xbE.s:1832   .text._etoa:0000000000000304 $t
     /tmp/ccFy9xbE.s:2154   .rodata._ftoa.str1.4:0000000000000000 $d
     /tmp/ccFy9xbE.s:2169   .text._ftoa:0000000000000000 $t
     /tmp/ccFy9xbE.s:2976   .text._ftoa:0000000000000330 $d
     /tmp/ccFy9xbE.s:2993   .text._ftoa:0000000000000360 $t
     /tmp/ccFy9xbE.s:3153   .text._ftoa:0000000000000410 $d
     /tmp/ccFy9xbE.s:3162   .text._out_char:0000000000000000 $t
     /tmp/ccFy9xbE.s:3169   .text._out_char:0000000000000000 _out_char
     /tmp/ccFy9xbE.s:3196   .text._out_fct:0000000000000000 $t
     /tmp/ccFy9xbE.s:3203   .text._out_fct:0000000000000000 _out_fct
     /tmp/ccFy9xbE.s:3241   .text._vsnprintf:0000000000000000 $t
     /tmp/ccFy9xbE.s:3248   .text._vsnprintf:0000000000000000 _vsnprintf
     /tmp/ccFy9xbE.s:3371   .text._vsnprintf:000000000000005c $d
     /tmp/ccFy9xbE.s:3435   .text._vsnprintf:0000000000000094 $d
     /tmp/ccFy9xbE.s:3454   .text._vsnprintf:00000000000000ba $t
     /tmp/ccFy9xbE.s:3477   .text._vsnprintf:00000000000000d0 $d
     /tmp/ccFy9xbE.s:3562   .text._vsnprintf:0000000000000178 $t
     /tmp/ccFy9xbE.s:3794   .text._vsnprintf:0000000000000208 $d
     /tmp/ccFy9xbE.s:3802   .text._vsnprintf:000000000000020c $t
     /tmp/ccFy9xbE.s:5052   .text.printf_:0000000000000000 $t
     /tmp/ccFy9xbE.s:5060   .text.printf_:0000000000000000 printf_
     /tmp/ccFy9xbE.s:5135   .text.printf_:0000000000000028 $d
     /tmp/ccFy9xbE.s:5140   .text.sprintf_:0000000000000000 $t
     /tmp/ccFy9xbE.s:5148   .text.sprintf_:0000000000000000 sprintf_
     /tmp/ccFy9xbE.s:5219   .text.sprintf_:0000000000000028 $d
     /tmp/ccFy9xbE.s:5224   .text.snprintf_:0000000000000000 $t
     /tmp/ccFy9xbE.s:5232   .text.snprintf_:0000000000000000 snprintf_
     /tmp/ccFy9xbE.s:5307   .text.snprintf_:0000000000000028 $d
     /tmp/ccFy9xbE.s:5312   .text.vprintf_:0000000000000000 $t
     /tmp/ccFy9xbE.s:5320   .text.vprintf_:0000000000000000 vprintf_
     /tmp/ccFy9xbE.s:5365   .text.vprintf_:000000000000001c $d
     /tmp/ccFy9xbE.s:5370   .text.vsnprintf_:0000000000000000 $t
     /tmp/ccFy9xbE.s:5378   .text.vsnprintf_:0000000000000000 vsnprintf_
     /tmp/ccFy9xbE.s:5428   .text.vsnprintf_:000000000000001c $d
     /tmp/ccFy9xbE.s:5433   .text.fctprintf:0000000000000000 $t
     /tmp/ccFy9xbE.s:5441   .text.fctprintf:0000000000000000 fctprintf
     /tmp/ccFy9xbE.s:5527   .text.fctprintf:000000000000002c $d
     /tmp/ccFy9xbE.s:5532   .rodata.pow10.0:0000000000000000 $d
     /tmp/ccFy9xbE.s:5536   .rodata.pow10.0:0000000000000000 pow10.0
ARM GAS  /tmp/ccFy9xbE.s 			page 459


     /tmp/ccFy9xbE.s:3388   .text._vsnprintf:000000000000006d $d
     /tmp/ccFy9xbE.s:3388   .text._vsnprintf:000000000000006e $t
                           .group:0000000000000000 wm4.0.007990e38b48ed7e6b618cf8f1acad11
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.stdint.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4.printf.h.59.15c3282c91c12f59c67258a426cb49f3
                           .group:0000000000000000 wm4.float.h.29.0e9d9baf95ec39f9555dc80c6e28186b

UNDEFINED SYMBOLS
__aeabi_uldivmod
__aeabi_dcmpeq
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
__aeabi_d2iz
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_d2uiz
__aeabi_ui2d
_putchar
